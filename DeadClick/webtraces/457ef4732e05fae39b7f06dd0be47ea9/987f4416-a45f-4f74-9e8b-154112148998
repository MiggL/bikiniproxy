var appPath = window.location.hostname === "localhost" ? "/genealogie.web" : "/v4/genealogie";
//var appPath = "/genealogie.web";// "/v4/genealogie";//"/genealogie.web";//localvar 
//appPath = "/v4/genealogie";//preprod
var domainPath = '/v4/genealogie';
//var domainPath = 'http://new.genealogie.com/v4/genealogie';
var googleMapsKey = "ABQIAAAA1eq8EE7oAKN4MPatPVJKihTIz2fobcqI4dm3XoP3a4BBLhW6RBQN37YLhGCRMPWxgQT16JzyffhBcw";
//for preventing the second request if user double click on a search result
var firstRequestHasEnded = true;
var nVer = navigator.appVersion; var nAgt = navigator.userAgent; if ((verOffset = nAgt.indexOf("Opera")) != -1) {
    document.write("<style type'text/css'>"); document.write("a.btnLoupe {margin-top: -18px;}"); document.write(".button1 {margin-left:-35px;}"); document.write(".oncle-tante1 {float: left; width: 120px;"); document.write("ul.right-parents {margin-left: -18px;width:400px;}"); document.write("ul.right-parents {width:400px;}")
    document.write("<\/style>");
}
if ((verOffset = nAgt.indexOf("Safari")) != -1)
{ document.write("<style type'text/css'>"); document.write("ul.sublista{margin-top:0px;}"); document.write(".blocProches {width:700px;} "); document.write("<\/style>"); }
if (navigator.userAgent.toLowerCase().indexOf('chrome') > -1) { document.write("<style type'text/css'>");/*document.write("ul.sublista{margin-top:26px;}");*/document.write(".blocProches {margin-left:6px;} "); document.write("<\/style>"); }


/***********************************************************
 *                                                         *
 *      BibliothÃ©que externe (jQuery, Ajax,...)            *
 *                                                         *
 ***********************************************************/

//#region BibliothÃ©ques externes

//#region jQuery
/*jquery-1.5.1.min.js*/
(function (a, b) { function cg(a) { return d.isWindow(a) ? a : a.nodeType === 9 ? a.defaultView || a.parentWindow : !1 } function cd(a) { if (!bZ[a]) { var b = d("<" + a + ">").appendTo("body"), c = b.css("display"); b.remove(); if (c === "none" || c === "") c = "block"; bZ[a] = c } return bZ[a] } function cc(a, b) { var c = {}; d.each(cb.concat.apply([], cb.slice(0, b)), function () { c[this] = a }); return c } function bY() { try { return new a.ActiveXObject("Microsoft.XMLHTTP") } catch (b) { } } function bX() { try { return new a.XMLHttpRequest } catch (b) { } } function bW() { d(a).unload(function () { for (var a in bU) bU[a](0, 1) }) } function bQ(a, c) { a.dataFilter && (c = a.dataFilter(c, a.dataType)); var e = a.dataTypes, f = {}, g, h, i = e.length, j, k = e[0], l, m, n, o, p; for (g = 1; g < i; g++) { if (g === 1) for (h in a.converters) typeof h === "string" && (f[h.toLowerCase()] = a.converters[h]); l = k, k = e[g]; if (k === "*") k = l; else if (l !== "*" && l !== k) { m = l + " " + k, n = f[m] || f["* " + k]; if (!n) { p = b; for (o in f) { j = o.split(" "); if (j[0] === l || j[0] === "*") { p = f[j[1] + " " + k]; if (p) { o = f[o], o === !0 ? n = p : p === !0 && (n = o); break } } } } !n && !p && d.error("No conversion from " + m.replace(" ", " to ")), n !== !0 && (c = n ? n(c) : p(o(c))) } } return c } function bP(a, c, d) { var e = a.contents, f = a.dataTypes, g = a.responseFields, h, i, j, k; for (i in g) i in d && (c[g[i]] = d[i]); while (f[0] === "*") f.shift(), h === b && (h = a.mimeType || c.getResponseHeader("content-type")); if (h) for (i in e) if (e[i] && e[i].test(h)) { f.unshift(i); break } if (f[0] in d) j = f[0]; else { for (i in d) { if (!f[0] || a.converters[i + " " + f[0]]) { j = i; break } k || (k = i) } j = j || k } if (j) { j !== f[0] && f.unshift(j); return d[j] } } function bO(a, b, c, e) { if (d.isArray(b) && b.length) d.each(b, function (b, f) { c || bq.test(a) ? e(a, f) : bO(a + "[" + (typeof f === "object" || d.isArray(f) ? b : "") + "]", f, c, e) }); else if (c || b == null || typeof b !== "object") e(a, b); else if (d.isArray(b) || d.isEmptyObject(b)) e(a, ""); else for (var f in b) bO(a + "[" + f + "]", b[f], c, e) } function bN(a, c, d, e, f, g) { f = f || c.dataTypes[0], g = g || {}, g[f] = !0; var h = a[f], i = 0, j = h ? h.length : 0, k = a === bH, l; for (; i < j && (k || !l) ; i++) l = h[i](c, d, e), typeof l === "string" && (!k || g[l] ? l = b : (c.dataTypes.unshift(l), l = bN(a, c, d, e, l, g))); (k || !l) && !g["*"] && (l = bN(a, c, d, e, "*", g)); return l } function bM(a) { return function (b, c) { typeof b !== "string" && (c = b, b = "*"); if (d.isFunction(c)) { var e = b.toLowerCase().split(bB), f = 0, g = e.length, h, i, j; for (; f < g; f++) h = e[f], j = /^\+/.test(h), j && (h = h.substr(1) || "*"), i = a[h] = a[h] || [], i[j ? "unshift" : "push"](c) } } } function bo(a, b, c) { var e = b === "width" ? bi : bj, f = b === "width" ? a.offsetWidth : a.offsetHeight; if (c === "border") return f; d.each(e, function () { c || (f -= parseFloat(d.css(a, "padding" + this)) || 0), c === "margin" ? f += parseFloat(d.css(a, "margin" + this)) || 0 : f -= parseFloat(d.css(a, "border" + this + "Width")) || 0 }); return f } function ba(a, b) { b.src ? d.ajax({ url: b.src, async: !1, dataType: "script" }) : d.globalEval(b.text || b.textContent || b.innerHTML || ""), b.parentNode && b.parentNode.removeChild(b) } function _(a) { return "getElementsByTagName" in a ? a.getElementsByTagName("*") : "querySelectorAll" in a ? a.querySelectorAll("*") : [] } function $(a, b) { if (b.nodeType === 1) { var c = b.nodeName.toLowerCase(); b.clearAttributes(), b.mergeAttributes(a); if (c === "object") b.outerHTML = a.outerHTML; else if (c !== "input" || a.type !== "checkbox" && a.type !== "radio") { if (c === "option") b.selected = a.defaultSelected; else if (c === "input" || c === "textarea") b.defaultValue = a.defaultValue } else a.checked && (b.defaultChecked = b.checked = a.checked), b.value !== a.value && (b.value = a.value); b.removeAttribute(d.expando) } } function Z(a, b) { if (b.nodeType === 1 && d.hasData(a)) { var c = d.expando, e = d.data(a), f = d.data(b, e); if (e = e[c]) { var g = e.events; f = f[c] = d.extend({}, e); if (g) { delete f.handle, f.events = {}; for (var h in g) for (var i = 0, j = g[h].length; i < j; i++) d.event.add(b, h + (g[h][i].namespace ? "." : "") + g[h][i].namespace, g[h][i], g[h][i].data) } } } } function Y(a, b) { return d.nodeName(a, "table") ? a.getElementsByTagName("tbody")[0] || a.appendChild(a.ownerDocument.createElement("tbody")) : a } function O(a, b, c) { if (d.isFunction(b)) return d.grep(a, function (a, d) { var e = !!b.call(a, d, a); return e === c }); if (b.nodeType) return d.grep(a, function (a, d) { return a === b === c }); if (typeof b === "string") { var e = d.grep(a, function (a) { return a.nodeType === 1 }); if (J.test(b)) return d.filter(b, e, !c); b = d.filter(b, e) } return d.grep(a, function (a, e) { return d.inArray(a, b) >= 0 === c }) } function N(a) { return !a || !a.parentNode || a.parentNode.nodeType === 11 } function F(a, b) { return (a && a !== "*" ? a + "." : "") + b.replace(r, "`").replace(s, "&") } function E(a) { var b, c, e, f, g, h, i, j, k, l, m, n, o, q = [], r = [], s = d._data(this, "events"); if (a.liveFired !== this && s && s.live && !a.target.disabled && (!a.button || a.type !== "click")) { a.namespace && (n = new RegExp("(^|\\.)" + a.namespace.split(".").join("\\.(?:.*\\.)?") + "(\\.|$)")), a.liveFired = this; var t = s.live.slice(0); for (i = 0; i < t.length; i++) g = t[i], g.origType.replace(p, "") === a.type ? r.push(g.selector) : t.splice(i--, 1); f = d(a.target).closest(r, a.currentTarget); for (j = 0, k = f.length; j < k; j++) { m = f[j]; for (i = 0; i < t.length; i++) { g = t[i]; if (m.selector === g.selector && (!n || n.test(g.namespace)) && !m.elem.disabled) { h = m.elem, e = null; if (g.preType === "mouseenter" || g.preType === "mouseleave") a.type = g.preType, e = d(a.relatedTarget).closest(g.selector)[0]; (!e || e !== h) && q.push({ elem: h, handleObj: g, level: m.level }) } } } for (j = 0, k = q.length; j < k; j++) { f = q[j]; if (c && f.level > c) break; a.currentTarget = f.elem, a.data = f.handleObj.data, a.handleObj = f.handleObj, o = f.handleObj.origHandler.apply(f.elem, arguments); if (o === !1 || a.isPropagationStopped()) { c = f.level, o === !1 && (b = !1); if (a.isImmediatePropagationStopped()) break } } return b } } function C(a, c, e) { var f = d.extend({}, e[0]); f.type = a, f.originalEvent = {}, f.liveFired = b, d.event.handle.call(c, f), f.isDefaultPrevented() && e[0].preventDefault() } function w() { return !0 } function v() { return !1 } function g(a) { for (var b in a) if (b !== "toJSON") return !1; return !0 } function f(a, c, f) { if (f === b && a.nodeType === 1) { f = a.getAttribute("data-" + c); if (typeof f === "string") { try { f = f === "true" ? !0 : f === "false" ? !1 : f === "null" ? null : d.isNaN(f) ? e.test(f) ? d.parseJSON(f) : f : parseFloat(f) } catch (g) { } d.data(a, c, f) } else f = b } return f } var c = a.document, d = function () { function I() { if (!d.isReady) { try { c.documentElement.doScroll("left") } catch (a) { setTimeout(I, 1); return } d.ready() } } var d = function (a, b) { return new d.fn.init(a, b, g) }, e = a.jQuery, f = a.$, g, h = /^(?:[^<]*(<[\w\W]+>)[^>]*$|#([\w\-]+)$)/, i = /\S/, j = /^\s+/, k = /\s+$/, l = /\d/, m = /^<(\w+)\s*\/?>(?:<\/\1>)?$/, n = /^[\],:{}\s]*$/, o = /\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, p = /"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, q = /(?:^|:|,)(?:\s*\[)+/g, r = /(webkit)[ \/]([\w.]+)/, s = /(opera)(?:.*version)?[ \/]([\w.]+)/, t = /(msie) ([\w.]+)/, u = /(mozilla)(?:.*? rv:([\w.]+))?/, v = navigator.userAgent, w, x = !1, y, z = "then done fail isResolved isRejected promise".split(" "), A, B = Object.prototype.toString, C = Object.prototype.hasOwnProperty, D = Array.prototype.push, E = Array.prototype.slice, F = String.prototype.trim, G = Array.prototype.indexOf, H = {}; d.fn = d.prototype = { constructor: d, init: function (a, e, f) { var g, i, j, k; if (!a) return this; if (a.nodeType) { this.context = this[0] = a, this.length = 1; return this } if (a === "body" && !e && c.body) { this.context = c, this[0] = c.body, this.selector = "body", this.length = 1; return this } if (typeof a === "string") { g = h.exec(a); if (!g || !g[1] && e) return !e || e.jquery ? (e || f).find(a) : this.constructor(e).find(a); if (g[1]) { e = e instanceof d ? e[0] : e, k = e ? e.ownerDocument || e : c, j = m.exec(a), j ? d.isPlainObject(e) ? (a = [c.createElement(j[1])], d.fn.attr.call(a, e, !0)) : a = [k.createElement(j[1])] : (j = d.buildFragment([g[1]], [k]), a = (j.cacheable ? d.clone(j.fragment) : j.fragment).childNodes); return d.merge(this, a) } i = c.getElementById(g[2]); if (i && i.parentNode) { if (i.id !== g[2]) return f.find(a); this.length = 1, this[0] = i } this.context = c, this.selector = a; return this } if (d.isFunction(a)) return f.ready(a); a.selector !== b && (this.selector = a.selector, this.context = a.context); return d.makeArray(a, this) }, selector: "", jquery: "1.5.1", length: 0, size: function () { return this.length }, toArray: function () { return E.call(this, 0) }, get: function (a) { return a == null ? this.toArray() : a < 0 ? this[this.length + a] : this[a] }, pushStack: function (a, b, c) { var e = this.constructor(); d.isArray(a) ? D.apply(e, a) : d.merge(e, a), e.prevObject = this, e.context = this.context, b === "find" ? e.selector = this.selector + (this.selector ? " " : "") + c : b && (e.selector = this.selector + "." + b + "(" + c + ")"); return e }, each: function (a, b) { return d.each(this, a, b) }, ready: function (a) { d.bindReady(), y.done(a); return this }, eq: function (a) { return a === -1 ? this.slice(a) : this.slice(a, +a + 1) }, first: function () { return this.eq(0) }, last: function () { return this.eq(-1) }, slice: function () { return this.pushStack(E.apply(this, arguments), "slice", E.call(arguments).join(",")) }, map: function (a) { return this.pushStack(d.map(this, function (b, c) { return a.call(b, c, b) })) }, end: function () { return this.prevObject || this.constructor(null) }, push: D, sort: [].sort, splice: [].splice }, d.fn.init.prototype = d.fn, d.extend = d.fn.extend = function () { var a, c, e, f, g, h, i = arguments[0] || {}, j = 1, k = arguments.length, l = !1; typeof i === "boolean" && (l = i, i = arguments[1] || {}, j = 2), typeof i !== "object" && !d.isFunction(i) && (i = {}), k === j && (i = this, --j); for (; j < k; j++) if ((a = arguments[j]) != null) for (c in a) { e = i[c], f = a[c]; if (i === f) continue; l && f && (d.isPlainObject(f) || (g = d.isArray(f))) ? (g ? (g = !1, h = e && d.isArray(e) ? e : []) : h = e && d.isPlainObject(e) ? e : {}, i[c] = d.extend(l, h, f)) : f !== b && (i[c] = f) } return i }, d.extend({ noConflict: function (b) { a.$ = f, b && (a.jQuery = e); return d }, isReady: !1, readyWait: 1, ready: function (a) { a === !0 && d.readyWait--; if (!d.readyWait || a !== !0 && !d.isReady) { if (!c.body) return setTimeout(d.ready, 1); d.isReady = !0; if (a !== !0 && --d.readyWait > 0) return; y.resolveWith(c, [d]), d.fn.trigger && d(c).trigger("ready").unbind("ready") } }, bindReady: function () { if (!x) { x = !0; if (c.readyState === "complete") return setTimeout(d.ready, 1); if (c.addEventListener) c.addEventListener("DOMContentLoaded", A, !1), a.addEventListener("load", d.ready, !1); else if (c.attachEvent) { c.attachEvent("onreadystatechange", A), a.attachEvent("onload", d.ready); var b = !1; try { b = a.frameElement == null } catch (e) { } c.documentElement.doScroll && b && I() } } }, isFunction: function (a) { return d.type(a) === "function" }, isArray: Array.isArray || function (a) { return d.type(a) === "array" }, isWindow: function (a) { return a && typeof a === "object" && "setInterval" in a }, isNaN: function (a) { return a == null || !l.test(a) || isNaN(a) }, type: function (a) { return a == null ? String(a) : H[B.call(a)] || "object" }, isPlainObject: function (a) { if (!a || d.type(a) !== "object" || a.nodeType || d.isWindow(a)) return !1; if (a.constructor && !C.call(a, "constructor") && !C.call(a.constructor.prototype, "isPrototypeOf")) return !1; var c; for (c in a) { } return c === b || C.call(a, c) }, isEmptyObject: function (a) { for (var b in a) return !1; return !0 }, error: function (a) { throw a }, parseJSON: function (b) { if (typeof b !== "string" || !b) return null; b = d.trim(b); if (n.test(b.replace(o, "@").replace(p, "]").replace(q, ""))) return a.JSON && a.JSON.parse ? a.JSON.parse(b) : (new Function("return " + b))(); d.error("Invalid JSON: " + b) }, parseXML: function (b, c, e) { a.DOMParser ? (e = new DOMParser, c = e.parseFromString(b, "text/xml")) : (c = new ActiveXObject("Microsoft.XMLDOM"), c.async = "false", c.loadXML(b)), e = c.documentElement, (!e || !e.nodeName || e.nodeName === "parsererror") && d.error("Invalid XML: " + b); return c }, noop: function () { }, globalEval: function (a) { if (a && i.test(a)) { var b = c.head || c.getElementsByTagName("head")[0] || c.documentElement, e = c.createElement("script"); d.support.scriptEval() ? e.appendChild(c.createTextNode(a)) : e.text = a, b.insertBefore(e, b.firstChild), b.removeChild(e) } }, nodeName: function (a, b) { return a.nodeName && a.nodeName.toUpperCase() === b.toUpperCase() }, each: function (a, c, e) { var f, g = 0, h = a.length, i = h === b || d.isFunction(a); if (e) { if (i) { for (f in a) if (c.apply(a[f], e) === !1) break } else for (; g < h;) if (c.apply(a[g++], e) === !1) break } else if (i) { for (f in a) if (c.call(a[f], f, a[f]) === !1) break } else for (var j = a[0]; g < h && c.call(j, g, j) !== !1; j = a[++g]) { } return a }, trim: F ? function (a) { return a == null ? "" : F.call(a) } : function (a) { return a == null ? "" : (a + "").replace(j, "").replace(k, "") }, makeArray: function (a, b) { var c = b || []; if (a != null) { var e = d.type(a); a.length == null || e === "string" || e === "function" || e === "regexp" || d.isWindow(a) ? D.call(c, a) : d.merge(c, a) } return c }, inArray: function (a, b) { if (b.indexOf) return b.indexOf(a); for (var c = 0, d = b.length; c < d; c++) if (b[c] === a) return c; return -1 }, merge: function (a, c) { var d = a.length, e = 0; if (typeof c.length === "number") for (var f = c.length; e < f; e++) a[d++] = c[e]; else while (c[e] !== b) a[d++] = c[e++]; a.length = d; return a }, grep: function (a, b, c) { var d = [], e; c = !!c; for (var f = 0, g = a.length; f < g; f++) e = !!b(a[f], f), c !== e && d.push(a[f]); return d }, map: function (a, b, c) { var d = [], e; for (var f = 0, g = a.length; f < g; f++) e = b(a[f], f, c), e != null && (d[d.length] = e); return d.concat.apply([], d) }, guid: 1, proxy: function (a, c, e) { arguments.length === 2 && (typeof c === "string" ? (e = a, a = e[c], c = b) : c && !d.isFunction(c) && (e = c, c = b)), !c && a && (c = function () { return a.apply(e || this, arguments) }), a && (c.guid = a.guid = a.guid || c.guid || d.guid++); return c }, access: function (a, c, e, f, g, h) { var i = a.length; if (typeof c === "object") { for (var j in c) d.access(a, j, c[j], f, g, e); return a } if (e !== b) { f = !h && f && d.isFunction(e); for (var k = 0; k < i; k++) g(a[k], c, f ? e.call(a[k], k, g(a[k], c)) : e, h); return a } return i ? g(a[0], c) : b }, now: function () { return (new Date).getTime() }, _Deferred: function () { var a = [], b, c, e, f = { done: function () { if (!e) { var c = arguments, g, h, i, j, k; b && (k = b, b = 0); for (g = 0, h = c.length; g < h; g++) i = c[g], j = d.type(i), j === "array" ? f.done.apply(f, i) : j === "function" && a.push(i); k && f.resolveWith(k[0], k[1]) } return this }, resolveWith: function (d, f) { if (!e && !b && !c) { c = 1; try { while (a[0]) a.shift().apply(d, f) } catch (g) { throw g } finally { b = [d, f], c = 0 } } return this }, resolve: function () { f.resolveWith(d.isFunction(this.promise) ? this.promise() : this, arguments); return this }, isResolved: function () { return c || b }, cancel: function () { e = 1, a = []; return this } }; return f }, Deferred: function (a) { var b = d._Deferred(), c = d._Deferred(), e; d.extend(b, { then: function (a, c) { b.done(a).fail(c); return this }, fail: c.done, rejectWith: c.resolveWith, reject: c.resolve, isRejected: c.isResolved, promise: function (a) { if (a == null) { if (e) return e; e = a = {} } var c = z.length; while (c--) a[z[c]] = b[z[c]]; return a } }), b.done(c.cancel).fail(b.cancel), delete b.cancel, a && a.call(b, b); return b }, when: function (a) { var b = arguments.length, c = b <= 1 && a && d.isFunction(a.promise) ? a : d.Deferred(), e = c.promise(); if (b > 1) { var f = E.call(arguments, 0), g = b, h = function (a) { return function (b) { f[a] = arguments.length > 1 ? E.call(arguments, 0) : b, --g || c.resolveWith(e, f) } }; while (b--) a = f[b], a && d.isFunction(a.promise) ? a.promise().then(h(b), c.reject) : --g; g || c.resolveWith(e, f) } else c !== a && c.resolve(a); return e }, uaMatch: function (a) { a = a.toLowerCase(); var b = r.exec(a) || s.exec(a) || t.exec(a) || a.indexOf("compatible") < 0 && u.exec(a) || []; return { browser: b[1] || "", version: b[2] || "0" } }, sub: function () { function a(b, c) { return new a.fn.init(b, c) } d.extend(!0, a, this), a.superclass = this, a.fn = a.prototype = this(), a.fn.constructor = a, a.subclass = this.subclass, a.fn.init = function b(b, c) { c && c instanceof d && !(c instanceof a) && (c = a(c)); return d.fn.init.call(this, b, c, e) }, a.fn.init.prototype = a.fn; var e = a(c); return a }, browser: {} }), y = d._Deferred(), d.each("Boolean Number String Function Array Date RegExp Object".split(" "), function (a, b) { H["[object " + b + "]"] = b.toLowerCase() }), w = d.uaMatch(v), w.browser && (d.browser[w.browser] = !0, d.browser.version = w.version), d.browser.webkit && (d.browser.safari = !0), G && (d.inArray = function (a, b) { return G.call(b, a) }), i.test(" ") && (j = /^[\s\xA0]+/, k = /[\s\xA0]+$/), g = d(c), c.addEventListener ? A = function () { c.removeEventListener("DOMContentLoaded", A, !1), d.ready() } : c.attachEvent && (A = function () { c.readyState === "complete" && (c.detachEvent("onreadystatechange", A), d.ready()) }); return d }(); (function () { d.support = {}; var b = c.createElement("div"); b.style.display = "none", b.innerHTML = "   <link/><table></table><a href='/a' style='color:red;float:left;opacity:.55;'>a</a><input type='checkbox'/>"; var e = b.getElementsByTagName("*"), f = b.getElementsByTagName("a")[0], g = c.createElement("select"), h = g.appendChild(c.createElement("option")), i = b.getElementsByTagName("input")[0]; if (e && e.length && f) { d.support = { leadingWhitespace: b.firstChild.nodeType === 3, tbody: !b.getElementsByTagName("tbody").length, htmlSerialize: !!b.getElementsByTagName("link").length, style: /red/.test(f.getAttribute("style")), hrefNormalized: f.getAttribute("href") === "/a", opacity: /^0.55$/.test(f.style.opacity), cssFloat: !!f.style.cssFloat, checkOn: i.value === "on", optSelected: h.selected, deleteExpando: !0, optDisabled: !1, checkClone: !1, noCloneEvent: !0, noCloneChecked: !0, boxModel: null, inlineBlockNeedsLayout: !1, shrinkWrapBlocks: !1, reliableHiddenOffsets: !0 }, i.checked = !0, d.support.noCloneChecked = i.cloneNode(!0).checked, g.disabled = !0, d.support.optDisabled = !h.disabled; var j = null; d.support.scriptEval = function () { if (j === null) { var b = c.documentElement, e = c.createElement("script"), f = "script" + d.now(); try { e.appendChild(c.createTextNode("window." + f + "=1;")) } catch (g) { } b.insertBefore(e, b.firstChild), a[f] ? (j = !0, delete a[f]) : j = !1, b.removeChild(e), b = e = f = null } return j }; try { delete b.test } catch (k) { d.support.deleteExpando = !1 } !b.addEventListener && b.attachEvent && b.fireEvent && (b.attachEvent("onclick", function l() { d.support.noCloneEvent = !1, b.detachEvent("onclick", l) }), b.cloneNode(!0).fireEvent("onclick")), b = c.createElement("div"), b.innerHTML = "<input type='radio' name='radiotest' checked='checked'/>"; var m = c.createDocumentFragment(); m.appendChild(b.firstChild), d.support.checkClone = m.cloneNode(!0).cloneNode(!0).lastChild.checked, d(function () { var a = c.createElement("div"), b = c.getElementsByTagName("body")[0]; if (b) { a.style.width = a.style.paddingLeft = "1px", b.appendChild(a), d.boxModel = d.support.boxModel = a.offsetWidth === 2, "zoom" in a.style && (a.style.display = "inline", a.style.zoom = 1, d.support.inlineBlockNeedsLayout = a.offsetWidth === 2, a.style.display = "", a.innerHTML = "<div style='width:4px;'></div>", d.support.shrinkWrapBlocks = a.offsetWidth !== 2), a.innerHTML = "<table><tr><td style='padding:0;border:0;display:none'></td><td>t</td></tr></table>"; var e = a.getElementsByTagName("td"); d.support.reliableHiddenOffsets = e[0].offsetHeight === 0, e[0].style.display = "", e[1].style.display = "none", d.support.reliableHiddenOffsets = d.support.reliableHiddenOffsets && e[0].offsetHeight === 0, a.innerHTML = "", b.removeChild(a).style.display = "none", a = e = null } }); var n = function (a) { var b = c.createElement("div"); a = "on" + a; if (!b.attachEvent) return !0; var d = a in b; d || (b.setAttribute(a, "return;"), d = typeof b[a] === "function"), b = null; return d }; d.support.submitBubbles = n("submit"), d.support.changeBubbles = n("change"), b = e = f = null } })(); var e = /^(?:\{.*\}|\[.*\])$/; d.extend({ cache: {}, uuid: 0, expando: "jQuery" + (d.fn.jquery + Math.random()).replace(/\D/g, ""), noData: { embed: !0, object: "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000", applet: !0 }, hasData: function (a) { a = a.nodeType ? d.cache[a[d.expando]] : a[d.expando]; return !!a && !g(a) }, data: function (a, c, e, f) { if (d.acceptData(a)) { var g = d.expando, h = typeof c === "string", i, j = a.nodeType, k = j ? d.cache : a, l = j ? a[d.expando] : a[d.expando] && d.expando; if ((!l || f && l && !k[l][g]) && h && e === b) return; l || (j ? a[d.expando] = l = ++d.uuid : l = d.expando), k[l] || (k[l] = {}, j || (k[l].toJSON = d.noop)); if (typeof c === "object" || typeof c === "function") f ? k[l][g] = d.extend(k[l][g], c) : k[l] = d.extend(k[l], c); i = k[l], f && (i[g] || (i[g] = {}), i = i[g]), e !== b && (i[c] = e); if (c === "events" && !i[c]) return i[g] && i[g].events; return h ? i[c] : i } }, removeData: function (b, c, e) { if (d.acceptData(b)) { var f = d.expando, h = b.nodeType, i = h ? d.cache : b, j = h ? b[d.expando] : d.expando; if (!i[j]) return; if (c) { var k = e ? i[j][f] : i[j]; if (k) { delete k[c]; if (!g(k)) return } } if (e) { delete i[j][f]; if (!g(i[j])) return } var l = i[j][f]; d.support.deleteExpando || i != a ? delete i[j] : i[j] = null, l ? (i[j] = {}, h || (i[j].toJSON = d.noop), i[j][f] = l) : h && (d.support.deleteExpando ? delete b[d.expando] : b.removeAttribute ? b.removeAttribute(d.expando) : b[d.expando] = null) } }, _data: function (a, b, c) { return d.data(a, b, c, !0) }, acceptData: function (a) { if (a.nodeName) { var b = d.noData[a.nodeName.toLowerCase()]; if (b) return b !== !0 && a.getAttribute("classid") === b } return !0 } }), d.fn.extend({ data: function (a, c) { var e = null; if (typeof a === "undefined") { if (this.length) { e = d.data(this[0]); if (this[0].nodeType === 1) { var g = this[0].attributes, h; for (var i = 0, j = g.length; i < j; i++) h = g[i].name, h.indexOf("data-") === 0 && (h = h.substr(5), f(this[0], h, e[h])) } } return e } if (typeof a === "object") return this.each(function () { d.data(this, a) }); var k = a.split("."); k[1] = k[1] ? "." + k[1] : ""; if (c === b) { e = this.triggerHandler("getData" + k[1] + "!", [k[0]]), e === b && this.length && (e = d.data(this[0], a), e = f(this[0], a, e)); return e === b && k[1] ? this.data(k[0]) : e } return this.each(function () { var b = d(this), e = [k[0], c]; b.triggerHandler("setData" + k[1] + "!", e), d.data(this, a, c), b.triggerHandler("changeData" + k[1] + "!", e) }) }, removeData: function (a) { return this.each(function () { d.removeData(this, a) }) } }), d.extend({ queue: function (a, b, c) { if (a) { b = (b || "fx") + "queue"; var e = d._data(a, b); if (!c) return e || []; !e || d.isArray(c) ? e = d._data(a, b, d.makeArray(c)) : e.push(c); return e } }, dequeue: function (a, b) { b = b || "fx"; var c = d.queue(a, b), e = c.shift(); e === "inprogress" && (e = c.shift()), e && (b === "fx" && c.unshift("inprogress"), e.call(a, function () { d.dequeue(a, b) })), c.length || d.removeData(a, b + "queue", !0) } }), d.fn.extend({ queue: function (a, c) { typeof a !== "string" && (c = a, a = "fx"); if (c === b) return d.queue(this[0], a); return this.each(function (b) { var e = d.queue(this, a, c); a === "fx" && e[0] !== "inprogress" && d.dequeue(this, a) }) }, dequeue: function (a) { return this.each(function () { d.dequeue(this, a) }) }, delay: function (a, b) { a = d.fx ? d.fx.speeds[a] || a : a, b = b || "fx"; return this.queue(b, function () { var c = this; setTimeout(function () { d.dequeue(c, b) }, a) }) }, clearQueue: function (a) { return this.queue(a || "fx", []) } }); var h = /[\n\t\r]/g, i = /\s+/, j = /\r/g, k = /^(?:href|src|style)$/, l = /^(?:button|input)$/i, m = /^(?:button|input|object|select|textarea)$/i, n = /^a(?:rea)?$/i, o = /^(?:radio|checkbox)$/i; d.props = { "for": "htmlFor", "class": "className", readonly: "readOnly", maxlength: "maxLength", cellspacing: "cellSpacing", rowspan: "rowSpan", colspan: "colSpan", tabindex: "tabIndex", usemap: "useMap", frameborder: "frameBorder" }, d.fn.extend({ attr: function (a, b) { return d.access(this, a, b, !0, d.attr) }, removeAttr: function (a, b) { return this.each(function () { d.attr(this, a, ""), this.nodeType === 1 && this.removeAttribute(a) }) }, addClass: function (a) { if (d.isFunction(a)) return this.each(function (b) { var c = d(this); c.addClass(a.call(this, b, c.attr("class"))) }); if (a && typeof a === "string") { var b = (a || "").split(i); for (var c = 0, e = this.length; c < e; c++) { var f = this[c]; if (f.nodeType === 1) if (f.className) { var g = " " + f.className + " ", h = f.className; for (var j = 0, k = b.length; j < k; j++) g.indexOf(" " + b[j] + " ") < 0 && (h += " " + b[j]); f.className = d.trim(h) } else f.className = a } } return this }, removeClass: function (a) { if (d.isFunction(a)) return this.each(function (b) { var c = d(this); c.removeClass(a.call(this, b, c.attr("class"))) }); if (a && typeof a === "string" || a === b) { var c = (a || "").split(i); for (var e = 0, f = this.length; e < f; e++) { var g = this[e]; if (g.nodeType === 1 && g.className) if (a) { var j = (" " + g.className + " ").replace(h, " "); for (var k = 0, l = c.length; k < l; k++) j = j.replace(" " + c[k] + " ", " "); g.className = d.trim(j) } else g.className = "" } } return this }, toggleClass: function (a, b) { var c = typeof a, e = typeof b === "boolean"; if (d.isFunction(a)) return this.each(function (c) { var e = d(this); e.toggleClass(a.call(this, c, e.attr("class"), b), b) }); return this.each(function () { if (c === "string") { var f, g = 0, h = d(this), j = b, k = a.split(i); while (f = k[g++]) j = e ? j : !h.hasClass(f), h[j ? "addClass" : "removeClass"](f) } else if (c === "undefined" || c === "boolean") this.className && d._data(this, "__className__", this.className), this.className = this.className || a === !1 ? "" : d._data(this, "__className__") || "" }) }, hasClass: function (a) { var b = " " + a + " "; for (var c = 0, d = this.length; c < d; c++) if ((" " + this[c].className + " ").replace(h, " ").indexOf(b) > -1) return !0; return !1 }, val: function (a) { if (!arguments.length) { var c = this[0]; if (c) { if (d.nodeName(c, "option")) { var e = c.attributes.value; return !e || e.specified ? c.value : c.text } if (d.nodeName(c, "select")) { var f = c.selectedIndex, g = [], h = c.options, i = c.type === "select-one"; if (f < 0) return null; for (var k = i ? f : 0, l = i ? f + 1 : h.length; k < l; k++) { var m = h[k]; if (m.selected && (d.support.optDisabled ? !m.disabled : m.getAttribute("disabled") === null) && (!m.parentNode.disabled || !d.nodeName(m.parentNode, "optgroup"))) { a = d(m).val(); if (i) return a; g.push(a) } } if (i && !g.length && h.length) return d(h[f]).val(); return g } if (o.test(c.type) && !d.support.checkOn) return c.getAttribute("value") === null ? "on" : c.value; return (c.value || "").replace(j, "") } return b } var n = d.isFunction(a); return this.each(function (b) { var c = d(this), e = a; if (this.nodeType === 1) { n && (e = a.call(this, b, c.val())), e == null ? e = "" : typeof e === "number" ? e += "" : d.isArray(e) && (e = d.map(e, function (a) { return a == null ? "" : a + "" })); if (d.isArray(e) && o.test(this.type)) this.checked = d.inArray(c.val(), e) >= 0; else if (d.nodeName(this, "select")) { var f = d.makeArray(e); d("option", this).each(function () { this.selected = d.inArray(d(this).val(), f) >= 0 }), f.length || (this.selectedIndex = -1) } else this.value = e } }) } }), d.extend({ attrFn: { val: !0, css: !0, html: !0, text: !0, data: !0, width: !0, height: !0, offset: !0 }, attr: function (a, c, e, f) { if (!a || a.nodeType === 3 || a.nodeType === 8 || a.nodeType === 2) return b; if (f && c in d.attrFn) return d(a)[c](e); var g = a.nodeType !== 1 || !d.isXMLDoc(a), h = e !== b; c = g && d.props[c] || c; if (a.nodeType === 1) { var i = k.test(c); if (c === "selected" && !d.support.optSelected) { var j = a.parentNode; j && (j.selectedIndex, j.parentNode && j.parentNode.selectedIndex) } if ((c in a || a[c] !== b) && g && !i) { h && (c === "type" && l.test(a.nodeName) && a.parentNode && d.error("type property can't be changed"), e === null ? a.nodeType === 1 && a.removeAttribute(c) : a[c] = e); if (d.nodeName(a, "form") && a.getAttributeNode(c)) return a.getAttributeNode(c).nodeValue; if (c === "tabIndex") { var o = a.getAttributeNode("tabIndex"); return o && o.specified ? o.value : m.test(a.nodeName) || n.test(a.nodeName) && a.href ? 0 : b } return a[c] } if (!d.support.style && g && c === "style") { h && (a.style.cssText = "" + e); return a.style.cssText } h && a.setAttribute(c, "" + e); if (!a.attributes[c] && (a.hasAttribute && !a.hasAttribute(c))) return b; var p = !d.support.hrefNormalized && g && i ? a.getAttribute(c, 2) : a.getAttribute(c); return p === null ? b : p } h && (a[c] = e); return a[c] } }); var p = /\.(.*)$/, q = /^(?:textarea|input|select)$/i, r = /\./g, s = / /g, t = /[^\w\s.|`]/g, u = function (a) { return a.replace(t, "\\$&") }; d.event = { add: function (c, e, f, g) { if (c.nodeType !== 3 && c.nodeType !== 8) { try { d.isWindow(c) && (c !== a && !c.frameElement) && (c = a) } catch (h) { } if (f === !1) f = v; else if (!f) return; var i, j; f.handler && (i = f, f = i.handler), f.guid || (f.guid = d.guid++); var k = d._data(c); if (!k) return; var l = k.events, m = k.handle; l || (k.events = l = {}), m || (k.handle = m = function () { return typeof d !== "undefined" && !d.event.triggered ? d.event.handle.apply(m.elem, arguments) : b }), m.elem = c, e = e.split(" "); var n, o = 0, p; while (n = e[o++]) { j = i ? d.extend({}, i) : { handler: f, data: g }, n.indexOf(".") > -1 ? (p = n.split("."), n = p.shift(), j.namespace = p.slice(0).sort().join(".")) : (p = [], j.namespace = ""), j.type = n, j.guid || (j.guid = f.guid); var q = l[n], r = d.event.special[n] || {}; if (!q) { q = l[n] = []; if (!r.setup || r.setup.call(c, g, p, m) === !1) c.addEventListener ? c.addEventListener(n, m, !1) : c.attachEvent && c.attachEvent("on" + n, m) } r.add && (r.add.call(c, j), j.handler.guid || (j.handler.guid = f.guid)), q.push(j), d.event.global[n] = !0 } c = null } }, global: {}, remove: function (a, c, e, f) { if (a.nodeType !== 3 && a.nodeType !== 8) { e === !1 && (e = v); var g, h, i, j, k = 0, l, m, n, o, p, q, r, s = d.hasData(a) && d._data(a), t = s && s.events; if (!s || !t) return; c && c.type && (e = c.handler, c = c.type); if (!c || typeof c === "string" && c.charAt(0) === ".") { c = c || ""; for (h in t) d.event.remove(a, h + c); return } c = c.split(" "); while (h = c[k++]) { r = h, q = null, l = h.indexOf(".") < 0, m = [], l || (m = h.split("."), h = m.shift(), n = new RegExp("(^|\\.)" + d.map(m.slice(0).sort(), u).join("\\.(?:.*\\.)?") + "(\\.|$)")), p = t[h]; if (!p) continue; if (!e) { for (j = 0; j < p.length; j++) { q = p[j]; if (l || n.test(q.namespace)) d.event.remove(a, r, q.handler, j), p.splice(j--, 1) } continue } o = d.event.special[h] || {}; for (j = f || 0; j < p.length; j++) { q = p[j]; if (e.guid === q.guid) { if (l || n.test(q.namespace)) f == null && p.splice(j--, 1), o.remove && o.remove.call(a, q); if (f != null) break } } if (p.length === 0 || f != null && p.length === 1) (!o.teardown || o.teardown.call(a, m) === !1) && d.removeEvent(a, h, s.handle), g = null, delete t[h] } if (d.isEmptyObject(t)) { var w = s.handle; w && (w.elem = null), delete s.events, delete s.handle, d.isEmptyObject(s) && d.removeData(a, b, !0) } } }, trigger: function (a, c, e) { var f = a.type || a, g = arguments[3]; if (!g) { a = typeof a === "object" ? a[d.expando] ? a : d.extend(d.Event(f), a) : d.Event(f), f.indexOf("!") >= 0 && (a.type = f = f.slice(0, -1), a.exclusive = !0), e || (a.stopPropagation(), d.event.global[f] && d.each(d.cache, function () { var b = d.expando, e = this[b]; e && e.events && e.events[f] && d.event.trigger(a, c, e.handle.elem) })); if (!e || e.nodeType === 3 || e.nodeType === 8) return b; a.result = b, a.target = e, c = d.makeArray(c), c.unshift(a) } a.currentTarget = e; var h = d._data(e, "handle"); h && h.apply(e, c); var i = e.parentNode || e.ownerDocument; try { e && e.nodeName && d.noData[e.nodeName.toLowerCase()] || e["on" + f] && e["on" + f].apply(e, c) === !1 && (a.result = !1, a.preventDefault()) } catch (j) { } if (!a.isPropagationStopped() && i) d.event.trigger(a, c, i, !0); else if (!a.isDefaultPrevented()) { var k, l = a.target, m = f.replace(p, ""), n = d.nodeName(l, "a") && m === "click", o = d.event.special[m] || {}; if ((!o._default || o._default.call(e, a) === !1) && !n && !(l && l.nodeName && d.noData[l.nodeName.toLowerCase()])) { try { l[m] && (k = l["on" + m], k && (l["on" + m] = null), d.event.triggered = !0, l[m]()) } catch (q) { } k && (l["on" + m] = k), d.event.triggered = !1 } } }, handle: function (c) { var e, f, g, h, i, j = [], k = d.makeArray(arguments); c = k[0] = d.event.fix(c || a.event), c.currentTarget = this, e = c.type.indexOf(".") < 0 && !c.exclusive, e || (g = c.type.split("."), c.type = g.shift(), j = g.slice(0).sort(), h = new RegExp("(^|\\.)" + j.join("\\.(?:.*\\.)?") + "(\\.|$)")), c.namespace = c.namespace || j.join("."), i = d._data(this, "events"), f = (i || {})[c.type]; if (i && f) { f = f.slice(0); for (var l = 0, m = f.length; l < m; l++) { var n = f[l]; if (e || h.test(n.namespace)) { c.handler = n.handler, c.data = n.data, c.handleObj = n; var o = n.handler.apply(this, k); o !== b && (c.result = o, o === !1 && (c.preventDefault(), c.stopPropagation())); if (c.isImmediatePropagationStopped()) break } } } return c.result }, props: "altKey attrChange attrName bubbles button cancelable charCode clientX clientY ctrlKey currentTarget data detail eventPhase fromElement handler keyCode layerX layerY metaKey newValue offsetX offsetY pageX pageY prevValue relatedNode relatedTarget screenX screenY shiftKey srcElement target toElement view wheelDelta which".split(" "), fix: function (a) { if (a[d.expando]) return a; var e = a; a = d.Event(e); for (var f = this.props.length, g; f;) g = this.props[--f], a[g] = e[g]; a.target || (a.target = a.srcElement || c), a.target.nodeType === 3 && (a.target = a.target.parentNode), !a.relatedTarget && a.fromElement && (a.relatedTarget = a.fromElement === a.target ? a.toElement : a.fromElement); if (a.pageX == null && a.clientX != null) { var h = c.documentElement, i = c.body; a.pageX = a.clientX + (h && h.scrollLeft || i && i.scrollLeft || 0) - (h && h.clientLeft || i && i.clientLeft || 0), a.pageY = a.clientY + (h && h.scrollTop || i && i.scrollTop || 0) - (h && h.clientTop || i && i.clientTop || 0) } a.which == null && (a.charCode != null || a.keyCode != null) && (a.which = a.charCode != null ? a.charCode : a.keyCode), !a.metaKey && a.ctrlKey && (a.metaKey = a.ctrlKey), !a.which && a.button !== b && (a.which = a.button & 1 ? 1 : a.button & 2 ? 3 : a.button & 4 ? 2 : 0); return a }, guid: 1e8, proxy: d.proxy, special: { ready: { setup: d.bindReady, teardown: d.noop }, live: { add: function (a) { d.event.add(this, F(a.origType, a.selector), d.extend({}, a, { handler: E, guid: a.handler.guid })) }, remove: function (a) { d.event.remove(this, F(a.origType, a.selector), a) } }, beforeunload: { setup: function (a, b, c) { d.isWindow(this) && (this.onbeforeunload = c) }, teardown: function (a, b) { this.onbeforeunload === b && (this.onbeforeunload = null) } } } }, d.removeEvent = c.removeEventListener ? function (a, b, c) { a.removeEventListener && a.removeEventListener(b, c, !1) } : function (a, b, c) { a.detachEvent && a.detachEvent("on" + b, c) }, d.Event = function (a) { if (!this.preventDefault) return new d.Event(a); a && a.type ? (this.originalEvent = a, this.type = a.type, this.isDefaultPrevented = a.defaultPrevented || a.returnValue === !1 || a.getPreventDefault && a.getPreventDefault() ? w : v) : this.type = a, this.timeStamp = d.now(), this[d.expando] = !0 }, d.Event.prototype = { preventDefault: function () { this.isDefaultPrevented = w; var a = this.originalEvent; a && (a.preventDefault ? a.preventDefault() : a.returnValue = !1) }, stopPropagation: function () { this.isPropagationStopped = w; var a = this.originalEvent; a && (a.stopPropagation && a.stopPropagation(), a.cancelBubble = !0) }, stopImmediatePropagation: function () { this.isImmediatePropagationStopped = w, this.stopPropagation() }, isDefaultPrevented: v, isPropagationStopped: v, isImmediatePropagationStopped: v }; var x = function (a) { var b = a.relatedTarget; try { if (b !== c && !b.parentNode) return; while (b && b !== this) b = b.parentNode; b !== this && (a.type = a.data, d.event.handle.apply(this, arguments)) } catch (e) { } }, y = function (a) { a.type = a.data, d.event.handle.apply(this, arguments) }; d.each({ mouseenter: "mouseover", mouseleave: "mouseout" }, function (a, b) { d.event.special[a] = { setup: function (c) { d.event.add(this, b, c && c.selector ? y : x, a) }, teardown: function (a) { d.event.remove(this, b, a && a.selector ? y : x) } } }), d.support.submitBubbles || (d.event.special.submit = { setup: function (a, b) { if (this.nodeName && this.nodeName.toLowerCase() !== "form") d.event.add(this, "click.specialSubmit", function (a) { var b = a.target, c = b.type; (c === "submit" || c === "image") && d(b).closest("form").length && C("submit", this, arguments) }), d.event.add(this, "keypress.specialSubmit", function (a) { var b = a.target, c = b.type; (c === "text" || c === "password") && d(b).closest("form").length && a.keyCode === 13 && C("submit", this, arguments) }); else return !1 }, teardown: function (a) { d.event.remove(this, ".specialSubmit") } }); if (!d.support.changeBubbles) { var z, A = function (a) { var b = a.type, c = a.value; b === "radio" || b === "checkbox" ? c = a.checked : b === "select-multiple" ? c = a.selectedIndex > -1 ? d.map(a.options, function (a) { return a.selected }).join("-") : "" : a.nodeName.toLowerCase() === "select" && (c = a.selectedIndex); return c }, B = function B(a) { var c = a.target, e, f; if (q.test(c.nodeName) && !c.readOnly) { e = d._data(c, "_change_data"), f = A(c), (a.type !== "focusout" || c.type !== "radio") && d._data(c, "_change_data", f); if (e === b || f === e) return; if (e != null || f) a.type = "change", a.liveFired = b, d.event.trigger(a, arguments[1], c) } }; d.event.special.change = { filters: { focusout: B, beforedeactivate: B, click: function (a) { var b = a.target, c = b.type; (c === "radio" || c === "checkbox" || b.nodeName.toLowerCase() === "select") && B.call(this, a) }, keydown: function (a) { var b = a.target, c = b.type; (a.keyCode === 13 && b.nodeName.toLowerCase() !== "textarea" || a.keyCode === 32 && (c === "checkbox" || c === "radio") || c === "select-multiple") && B.call(this, a) }, beforeactivate: function (a) { var b = a.target; d._data(b, "_change_data", A(b)) } }, setup: function (a, b) { if (this.type === "file") return !1; for (var c in z) d.event.add(this, c + ".specialChange", z[c]); return q.test(this.nodeName) }, teardown: function (a) { d.event.remove(this, ".specialChange"); return q.test(this.nodeName) } }, z = d.event.special.change.filters, z.focus = z.beforeactivate } c.addEventListener && d.each({ focus: "focusin", blur: "focusout" }, function (a, b) { function c(a) { a = d.event.fix(a), a.type = b; return d.event.handle.call(this, a) } d.event.special[b] = { setup: function () { this.addEventListener(a, c, !0) }, teardown: function () { this.removeEventListener(a, c, !0) } } }), d.each(["bind", "one"], function (a, c) { d.fn[c] = function (a, e, f) { if (typeof a === "object") { for (var g in a) this[c](g, e, a[g], f); return this } if (d.isFunction(e) || e === !1) f = e, e = b; var h = c === "one" ? d.proxy(f, function (a) { d(this).unbind(a, h); return f.apply(this, arguments) }) : f; if (a === "unload" && c !== "one") this.one(a, e, f); else for (var i = 0, j = this.length; i < j; i++) d.event.add(this[i], a, h, e); return this } }), d.fn.extend({ unbind: function (a, b) { if (typeof a !== "object" || a.preventDefault) for (var e = 0, f = this.length; e < f; e++) d.event.remove(this[e], a, b); else for (var c in a) this.unbind(c, a[c]); return this }, delegate: function (a, b, c, d) { return this.live(b, c, d, a) }, undelegate: function (a, b, c) { return arguments.length === 0 ? this.unbind("live") : this.die(b, null, c, a) }, trigger: function (a, b) { return this.each(function () { d.event.trigger(a, b, this) }) }, triggerHandler: function (a, b) { if (this[0]) { var c = d.Event(a); c.preventDefault(), c.stopPropagation(), d.event.trigger(c, b, this[0]); return c.result } }, toggle: function (a) { var b = arguments, c = 1; while (c < b.length) d.proxy(a, b[c++]); return this.click(d.proxy(a, function (e) { var f = (d._data(this, "lastToggle" + a.guid) || 0) % c; d._data(this, "lastToggle" + a.guid, f + 1), e.preventDefault(); return b[f].apply(this, arguments) || !1 })) }, hover: function (a, b) { return this.mouseenter(a).mouseleave(b || a) } }); var D = { focus: "focusin", blur: "focusout", mouseenter: "mouseover", mouseleave: "mouseout" }; d.each(["live", "die"], function (a, c) { d.fn[c] = function (a, e, f, g) { var h, i = 0, j, k, l, m = g || this.selector, n = g ? this : d(this.context); if (typeof a === "object" && !a.preventDefault) { for (var o in a) n[c](o, e, a[o], m); return this } d.isFunction(e) && (f = e, e = b), a = (a || "").split(" "); while ((h = a[i++]) != null) { j = p.exec(h), k = "", j && (k = j[0], h = h.replace(p, "")); if (h === "hover") { a.push("mouseenter" + k, "mouseleave" + k); continue } l = h, h === "focus" || h === "blur" ? (a.push(D[h] + k), h = h + k) : h = (D[h] || h) + k; if (c === "live") for (var q = 0, r = n.length; q < r; q++) d.event.add(n[q], "live." + F(h, m), { data: e, selector: m, handler: f, origType: h, origHandler: f, preType: l }); else n.unbind("live." + F(h, m), f) } return this } }), d.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error".split(" "), function (a, b) { d.fn[b] = function (a, c) { c == null && (c = a, a = null); return arguments.length > 0 ? this.bind(b, a, c) : this.trigger(b) }, d.attrFn && (d.attrFn[b] = !0) }), function () { function u(a, b, c, d, e, f) { for (var g = 0, h = d.length; g < h; g++) { var i = d[g]; if (i) { var j = !1; i = i[a]; while (i) { if (i.sizcache === c) { j = d[i.sizset]; break } if (i.nodeType === 1) { f || (i.sizcache = c, i.sizset = g); if (typeof b !== "string") { if (i === b) { j = !0; break } } else if (k.filter(b, [i]).length > 0) { j = i; break } } i = i[a] } d[g] = j } } } function t(a, b, c, d, e, f) { for (var g = 0, h = d.length; g < h; g++) { var i = d[g]; if (i) { var j = !1; i = i[a]; while (i) { if (i.sizcache === c) { j = d[i.sizset]; break } i.nodeType === 1 && !f && (i.sizcache = c, i.sizset = g); if (i.nodeName.toLowerCase() === b) { j = i; break } i = i[a] } d[g] = j } } } var a = /((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^\[\]]*\]|['"][^'"]*['"]|[^\[\]'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g, e = 0, f = Object.prototype.toString, g = !1, h = !0, i = /\\/g, j = /\W/;[0, 0].sort(function () { h = !1; return 0 }); var k = function (b, d, e, g) { e = e || [], d = d || c; var h = d; if (d.nodeType !== 1 && d.nodeType !== 9) return []; if (!b || typeof b !== "string") return e; var i, j, n, o, q, r, s, t, u = !0, w = k.isXML(d), x = [], y = b; do { a.exec(""), i = a.exec(y); if (i) { y = i[3], x.push(i[1]); if (i[2]) { o = i[3]; break } } } while (i); if (x.length > 1 && m.exec(b)) if (x.length === 2 && l.relative[x[0]]) j = v(x[0] + x[1], d); else { j = l.relative[x[0]] ? [d] : k(x.shift(), d); while (x.length) b = x.shift(), l.relative[b] && (b += x.shift()), j = v(b, j) } else { !g && x.length > 1 && d.nodeType === 9 && !w && l.match.ID.test(x[0]) && !l.match.ID.test(x[x.length - 1]) && (q = k.find(x.shift(), d, w), d = q.expr ? k.filter(q.expr, q.set)[0] : q.set[0]); if (d) { q = g ? { expr: x.pop(), set: p(g) } : k.find(x.pop(), x.length === 1 && (x[0] === "~" || x[0] === "+") && d.parentNode ? d.parentNode : d, w), j = q.expr ? k.filter(q.expr, q.set) : q.set, x.length > 0 ? n = p(j) : u = !1; while (x.length) r = x.pop(), s = r, l.relative[r] ? s = x.pop() : r = "", s == null && (s = d), l.relative[r](n, s, w) } else n = x = [] } n || (n = j), n || k.error(r || b); if (f.call(n) === "[object Array]") if (u) if (d && d.nodeType === 1) for (t = 0; n[t] != null; t++) n[t] && (n[t] === !0 || n[t].nodeType === 1 && k.contains(d, n[t])) && e.push(j[t]); else for (t = 0; n[t] != null; t++) n[t] && n[t].nodeType === 1 && e.push(j[t]); else e.push.apply(e, n); else p(n, e); o && (k(o, h, e, g), k.uniqueSort(e)); return e }; k.uniqueSort = function (a) { if (r) { g = h, a.sort(r); if (g) for (var b = 1; b < a.length; b++) a[b] === a[b - 1] && a.splice(b--, 1) } return a }, k.matches = function (a, b) { return k(a, null, null, b) }, k.matchesSelector = function (a, b) { return k(b, null, null, [a]).length > 0 }, k.find = function (a, b, c) { var d; if (!a) return []; for (var e = 0, f = l.order.length; e < f; e++) { var g, h = l.order[e]; if (g = l.leftMatch[h].exec(a)) { var j = g[1]; g.splice(1, 1); if (j.substr(j.length - 1) !== "\\") { g[1] = (g[1] || "").replace(i, ""), d = l.find[h](g, b, c); if (d != null) { a = a.replace(l.match[h], ""); break } } } } d || (d = typeof b.getElementsByTagName !== "undefined" ? b.getElementsByTagName("*") : []); return { set: d, expr: a } }, k.filter = function (a, c, d, e) { var f, g, h = a, i = [], j = c, m = c && c[0] && k.isXML(c[0]); while (a && c.length) { for (var n in l.filter) if ((f = l.leftMatch[n].exec(a)) != null && f[2]) { var o, p, q = l.filter[n], r = f[1]; g = !1, f.splice(1, 1); if (r.substr(r.length - 1) === "\\") continue; j === i && (i = []); if (l.preFilter[n]) { f = l.preFilter[n](f, j, d, i, e, m); if (f) { if (f === !0) continue } else g = o = !0 } if (f) for (var s = 0; (p = j[s]) != null; s++) if (p) { o = q(p, f, s, j); var t = e ^ !!o; d && o != null ? t ? g = !0 : j[s] = !1 : t && (i.push(p), g = !0) } if (o !== b) { d || (j = i), a = a.replace(l.match[n], ""); if (!g) return []; break } } if (a === h) if (g == null) k.error(a); else break; h = a } return j }, k.error = function (a) { throw "Syntax error, unrecognized expression: " + a }; var l = k.selectors = { order: ["ID", "NAME", "TAG"], match: { ID: /#((?:[\w\u00c0-\uFFFF\-]|\\.)+)/, CLASS: /\.((?:[\w\u00c0-\uFFFF\-]|\\.)+)/, NAME: /\[name=['"]*((?:[\w\u00c0-\uFFFF\-]|\\.)+)['"]*\]/, ATTR: /\[\s*((?:[\w\u00c0-\uFFFF\-]|\\.)+)\s*(?:(\S?=)\s*(?:(['"])(.*?)\3|(#?(?:[\w\u00c0-\uFFFF\-]|\\.)*)|)|)\s*\]/, TAG: /^((?:[\w\u00c0-\uFFFF\*\-]|\\.)+)/, CHILD: /:(only|nth|last|first)-child(?:\(\s*(even|odd|(?:[+\-]?\d+|(?:[+\-]?\d*)?n\s*(?:[+\-]\s*\d+)?))\s*\))?/, POS: /:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^\-]|$)/, PSEUDO: /:((?:[\w\u00c0-\uFFFF\-]|\\.)+)(?:\((['"]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\))?/ }, leftMatch: {}, attrMap: { "class": "className", "for": "htmlFor" }, attrHandle: { href: function (a) { return a.getAttribute("href") }, type: function (a) { return a.getAttribute("type") } }, relative: { "+": function (a, b) { var c = typeof b === "string", d = c && !j.test(b), e = c && !d; d && (b = b.toLowerCase()); for (var f = 0, g = a.length, h; f < g; f++) if (h = a[f]) { while ((h = h.previousSibling) && h.nodeType !== 1) { } a[f] = e || h && h.nodeName.toLowerCase() === b ? h || !1 : h === b } e && k.filter(b, a, !0) }, ">": function (a, b) { var c, d = typeof b === "string", e = 0, f = a.length; if (d && !j.test(b)) { b = b.toLowerCase(); for (; e < f; e++) { c = a[e]; if (c) { var g = c.parentNode; a[e] = g.nodeName.toLowerCase() === b ? g : !1 } } } else { for (; e < f; e++) c = a[e], c && (a[e] = d ? c.parentNode : c.parentNode === b); d && k.filter(b, a, !0) } }, "": function (a, b, c) { var d, f = e++, g = u; typeof b === "string" && !j.test(b) && (b = b.toLowerCase(), d = b, g = t), g("parentNode", b, f, a, d, c) }, "~": function (a, b, c) { var d, f = e++, g = u; typeof b === "string" && !j.test(b) && (b = b.toLowerCase(), d = b, g = t), g("previousSibling", b, f, a, d, c) } }, find: { ID: function (a, b, c) { if (typeof b.getElementById !== "undefined" && !c) { var d = b.getElementById(a[1]); return d && d.parentNode ? [d] : [] } }, NAME: function (a, b) { if (typeof b.getElementsByName !== "undefined") { var c = [], d = b.getElementsByName(a[1]); for (var e = 0, f = d.length; e < f; e++) d[e].getAttribute("name") === a[1] && c.push(d[e]); return c.length === 0 ? null : c } }, TAG: function (a, b) { if (typeof b.getElementsByTagName !== "undefined") return b.getElementsByTagName(a[1]) } }, preFilter: { CLASS: function (a, b, c, d, e, f) { a = " " + a[1].replace(i, "") + " "; if (f) return a; for (var g = 0, h; (h = b[g]) != null; g++) h && (e ^ (h.className && (" " + h.className + " ").replace(/[\t\n\r]/g, " ").indexOf(a) >= 0) ? c || d.push(h) : c && (b[g] = !1)); return !1 }, ID: function (a) { return a[1].replace(i, "") }, TAG: function (a, b) { return a[1].replace(i, "").toLowerCase() }, CHILD: function (a) { if (a[1] === "nth") { a[2] || k.error(a[0]), a[2] = a[2].replace(/^\+|\s*/g, ""); var b = /(-?)(\d*)(?:n([+\-]?\d*))?/.exec(a[2] === "even" && "2n" || a[2] === "odd" && "2n+1" || !/\D/.test(a[2]) && "0n+" + a[2] || a[2]); a[2] = b[1] + (b[2] || 1) - 0, a[3] = b[3] - 0 } else a[2] && k.error(a[0]); a[0] = e++; return a }, ATTR: function (a, b, c, d, e, f) { var g = a[1] = a[1].replace(i, ""); !f && l.attrMap[g] && (a[1] = l.attrMap[g]), a[4] = (a[4] || a[5] || "").replace(i, ""), a[2] === "~=" && (a[4] = " " + a[4] + " "); return a }, PSEUDO: function (b, c, d, e, f) { if (b[1] === "not") if ((a.exec(b[3]) || "").length > 1 || /^\w/.test(b[3])) b[3] = k(b[3], null, null, c); else { var g = k.filter(b[3], c, d, !0 ^ f); d || e.push.apply(e, g); return !1 } else if (l.match.POS.test(b[0]) || l.match.CHILD.test(b[0])) return !0; return b }, POS: function (a) { a.unshift(!0); return a } }, filters: { enabled: function (a) { return a.disabled === !1 && a.type !== "hidden" }, disabled: function (a) { return a.disabled === !0 }, checked: function (a) { return a.checked === !0 }, selected: function (a) { a.parentNode && a.parentNode.selectedIndex; return a.selected === !0 }, parent: function (a) { return !!a.firstChild }, empty: function (a) { return !a.firstChild }, has: function (a, b, c) { return !!k(c[3], a).length }, header: function (a) { return /h\d/i.test(a.nodeName) }, text: function (a) { return "text" === a.getAttribute("type") }, radio: function (a) { return "radio" === a.type }, checkbox: function (a) { return "checkbox" === a.type }, file: function (a) { return "file" === a.type }, password: function (a) { return "password" === a.type }, submit: function (a) { return "submit" === a.type }, image: function (a) { return "image" === a.type }, reset: function (a) { return "reset" === a.type }, button: function (a) { return "button" === a.type || a.nodeName.toLowerCase() === "button" }, input: function (a) { return /input|select|textarea|button/i.test(a.nodeName) } }, setFilters: { first: function (a, b) { return b === 0 }, last: function (a, b, c, d) { return b === d.length - 1 }, even: function (a, b) { return b % 2 === 0 }, odd: function (a, b) { return b % 2 === 1 }, lt: function (a, b, c) { return b < c[3] - 0 }, gt: function (a, b, c) { return b > c[3] - 0 }, nth: function (a, b, c) { return c[3] - 0 === b }, eq: function (a, b, c) { return c[3] - 0 === b } }, filter: { PSEUDO: function (a, b, c, d) { var e = b[1], f = l.filters[e]; if (f) return f(a, c, b, d); if (e === "contains") return (a.textContent || a.innerText || k.getText([a]) || "").indexOf(b[3]) >= 0; if (e === "not") { var g = b[3]; for (var h = 0, i = g.length; h < i; h++) if (g[h] === a) return !1; return !0 } k.error(e) }, CHILD: function (a, b) { var c = b[1], d = a; switch (c) { case "only": case "first": while (d = d.previousSibling) if (d.nodeType === 1) return !1; if (c === "first") return !0; d = a; case "last": while (d = d.nextSibling) if (d.nodeType === 1) return !1; return !0; case "nth": var e = b[2], f = b[3]; if (e === 1 && f === 0) return !0; var g = b[0], h = a.parentNode; if (h && (h.sizcache !== g || !a.nodeIndex)) { var i = 0; for (d = h.firstChild; d; d = d.nextSibling) d.nodeType === 1 && (d.nodeIndex = ++i); h.sizcache = g } var j = a.nodeIndex - f; return e === 0 ? j === 0 : j % e === 0 && j / e >= 0 } }, ID: function (a, b) { return a.nodeType === 1 && a.getAttribute("id") === b }, TAG: function (a, b) { return b === "*" && a.nodeType === 1 || a.nodeName.toLowerCase() === b }, CLASS: function (a, b) { return (" " + (a.className || a.getAttribute("class")) + " ").indexOf(b) > -1 }, ATTR: function (a, b) { var c = b[1], d = l.attrHandle[c] ? l.attrHandle[c](a) : a[c] != null ? a[c] : a.getAttribute(c), e = d + "", f = b[2], g = b[4]; return d == null ? f === "!=" : f === "=" ? e === g : f === "*=" ? e.indexOf(g) >= 0 : f === "~=" ? (" " + e + " ").indexOf(g) >= 0 : g ? f === "!=" ? e !== g : f === "^=" ? e.indexOf(g) === 0 : f === "$=" ? e.substr(e.length - g.length) === g : f === "|=" ? e === g || e.substr(0, g.length + 1) === g + "-" : !1 : e && d !== !1 }, POS: function (a, b, c, d) { var e = b[2], f = l.setFilters[e]; if (f) return f(a, c, b, d) } } }, m = l.match.POS, n = function (a, b) { return "\\" + (b - 0 + 1) }; for (var o in l.match) l.match[o] = new RegExp(l.match[o].source + /(?![^\[]*\])(?![^\(]*\))/.source), l.leftMatch[o] = new RegExp(/(^(?:.|\r|\n)*?)/.source + l.match[o].source.replace(/\\(\d+)/g, n)); var p = function (a, b) { a = Array.prototype.slice.call(a, 0); if (b) { b.push.apply(b, a); return b } return a }; try { Array.prototype.slice.call(c.documentElement.childNodes, 0)[0].nodeType } catch (q) { p = function (a, b) { var c = 0, d = b || []; if (f.call(a) === "[object Array]") Array.prototype.push.apply(d, a); else if (typeof a.length === "number") for (var e = a.length; c < e; c++) d.push(a[c]); else for (; a[c]; c++) d.push(a[c]); return d } } var r, s; c.documentElement.compareDocumentPosition ? r = function (a, b) { if (a === b) { g = !0; return 0 } if (!a.compareDocumentPosition || !b.compareDocumentPosition) return a.compareDocumentPosition ? -1 : 1; return a.compareDocumentPosition(b) & 4 ? -1 : 1 } : (r = function (a, b) { var c, d, e = [], f = [], h = a.parentNode, i = b.parentNode, j = h; if (a === b) { g = !0; return 0 } if (h === i) return s(a, b); if (!h) return -1; if (!i) return 1; while (j) e.unshift(j), j = j.parentNode; j = i; while (j) f.unshift(j), j = j.parentNode; c = e.length, d = f.length; for (var k = 0; k < c && k < d; k++) if (e[k] !== f[k]) return s(e[k], f[k]); return k === c ? s(a, f[k], -1) : s(e[k], b, 1) }, s = function (a, b, c) { if (a === b) return c; var d = a.nextSibling; while (d) { if (d === b) return -1; d = d.nextSibling } return 1 }), k.getText = function (a) { var b = "", c; for (var d = 0; a[d]; d++) c = a[d], c.nodeType === 3 || c.nodeType === 4 ? b += c.nodeValue : c.nodeType !== 8 && (b += k.getText(c.childNodes)); return b }, function () { var a = c.createElement("div"), d = "script" + (new Date).getTime(), e = c.documentElement; a.innerHTML = "<a name='" + d + "'/>", e.insertBefore(a, e.firstChild), c.getElementById(d) && (l.find.ID = function (a, c, d) { if (typeof c.getElementById !== "undefined" && !d) { var e = c.getElementById(a[1]); return e ? e.id === a[1] || typeof e.getAttributeNode !== "undefined" && e.getAttributeNode("id").nodeValue === a[1] ? [e] : b : [] } }, l.filter.ID = function (a, b) { var c = typeof a.getAttributeNode !== "undefined" && a.getAttributeNode("id"); return a.nodeType === 1 && c && c.nodeValue === b }), e.removeChild(a), e = a = null }(), function () { var a = c.createElement("div"); a.appendChild(c.createComment("")), a.getElementsByTagName("*").length > 0 && (l.find.TAG = function (a, b) { var c = b.getElementsByTagName(a[1]); if (a[1] === "*") { var d = []; for (var e = 0; c[e]; e++) c[e].nodeType === 1 && d.push(c[e]); c = d } return c }), a.innerHTML = "<a href='#'></a>", a.firstChild && typeof a.firstChild.getAttribute !== "undefined" && a.firstChild.getAttribute("href") !== "#" && (l.attrHandle.href = function (a) { return a.getAttribute("href", 2) }), a = null }(), c.querySelectorAll && function () { var a = k, b = c.createElement("div"), d = "__sizzle__"; b.innerHTML = "<p class='TEST'></p>"; if (!b.querySelectorAll || b.querySelectorAll(".TEST").length !== 0) { k = function (b, e, f, g) { e = e || c; if (!g && !k.isXML(e)) { var h = /^(\w+$)|^\.([\w\-]+$)|^#([\w\-]+$)/.exec(b); if (h && (e.nodeType === 1 || e.nodeType === 9)) { if (h[1]) return p(e.getElementsByTagName(b), f); if (h[2] && l.find.CLASS && e.getElementsByClassName) return p(e.getElementsByClassName(h[2]), f) } if (e.nodeType === 9) { if (b === "body" && e.body) return p([e.body], f); if (h && h[3]) { var i = e.getElementById(h[3]); if (!i || !i.parentNode) return p([], f); if (i.id === h[3]) return p([i], f) } try { return p(e.querySelectorAll(b), f) } catch (j) { } } else if (e.nodeType === 1 && e.nodeName.toLowerCase() !== "object") { var m = e, n = e.getAttribute("id"), o = n || d, q = e.parentNode, r = /^\s*[+~]/.test(b); n ? o = o.replace(/'/g, "\\$&") : e.setAttribute("id", o), r && q && (e = e.parentNode); try { if (!r || q) return p(e.querySelectorAll("[id='" + o + "'] " + b), f) } catch (s) { } finally { n || m.removeAttribute("id") } } } return a(b, e, f, g) }; for (var e in a) k[e] = a[e]; b = null } }(), function () { var a = c.documentElement, b = a.matchesSelector || a.mozMatchesSelector || a.webkitMatchesSelector || a.msMatchesSelector, d = !1; try { b.call(c.documentElement, "[test!='']:sizzle") } catch (e) { d = !0 } b && (k.matchesSelector = function (a, c) { c = c.replace(/\=\s*([^'"\]]*)\s*\]/g, "='$1']"); if (!k.isXML(a)) try { if (d || !l.match.PSEUDO.test(c) && !/!=/.test(c)) return b.call(a, c) } catch (e) { } return k(c, null, null, [a]).length > 0 }) }(), function () { var a = c.createElement("div"); a.innerHTML = "<div class='test e'></div><div class='test'></div>"; if (a.getElementsByClassName && a.getElementsByClassName("e").length !== 0) { a.lastChild.className = "e"; if (a.getElementsByClassName("e").length === 1) return; l.order.splice(1, 0, "CLASS"), l.find.CLASS = function (a, b, c) { if (typeof b.getElementsByClassName !== "undefined" && !c) return b.getElementsByClassName(a[1]) }, a = null } }(), c.documentElement.contains ? k.contains = function (a, b) { return a !== b && (a.contains ? a.contains(b) : !0) } : c.documentElement.compareDocumentPosition ? k.contains = function (a, b) { return !!(a.compareDocumentPosition(b) & 16) } : k.contains = function () { return !1 }, k.isXML = function (a) { var b = (a ? a.ownerDocument || a : 0).documentElement; return b ? b.nodeName !== "HTML" : !1 }; var v = function (a, b) { var c, d = [], e = "", f = b.nodeType ? [b] : b; while (c = l.match.PSEUDO.exec(a)) e += c[0], a = a.replace(l.match.PSEUDO, ""); a = l.relative[a] ? a + "*" : a; for (var g = 0, h = f.length; g < h; g++) k(a, f[g], d); return k.filter(e, d) }; d.find = k, d.expr = k.selectors, d.expr[":"] = d.expr.filters, d.unique = k.uniqueSort, d.text = k.getText, d.isXMLDoc = k.isXML, d.contains = k.contains }(); var G = /Until$/, H = /^(?:parents|prevUntil|prevAll)/, I = /,/, J = /^.[^:#\[\.,]*$/, K = Array.prototype.slice, L = d.expr.match.POS, M = { children: !0, contents: !0, next: !0, prev: !0 }; d.fn.extend({ find: function (a) { var b = this.pushStack("", "find", a), c = 0; for (var e = 0, f = this.length; e < f; e++) { c = b.length, d.find(a, this[e], b); if (e > 0) for (var g = c; g < b.length; g++) for (var h = 0; h < c; h++) if (b[h] === b[g]) { b.splice(g--, 1); break } } return b }, has: function (a) { var b = d(a); return this.filter(function () { for (var a = 0, c = b.length; a < c; a++) if (d.contains(this, b[a])) return !0 }) }, not: function (a) { return this.pushStack(O(this, a, !1), "not", a) }, filter: function (a) { return this.pushStack(O(this, a, !0), "filter", a) }, is: function (a) { return !!a && d.filter(a, this).length > 0 }, closest: function (a, b) { var c = [], e, f, g = this[0]; if (d.isArray(a)) { var h, i, j = {}, k = 1; if (g && a.length) { for (e = 0, f = a.length; e < f; e++) i = a[e], j[i] || (j[i] = d.expr.match.POS.test(i) ? d(i, b || this.context) : i); while (g && g.ownerDocument && g !== b) { for (i in j) h = j[i], (h.jquery ? h.index(g) > -1 : d(g).is(h)) && c.push({ selector: i, elem: g, level: k }); g = g.parentNode, k++ } } return c } var l = L.test(a) ? d(a, b || this.context) : null; for (e = 0, f = this.length; e < f; e++) { g = this[e]; while (g) { if (l ? l.index(g) > -1 : d.find.matchesSelector(g, a)) { c.push(g); break } g = g.parentNode; if (!g || !g.ownerDocument || g === b) break } } c = c.length > 1 ? d.unique(c) : c; return this.pushStack(c, "closest", a) }, index: function (a) { if (!a || typeof a === "string") return d.inArray(this[0], a ? d(a) : this.parent().children()); return d.inArray(a.jquery ? a[0] : a, this) }, add: function (a, b) { var c = typeof a === "string" ? d(a, b) : d.makeArray(a), e = d.merge(this.get(), c); return this.pushStack(N(c[0]) || N(e[0]) ? e : d.unique(e)) }, andSelf: function () { return this.add(this.prevObject) } }), d.each({ parent: function (a) { var b = a.parentNode; return b && b.nodeType !== 11 ? b : null }, parents: function (a) { return d.dir(a, "parentNode") }, parentsUntil: function (a, b, c) { return d.dir(a, "parentNode", c) }, next: function (a) { return d.nth(a, 2, "nextSibling") }, prev: function (a) { return d.nth(a, 2, "previousSibling") }, nextAll: function (a) { return d.dir(a, "nextSibling") }, prevAll: function (a) { return d.dir(a, "previousSibling") }, nextUntil: function (a, b, c) { return d.dir(a, "nextSibling", c) }, prevUntil: function (a, b, c) { return d.dir(a, "previousSibling", c) }, siblings: function (a) { return d.sibling(a.parentNode.firstChild, a) }, children: function (a) { return d.sibling(a.firstChild) }, contents: function (a) { return d.nodeName(a, "iframe") ? a.contentDocument || a.contentWindow.document : d.makeArray(a.childNodes) } }, function (a, b) { d.fn[a] = function (c, e) { var f = d.map(this, b, c), g = K.call(arguments); G.test(a) || (e = c), e && typeof e === "string" && (f = d.filter(e, f)), f = this.length > 1 && !M[a] ? d.unique(f) : f, (this.length > 1 || I.test(e)) && H.test(a) && (f = f.reverse()); return this.pushStack(f, a, g.join(",")) } }), d.extend({ filter: function (a, b, c) { c && (a = ":not(" + a + ")"); return b.length === 1 ? d.find.matchesSelector(b[0], a) ? [b[0]] : [] : d.find.matches(a, b) }, dir: function (a, c, e) { var f = [], g = a[c]; while (g && g.nodeType !== 9 && (e === b || g.nodeType !== 1 || !d(g).is(e))) g.nodeType === 1 && f.push(g), g = g[c]; return f }, nth: function (a, b, c, d) { b = b || 1; var e = 0; for (; a; a = a[c]) if (a.nodeType === 1 && ++e === b) break; return a }, sibling: function (a, b) { var c = []; for (; a; a = a.nextSibling) a.nodeType === 1 && a !== b && c.push(a); return c } }); var P = / jQuery\d+="(?:\d+|null)"/g, Q = /^\s+/, R = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/ig, S = /<([\w:]+)/, T = /<tbody/i, U = /<|&#?\w+;/, V = /<(?:script|object|embed|option|style)/i, W = /checked\s*(?:[^=]|=\s*.checked.)/i, X = { option: [1, "<select multiple='multiple'>", "</select>"], legend: [1, "<fieldset>", "</fieldset>"], thead: [1, "<table>", "</table>"], tr: [2, "<table><tbody>", "</tbody></table>"], td: [3, "<table><tbody><tr>", "</tr></tbody></table>"], col: [2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"], area: [1, "<map>", "</map>"], _default: [0, "", ""] }; X.optgroup = X.option, X.tbody = X.tfoot = X.colgroup = X.caption = X.thead, X.th = X.td, d.support.htmlSerialize || (X._default = [1, "div<div>", "</div>"]), d.fn.extend({ text: function (a) { if (d.isFunction(a)) return this.each(function (b) { var c = d(this); c.text(a.call(this, b, c.text())) }); if (typeof a !== "object" && a !== b) return this.empty().append((this[0] && this[0].ownerDocument || c).createTextNode(a)); return d.text(this) }, wrapAll: function (a) { if (d.isFunction(a)) return this.each(function (b) { d(this).wrapAll(a.call(this, b)) }); if (this[0]) { var b = d(a, this[0].ownerDocument).eq(0).clone(!0); this[0].parentNode && b.insertBefore(this[0]), b.map(function () { var a = this; while (a.firstChild && a.firstChild.nodeType === 1) a = a.firstChild; return a }).append(this) } return this }, wrapInner: function (a) { if (d.isFunction(a)) return this.each(function (b) { d(this).wrapInner(a.call(this, b)) }); return this.each(function () { var b = d(this), c = b.contents(); c.length ? c.wrapAll(a) : b.append(a) }) }, wrap: function (a) { return this.each(function () { d(this).wrapAll(a) }) }, unwrap: function () { return this.parent().each(function () { d.nodeName(this, "body") || d(this).replaceWith(this.childNodes) }).end() }, append: function () { return this.domManip(arguments, !0, function (a) { this.nodeType === 1 && this.appendChild(a) }) }, prepend: function () { return this.domManip(arguments, !0, function (a) { this.nodeType === 1 && this.insertBefore(a, this.firstChild) }) }, before: function () { if (this[0] && this[0].parentNode) return this.domManip(arguments, !1, function (a) { this.parentNode.insertBefore(a, this) }); if (arguments.length) { var a = d(arguments[0]); a.push.apply(a, this.toArray()); return this.pushStack(a, "before", arguments) } }, after: function () { if (this[0] && this[0].parentNode) return this.domManip(arguments, !1, function (a) { this.parentNode.insertBefore(a, this.nextSibling) }); if (arguments.length) { var a = this.pushStack(this, "after", arguments); a.push.apply(a, d(arguments[0]).toArray()); return a } }, remove: function (a, b) { for (var c = 0, e; (e = this[c]) != null; c++) if (!a || d.filter(a, [e]).length) !b && e.nodeType === 1 && (d.cleanData(e.getElementsByTagName("*")), d.cleanData([e])), e.parentNode && e.parentNode.removeChild(e); return this }, empty: function () { for (var a = 0, b; (b = this[a]) != null; a++) { b.nodeType === 1 && d.cleanData(b.getElementsByTagName("*")); while (b.firstChild) b.removeChild(b.firstChild) } return this }, clone: function (a, b) { a = a == null ? !1 : a, b = b == null ? a : b; return this.map(function () { return d.clone(this, a, b) }) }, html: function (a) { if (a === b) return this[0] && this[0].nodeType === 1 ? this[0].innerHTML.replace(P, "") : null; if (typeof a !== "string" || V.test(a) || !d.support.leadingWhitespace && Q.test(a) || X[(S.exec(a) || ["", ""])[1].toLowerCase()]) d.isFunction(a) ? this.each(function (b) { var c = d(this); c.html(a.call(this, b, c.html())) }) : this.empty().append(a); else { a = a.replace(R, "<$1></$2>"); try { for (var c = 0, e = this.length; c < e; c++) this[c].nodeType === 1 && (d.cleanData(this[c].getElementsByTagName("*")), this[c].innerHTML = a) } catch (f) { this.empty().append(a) } } return this }, replaceWith: function (a) { if (this[0] && this[0].parentNode) { if (d.isFunction(a)) return this.each(function (b) { var c = d(this), e = c.html(); c.replaceWith(a.call(this, b, e)) }); typeof a !== "string" && (a = d(a).detach()); return this.each(function () { var b = this.nextSibling, c = this.parentNode; d(this).remove(), b ? d(b).before(a) : d(c).append(a) }) } return this.pushStack(d(d.isFunction(a) ? a() : a), "replaceWith", a) }, detach: function (a) { return this.remove(a, !0) }, domManip: function (a, c, e) { var f, g, h, i, j = a[0], k = []; if (!d.support.checkClone && arguments.length === 3 && typeof j === "string" && W.test(j)) return this.each(function () { d(this).domManip(a, c, e, !0) }); if (d.isFunction(j)) return this.each(function (f) { var g = d(this); a[0] = j.call(this, f, c ? g.html() : b), g.domManip(a, c, e) }); if (this[0]) { i = j && j.parentNode, d.support.parentNode && i && i.nodeType === 11 && i.childNodes.length === this.length ? f = { fragment: i } : f = d.buildFragment(a, this, k), h = f.fragment, h.childNodes.length === 1 ? g = h = h.firstChild : g = h.firstChild; if (g) { c = c && d.nodeName(g, "tr"); for (var l = 0, m = this.length, n = m - 1; l < m; l++) e.call(c ? Y(this[l], g) : this[l], f.cacheable || m > 1 && l < n ? d.clone(h, !0, !0) : h) } k.length && d.each(k, ba) } return this } }), d.buildFragment = function (a, b, e) { var f, g, h, i = b && b[0] ? b[0].ownerDocument || b[0] : c; a.length === 1 && typeof a[0] === "string" && a[0].length < 512 && i === c && a[0].charAt(0) === "<" && !V.test(a[0]) && (d.support.checkClone || !W.test(a[0])) && (g = !0, h = d.fragments[a[0]], h && (h !== 1 && (f = h))), f || (f = i.createDocumentFragment(), d.clean(a, i, f, e)), g && (d.fragments[a[0]] = h ? f : 1); return { fragment: f, cacheable: g } }, d.fragments = {}, d.each({ appendTo: "append", prependTo: "prepend", insertBefore: "before", insertAfter: "after", replaceAll: "replaceWith" }, function (a, b) { d.fn[a] = function (c) { var e = [], f = d(c), g = this.length === 1 && this[0].parentNode; if (g && g.nodeType === 11 && g.childNodes.length === 1 && f.length === 1) { f[b](this[0]); return this } for (var h = 0, i = f.length; h < i; h++) { var j = (h > 0 ? this.clone(!0) : this).get(); d(f[h])[b](j), e = e.concat(j) } return this.pushStack(e, a, f.selector) } }), d.extend({ clone: function (a, b, c) { var e = a.cloneNode(!0), f, g, h; if ((!d.support.noCloneEvent || !d.support.noCloneChecked) && (a.nodeType === 1 || a.nodeType === 11) && !d.isXMLDoc(a)) { $(a, e), f = _(a), g = _(e); for (h = 0; f[h]; ++h) $(f[h], g[h]) } if (b) { Z(a, e); if (c) { f = _(a), g = _(e); for (h = 0; f[h]; ++h) Z(f[h], g[h]) } } return e }, clean: function (a, b, e, f) { b = b || c, typeof b.createElement === "undefined" && (b = b.ownerDocument || b[0] && b[0].ownerDocument || c); var g = []; for (var h = 0, i; (i = a[h]) != null; h++) { typeof i === "number" && (i += ""); if (!i) continue; if (typeof i !== "string" || U.test(i)) { if (typeof i === "string") { i = i.replace(R, "<$1></$2>"); var j = (S.exec(i) || ["", ""])[1].toLowerCase(), k = X[j] || X._default, l = k[0], m = b.createElement("div"); m.innerHTML = k[1] + i + k[2]; while (l--) m = m.lastChild; if (!d.support.tbody) { var n = T.test(i), o = j === "table" && !n ? m.firstChild && m.firstChild.childNodes : k[1] === "<table>" && !n ? m.childNodes : []; for (var p = o.length - 1; p >= 0; --p) d.nodeName(o[p], "tbody") && !o[p].childNodes.length && o[p].parentNode.removeChild(o[p]) } !d.support.leadingWhitespace && Q.test(i) && m.insertBefore(b.createTextNode(Q.exec(i)[0]), m.firstChild), i = m.childNodes } } else i = b.createTextNode(i); i.nodeType ? g.push(i) : g = d.merge(g, i) } if (e) for (h = 0; g[h]; h++) !f || !d.nodeName(g[h], "script") || g[h].type && g[h].type.toLowerCase() !== "text/javascript" ? (g[h].nodeType === 1 && g.splice.apply(g, [h + 1, 0].concat(d.makeArray(g[h].getElementsByTagName("script")))), e.appendChild(g[h])) : f.push(g[h].parentNode ? g[h].parentNode.removeChild(g[h]) : g[h]); return g }, cleanData: function (a) { var b, c, e = d.cache, f = d.expando, g = d.event.special, h = d.support.deleteExpando; for (var i = 0, j; (j = a[i]) != null; i++) { if (j.nodeName && d.noData[j.nodeName.toLowerCase()]) continue; c = j[d.expando]; if (c) { b = e[c] && e[c][f]; if (b && b.events) { for (var k in b.events) g[k] ? d.event.remove(j, k) : d.removeEvent(j, k, b.handle); b.handle && (b.handle.elem = null) } h ? delete j[d.expando] : j.removeAttribute && j.removeAttribute(d.expando), delete e[c] } } } }); var bb = /alpha\([^)]*\)/i, bc = /opacity=([^)]*)/, bd = /-([a-z])/ig, be = /([A-Z])/g, bf = /^-?\d+(?:px)?$/i, bg = /^-?\d/, bh = { position: "absolute", visibility: "hidden", display: "block" }, bi = ["Left", "Right"], bj = ["Top", "Bottom"], bk, bl, bm, bn = function (a, b) { return b.toUpperCase() }; d.fn.css = function (a, c) { if (arguments.length === 2 && c === b) return this; return d.access(this, a, c, !0, function (a, c, e) { return e !== b ? d.style(a, c, e) : d.css(a, c) }) }, d.extend({ cssHooks: { opacity: { get: function (a, b) { if (b) { var c = bk(a, "opacity", "opacity"); return c === "" ? "1" : c } return a.style.opacity } } }, cssNumber: { zIndex: !0, fontWeight: !0, opacity: !0, zoom: !0, lineHeight: !0 }, cssProps: { "float": d.support.cssFloat ? "cssFloat" : "styleFloat" }, style: function (a, c, e, f) { if (a && a.nodeType !== 3 && a.nodeType !== 8 && a.style) { var g, h = d.camelCase(c), i = a.style, j = d.cssHooks[h]; c = d.cssProps[h] || h; if (e === b) { if (j && "get" in j && (g = j.get(a, !1, f)) !== b) return g; return i[c] } if (typeof e === "number" && isNaN(e) || e == null) return; typeof e === "number" && !d.cssNumber[h] && (e += "px"); if (!j || !("set" in j) || (e = j.set(a, e)) !== b) try { i[c] = e } catch (k) { } } }, css: function (a, c, e) { var f, g = d.camelCase(c), h = d.cssHooks[g]; c = d.cssProps[g] || g; if (h && "get" in h && (f = h.get(a, !0, e)) !== b) return f; if (bk) return bk(a, c, g) }, swap: function (a, b, c) { var d = {}; for (var e in b) d[e] = a.style[e], a.style[e] = b[e]; c.call(a); for (e in b) a.style[e] = d[e] }, camelCase: function (a) { return a.replace(bd, bn) } }), d.curCSS = d.css, d.each(["height", "width"], function (a, b) { d.cssHooks[b] = { get: function (a, c, e) { var f; if (c) { a.offsetWidth !== 0 ? f = bo(a, b, e) : d.swap(a, bh, function () { f = bo(a, b, e) }); if (f <= 0) { f = bk(a, b, b), f === "0px" && bm && (f = bm(a, b, b)); if (f != null) return f === "" || f === "auto" ? "0px" : f } if (f < 0 || f == null) { f = a.style[b]; return f === "" || f === "auto" ? "0px" : f } return typeof f === "string" ? f : f + "px" } }, set: function (a, b) { if (!bf.test(b)) return b; b = parseFloat(b); if (b >= 0) return b + "px" } } }), d.support.opacity || (d.cssHooks.opacity = { get: function (a, b) { return bc.test((b && a.currentStyle ? a.currentStyle.filter : a.style.filter) || "") ? parseFloat(RegExp.$1) / 100 + "" : b ? "1" : "" }, set: function (a, b) { var c = a.style; c.zoom = 1; var e = d.isNaN(b) ? "" : "alpha(opacity=" + b * 100 + ")", f = c.filter || ""; c.filter = bb.test(f) ? f.replace(bb, e) : c.filter + " " + e } }), c.defaultView && c.defaultView.getComputedStyle && (bl = function (a, c, e) { var f, g, h; e = e.replace(be, "-$1").toLowerCase(); if (!(g = a.ownerDocument.defaultView)) return b; if (h = g.getComputedStyle(a, null)) f = h.getPropertyValue(e), f === "" && !d.contains(a.ownerDocument.documentElement, a) && (f = d.style(a, e)); return f }), c.documentElement.currentStyle && (bm = function (a, b) { var c, d = a.currentStyle && a.currentStyle[b], e = a.runtimeStyle && a.runtimeStyle[b], f = a.style; !bf.test(d) && bg.test(d) && (c = f.left, e && (a.runtimeStyle.left = a.currentStyle.left), f.left = b === "fontSize" ? "1em" : d || 0, d = f.pixelLeft + "px", f.left = c, e && (a.runtimeStyle.left = e)); return d === "" ? "auto" : d }), bk = bl || bm, d.expr && d.expr.filters && (d.expr.filters.hidden = function (a) { var b = a.offsetWidth, c = a.offsetHeight; return b === 0 && c === 0 || !d.support.reliableHiddenOffsets && (a.style.display || d.css(a, "display")) === "none" }, d.expr.filters.visible = function (a) { return !d.expr.filters.hidden(a) }); var bp = /%20/g, bq = /\[\]$/, br = /\r?\n/g, bs = /#.*$/, bt = /^(.*?):[ \t]*([^\r\n]*)\r?$/mg, bu = /^(?:color|date|datetime|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i, bv = /(?:^file|^widget|\-extension):$/, bw = /^(?:GET|HEAD)$/, bx = /^\/\//, by = /\?/, bz = /<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi, bA = /^(?:select|textarea)/i, bB = /\s+/, bC = /([?&])_=[^&]*/, bD = /(^|\-)([a-z])/g, bE = function (a, b, c) { return b + c.toUpperCase() }, bF = /^([\w\+\.\-]+:)\/\/([^\/?#:]*)(?::(\d+))?/, bG = d.fn.load, bH = {}, bI = {}, bJ, bK; try { bJ = c.location.href } catch (bL) { bJ = c.createElement("a"), bJ.href = "", bJ = bJ.href } bK = bF.exec(bJ.toLowerCase()), d.fn.extend({ load: function (a, c, e) { if (typeof a !== "string" && bG) return bG.apply(this, arguments); if (!this.length) return this; var f = a.indexOf(" "); if (f >= 0) { var g = a.slice(f, a.length); a = a.slice(0, f) } var h = "GET"; c && (d.isFunction(c) ? (e = c, c = b) : typeof c === "object" && (c = d.param(c, d.ajaxSettings.traditional), h = "POST")); var i = this; d.ajax({ url: a, type: h, dataType: "html", data: c, complete: function (a, b, c) { c = a.responseText, a.isResolved() && (a.done(function (a) { c = a }), i.html(g ? d("<div>").append(c.replace(bz, "")).find(g) : c)), e && i.each(e, [c, b, a]) } }); return this }, serialize: function () { return d.param(this.serializeArray()) }, serializeArray: function () { return this.map(function () { return this.elements ? d.makeArray(this.elements) : this }).filter(function () { return this.name && !this.disabled && (this.checked || bA.test(this.nodeName) || bu.test(this.type)) }).map(function (a, b) { var c = d(this).val(); return c == null ? null : d.isArray(c) ? d.map(c, function (a, c) { return { name: b.name, value: a.replace(br, "\r\n") } }) : { name: b.name, value: c.replace(br, "\r\n") } }).get() } }), d.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "), function (a, b) { d.fn[b] = function (a) { return this.bind(b, a) } }), d.each(["get", "post"], function (a, c) { d[c] = function (a, e, f, g) { d.isFunction(e) && (g = g || f, f = e, e = b); return d.ajax({ type: c, url: a, data: e, success: f, dataType: g }) } }), d.extend({ getScript: function (a, c) { return d.get(a, b, c, "script") }, getJSON: function (a, b, c) { return d.get(a, b, c, "json") }, ajaxSetup: function (a, b) { b ? d.extend(!0, a, d.ajaxSettings, b) : (b = a, a = d.extend(!0, d.ajaxSettings, b)); for (var c in { context: 1, url: 1 }) c in b ? a[c] = b[c] : c in d.ajaxSettings && (a[c] = d.ajaxSettings[c]); return a }, ajaxSettings: { url: bJ, isLocal: bv.test(bK[1]), global: !0, type: "GET", contentType: "application/x-www-form-urlencoded", processData: !0, async: !0, accepts: { xml: "application/xml, text/xml", html: "text/html", text: "text/plain", json: "application/json, text/javascript", "*": "*/*" }, contents: { xml: /xml/, html: /html/, json: /json/ }, responseFields: { xml: "responseXML", text: "responseText" }, converters: { "* text": a.String, "text html": !0, "text json": d.parseJSON, "text xml": d.parseXML } }, ajaxPrefilter: bM(bH), ajaxTransport: bM(bI), ajax: function (a, c) { function v(a, c, l, n) { if (r !== 2) { r = 2, p && clearTimeout(p), o = b, m = n || "", u.readyState = a ? 4 : 0; var q, t, v, w = l ? bP(e, u, l) : b, x, y; if (a >= 200 && a < 300 || a === 304) { if (e.ifModified) { if (x = u.getResponseHeader("Last-Modified")) d.lastModified[k] = x; if (y = u.getResponseHeader("Etag")) d.etag[k] = y } if (a === 304) c = "notmodified", q = !0; else try { t = bQ(e, w), c = "success", q = !0 } catch (z) { c = "parsererror", v = z } } else { v = c; if (!c || a) c = "error", a < 0 && (a = 0) } u.status = a, u.statusText = c, q ? h.resolveWith(f, [t, c, u]) : h.rejectWith(f, [u, c, v]), u.statusCode(j), j = b, s && g.trigger("ajax" + (q ? "Success" : "Error"), [u, e, q ? t : v]), i.resolveWith(f, [u, c]), s && (g.trigger("ajaxComplete", [u, e]), --d.active || d.event.trigger("ajaxStop")) } } typeof a === "object" && (c = a, a = b), c = c || {}; var e = d.ajaxSetup({}, c), f = e.context || e, g = f !== e && (f.nodeType || f instanceof d) ? d(f) : d.event, h = d.Deferred(), i = d._Deferred(), j = e.statusCode || {}, k, l = {}, m, n, o, p, q, r = 0, s, t, u = { readyState: 0, setRequestHeader: function (a, b) { r || (l[a.toLowerCase().replace(bD, bE)] = b); return this }, getAllResponseHeaders: function () { return r === 2 ? m : null }, getResponseHeader: function (a) { var c; if (r === 2) { if (!n) { n = {}; while (c = bt.exec(m)) n[c[1].toLowerCase()] = c[2] } c = n[a.toLowerCase()] } return c === b ? null : c }, overrideMimeType: function (a) { r || (e.mimeType = a); return this }, abort: function (a) { a = a || "abort", o && o.abort(a), v(0, a); return this } }; h.promise(u), u.success = u.done, u.error = u.fail, u.complete = i.done, u.statusCode = function (a) { if (a) { var b; if (r < 2) for (b in a) j[b] = [j[b], a[b]]; else b = a[u.status], u.then(b, b) } return this }, e.url = ((a || e.url) + "").replace(bs, "").replace(bx, bK[1] + "//"), e.dataTypes = d.trim(e.dataType || "*").toLowerCase().split(bB), e.crossDomain || (q = bF.exec(e.url.toLowerCase()), e.crossDomain = q && (q[1] != bK[1] || q[2] != bK[2] || (q[3] || (q[1] === "http:" ? 80 : 443)) != (bK[3] || (bK[1] === "http:" ? 80 : 443)))), e.data && e.processData && typeof e.data !== "string" && (e.data = d.param(e.data, e.traditional)), bN(bH, e, c, u); if (r === 2) return !1; s = e.global, e.type = e.type.toUpperCase(), e.hasContent = !bw.test(e.type), s && d.active++ === 0 && d.event.trigger("ajaxStart"); if (!e.hasContent) { e.data && (e.url += (by.test(e.url) ? "&" : "?") + e.data), k = e.url; if (e.cache === !1) { var w = d.now(), x = e.url.replace(bC, "$1_=" + w); e.url = x + (x === e.url ? (by.test(e.url) ? "&" : "?") + "_=" + w : "") } } if (e.data && e.hasContent && e.contentType !== !1 || c.contentType) l["Content-Type"] = e.contentType; e.ifModified && (k = k || e.url, d.lastModified[k] && (l["If-Modified-Since"] = d.lastModified[k]), d.etag[k] && (l["If-None-Match"] = d.etag[k])), l.Accept = e.dataTypes[0] && e.accepts[e.dataTypes[0]] ? e.accepts[e.dataTypes[0]] + (e.dataTypes[0] !== "*" ? ", */*; q=0.01" : "") : e.accepts["*"]; for (t in e.headers) u.setRequestHeader(t, e.headers[t]); if (e.beforeSend && (e.beforeSend.call(f, u, e) === !1 || r === 2)) { u.abort(); return !1 } for (t in { success: 1, error: 1, complete: 1 }) u[t](e[t]); o = bN(bI, e, c, u); if (o) { u.readyState = 1, s && g.trigger("ajaxSend", [u, e]), e.async && e.timeout > 0 && (p = setTimeout(function () { u.abort("timeout") }, e.timeout)); try { r = 1, o.send(l, v) } catch (y) { status < 2 ? v(-1, y) : d.error(y) } } else v(-1, "No Transport"); return u }, param: function (a, c) { var e = [], f = function (a, b) { b = d.isFunction(b) ? b() : b, e[e.length] = encodeURIComponent(a) + "=" + encodeURIComponent(b) }; c === b && (c = d.ajaxSettings.traditional); if (d.isArray(a) || a.jquery && !d.isPlainObject(a)) d.each(a, function () { f(this.name, this.value) }); else for (var g in a) bO(g, a[g], c, f); return e.join("&").replace(bp, "+") } }), d.extend({ active: 0, lastModified: {}, etag: {} }); var bR = d.now(), bS = /(\=)\?(&|$)|()\?\?()/i; d.ajaxSetup({ jsonp: "callback", jsonpCallback: function () { return d.expando + "_" + bR++ } }), d.ajaxPrefilter("json jsonp", function (b, c, e) { var f = typeof b.data === "string"; if (b.dataTypes[0] === "jsonp" || c.jsonpCallback || c.jsonp != null || b.jsonp !== !1 && (bS.test(b.url) || f && bS.test(b.data))) { var g, h = b.jsonpCallback = d.isFunction(b.jsonpCallback) ? b.jsonpCallback() : b.jsonpCallback, i = a[h], j = b.url, k = b.data, l = "$1" + h + "$2", m = function () { a[h] = i, g && d.isFunction(i) && a[h](g[0]) }; b.jsonp !== !1 && (j = j.replace(bS, l), b.url === j && (f && (k = k.replace(bS, l)), b.data === k && (j += (/\?/.test(j) ? "&" : "?") + b.jsonp + "=" + h))), b.url = j, b.data = k, a[h] = function (a) { g = [a] }, e.then(m, m), b.converters["script json"] = function () { g || d.error(h + " was not called"); return g[0] }, b.dataTypes[0] = "json"; return "script" } }), d.ajaxSetup({ accepts: { script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript" }, contents: { script: /javascript|ecmascript/ }, converters: { "text script": function (a) { d.globalEval(a); return a } } }), d.ajaxPrefilter("script", function (a) { a.cache === b && (a.cache = !1), a.crossDomain && (a.type = "GET", a.global = !1) }), d.ajaxTransport("script", function (a) { if (a.crossDomain) { var d, e = c.head || c.getElementsByTagName("head")[0] || c.documentElement; return { send: function (f, g) { d = c.createElement("script"), d.async = "async", a.scriptCharset && (d.charset = a.scriptCharset), d.src = a.url, d.onload = d.onreadystatechange = function (a, c) { if (!d.readyState || /loaded|complete/.test(d.readyState)) d.onload = d.onreadystatechange = null, e && d.parentNode && e.removeChild(d), d = b, c || g(200, "success") }, e.insertBefore(d, e.firstChild) }, abort: function () { d && d.onload(0, 1) } } } }); var bT = d.now(), bU, bV; d.ajaxSettings.xhr = a.ActiveXObject ? function () { return !this.isLocal && bX() || bY() } : bX, bV = d.ajaxSettings.xhr(), d.support.ajax = !!bV, d.support.cors = bV && "withCredentials" in bV, bV = b, d.support.ajax && d.ajaxTransport(function (a) { if (!a.crossDomain || d.support.cors) { var c; return { send: function (e, f) { var g = a.xhr(), h, i; a.username ? g.open(a.type, a.url, a.async, a.username, a.password) : g.open(a.type, a.url, a.async); if (a.xhrFields) for (i in a.xhrFields) g[i] = a.xhrFields[i]; a.mimeType && g.overrideMimeType && g.overrideMimeType(a.mimeType), (!a.crossDomain || a.hasContent) && !e["X-Requested-With"] && (e["X-Requested-With"] = "XMLHttpRequest"); try { for (i in e) g.setRequestHeader(i, e[i]) } catch (j) { } g.send(a.hasContent && a.data || null), c = function (e, i) { var j, k, l, m, n; try { if (c && (i || g.readyState === 4)) { c = b, h && (g.onreadystatechange = d.noop, delete bU[h]); if (i) g.readyState !== 4 && g.abort(); else { j = g.status, l = g.getAllResponseHeaders(), m = {}, n = g.responseXML, n && n.documentElement && (m.xml = n), m.text = g.responseText; try { k = g.statusText } catch (o) { k = "" } j || !a.isLocal || a.crossDomain ? j === 1223 && (j = 204) : j = m.text ? 200 : 404 } } } catch (p) { i || f(-1, p) } m && f(j, k, m, l) }, a.async && g.readyState !== 4 ? (bU || (bU = {}, bW()), h = bT++, g.onreadystatechange = bU[h] = c) : c() }, abort: function () { c && c(0, 1) } } } }); var bZ = {}, b$ = /^(?:toggle|show|hide)$/, b_ = /^([+\-]=)?([\d+.\-]+)([a-z%]*)$/i, ca, cb = [["height", "marginTop", "marginBottom", "paddingTop", "paddingBottom"], ["width", "marginLeft", "marginRight", "paddingLeft", "paddingRight"], ["opacity"]]; d.fn.extend({ show: function (a, b, c) { var e, f; if (a || a === 0) return this.animate(cc("show", 3), a, b, c); for (var g = 0, h = this.length; g < h; g++) e = this[g], f = e.style.display, !d._data(e, "olddisplay") && f === "none" && (f = e.style.display = ""), f === "" && d.css(e, "display") === "none" && d._data(e, "olddisplay", cd(e.nodeName)); for (g = 0; g < h; g++) { e = this[g], f = e.style.display; if (f === "" || f === "none") e.style.display = d._data(e, "olddisplay") || "" } return this }, hide: function (a, b, c) { if (a || a === 0) return this.animate(cc("hide", 3), a, b, c); for (var e = 0, f = this.length; e < f; e++) { var g = d.css(this[e], "display"); g !== "none" && !d._data(this[e], "olddisplay") && d._data(this[e], "olddisplay", g) } for (e = 0; e < f; e++) this[e].style.display = "none"; return this }, _toggle: d.fn.toggle, toggle: function (a, b, c) { var e = typeof a === "boolean"; d.isFunction(a) && d.isFunction(b) ? this._toggle.apply(this, arguments) : a == null || e ? this.each(function () { var b = e ? a : d(this).is(":hidden"); d(this)[b ? "show" : "hide"]() }) : this.animate(cc("toggle", 3), a, b, c); return this }, fadeTo: function (a, b, c, d) { return this.filter(":hidden").css("opacity", 0).show().end().animate({ opacity: b }, a, c, d) }, animate: function (a, b, c, e) { var f = d.speed(b, c, e); if (d.isEmptyObject(a)) return this.each(f.complete); return this[f.queue === !1 ? "each" : "queue"](function () { var b = d.extend({}, f), c, e = this.nodeType === 1, g = e && d(this).is(":hidden"), h = this; for (c in a) { var i = d.camelCase(c); c !== i && (a[i] = a[c], delete a[c], c = i); if (a[c] === "hide" && g || a[c] === "show" && !g) return b.complete.call(this); if (e && (c === "height" || c === "width")) { b.overflow = [this.style.overflow, this.style.overflowX, this.style.overflowY]; if (d.css(this, "display") === "inline" && d.css(this, "float") === "none") if (d.support.inlineBlockNeedsLayout) { var j = cd(this.nodeName); j === "inline" ? this.style.display = "inline-block" : (this.style.display = "inline", this.style.zoom = 1) } else this.style.display = "inline-block" } d.isArray(a[c]) && ((b.specialEasing = b.specialEasing || {})[c] = a[c][1], a[c] = a[c][0]) } b.overflow != null && (this.style.overflow = "hidden"), b.curAnim = d.extend({}, a), d.each(a, function (c, e) { var f = new d.fx(h, b, c); if (b$.test(e)) f[e === "toggle" ? g ? "show" : "hide" : e](a); else { var i = b_.exec(e), j = f.cur(); if (i) { var k = parseFloat(i[2]), l = i[3] || (d.cssNumber[c] ? "" : "px"); l !== "px" && (d.style(h, c, (k || 1) + l), j = (k || 1) / f.cur() * j, d.style(h, c, j + l)), i[1] && (k = (i[1] === "-=" ? -1 : 1) * k + j), f.custom(j, k, l) } else f.custom(j, e, "") } }); return !0 }) }, stop: function (a, b) { var c = d.timers; a && this.queue([]), this.each(function () { for (var a = c.length - 1; a >= 0; a--) c[a].elem === this && (b && c[a](!0), c.splice(a, 1)) }), b || this.dequeue(); return this } }), d.each({ slideDown: cc("show", 1), slideUp: cc("hide", 1), slideToggle: cc("toggle", 1), fadeIn: { opacity: "show" }, fadeOut: { opacity: "hide" }, fadeToggle: { opacity: "toggle" } }, function (a, b) { d.fn[a] = function (a, c, d) { return this.animate(b, a, c, d) } }), d.extend({ speed: function (a, b, c) { var e = a && typeof a === "object" ? d.extend({}, a) : { complete: c || !c && b || d.isFunction(a) && a, duration: a, easing: c && b || b && !d.isFunction(b) && b }; e.duration = d.fx.off ? 0 : typeof e.duration === "number" ? e.duration : e.duration in d.fx.speeds ? d.fx.speeds[e.duration] : d.fx.speeds._default, e.old = e.complete, e.complete = function () { e.queue !== !1 && d(this).dequeue(), d.isFunction(e.old) && e.old.call(this) }; return e }, easing: { linear: function (a, b, c, d) { return c + d * a }, swing: function (a, b, c, d) { return (-Math.cos(a * Math.PI) / 2 + .5) * d + c } }, timers: [], fx: function (a, b, c) { this.options = b, this.elem = a, this.prop = c, b.orig || (b.orig = {}) } }), d.fx.prototype = { update: function () { this.options.step && this.options.step.call(this.elem, this.now, this), (d.fx.step[this.prop] || d.fx.step._default)(this) }, cur: function () { if (this.elem[this.prop] != null && (!this.elem.style || this.elem.style[this.prop] == null)) return this.elem[this.prop]; var a, b = d.css(this.elem, this.prop); return isNaN(a = parseFloat(b)) ? !b || b === "auto" ? 0 : b : a }, custom: function (a, b, c) { function g(a) { return e.step(a) } var e = this, f = d.fx; this.startTime = d.now(), this.start = a, this.end = b, this.unit = c || this.unit || (d.cssNumber[this.prop] ? "" : "px"), this.now = this.start, this.pos = this.state = 0, g.elem = this.elem, g() && d.timers.push(g) && !ca && (ca = setInterval(f.tick, f.interval)) }, show: function () { this.options.orig[this.prop] = d.style(this.elem, this.prop), this.options.show = !0, this.custom(this.prop === "width" || this.prop === "height" ? 1 : 0, this.cur()), d(this.elem).show() }, hide: function () { this.options.orig[this.prop] = d.style(this.elem, this.prop), this.options.hide = !0, this.custom(this.cur(), 0) }, step: function (a) { var b = d.now(), c = !0; if (a || b >= this.options.duration + this.startTime) { this.now = this.end, this.pos = this.state = 1, this.update(), this.options.curAnim[this.prop] = !0; for (var e in this.options.curAnim) this.options.curAnim[e] !== !0 && (c = !1); if (c) { if (this.options.overflow != null && !d.support.shrinkWrapBlocks) { var f = this.elem, g = this.options; d.each(["", "X", "Y"], function (a, b) { f.style["overflow" + b] = g.overflow[a] }) } this.options.hide && d(this.elem).hide(); if (this.options.hide || this.options.show) for (var h in this.options.curAnim) d.style(this.elem, h, this.options.orig[h]); this.options.complete.call(this.elem) } return !1 } var i = b - this.startTime; this.state = i / this.options.duration; var j = this.options.specialEasing && this.options.specialEasing[this.prop], k = this.options.easing || (d.easing.swing ? "swing" : "linear"); this.pos = d.easing[j || k](this.state, i, 0, 1, this.options.duration), this.now = this.start + (this.end - this.start) * this.pos, this.update(); return !0 } }, d.extend(d.fx, { tick: function () { var a = d.timers; for (var b = 0; b < a.length; b++) a[b]() || a.splice(b--, 1); a.length || d.fx.stop() }, interval: 13, stop: function () { clearInterval(ca), ca = null }, speeds: { slow: 600, fast: 200, _default: 400 }, step: { opacity: function (a) { d.style(a.elem, "opacity", a.now) }, _default: function (a) { a.elem.style && a.elem.style[a.prop] != null ? a.elem.style[a.prop] = (a.prop === "width" || a.prop === "height" ? Math.max(0, a.now) : a.now) + a.unit : a.elem[a.prop] = a.now } } }), d.expr && d.expr.filters && (d.expr.filters.animated = function (a) { return d.grep(d.timers, function (b) { return a === b.elem }).length }); var ce = /^t(?:able|d|h)$/i, cf = /^(?:body|html)$/i; "getBoundingClientRect" in c.documentElement ? d.fn.offset = function (a) { var b = this[0], c; if (a) return this.each(function (b) { d.offset.setOffset(this, a, b) }); if (!b || !b.ownerDocument) return null; if (b === b.ownerDocument.body) return d.offset.bodyOffset(b); try { c = b.getBoundingClientRect() } catch (e) { } var f = b.ownerDocument, g = f.documentElement; if (!c || !d.contains(g, b)) return c ? { top: c.top, left: c.left } : { top: 0, left: 0 }; var h = f.body, i = cg(f), j = g.clientTop || h.clientTop || 0, k = g.clientLeft || h.clientLeft || 0, l = i.pageYOffset || d.support.boxModel && g.scrollTop || h.scrollTop, m = i.pageXOffset || d.support.boxModel && g.scrollLeft || h.scrollLeft, n = c.top + l - j, o = c.left + m - k; return { top: n, left: o } } : d.fn.offset = function (a) { var b = this[0]; if (a) return this.each(function (b) { d.offset.setOffset(this, a, b) }); if (!b || !b.ownerDocument) return null; if (b === b.ownerDocument.body) return d.offset.bodyOffset(b); d.offset.initialize(); var c, e = b.offsetParent, f = b, g = b.ownerDocument, h = g.documentElement, i = g.body, j = g.defaultView, k = j ? j.getComputedStyle(b, null) : b.currentStyle, l = b.offsetTop, m = b.offsetLeft; while ((b = b.parentNode) && b !== i && b !== h) { if (d.offset.supportsFixedPosition && k.position === "fixed") break; c = j ? j.getComputedStyle(b, null) : b.currentStyle, l -= b.scrollTop, m -= b.scrollLeft, b === e && (l += b.offsetTop, m += b.offsetLeft, d.offset.doesNotAddBorder && (!d.offset.doesAddBorderForTableAndCells || !ce.test(b.nodeName)) && (l += parseFloat(c.borderTopWidth) || 0, m += parseFloat(c.borderLeftWidth) || 0), f = e, e = b.offsetParent), d.offset.subtractsBorderForOverflowNotVisible && c.overflow !== "visible" && (l += parseFloat(c.borderTopWidth) || 0, m += parseFloat(c.borderLeftWidth) || 0), k = c } if (k.position === "relative" || k.position === "static") l += i.offsetTop, m += i.offsetLeft; d.offset.supportsFixedPosition && k.position === "fixed" && (l += Math.max(h.scrollTop, i.scrollTop), m += Math.max(h.scrollLeft, i.scrollLeft)); return { top: l, left: m } }, d.offset = { initialize: function () { var a = c.body, b = c.createElement("div"), e, f, g, h, i = parseFloat(d.css(a, "marginTop")) || 0, j = "<div style='position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;'><div></div></div><table style='position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;' cellpadding='0' cellspacing='0'><tr><td></td></tr></table>"; d.extend(b.style, { position: "absolute", top: 0, left: 0, margin: 0, border: 0, width: "1px", height: "1px", visibility: "hidden" }), b.innerHTML = j, a.insertBefore(b, a.firstChild), e = b.firstChild, f = e.firstChild, h = e.nextSibling.firstChild.firstChild, this.doesNotAddBorder = f.offsetTop !== 5, this.doesAddBorderForTableAndCells = h.offsetTop === 5, f.style.position = "fixed", f.style.top = "20px", this.supportsFixedPosition = f.offsetTop === 20 || f.offsetTop === 15, f.style.position = f.style.top = "", e.style.overflow = "hidden", e.style.position = "relative", this.subtractsBorderForOverflowNotVisible = f.offsetTop === -5, this.doesNotIncludeMarginInBodyOffset = a.offsetTop !== i, a.removeChild(b), a = b = e = f = g = h = null, d.offset.initialize = d.noop }, bodyOffset: function (a) { var b = a.offsetTop, c = a.offsetLeft; d.offset.initialize(), d.offset.doesNotIncludeMarginInBodyOffset && (b += parseFloat(d.css(a, "marginTop")) || 0, c += parseFloat(d.css(a, "marginLeft")) || 0); return { top: b, left: c } }, setOffset: function (a, b, c) { var e = d.css(a, "position"); e === "static" && (a.style.position = "relative"); var f = d(a), g = f.offset(), h = d.css(a, "top"), i = d.css(a, "left"), j = e === "absolute" && d.inArray("auto", [h, i]) > -1, k = {}, l = {}, m, n; j && (l = f.position()), m = j ? l.top : parseInt(h, 10) || 0, n = j ? l.left : parseInt(i, 10) || 0, d.isFunction(b) && (b = b.call(a, c, g)), b.top != null && (k.top = b.top - g.top + m), b.left != null && (k.left = b.left - g.left + n), "using" in b ? b.using.call(a, k) : f.css(k) } }, d.fn.extend({ position: function () { if (!this[0]) return null; var a = this[0], b = this.offsetParent(), c = this.offset(), e = cf.test(b[0].nodeName) ? { top: 0, left: 0 } : b.offset(); c.top -= parseFloat(d.css(a, "marginTop")) || 0, c.left -= parseFloat(d.css(a, "marginLeft")) || 0, e.top += parseFloat(d.css(b[0], "borderTopWidth")) || 0, e.left += parseFloat(d.css(b[0], "borderLeftWidth")) || 0; return { top: c.top - e.top, left: c.left - e.left } }, offsetParent: function () { return this.map(function () { var a = this.offsetParent || c.body; while (a && (!cf.test(a.nodeName) && d.css(a, "position") === "static")) a = a.offsetParent; return a }) } }), d.each(["Left", "Top"], function (a, c) { var e = "scroll" + c; d.fn[e] = function (c) { var f = this[0], g; if (!f) return null; if (c !== b) return this.each(function () { g = cg(this), g ? g.scrollTo(a ? d(g).scrollLeft() : c, a ? c : d(g).scrollTop()) : this[e] = c }); g = cg(f); return g ? "pageXOffset" in g ? g[a ? "pageYOffset" : "pageXOffset"] : d.support.boxModel && g.document.documentElement[e] || g.document.body[e] : f[e] } }), d.each(["Height", "Width"], function (a, c) { var e = c.toLowerCase(); d.fn["inner" + c] = function () { return this[0] ? parseFloat(d.css(this[0], e, "padding")) : null }, d.fn["outer" + c] = function (a) { return this[0] ? parseFloat(d.css(this[0], e, a ? "margin" : "border")) : null }, d.fn[e] = function (a) { var f = this[0]; if (!f) return a == null ? null : this; if (d.isFunction(a)) return this.each(function (b) { var c = d(this); c[e](a.call(this, b, c[e]())) }); if (d.isWindow(f)) { var g = f.document.documentElement["client" + c]; return f.document.compatMode === "CSS1Compat" && g || f.document.body["client" + c] || g } if (f.nodeType === 9) return Math.max(f.documentElement["client" + c], f.body["scroll" + c], f.documentElement["scroll" + c], f.body["offset" + c], f.documentElement["offset" + c]); if (a === b) { var h = d.css(f, e), i = parseFloat(h); return d.isNaN(i) ? h : i } return this.css(e, typeof a === "string" ? a : a + "px") } }), a.jQuery = a.$ = d })(window);
//#endregion jQuery


//#region jQuery
/*Scripts/jquery-ui-1.8.21.custom.min.js*/
/*! jQuery UI - v1.8.21 - 2012-06-05
* https://github.com/jquery/jquery-ui
* Includes: jquery.ui.core.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function (a, b) { function c(b, c) { var e = b.nodeName.toLowerCase(); if ("area" === e) { var f = b.parentNode, g = f.name, h; return !b.href || !g || f.nodeName.toLowerCase() !== "map" ? !1 : (h = a("img[usemap=#" + g + "]")[0], !!h && d(h)) } return (/input|select|textarea|button|object/.test(e) ? !b.disabled : "a" == e ? b.href || c : c) && d(b) } function d(b) { return !a(b).parents().andSelf().filter(function () { return a.curCSS(this, "visibility") === "hidden" || a.expr.filters.hidden(this) }).length } a.ui = a.ui || {}; if (a.ui.version) return; a.extend(a.ui, { version: "1.8.21", keyCode: { ALT: 18, BACKSPACE: 8, CAPS_LOCK: 20, COMMA: 188, COMMAND: 91, COMMAND_LEFT: 91, COMMAND_RIGHT: 93, CONTROL: 17, DELETE: 46, DOWN: 40, END: 35, ENTER: 13, ESCAPE: 27, HOME: 36, INSERT: 45, LEFT: 37, MENU: 93, NUMPAD_ADD: 107, NUMPAD_DECIMAL: 110, NUMPAD_DIVIDE: 111, NUMPAD_ENTER: 108, NUMPAD_MULTIPLY: 106, NUMPAD_SUBTRACT: 109, PAGE_DOWN: 34, PAGE_UP: 33, PERIOD: 190, RIGHT: 39, SHIFT: 16, SPACE: 32, TAB: 9, UP: 38, WINDOWS: 91 } }), a.fn.extend({ propAttr: a.fn.prop || a.fn.attr, _focus: a.fn.focus, focus: function (b, c) { return typeof b == "number" ? this.each(function () { var d = this; setTimeout(function () { a(d).focus(), c && c.call(d) }, b) }) : this._focus.apply(this, arguments) }, scrollParent: function () { var b; return a.browser.msie && /(static|relative)/.test(this.css("position")) || /absolute/.test(this.css("position")) ? b = this.parents().filter(function () { return /(relative|absolute|fixed)/.test(a.curCSS(this, "position", 1)) && /(auto|scroll)/.test(a.curCSS(this, "overflow", 1) + a.curCSS(this, "overflow-y", 1) + a.curCSS(this, "overflow-x", 1)) }).eq(0) : b = this.parents().filter(function () { return /(auto|scroll)/.test(a.curCSS(this, "overflow", 1) + a.curCSS(this, "overflow-y", 1) + a.curCSS(this, "overflow-x", 1)) }).eq(0), /fixed/.test(this.css("position")) || !b.length ? a(document) : b }, zIndex: function (c) { if (c !== b) return this.css("zIndex", c); if (this.length) { var d = a(this[0]), e, f; while (d.length && d[0] !== document) { e = d.css("position"); if (e === "absolute" || e === "relative" || e === "fixed") { f = parseInt(d.css("zIndex"), 10); if (!isNaN(f) && f !== 0) return f } d = d.parent() } } return 0 }, disableSelection: function () { return this.bind((a.support.selectstart ? "selectstart" : "mousedown") + ".ui-disableSelection", function (a) { a.preventDefault() }) }, enableSelection: function () { return this.unbind(".ui-disableSelection") } }), a.each(["Width", "Height"], function (c, d) { function h(b, c, d, f) { return a.each(e, function () { c -= parseFloat(a.curCSS(b, "padding" + this, !0)) || 0, d && (c -= parseFloat(a.curCSS(b, "border" + this + "Width", !0)) || 0), f && (c -= parseFloat(a.curCSS(b, "margin" + this, !0)) || 0) }), c } var e = d === "Width" ? ["Left", "Right"] : ["Top", "Bottom"], f = d.toLowerCase(), g = { innerWidth: a.fn.innerWidth, innerHeight: a.fn.innerHeight, outerWidth: a.fn.outerWidth, outerHeight: a.fn.outerHeight }; a.fn["inner" + d] = function (c) { return c === b ? g["inner" + d].call(this) : this.each(function () { a(this).css(f, h(this, c) + "px") }) }, a.fn["outer" + d] = function (b, c) { return typeof b != "number" ? g["outer" + d].call(this, b) : this.each(function () { a(this).css(f, h(this, b, !0, c) + "px") }) } }), a.extend(a.expr[":"], { data: function (b, c, d) { return !!a.data(b, d[3]) }, focusable: function (b) { return c(b, !isNaN(a.attr(b, "tabindex"))) }, tabbable: function (b) { var d = a.attr(b, "tabindex"), e = isNaN(d); return (e || d >= 0) && c(b, !e) } }), a(function () { var b = document.body, c = b.appendChild(c = document.createElement("div")); c.offsetHeight, a.extend(c.style, { minHeight: "100px", height: "auto", padding: 0, borderWidth: 0 }), a.support.minHeight = c.offsetHeight === 100, a.support.selectstart = "onselectstart" in c, b.removeChild(c).style.display = "none" }), a.extend(a.ui, { plugin: { add: function (b, c, d) { var e = a.ui[b].prototype; for (var f in d) e.plugins[f] = e.plugins[f] || [], e.plugins[f].push([c, d[f]]) }, call: function (a, b, c) { var d = a.plugins[b]; if (!d || !a.element[0].parentNode) return; for (var e = 0; e < d.length; e++) a.options[d[e][0]] && d[e][1].apply(a.element, c) } }, contains: function (a, b) { return document.compareDocumentPosition ? a.compareDocumentPosition(b) & 16 : a !== b && a.contains(b) }, hasScroll: function (b, c) { if (a(b).css("overflow") === "hidden") return !1; var d = c && c === "left" ? "scrollLeft" : "scrollTop", e = !1; return b[d] > 0 ? !0 : (b[d] = 1, e = b[d] > 0, b[d] = 0, e) }, isOverAxis: function (a, b, c) { return a > b && a < b + c }, isOver: function (b, c, d, e, f, g) { return a.ui.isOverAxis(b, d, f) && a.ui.isOverAxis(c, e, g) } }) })(jQuery);;/*! jQuery UI - v1.8.21 - 2012-06-05
* https://github.com/jquery/jquery-ui
* Includes: jquery.ui.widget.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function (a, b) { if (a.cleanData) { var c = a.cleanData; a.cleanData = function (b) { for (var d = 0, e; (e = b[d]) != null; d++) try { a(e).triggerHandler("remove") } catch (f) { } c(b) } } else { var d = a.fn.remove; a.fn.remove = function (b, c) { return this.each(function () { return c || (!b || a.filter(b, [this]).length) && a("*", this).add([this]).each(function () { try { a(this).triggerHandler("remove") } catch (b) { } }), d.call(a(this), b, c) }) } } a.widget = function (b, c, d) { var e = b.split(".")[0], f; b = b.split(".")[1], f = e + "-" + b, d || (d = c, c = a.Widget), a.expr[":"][f] = function (c) { return !!a.data(c, b) }, a[e] = a[e] || {}, a[e][b] = function (a, b) { arguments.length && this._createWidget(a, b) }; var g = new c; g.options = a.extend(!0, {}, g.options), a[e][b].prototype = a.extend(!0, g, { namespace: e, widgetName: b, widgetEventPrefix: a[e][b].prototype.widgetEventPrefix || b, widgetBaseClass: f }, d), a.widget.bridge(b, a[e][b]) }, a.widget.bridge = function (c, d) { a.fn[c] = function (e) { var f = typeof e == "string", g = Array.prototype.slice.call(arguments, 1), h = this; return e = !f && g.length ? a.extend.apply(null, [!0, e].concat(g)) : e, f && e.charAt(0) === "_" ? h : (f ? this.each(function () { var d = a.data(this, c), f = d && a.isFunction(d[e]) ? d[e].apply(d, g) : d; if (f !== d && f !== b) return h = f, !1 }) : this.each(function () { var b = a.data(this, c); b ? b.option(e || {})._init() : a.data(this, c, new d(e, this)) }), h) } }, a.Widget = function (a, b) { arguments.length && this._createWidget(a, b) }, a.Widget.prototype = { widgetName: "widget", widgetEventPrefix: "", options: { disabled: !1 }, _createWidget: function (b, c) { a.data(c, this.widgetName, this), this.element = a(c), this.options = a.extend(!0, {}, this.options, this._getCreateOptions(), b); var d = this; this.element.bind("remove." + this.widgetName, function () { d.destroy() }), this._create(), this._trigger("create"), this._init() }, _getCreateOptions: function () { return a.metadata && a.metadata.get(this.element[0])[this.widgetName] }, _create: function () { }, _init: function () { }, destroy: function () { this.element.unbind("." + this.widgetName).removeData(this.widgetName), this.widget().unbind("." + this.widgetName).removeAttr("aria-disabled").removeClass(this.widgetBaseClass + "-disabled " + "ui-state-disabled") }, widget: function () { return this.element }, option: function (c, d) { var e = c; if (arguments.length === 0) return a.extend({}, this.options); if (typeof c == "string") { if (d === b) return this.options[c]; e = {}, e[c] = d } return this._setOptions(e), this }, _setOptions: function (b) { var c = this; return a.each(b, function (a, b) { c._setOption(a, b) }), this }, _setOption: function (a, b) { return this.options[a] = b, a === "disabled" && this.widget()[b ? "addClass" : "removeClass"](this.widgetBaseClass + "-disabled" + " " + "ui-state-disabled").attr("aria-disabled", b), this }, enable: function () { return this._setOption("disabled", !1) }, disable: function () { return this._setOption("disabled", !0) }, _trigger: function (b, c, d) { var e, f, g = this.options[b]; d = d || {}, c = a.Event(c), c.type = (b === this.widgetEventPrefix ? b : this.widgetEventPrefix + b).toLowerCase(), c.target = this.element[0], f = c.originalEvent; if (f) for (e in f) e in c || (c[e] = f[e]); return this.element.trigger(c, d), !(a.isFunction(g) && g.call(this.element[0], c, d) === !1 || c.isDefaultPrevented()) } } })(jQuery);;/*! jQuery UI - v1.8.21 - 2012-06-05
* https://github.com/jquery/jquery-ui
* Includes: jquery.ui.mouse.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function (a, b) { var c = !1; a(document).mouseup(function (a) { c = !1 }), a.widget("ui.mouse", { options: { cancel: ":input,option", distance: 1, delay: 0 }, _mouseInit: function () { var b = this; this.element.bind("mousedown." + this.widgetName, function (a) { return b._mouseDown(a) }).bind("click." + this.widgetName, function (c) { if (!0 === a.data(c.target, b.widgetName + ".preventClickEvent")) return a.removeData(c.target, b.widgetName + ".preventClickEvent"), c.stopImmediatePropagation(), !1 }), this.started = !1 }, _mouseDestroy: function () { this.element.unbind("." + this.widgetName), a(document).unbind("mousemove." + this.widgetName, this._mouseMoveDelegate).unbind("mouseup." + this.widgetName, this._mouseUpDelegate) }, _mouseDown: function (b) { if (c) return; this._mouseStarted && this._mouseUp(b), this._mouseDownEvent = b; var d = this, e = b.which == 1, f = typeof this.options.cancel == "string" && b.target.nodeName ? a(b.target).closest(this.options.cancel).length : !1; if (!e || f || !this._mouseCapture(b)) return !0; this.mouseDelayMet = !this.options.delay, this.mouseDelayMet || (this._mouseDelayTimer = setTimeout(function () { d.mouseDelayMet = !0 }, this.options.delay)); if (this._mouseDistanceMet(b) && this._mouseDelayMet(b)) { this._mouseStarted = this._mouseStart(b) !== !1; if (!this._mouseStarted) return b.preventDefault(), !0 } return !0 === a.data(b.target, this.widgetName + ".preventClickEvent") && a.removeData(b.target, this.widgetName + ".preventClickEvent"), this._mouseMoveDelegate = function (a) { return d._mouseMove(a) }, this._mouseUpDelegate = function (a) { return d._mouseUp(a) }, a(document).bind("mousemove." + this.widgetName, this._mouseMoveDelegate).bind("mouseup." + this.widgetName, this._mouseUpDelegate), b.preventDefault(), c = !0, !0 }, _mouseMove: function (b) { return !a.browser.msie || document.documentMode >= 9 || !!b.button ? this._mouseStarted ? (this._mouseDrag(b), b.preventDefault()) : (this._mouseDistanceMet(b) && this._mouseDelayMet(b) && (this._mouseStarted = this._mouseStart(this._mouseDownEvent, b) !== !1, this._mouseStarted ? this._mouseDrag(b) : this._mouseUp(b)), !this._mouseStarted) : this._mouseUp(b) }, _mouseUp: function (b) { return a(document).unbind("mousemove." + this.widgetName, this._mouseMoveDelegate).unbind("mouseup." + this.widgetName, this._mouseUpDelegate), this._mouseStarted && (this._mouseStarted = !1, b.target == this._mouseDownEvent.target && a.data(b.target, this.widgetName + ".preventClickEvent", !0), this._mouseStop(b)), !1 }, _mouseDistanceMet: function (a) { return Math.max(Math.abs(this._mouseDownEvent.pageX - a.pageX), Math.abs(this._mouseDownEvent.pageY - a.pageY)) >= this.options.distance }, _mouseDelayMet: function (a) { return this.mouseDelayMet }, _mouseStart: function (a) { }, _mouseDrag: function (a) { }, _mouseStop: function (a) { }, _mouseCapture: function (a) { return !0 } }) })(jQuery);;/*! jQuery UI - v1.8.21 - 2012-06-05
* https://github.com/jquery/jquery-ui
* Includes: jquery.ui.position.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function (a, b) { a.ui = a.ui || {}; var c = /left|center|right/, d = /top|center|bottom/, e = "center", f = {}, g = a.fn.position, h = a.fn.offset; a.fn.position = function (b) { if (!b || !b.of) return g.apply(this, arguments); b = a.extend({}, b); var h = a(b.of), i = h[0], j = (b.collision || "flip").split(" "), k = b.offset ? b.offset.split(" ") : [0, 0], l, m, n; return i.nodeType === 9 ? (l = h.width(), m = h.height(), n = { top: 0, left: 0 }) : i.setTimeout ? (l = h.width(), m = h.height(), n = { top: h.scrollTop(), left: h.scrollLeft() }) : i.preventDefault ? (b.at = "left top", l = m = 0, n = { top: b.of.pageY, left: b.of.pageX }) : (l = h.outerWidth(), m = h.outerHeight(), n = h.offset()), a.each(["my", "at"], function () { var a = (b[this] || "").split(" "); a.length === 1 && (a = c.test(a[0]) ? a.concat([e]) : d.test(a[0]) ? [e].concat(a) : [e, e]), a[0] = c.test(a[0]) ? a[0] : e, a[1] = d.test(a[1]) ? a[1] : e, b[this] = a }), j.length === 1 && (j[1] = j[0]), k[0] = parseInt(k[0], 10) || 0, k.length === 1 && (k[1] = k[0]), k[1] = parseInt(k[1], 10) || 0, b.at[0] === "right" ? n.left += l : b.at[0] === e && (n.left += l / 2), b.at[1] === "bottom" ? n.top += m : b.at[1] === e && (n.top += m / 2), n.left += k[0], n.top += k[1], this.each(function () { var c = a(this), d = c.outerWidth(), g = c.outerHeight(), h = parseInt(a.curCSS(this, "marginLeft", !0)) || 0, i = parseInt(a.curCSS(this, "marginTop", !0)) || 0, o = d + h + (parseInt(a.curCSS(this, "marginRight", !0)) || 0), p = g + i + (parseInt(a.curCSS(this, "marginBottom", !0)) || 0), q = a.extend({}, n), r; b.my[0] === "right" ? q.left -= d : b.my[0] === e && (q.left -= d / 2), b.my[1] === "bottom" ? q.top -= g : b.my[1] === e && (q.top -= g / 2), f.fractions || (q.left = Math.round(q.left), q.top = Math.round(q.top)), r = { left: q.left - h, top: q.top - i }, a.each(["left", "top"], function (c, e) { a.ui.position[j[c]] && a.ui.position[j[c]][e](q, { targetWidth: l, targetHeight: m, elemWidth: d, elemHeight: g, collisionPosition: r, collisionWidth: o, collisionHeight: p, offset: k, my: b.my, at: b.at }) }), a.fn.bgiframe && c.bgiframe(), c.offset(a.extend(q, { using: b.using })) }) }, a.ui.position = { fit: { left: function (b, c) { var d = a(window), e = c.collisionPosition.left + c.collisionWidth - d.width() - d.scrollLeft(); b.left = e > 0 ? b.left - e : Math.max(b.left - c.collisionPosition.left, b.left) }, top: function (b, c) { var d = a(window), e = c.collisionPosition.top + c.collisionHeight - d.height() - d.scrollTop(); b.top = e > 0 ? b.top - e : Math.max(b.top - c.collisionPosition.top, b.top) } }, flip: { left: function (b, c) { if (c.at[0] === e) return; var d = a(window), f = c.collisionPosition.left + c.collisionWidth - d.width() - d.scrollLeft(), g = c.my[0] === "left" ? -c.elemWidth : c.my[0] === "right" ? c.elemWidth : 0, h = c.at[0] === "left" ? c.targetWidth : -c.targetWidth, i = -2 * c.offset[0]; b.left += c.collisionPosition.left < 0 ? g + h + i : f > 0 ? g + h + i : 0 }, top: function (b, c) { if (c.at[1] === e) return; var d = a(window), f = c.collisionPosition.top + c.collisionHeight - d.height() - d.scrollTop(), g = c.my[1] === "top" ? -c.elemHeight : c.my[1] === "bottom" ? c.elemHeight : 0, h = c.at[1] === "top" ? c.targetHeight : -c.targetHeight, i = -2 * c.offset[1]; b.top += c.collisionPosition.top < 0 ? g + h + i : f > 0 ? g + h + i : 0 } } }, a.offset.setOffset || (a.offset.setOffset = function (b, c) { /static/.test(a.curCSS(b, "position")) && (b.style.position = "relative"); var d = a(b), e = d.offset(), f = parseInt(a.curCSS(b, "top", !0), 10) || 0, g = parseInt(a.curCSS(b, "left", !0), 10) || 0, h = { top: c.top - e.top + f, left: c.left - e.left + g }; "using" in c ? c.using.call(b, h) : d.css(h) }, a.fn.offset = function (b) { var c = this[0]; return !c || !c.ownerDocument ? null : b ? a.isFunction(b) ? this.each(function (c) { a(this).offset(b.call(this, c, a(this).offset())) }) : this.each(function () { a.offset.setOffset(this, b) }) : h.call(this) }), function () { var b = document.getElementsByTagName("body")[0], c = document.createElement("div"), d, e, g, h, i; d = document.createElement(b ? "div" : "body"), g = { visibility: "hidden", width: 0, height: 0, border: 0, margin: 0, background: "none" }, b && a.extend(g, { position: "absolute", left: "-1000px", top: "-1000px" }); for (var j in g) d.style[j] = g[j]; d.appendChild(c), e = b || document.documentElement, e.insertBefore(d, e.firstChild), c.style.cssText = "position: absolute; left: 10.7432222px; top: 10.432325px; height: 30px; width: 201px;", h = a(c).offset(function (a, b) { return b }).offset(), d.innerHTML = "", e.removeChild(d), i = h.top + h.left + (b ? 2e3 : 0), f.fractions = i > 21 && i < 22 }() })(jQuery);;/*! jQuery UI - v1.8.21 - 2012-06-05
* https://github.com/jquery/jquery-ui
* Includes: jquery.ui.draggable.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function (a, b) { a.widget("ui.draggable", a.ui.mouse, { widgetEventPrefix: "drag", options: { addClasses: !0, appendTo: "parent", axis: !1, connectToSortable: !1, containment: !1, cursor: "auto", cursorAt: !1, grid: !1, handle: !1, helper: "original", iframeFix: !1, opacity: !1, refreshPositions: !1, revert: !1, revertDuration: 500, scope: "default", scroll: !0, scrollSensitivity: 20, scrollSpeed: 20, snap: !1, snapMode: "both", snapTolerance: 20, stack: !1, zIndex: !1 }, _create: function () { this.options.helper == "original" && !/^(?:r|a|f)/.test(this.element.css("position")) && (this.element[0].style.position = "relative"), this.options.addClasses && this.element.addClass("ui-draggable"), this.options.disabled && this.element.addClass("ui-draggable-disabled"), this._mouseInit() }, destroy: function () { if (!this.element.data("draggable")) return; return this.element.removeData("draggable").unbind(".draggable").removeClass("ui-draggable ui-draggable-dragging ui-draggable-disabled"), this._mouseDestroy(), this }, _mouseCapture: function (b) { var c = this.options; return this.helper || c.disabled || a(b.target).is(".ui-resizable-handle") ? !1 : (this.handle = this._getHandle(b), this.handle ? (c.iframeFix && a(c.iframeFix === !0 ? "iframe" : c.iframeFix).each(function () { a('<div class="ui-draggable-iframeFix" style="background: #fff;"></div>').css({ width: this.offsetWidth + "px", height: this.offsetHeight + "px", position: "absolute", opacity: "0.001", zIndex: 1e3 }).css(a(this).offset()).appendTo("body") }), !0) : !1) }, _mouseStart: function (b) { var c = this.options; return this.helper = this._createHelper(b), this.helper.addClass("ui-draggable-dragging"), this._cacheHelperProportions(), a.ui.ddmanager && (a.ui.ddmanager.current = this), this._cacheMargins(), this.cssPosition = this.helper.css("position"), this.scrollParent = this.helper.scrollParent(), this.offset = this.positionAbs = this.element.offset(), this.offset = { top: this.offset.top - this.margins.top, left: this.offset.left - this.margins.left }, a.extend(this.offset, { click: { left: b.pageX - this.offset.left, top: b.pageY - this.offset.top }, parent: this._getParentOffset(), relative: this._getRelativeOffset() }), this.originalPosition = this.position = this._generatePosition(b), this.originalPageX = b.pageX, this.originalPageY = b.pageY, c.cursorAt && this._adjustOffsetFromHelper(c.cursorAt), c.containment && this._setContainment(), this._trigger("start", b) === !1 ? (this._clear(), !1) : (this._cacheHelperProportions(), a.ui.ddmanager && !c.dropBehaviour && a.ui.ddmanager.prepareOffsets(this, b), this._mouseDrag(b, !0), a.ui.ddmanager && a.ui.ddmanager.dragStart(this, b), !0) }, _mouseDrag: function (b, c) { this.position = this._generatePosition(b), this.positionAbs = this._convertPositionTo("absolute"); if (!c) { var d = this._uiHash(); if (this._trigger("drag", b, d) === !1) return this._mouseUp({}), !1; this.position = d.position } if (!this.options.axis || this.options.axis != "y") this.helper[0].style.left = this.position.left + "px"; if (!this.options.axis || this.options.axis != "x") this.helper[0].style.top = this.position.top + "px"; return a.ui.ddmanager && a.ui.ddmanager.drag(this, b), !1 }, _mouseStop: function (b) { var c = !1; a.ui.ddmanager && !this.options.dropBehaviour && (c = a.ui.ddmanager.drop(this, b)), this.dropped && (c = this.dropped, this.dropped = !1); var d = this.element[0], e = !1; while (d && (d = d.parentNode)) d == document && (e = !0); if (!e && this.options.helper === "original") return !1; if (this.options.revert == "invalid" && !c || this.options.revert == "valid" && c || this.options.revert === !0 || a.isFunction(this.options.revert) && this.options.revert.call(this.element, c)) { var f = this; a(this.helper).animate(this.originalPosition, parseInt(this.options.revertDuration, 10), function () { f._trigger("stop", b) !== !1 && f._clear() }) } else this._trigger("stop", b) !== !1 && this._clear(); return !1 }, _mouseUp: function (b) { return this.options.iframeFix === !0 && a("div.ui-draggable-iframeFix").each(function () { this.parentNode.removeChild(this) }), a.ui.ddmanager && a.ui.ddmanager.dragStop(this, b), a.ui.mouse.prototype._mouseUp.call(this, b) }, cancel: function () { return this.helper.is(".ui-draggable-dragging") ? this._mouseUp({}) : this._clear(), this }, _getHandle: function (b) { var c = !this.options.handle || !a(this.options.handle, this.element).length ? !0 : !1; return a(this.options.handle, this.element).find("*").andSelf().each(function () { this == b.target && (c = !0) }), c }, _createHelper: function (b) { var c = this.options, d = a.isFunction(c.helper) ? a(c.helper.apply(this.element[0], [b])) : c.helper == "clone" ? this.element.clone().removeAttr("id") : this.element; return d.parents("body").length || d.appendTo(c.appendTo == "parent" ? this.element[0].parentNode : c.appendTo), d[0] != this.element[0] && !/(fixed|absolute)/.test(d.css("position")) && d.css("position", "absolute"), d }, _adjustOffsetFromHelper: function (b) { typeof b == "string" && (b = b.split(" ")), a.isArray(b) && (b = { left: +b[0], top: +b[1] || 0 }), "left" in b && (this.offset.click.left = b.left + this.margins.left), "right" in b && (this.offset.click.left = this.helperProportions.width - b.right + this.margins.left), "top" in b && (this.offset.click.top = b.top + this.margins.top), "bottom" in b && (this.offset.click.top = this.helperProportions.height - b.bottom + this.margins.top) }, _getParentOffset: function () { this.offsetParent = this.helper.offsetParent(); var b = this.offsetParent.offset(); this.cssPosition == "absolute" && this.scrollParent[0] != document && a.ui.contains(this.scrollParent[0], this.offsetParent[0]) && (b.left += this.scrollParent.scrollLeft(), b.top += this.scrollParent.scrollTop()); if (this.offsetParent[0] == document.body || this.offsetParent[0].tagName && this.offsetParent[0].tagName.toLowerCase() == "html" && a.browser.msie) b = { top: 0, left: 0 }; return { top: b.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0), left: b.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0) } }, _getRelativeOffset: function () { if (this.cssPosition == "relative") { var a = this.element.position(); return { top: a.top - (parseInt(this.helper.css("top"), 10) || 0) + this.scrollParent.scrollTop(), left: a.left - (parseInt(this.helper.css("left"), 10) || 0) + this.scrollParent.scrollLeft() } } return { top: 0, left: 0 } }, _cacheMargins: function () { this.margins = { left: parseInt(this.element.css("marginLeft"), 10) || 0, top: parseInt(this.element.css("marginTop"), 10) || 0, right: parseInt(this.element.css("marginRight"), 10) || 0, bottom: parseInt(this.element.css("marginBottom"), 10) || 0 } }, _cacheHelperProportions: function () { this.helperProportions = { width: this.helper.outerWidth(), height: this.helper.outerHeight() } }, _setContainment: function () { var b = this.options; b.containment == "parent" && (b.containment = this.helper[0].parentNode); if (b.containment == "document" || b.containment == "window") this.containment = [b.containment == "document" ? 0 : a(window).scrollLeft() - this.offset.relative.left - this.offset.parent.left, b.containment == "document" ? 0 : a(window).scrollTop() - this.offset.relative.top - this.offset.parent.top, (b.containment == "document" ? 0 : a(window).scrollLeft()) + a(b.containment == "document" ? document : window).width() - this.helperProportions.width - this.margins.left, (b.containment == "document" ? 0 : a(window).scrollTop()) + (a(b.containment == "document" ? document : window).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top]; if (!/^(document|window|parent)$/.test(b.containment) && b.containment.constructor != Array) { var c = a(b.containment), d = c[0]; if (!d) return; var e = c.offset(), f = a(d).css("overflow") != "hidden"; this.containment = [(parseInt(a(d).css("borderLeftWidth"), 10) || 0) + (parseInt(a(d).css("paddingLeft"), 10) || 0), (parseInt(a(d).css("borderTopWidth"), 10) || 0) + (parseInt(a(d).css("paddingTop"), 10) || 0), (f ? Math.max(d.scrollWidth, d.offsetWidth) : d.offsetWidth) - (parseInt(a(d).css("borderLeftWidth"), 10) || 0) - (parseInt(a(d).css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left - this.margins.right, (f ? Math.max(d.scrollHeight, d.offsetHeight) : d.offsetHeight) - (parseInt(a(d).css("borderTopWidth"), 10) || 0) - (parseInt(a(d).css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top - this.margins.bottom], this.relative_container = c } else b.containment.constructor == Array && (this.containment = b.containment) }, _convertPositionTo: function (b, c) { c || (c = this.position); var d = b == "absolute" ? 1 : -1, e = this.options, f = this.cssPosition == "absolute" && (this.scrollParent[0] == document || !a.ui.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent, g = /(html|body)/i.test(f[0].tagName); return { top: c.top + this.offset.relative.top * d + this.offset.parent.top * d - (a.browser.safari && a.browser.version < 526 && this.cssPosition == "fixed" ? 0 : (this.cssPosition == "fixed" ? -this.scrollParent.scrollTop() : g ? 0 : f.scrollTop()) * d), left: c.left + this.offset.relative.left * d + this.offset.parent.left * d - (a.browser.safari && a.browser.version < 526 && this.cssPosition == "fixed" ? 0 : (this.cssPosition == "fixed" ? -this.scrollParent.scrollLeft() : g ? 0 : f.scrollLeft()) * d) } }, _generatePosition: function (b) { var c = this.options, d = this.cssPosition == "absolute" && (this.scrollParent[0] == document || !a.ui.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent, e = /(html|body)/i.test(d[0].tagName), f = b.pageX, g = b.pageY; if (this.originalPosition) { var h; if (this.containment) { if (this.relative_container) { var i = this.relative_container.offset(); h = [this.containment[0] + i.left, this.containment[1] + i.top, this.containment[2] + i.left, this.containment[3] + i.top] } else h = this.containment; b.pageX - this.offset.click.left < h[0] && (f = h[0] + this.offset.click.left), b.pageY - this.offset.click.top < h[1] && (g = h[1] + this.offset.click.top), b.pageX - this.offset.click.left > h[2] && (f = h[2] + this.offset.click.left), b.pageY - this.offset.click.top > h[3] && (g = h[3] + this.offset.click.top) } if (c.grid) { var j = c.grid[1] ? this.originalPageY + Math.round((g - this.originalPageY) / c.grid[1]) * c.grid[1] : this.originalPageY; g = h ? j - this.offset.click.top < h[1] || j - this.offset.click.top > h[3] ? j - this.offset.click.top < h[1] ? j + c.grid[1] : j - c.grid[1] : j : j; var k = c.grid[0] ? this.originalPageX + Math.round((f - this.originalPageX) / c.grid[0]) * c.grid[0] : this.originalPageX; f = h ? k - this.offset.click.left < h[0] || k - this.offset.click.left > h[2] ? k - this.offset.click.left < h[0] ? k + c.grid[0] : k - c.grid[0] : k : k } } return { top: g - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + (a.browser.safari && a.browser.version < 526 && this.cssPosition == "fixed" ? 0 : this.cssPosition == "fixed" ? -this.scrollParent.scrollTop() : e ? 0 : d.scrollTop()), left: f - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + (a.browser.safari && a.browser.version < 526 && this.cssPosition == "fixed" ? 0 : this.cssPosition == "fixed" ? -this.scrollParent.scrollLeft() : e ? 0 : d.scrollLeft()) } }, _clear: function () { this.helper.removeClass("ui-draggable-dragging"), this.helper[0] != this.element[0] && !this.cancelHelperRemoval && this.helper.remove(), this.helper = null, this.cancelHelperRemoval = !1 }, _trigger: function (b, c, d) { return d = d || this._uiHash(), a.ui.plugin.call(this, b, [c, d]), b == "drag" && (this.positionAbs = this._convertPositionTo("absolute")), a.Widget.prototype._trigger.call(this, b, c, d) }, plugins: {}, _uiHash: function (a) { return { helper: this.helper, position: this.position, originalPosition: this.originalPosition, offset: this.positionAbs } } }), a.extend(a.ui.draggable, { version: "1.8.21" }), a.ui.plugin.add("draggable", "connectToSortable", { start: function (b, c) { var d = a(this).data("draggable"), e = d.options, f = a.extend({}, c, { item: d.element }); d.sortables = [], a(e.connectToSortable).each(function () { var c = a.data(this, "sortable"); c && !c.options.disabled && (d.sortables.push({ instance: c, shouldRevert: c.options.revert }), c.refreshPositions(), c._trigger("activate", b, f)) }) }, stop: function (b, c) { var d = a(this).data("draggable"), e = a.extend({}, c, { item: d.element }); a.each(d.sortables, function () { this.instance.isOver ? (this.instance.isOver = 0, d.cancelHelperRemoval = !0, this.instance.cancelHelperRemoval = !1, this.shouldRevert && (this.instance.options.revert = !0), this.instance._mouseStop(b), this.instance.options.helper = this.instance.options._helper, d.options.helper == "original" && this.instance.currentItem.css({ top: "auto", left: "auto" })) : (this.instance.cancelHelperRemoval = !1, this.instance._trigger("deactivate", b, e)) }) }, drag: function (b, c) { var d = a(this).data("draggable"), e = this, f = function (b) { var c = this.offset.click.top, d = this.offset.click.left, e = this.positionAbs.top, f = this.positionAbs.left, g = b.height, h = b.width, i = b.top, j = b.left; return a.ui.isOver(e + c, f + d, i, j, g, h) }; a.each(d.sortables, function (f) { this.instance.positionAbs = d.positionAbs, this.instance.helperProportions = d.helperProportions, this.instance.offset.click = d.offset.click, this.instance._intersectsWith(this.instance.containerCache) ? (this.instance.isOver || (this.instance.isOver = 1, this.instance.currentItem = a(e).clone().removeAttr("id").appendTo(this.instance.element).data("sortable-item", !0), this.instance.options._helper = this.instance.options.helper, this.instance.options.helper = function () { return c.helper[0] }, b.target = this.instance.currentItem[0], this.instance._mouseCapture(b, !0), this.instance._mouseStart(b, !0, !0), this.instance.offset.click.top = d.offset.click.top, this.instance.offset.click.left = d.offset.click.left, this.instance.offset.parent.left -= d.offset.parent.left - this.instance.offset.parent.left, this.instance.offset.parent.top -= d.offset.parent.top - this.instance.offset.parent.top, d._trigger("toSortable", b), d.dropped = this.instance.element, d.currentItem = d.element, this.instance.fromOutside = d), this.instance.currentItem && this.instance._mouseDrag(b)) : this.instance.isOver && (this.instance.isOver = 0, this.instance.cancelHelperRemoval = !0, this.instance.options.revert = !1, this.instance._trigger("out", b, this.instance._uiHash(this.instance)), this.instance._mouseStop(b, !0), this.instance.options.helper = this.instance.options._helper, this.instance.currentItem.remove(), this.instance.placeholder && this.instance.placeholder.remove(), d._trigger("fromSortable", b), d.dropped = !1) }) } }), a.ui.plugin.add("draggable", "cursor", { start: function (b, c) { var d = a("body"), e = a(this).data("draggable").options; d.css("cursor") && (e._cursor = d.css("cursor")), d.css("cursor", e.cursor) }, stop: function (b, c) { var d = a(this).data("draggable").options; d._cursor && a("body").css("cursor", d._cursor) } }), a.ui.plugin.add("draggable", "opacity", { start: function (b, c) { var d = a(c.helper), e = a(this).data("draggable").options; d.css("opacity") && (e._opacity = d.css("opacity")), d.css("opacity", e.opacity) }, stop: function (b, c) { var d = a(this).data("draggable").options; d._opacity && a(c.helper).css("opacity", d._opacity) } }), a.ui.plugin.add("draggable", "scroll", { start: function (b, c) { var d = a(this).data("draggable"); d.scrollParent[0] != document && d.scrollParent[0].tagName != "HTML" && (d.overflowOffset = d.scrollParent.offset()) }, drag: function (b, c) { var d = a(this).data("draggable"), e = d.options, f = !1; if (d.scrollParent[0] != document && d.scrollParent[0].tagName != "HTML") { if (!e.axis || e.axis != "x") d.overflowOffset.top + d.scrollParent[0].offsetHeight - b.pageY < e.scrollSensitivity ? d.scrollParent[0].scrollTop = f = d.scrollParent[0].scrollTop + e.scrollSpeed : b.pageY - d.overflowOffset.top < e.scrollSensitivity && (d.scrollParent[0].scrollTop = f = d.scrollParent[0].scrollTop - e.scrollSpeed); if (!e.axis || e.axis != "y") d.overflowOffset.left + d.scrollParent[0].offsetWidth - b.pageX < e.scrollSensitivity ? d.scrollParent[0].scrollLeft = f = d.scrollParent[0].scrollLeft + e.scrollSpeed : b.pageX - d.overflowOffset.left < e.scrollSensitivity && (d.scrollParent[0].scrollLeft = f = d.scrollParent[0].scrollLeft - e.scrollSpeed) } else { if (!e.axis || e.axis != "x") b.pageY - a(document).scrollTop() < e.scrollSensitivity ? f = a(document).scrollTop(a(document).scrollTop() - e.scrollSpeed) : a(window).height() - (b.pageY - a(document).scrollTop()) < e.scrollSensitivity && (f = a(document).scrollTop(a(document).scrollTop() + e.scrollSpeed)); if (!e.axis || e.axis != "y") b.pageX - a(document).scrollLeft() < e.scrollSensitivity ? f = a(document).scrollLeft(a(document).scrollLeft() - e.scrollSpeed) : a(window).width() - (b.pageX - a(document).scrollLeft()) < e.scrollSensitivity && (f = a(document).scrollLeft(a(document).scrollLeft() + e.scrollSpeed)) } f !== !1 && a.ui.ddmanager && !e.dropBehaviour && a.ui.ddmanager.prepareOffsets(d, b) } }), a.ui.plugin.add("draggable", "snap", { start: function (b, c) { var d = a(this).data("draggable"), e = d.options; d.snapElements = [], a(e.snap.constructor != String ? e.snap.items || ":data(draggable)" : e.snap).each(function () { var b = a(this), c = b.offset(); this != d.element[0] && d.snapElements.push({ item: this, width: b.outerWidth(), height: b.outerHeight(), top: c.top, left: c.left }) }) }, drag: function (b, c) { var d = a(this).data("draggable"), e = d.options, f = e.snapTolerance, g = c.offset.left, h = g + d.helperProportions.width, i = c.offset.top, j = i + d.helperProportions.height; for (var k = d.snapElements.length - 1; k >= 0; k--) { var l = d.snapElements[k].left, m = l + d.snapElements[k].width, n = d.snapElements[k].top, o = n + d.snapElements[k].height; if (!(l - f < g && g < m + f && n - f < i && i < o + f || l - f < g && g < m + f && n - f < j && j < o + f || l - f < h && h < m + f && n - f < i && i < o + f || l - f < h && h < m + f && n - f < j && j < o + f)) { d.snapElements[k].snapping && d.options.snap.release && d.options.snap.release.call(d.element, b, a.extend(d._uiHash(), { snapItem: d.snapElements[k].item })), d.snapElements[k].snapping = !1; continue } if (e.snapMode != "inner") { var p = Math.abs(n - j) <= f, q = Math.abs(o - i) <= f, r = Math.abs(l - h) <= f, s = Math.abs(m - g) <= f; p && (c.position.top = d._convertPositionTo("relative", { top: n - d.helperProportions.height, left: 0 }).top - d.margins.top), q && (c.position.top = d._convertPositionTo("relative", { top: o, left: 0 }).top - d.margins.top), r && (c.position.left = d._convertPositionTo("relative", { top: 0, left: l - d.helperProportions.width }).left - d.margins.left), s && (c.position.left = d._convertPositionTo("relative", { top: 0, left: m }).left - d.margins.left) } var t = p || q || r || s; if (e.snapMode != "outer") { var p = Math.abs(n - i) <= f, q = Math.abs(o - j) <= f, r = Math.abs(l - g) <= f, s = Math.abs(m - h) <= f; p && (c.position.top = d._convertPositionTo("relative", { top: n, left: 0 }).top - d.margins.top), q && (c.position.top = d._convertPositionTo("relative", { top: o - d.helperProportions.height, left: 0 }).top - d.margins.top), r && (c.position.left = d._convertPositionTo("relative", { top: 0, left: l }).left - d.margins.left), s && (c.position.left = d._convertPositionTo("relative", { top: 0, left: m - d.helperProportions.width }).left - d.margins.left) } !d.snapElements[k].snapping && (p || q || r || s || t) && d.options.snap.snap && d.options.snap.snap.call(d.element, b, a.extend(d._uiHash(), { snapItem: d.snapElements[k].item })), d.snapElements[k].snapping = p || q || r || s || t } } }), a.ui.plugin.add("draggable", "stack", { start: function (b, c) { var d = a(this).data("draggable").options, e = a.makeArray(a(d.stack)).sort(function (b, c) { return (parseInt(a(b).css("zIndex"), 10) || 0) - (parseInt(a(c).css("zIndex"), 10) || 0) }); if (!e.length) return; var f = parseInt(e[0].style.zIndex) || 0; a(e).each(function (a) { this.style.zIndex = f + a }), this[0].style.zIndex = f + e.length } }), a.ui.plugin.add("draggable", "zIndex", { start: function (b, c) { var d = a(c.helper), e = a(this).data("draggable").options; d.css("zIndex") && (e._zIndex = d.css("zIndex")), d.css("zIndex", e.zIndex) }, stop: function (b, c) { var d = a(this).data("draggable").options; d._zIndex && a(c.helper).css("zIndex", d._zIndex) } }) })(jQuery);;/*! jQuery UI - v1.8.21 - 2012-06-05
* https://github.com/jquery/jquery-ui
* Includes: jquery.ui.droppable.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function (a, b) { a.widget("ui.droppable", { widgetEventPrefix: "drop", options: { accept: "*", activeClass: !1, addClasses: !0, greedy: !1, hoverClass: !1, scope: "default", tolerance: "intersect" }, _create: function () { var b = this.options, c = b.accept; this.isover = 0, this.isout = 1, this.accept = a.isFunction(c) ? c : function (a) { return a.is(c) }, this.proportions = { width: this.element[0].offsetWidth, height: this.element[0].offsetHeight }, a.ui.ddmanager.droppables[b.scope] = a.ui.ddmanager.droppables[b.scope] || [], a.ui.ddmanager.droppables[b.scope].push(this), b.addClasses && this.element.addClass("ui-droppable") }, destroy: function () { var b = a.ui.ddmanager.droppables[this.options.scope]; for (var c = 0; c < b.length; c++) b[c] == this && b.splice(c, 1); return this.element.removeClass("ui-droppable ui-droppable-disabled").removeData("droppable").unbind(".droppable"), this }, _setOption: function (b, c) { b == "accept" && (this.accept = a.isFunction(c) ? c : function (a) { return a.is(c) }), a.Widget.prototype._setOption.apply(this, arguments) }, _activate: function (b) { var c = a.ui.ddmanager.current; this.options.activeClass && this.element.addClass(this.options.activeClass), c && this._trigger("activate", b, this.ui(c)) }, _deactivate: function (b) { var c = a.ui.ddmanager.current; this.options.activeClass && this.element.removeClass(this.options.activeClass), c && this._trigger("deactivate", b, this.ui(c)) }, _over: function (b) { var c = a.ui.ddmanager.current; if (!c || (c.currentItem || c.element)[0] == this.element[0]) return; this.accept.call(this.element[0], c.currentItem || c.element) && (this.options.hoverClass && this.element.addClass(this.options.hoverClass), this._trigger("over", b, this.ui(c))) }, _out: function (b) { var c = a.ui.ddmanager.current; if (!c || (c.currentItem || c.element)[0] == this.element[0]) return; this.accept.call(this.element[0], c.currentItem || c.element) && (this.options.hoverClass && this.element.removeClass(this.options.hoverClass), this._trigger("out", b, this.ui(c))) }, _drop: function (b, c) { var d = c || a.ui.ddmanager.current; if (!d || (d.currentItem || d.element)[0] == this.element[0]) return !1; var e = !1; return this.element.find(":data(droppable)").not(".ui-draggable-dragging").each(function () { var b = a.data(this, "droppable"); if (b.options.greedy && !b.options.disabled && b.options.scope == d.options.scope && b.accept.call(b.element[0], d.currentItem || d.element) && a.ui.intersect(d, a.extend(b, { offset: b.element.offset() }), b.options.tolerance)) return e = !0, !1 }), e ? !1 : this.accept.call(this.element[0], d.currentItem || d.element) ? (this.options.activeClass && this.element.removeClass(this.options.activeClass), this.options.hoverClass && this.element.removeClass(this.options.hoverClass), this._trigger("drop", b, this.ui(d)), this.element) : !1 }, ui: function (a) { return { draggable: a.currentItem || a.element, helper: a.helper, position: a.position, offset: a.positionAbs } } }), a.extend(a.ui.droppable, { version: "1.8.21" }), a.ui.intersect = function (b, c, d) { if (!c.offset) return !1; var e = (b.positionAbs || b.position.absolute).left, f = e + b.helperProportions.width, g = (b.positionAbs || b.position.absolute).top, h = g + b.helperProportions.height, i = c.offset.left, j = i + c.proportions.width, k = c.offset.top, l = k + c.proportions.height; switch (d) { case "fit": return i <= e && f <= j && k <= g && h <= l; case "intersect": return i < e + b.helperProportions.width / 2 && f - b.helperProportions.width / 2 < j && k < g + b.helperProportions.height / 2 && h - b.helperProportions.height / 2 < l; case "pointer": var m = (b.positionAbs || b.position.absolute).left + (b.clickOffset || b.offset.click).left, n = (b.positionAbs || b.position.absolute).top + (b.clickOffset || b.offset.click).top, o = a.ui.isOver(n, m, k, i, c.proportions.height, c.proportions.width); return o; case "touch": return (g >= k && g <= l || h >= k && h <= l || g < k && h > l) && (e >= i && e <= j || f >= i && f <= j || e < i && f > j); default: return !1 } }, a.ui.ddmanager = { current: null, droppables: { "default": [] }, prepareOffsets: function (b, c) { var d = a.ui.ddmanager.droppables[b.options.scope] || [], e = c ? c.type : null, f = (b.currentItem || b.element).find(":data(droppable)").andSelf(); g: for (var h = 0; h < d.length; h++) { if (d[h].options.disabled || b && !d[h].accept.call(d[h].element[0], b.currentItem || b.element)) continue; for (var i = 0; i < f.length; i++) if (f[i] == d[h].element[0]) { d[h].proportions.height = 0; continue g } d[h].visible = d[h].element.css("display") != "none"; if (!d[h].visible) continue; e == "mousedown" && d[h]._activate.call(d[h], c), d[h].offset = d[h].element.offset(), d[h].proportions = { width: d[h].element[0].offsetWidth, height: d[h].element[0].offsetHeight } } }, drop: function (b, c) { var d = !1; return a.each(a.ui.ddmanager.droppables[b.options.scope] || [], function () { if (!this.options) return; !this.options.disabled && this.visible && a.ui.intersect(b, this, this.options.tolerance) && (d = this._drop.call(this, c) || d), !this.options.disabled && this.visible && this.accept.call(this.element[0], b.currentItem || b.element) && (this.isout = 1, this.isover = 0, this._deactivate.call(this, c)) }), d }, dragStart: function (b, c) { b.element.parents(":not(body,html)").bind("scroll.droppable", function () { b.options.refreshPositions || a.ui.ddmanager.prepareOffsets(b, c) }) }, drag: function (b, c) { b.options.refreshPositions && a.ui.ddmanager.prepareOffsets(b, c), a.each(a.ui.ddmanager.droppables[b.options.scope] || [], function () { if (this.options.disabled || this.greedyChild || !this.visible) return; var d = a.ui.intersect(b, this, this.options.tolerance), e = !d && this.isover == 1 ? "isout" : d && this.isover == 0 ? "isover" : null; if (!e) return; var f; if (this.options.greedy) { var g = this.element.parents(":data(droppable):eq(0)"); g.length && (f = a.data(g[0], "droppable"), f.greedyChild = e == "isover" ? 1 : 0) } f && e == "isover" && (f.isover = 0, f.isout = 1, f._out.call(f, c)), this[e] = 1, this[e == "isout" ? "isover" : "isout"] = 0, this[e == "isover" ? "_over" : "_out"].call(this, c), f && e == "isout" && (f.isout = 0, f.isover = 1, f._over.call(f, c)) }) }, dragStop: function (b, c) { b.element.parents(":not(body,html)").unbind("scroll.droppable"), b.options.refreshPositions || a.ui.ddmanager.prepareOffsets(b, c) } } })(jQuery);;/*! jQuery UI - v1.8.21 - 2012-06-05
* https://github.com/jquery/jquery-ui
* Includes: jquery.ui.resizable.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function (a, b) { a.widget("ui.resizable", a.ui.mouse, { widgetEventPrefix: "resize", options: { alsoResize: !1, animate: !1, animateDuration: "slow", animateEasing: "swing", aspectRatio: !1, autoHide: !1, containment: !1, ghost: !1, grid: !1, handles: "e,s,se", helper: !1, maxHeight: null, maxWidth: null, minHeight: 10, minWidth: 10, zIndex: 1e3 }, _create: function () { var b = this, c = this.options; this.element.addClass("ui-resizable"), a.extend(this, { _aspectRatio: !!c.aspectRatio, aspectRatio: c.aspectRatio, originalElement: this.element, _proportionallyResizeElements: [], _helper: c.helper || c.ghost || c.animate ? c.helper || "ui-resizable-helper" : null }), this.element[0].nodeName.match(/canvas|textarea|input|select|button|img/i) && (this.element.wrap(a('<div class="ui-wrapper" style="overflow: hidden;"></div>').css({ position: this.element.css("position"), width: this.element.outerWidth(), height: this.element.outerHeight(), top: this.element.css("top"), left: this.element.css("left") })), this.element = this.element.parent().data("resizable", this.element.data("resizable")), this.elementIsWrapper = !0, this.element.css({ marginLeft: this.originalElement.css("marginLeft"), marginTop: this.originalElement.css("marginTop"), marginRight: this.originalElement.css("marginRight"), marginBottom: this.originalElement.css("marginBottom") }), this.originalElement.css({ marginLeft: 0, marginTop: 0, marginRight: 0, marginBottom: 0 }), this.originalResizeStyle = this.originalElement.css("resize"), this.originalElement.css("resize", "none"), this._proportionallyResizeElements.push(this.originalElement.css({ position: "static", zoom: 1, display: "block" })), this.originalElement.css({ margin: this.originalElement.css("margin") }), this._proportionallyResize()), this.handles = c.handles || (a(".ui-resizable-handle", this.element).length ? { n: ".ui-resizable-n", e: ".ui-resizable-e", s: ".ui-resizable-s", w: ".ui-resizable-w", se: ".ui-resizable-se", sw: ".ui-resizable-sw", ne: ".ui-resizable-ne", nw: ".ui-resizable-nw" } : "e,s,se"); if (this.handles.constructor == String) { this.handles == "all" && (this.handles = "n,e,s,w,se,sw,ne,nw"); var d = this.handles.split(","); this.handles = {}; for (var e = 0; e < d.length; e++) { var f = a.trim(d[e]), g = "ui-resizable-" + f, h = a('<div class="ui-resizable-handle ' + g + '"></div>'); h.css({ zIndex: c.zIndex }), "se" == f && h.addClass("ui-icon ui-icon-gripsmall-diagonal-se"), this.handles[f] = ".ui-resizable-" + f, this.element.append(h) } } this._renderAxis = function (b) { b = b || this.element; for (var c in this.handles) { this.handles[c].constructor == String && (this.handles[c] = a(this.handles[c], this.element).show()); if (this.elementIsWrapper && this.originalElement[0].nodeName.match(/textarea|input|select|button/i)) { var d = a(this.handles[c], this.element), e = 0; e = /sw|ne|nw|se|n|s/.test(c) ? d.outerHeight() : d.outerWidth(); var f = ["padding", /ne|nw|n/.test(c) ? "Top" : /se|sw|s/.test(c) ? "Bottom" : /^e$/.test(c) ? "Right" : "Left"].join(""); b.css(f, e), this._proportionallyResize() } if (!a(this.handles[c]).length) continue } }, this._renderAxis(this.element), this._handles = a(".ui-resizable-handle", this.element).disableSelection(), this._handles.mouseover(function () { if (!b.resizing) { if (this.className) var a = this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i); b.axis = a && a[1] ? a[1] : "se" } }), c.autoHide && (this._handles.hide(), a(this.element).addClass("ui-resizable-autohide").hover(function () { if (c.disabled) return; a(this).removeClass("ui-resizable-autohide"), b._handles.show() }, function () { if (c.disabled) return; b.resizing || (a(this).addClass("ui-resizable-autohide"), b._handles.hide()) })), this._mouseInit() }, destroy: function () { this._mouseDestroy(); var b = function (b) { a(b).removeClass("ui-resizable ui-resizable-disabled ui-resizable-resizing").removeData("resizable").unbind(".resizable").find(".ui-resizable-handle").remove() }; if (this.elementIsWrapper) { b(this.element); var c = this.element; c.after(this.originalElement.css({ position: c.css("position"), width: c.outerWidth(), height: c.outerHeight(), top: c.css("top"), left: c.css("left") })).remove() } return this.originalElement.css("resize", this.originalResizeStyle), b(this.originalElement), this }, _mouseCapture: function (b) { var c = !1; for (var d in this.handles) a(this.handles[d])[0] == b.target && (c = !0); return !this.options.disabled && c }, _mouseStart: function (b) { var d = this.options, e = this.element.position(), f = this.element; this.resizing = !0, this.documentScroll = { top: a(document).scrollTop(), left: a(document).scrollLeft() }, (f.is(".ui-draggable") || /absolute/.test(f.css("position"))) && f.css({ position: "absolute", top: e.top, left: e.left }), this._renderProxy(); var g = c(this.helper.css("left")), h = c(this.helper.css("top")); d.containment && (g += a(d.containment).scrollLeft() || 0, h += a(d.containment).scrollTop() || 0), this.offset = this.helper.offset(), this.position = { left: g, top: h }, this.size = this._helper ? { width: f.outerWidth(), height: f.outerHeight() } : { width: f.width(), height: f.height() }, this.originalSize = this._helper ? { width: f.outerWidth(), height: f.outerHeight() } : { width: f.width(), height: f.height() }, this.originalPosition = { left: g, top: h }, this.sizeDiff = { width: f.outerWidth() - f.width(), height: f.outerHeight() - f.height() }, this.originalMousePosition = { left: b.pageX, top: b.pageY }, this.aspectRatio = typeof d.aspectRatio == "number" ? d.aspectRatio : this.originalSize.width / this.originalSize.height || 1; var i = a(".ui-resizable-" + this.axis).css("cursor"); return a("body").css("cursor", i == "auto" ? this.axis + "-resize" : i), f.addClass("ui-resizable-resizing"), this._propagate("start", b), !0 }, _mouseDrag: function (b) { var c = this.helper, d = this.options, e = {}, f = this, g = this.originalMousePosition, h = this.axis, i = b.pageX - g.left || 0, j = b.pageY - g.top || 0, k = this._change[h]; if (!k) return !1; var l = k.apply(this, [b, i, j]), m = a.browser.msie && a.browser.version < 7, n = this.sizeDiff; this._updateVirtualBoundaries(b.shiftKey); if (this._aspectRatio || b.shiftKey) l = this._updateRatio(l, b); return l = this._respectSize(l, b), this._propagate("resize", b), c.css({ top: this.position.top + "px", left: this.position.left + "px", width: this.size.width + "px", height: this.size.height + "px" }), !this._helper && this._proportionallyResizeElements.length && this._proportionallyResize(), this._updateCache(l), this._trigger("resize", b, this.ui()), !1 }, _mouseStop: function (b) { this.resizing = !1; var c = this.options, d = this; if (this._helper) { var e = this._proportionallyResizeElements, f = e.length && /textarea/i.test(e[0].nodeName), g = f && a.ui.hasScroll(e[0], "left") ? 0 : d.sizeDiff.height, h = f ? 0 : d.sizeDiff.width, i = { width: d.helper.width() - h, height: d.helper.height() - g }, j = parseInt(d.element.css("left"), 10) + (d.position.left - d.originalPosition.left) || null, k = parseInt(d.element.css("top"), 10) + (d.position.top - d.originalPosition.top) || null; c.animate || this.element.css(a.extend(i, { top: k, left: j })), d.helper.height(d.size.height), d.helper.width(d.size.width), this._helper && !c.animate && this._proportionallyResize() } return a("body").css("cursor", "auto"), this.element.removeClass("ui-resizable-resizing"), this._propagate("stop", b), this._helper && this.helper.remove(), !1 }, _updateVirtualBoundaries: function (a) { var b = this.options, c, e, f, g, h; h = { minWidth: d(b.minWidth) ? b.minWidth : 0, maxWidth: d(b.maxWidth) ? b.maxWidth : Infinity, minHeight: d(b.minHeight) ? b.minHeight : 0, maxHeight: d(b.maxHeight) ? b.maxHeight : Infinity }; if (this._aspectRatio || a) c = h.minHeight * this.aspectRatio, f = h.minWidth / this.aspectRatio, e = h.maxHeight * this.aspectRatio, g = h.maxWidth / this.aspectRatio, c > h.minWidth && (h.minWidth = c), f > h.minHeight && (h.minHeight = f), e < h.maxWidth && (h.maxWidth = e), g < h.maxHeight && (h.maxHeight = g); this._vBoundaries = h }, _updateCache: function (a) { var b = this.options; this.offset = this.helper.offset(), d(a.left) && (this.position.left = a.left), d(a.top) && (this.position.top = a.top), d(a.height) && (this.size.height = a.height), d(a.width) && (this.size.width = a.width) }, _updateRatio: function (a, b) { var c = this.options, e = this.position, f = this.size, g = this.axis; return d(a.height) ? a.width = a.height * this.aspectRatio : d(a.width) && (a.height = a.width / this.aspectRatio), g == "sw" && (a.left = e.left + (f.width - a.width), a.top = null), g == "nw" && (a.top = e.top + (f.height - a.height), a.left = e.left + (f.width - a.width)), a }, _respectSize: function (a, b) { var c = this.helper, e = this._vBoundaries, f = this._aspectRatio || b.shiftKey, g = this.axis, h = d(a.width) && e.maxWidth && e.maxWidth < a.width, i = d(a.height) && e.maxHeight && e.maxHeight < a.height, j = d(a.width) && e.minWidth && e.minWidth > a.width, k = d(a.height) && e.minHeight && e.minHeight > a.height; j && (a.width = e.minWidth), k && (a.height = e.minHeight), h && (a.width = e.maxWidth), i && (a.height = e.maxHeight); var l = this.originalPosition.left + this.originalSize.width, m = this.position.top + this.size.height, n = /sw|nw|w/.test(g), o = /nw|ne|n/.test(g); j && n && (a.left = l - e.minWidth), h && n && (a.left = l - e.maxWidth), k && o && (a.top = m - e.minHeight), i && o && (a.top = m - e.maxHeight); var p = !a.width && !a.height; return p && !a.left && a.top ? a.top = null : p && !a.top && a.left && (a.left = null), a }, _proportionallyResize: function () { var b = this.options; if (!this._proportionallyResizeElements.length) return; var c = this.helper || this.element; for (var d = 0; d < this._proportionallyResizeElements.length; d++) { var e = this._proportionallyResizeElements[d]; if (!this.borderDif) { var f = [e.css("borderTopWidth"), e.css("borderRightWidth"), e.css("borderBottomWidth"), e.css("borderLeftWidth")], g = [e.css("paddingTop"), e.css("paddingRight"), e.css("paddingBottom"), e.css("paddingLeft")]; this.borderDif = a.map(f, function (a, b) { var c = parseInt(a, 10) || 0, d = parseInt(g[b], 10) || 0; return c + d }) } if (!a.browser.msie || !a(c).is(":hidden") && !a(c).parents(":hidden").length) e.css({ height: c.height() - this.borderDif[0] - this.borderDif[2] || 0, width: c.width() - this.borderDif[1] - this.borderDif[3] || 0 }); else continue } }, _renderProxy: function () { var b = this.element, c = this.options; this.elementOffset = b.offset(); if (this._helper) { this.helper = this.helper || a('<div style="overflow:hidden;"></div>'); var d = a.browser.msie && a.browser.version < 7, e = d ? 1 : 0, f = d ? 2 : -1; this.helper.addClass(this._helper).css({ width: this.element.outerWidth() + f, height: this.element.outerHeight() + f, position: "absolute", left: this.elementOffset.left - e + "px", top: this.elementOffset.top - e + "px", zIndex: ++c.zIndex }), this.helper.appendTo("body").disableSelection() } else this.helper = this.element }, _change: { e: function (a, b, c) { return { width: this.originalSize.width + b } }, w: function (a, b, c) { var d = this.options, e = this.originalSize, f = this.originalPosition; return { left: f.left + b, width: e.width - b } }, n: function (a, b, c) { var d = this.options, e = this.originalSize, f = this.originalPosition; return { top: f.top + c, height: e.height - c } }, s: function (a, b, c) { return { height: this.originalSize.height + c } }, se: function (b, c, d) { return a.extend(this._change.s.apply(this, arguments), this._change.e.apply(this, [b, c, d])) }, sw: function (b, c, d) { return a.extend(this._change.s.apply(this, arguments), this._change.w.apply(this, [b, c, d])) }, ne: function (b, c, d) { return a.extend(this._change.n.apply(this, arguments), this._change.e.apply(this, [b, c, d])) }, nw: function (b, c, d) { return a.extend(this._change.n.apply(this, arguments), this._change.w.apply(this, [b, c, d])) } }, _propagate: function (b, c) { a.ui.plugin.call(this, b, [c, this.ui()]), b != "resize" && this._trigger(b, c, this.ui()) }, plugins: {}, ui: function () { return { originalElement: this.originalElement, element: this.element, helper: this.helper, position: this.position, size: this.size, originalSize: this.originalSize, originalPosition: this.originalPosition } } }), a.extend(a.ui.resizable, { version: "1.8.21" }), a.ui.plugin.add("resizable", "alsoResize", { start: function (b, c) { var d = a(this).data("resizable"), e = d.options, f = function (b) { a(b).each(function () { var b = a(this); b.data("resizable-alsoresize", { width: parseInt(b.width(), 10), height: parseInt(b.height(), 10), left: parseInt(b.css("left"), 10), top: parseInt(b.css("top"), 10) }) }) }; typeof e.alsoResize == "object" && !e.alsoResize.parentNode ? e.alsoResize.length ? (e.alsoResize = e.alsoResize[0], f(e.alsoResize)) : a.each(e.alsoResize, function (a) { f(a) }) : f(e.alsoResize) }, resize: function (b, c) { var d = a(this).data("resizable"), e = d.options, f = d.originalSize, g = d.originalPosition, h = { height: d.size.height - f.height || 0, width: d.size.width - f.width || 0, top: d.position.top - g.top || 0, left: d.position.left - g.left || 0 }, i = function (b, d) { a(b).each(function () { var b = a(this), e = a(this).data("resizable-alsoresize"), f = {}, g = d && d.length ? d : b.parents(c.originalElement[0]).length ? ["width", "height"] : ["width", "height", "top", "left"]; a.each(g, function (a, b) { var c = (e[b] || 0) + (h[b] || 0); c && c >= 0 && (f[b] = c || null) }), b.css(f) }) }; typeof e.alsoResize == "object" && !e.alsoResize.nodeType ? a.each(e.alsoResize, function (a, b) { i(a, b) }) : i(e.alsoResize) }, stop: function (b, c) { a(this).removeData("resizable-alsoresize") } }), a.ui.plugin.add("resizable", "animate", { stop: function (b, c) { var d = a(this).data("resizable"), e = d.options, f = d._proportionallyResizeElements, g = f.length && /textarea/i.test(f[0].nodeName), h = g && a.ui.hasScroll(f[0], "left") ? 0 : d.sizeDiff.height, i = g ? 0 : d.sizeDiff.width, j = { width: d.size.width - i, height: d.size.height - h }, k = parseInt(d.element.css("left"), 10) + (d.position.left - d.originalPosition.left) || null, l = parseInt(d.element.css("top"), 10) + (d.position.top - d.originalPosition.top) || null; d.element.animate(a.extend(j, l && k ? { top: l, left: k } : {}), { duration: e.animateDuration, easing: e.animateEasing, step: function () { var c = { width: parseInt(d.element.css("width"), 10), height: parseInt(d.element.css("height"), 10), top: parseInt(d.element.css("top"), 10), left: parseInt(d.element.css("left"), 10) }; f && f.length && a(f[0]).css({ width: c.width, height: c.height }), d._updateCache(c), d._propagate("resize", b) } }) } }), a.ui.plugin.add("resizable", "containment", { start: function (b, d) { var e = a(this).data("resizable"), f = e.options, g = e.element, h = f.containment, i = h instanceof a ? h.get(0) : /parent/.test(h) ? g.parent().get(0) : h; if (!i) return; e.containerElement = a(i); if (/document/.test(h) || h == document) e.containerOffset = { left: 0, top: 0 }, e.containerPosition = { left: 0, top: 0 }, e.parentData = { element: a(document), left: 0, top: 0, width: a(document).width(), height: a(document).height() || document.body.parentNode.scrollHeight }; else { var j = a(i), k = []; a(["Top", "Right", "Left", "Bottom"]).each(function (a, b) { k[a] = c(j.css("padding" + b)) }), e.containerOffset = j.offset(), e.containerPosition = j.position(), e.containerSize = { height: j.innerHeight() - k[3], width: j.innerWidth() - k[1] }; var l = e.containerOffset, m = e.containerSize.height, n = e.containerSize.width, o = a.ui.hasScroll(i, "left") ? i.scrollWidth : n, p = a.ui.hasScroll(i) ? i.scrollHeight : m; e.parentData = { element: i, left: l.left, top: l.top, width: o, height: p } } }, resize: function (b, c) { var d = a(this).data("resizable"), e = d.options, f = d.containerSize, g = d.containerOffset, h = d.size, i = d.position, j = d._aspectRatio || b.shiftKey, k = { top: 0, left: 0 }, l = d.containerElement; l[0] != document && /static/.test(l.css("position")) && (k = g), i.left < (d._helper ? g.left : 0) && (d.size.width = d.size.width + (d._helper ? d.position.left - g.left : d.position.left - k.left), j && (d.size.height = d.size.width / d.aspectRatio), d.position.left = e.helper ? g.left : 0), i.top < (d._helper ? g.top : 0) && (d.size.height = d.size.height + (d._helper ? d.position.top - g.top : d.position.top), j && (d.size.width = d.size.height * d.aspectRatio), d.position.top = d._helper ? g.top : 0), d.offset.left = d.parentData.left + d.position.left, d.offset.top = d.parentData.top + d.position.top; var m = Math.abs((d._helper ? d.offset.left - k.left : d.offset.left - k.left) + d.sizeDiff.width), n = Math.abs((d._helper ? d.offset.top - k.top : d.offset.top - g.top) + d.sizeDiff.height), o = d.containerElement.get(0) == d.element.parent().get(0), p = /relative|absolute/.test(d.containerElement.css("position")); o && p && (m -= d.parentData.left), m + d.size.width >= d.parentData.width && (d.size.width = d.parentData.width - m, j && (d.size.height = d.size.width / d.aspectRatio)), n + d.size.height >= d.parentData.height && (d.size.height = d.parentData.height - n, j && (d.size.width = d.size.height * d.aspectRatio)) }, stop: function (b, c) { var d = a(this).data("resizable"), e = d.options, f = d.position, g = d.containerOffset, h = d.containerPosition, i = d.containerElement, j = a(d.helper), k = j.offset(), l = j.outerWidth() - d.sizeDiff.width, m = j.outerHeight() - d.sizeDiff.height; d._helper && !e.animate && /relative/.test(i.css("position")) && a(this).css({ left: k.left - h.left - g.left, width: l, height: m }), d._helper && !e.animate && /static/.test(i.css("position")) && a(this).css({ left: k.left - h.left - g.left, width: l, height: m }) } }), a.ui.plugin.add("resizable", "ghost", { start: function (b, c) { var d = a(this).data("resizable"), e = d.options, f = d.size; d.ghost = d.originalElement.clone(), d.ghost.css({ opacity: .25, display: "block", position: "relative", height: f.height, width: f.width, margin: 0, left: 0, top: 0 }).addClass("ui-resizable-ghost").addClass(typeof e.ghost == "string" ? e.ghost : ""), d.ghost.appendTo(d.helper) }, resize: function (b, c) { var d = a(this).data("resizable"), e = d.options; d.ghost && d.ghost.css({ position: "relative", height: d.size.height, width: d.size.width }) }, stop: function (b, c) { var d = a(this).data("resizable"), e = d.options; d.ghost && d.helper && d.helper.get(0).removeChild(d.ghost.get(0)) } }), a.ui.plugin.add("resizable", "grid", { resize: function (b, c) { var d = a(this).data("resizable"), e = d.options, f = d.size, g = d.originalSize, h = d.originalPosition, i = d.axis, j = e._aspectRatio || b.shiftKey; e.grid = typeof e.grid == "number" ? [e.grid, e.grid] : e.grid; var k = Math.round((f.width - g.width) / (e.grid[0] || 1)) * (e.grid[0] || 1), l = Math.round((f.height - g.height) / (e.grid[1] || 1)) * (e.grid[1] || 1); /^(se|s|e)$/.test(i) ? (d.size.width = g.width + k, d.size.height = g.height + l) : /^(ne)$/.test(i) ? (d.size.width = g.width + k, d.size.height = g.height + l, d.position.top = h.top - l) : /^(sw)$/.test(i) ? (d.size.width = g.width + k, d.size.height = g.height + l, d.position.left = h.left - k) : (d.size.width = g.width + k, d.size.height = g.height + l, d.position.top = h.top - l, d.position.left = h.left - k) } }); var c = function (a) { return parseInt(a, 10) || 0 }, d = function (a) { return !isNaN(parseInt(a, 10)) } })(jQuery);;/*! jQuery UI - v1.8.21 - 2012-06-05
* https://github.com/jquery/jquery-ui
* Includes: jquery.ui.selectable.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function (a, b) { a.widget("ui.selectable", a.ui.mouse, { options: { appendTo: "body", autoRefresh: !0, distance: 0, filter: "*", tolerance: "touch" }, _create: function () { var b = this; this.element.addClass("ui-selectable"), this.dragged = !1; var c; this.refresh = function () { c = a(b.options.filter, b.element[0]), c.addClass("ui-selectee"), c.each(function () { var b = a(this), c = b.offset(); a.data(this, "selectable-item", { element: this, $element: b, left: c.left, top: c.top, right: c.left + b.outerWidth(), bottom: c.top + b.outerHeight(), startselected: !1, selected: b.hasClass("ui-selected"), selecting: b.hasClass("ui-selecting"), unselecting: b.hasClass("ui-unselecting") }) }) }, this.refresh(), this.selectees = c.addClass("ui-selectee"), this._mouseInit(), this.helper = a("<div class='ui-selectable-helper'></div>") }, destroy: function () { return this.selectees.removeClass("ui-selectee").removeData("selectable-item"), this.element.removeClass("ui-selectable ui-selectable-disabled").removeData("selectable").unbind(".selectable"), this._mouseDestroy(), this }, _mouseStart: function (b) { var c = this; this.opos = [b.pageX, b.pageY]; if (this.options.disabled) return; var d = this.options; this.selectees = a(d.filter, this.element[0]), this._trigger("start", b), a(d.appendTo).append(this.helper), this.helper.css({ left: b.clientX, top: b.clientY, width: 0, height: 0 }), d.autoRefresh && this.refresh(), this.selectees.filter(".ui-selected").each(function () { var d = a.data(this, "selectable-item"); d.startselected = !0, !b.metaKey && !b.ctrlKey && (d.$element.removeClass("ui-selected"), d.selected = !1, d.$element.addClass("ui-unselecting"), d.unselecting = !0, c._trigger("unselecting", b, { unselecting: d.element })) }), a(b.target).parents().andSelf().each(function () { var d = a.data(this, "selectable-item"); if (d) { var e = !b.metaKey && !b.ctrlKey || !d.$element.hasClass("ui-selected"); return d.$element.removeClass(e ? "ui-unselecting" : "ui-selected").addClass(e ? "ui-selecting" : "ui-unselecting"), d.unselecting = !e, d.selecting = e, d.selected = e, e ? c._trigger("selecting", b, { selecting: d.element }) : c._trigger("unselecting", b, { unselecting: d.element }), !1 } }) }, _mouseDrag: function (b) { var c = this; this.dragged = !0; if (this.options.disabled) return; var d = this.options, e = this.opos[0], f = this.opos[1], g = b.pageX, h = b.pageY; if (e > g) { var i = g; g = e, e = i } if (f > h) { var i = h; h = f, f = i } return this.helper.css({ left: e, top: f, width: g - e, height: h - f }), this.selectees.each(function () { var i = a.data(this, "selectable-item"); if (!i || i.element == c.element[0]) return; var j = !1; d.tolerance == "touch" ? j = !(i.left > g || i.right < e || i.top > h || i.bottom < f) : d.tolerance == "fit" && (j = i.left > e && i.right < g && i.top > f && i.bottom < h), j ? (i.selected && (i.$element.removeClass("ui-selected"), i.selected = !1), i.unselecting && (i.$element.removeClass("ui-unselecting"), i.unselecting = !1), i.selecting || (i.$element.addClass("ui-selecting"), i.selecting = !0, c._trigger("selecting", b, { selecting: i.element }))) : (i.selecting && ((b.metaKey || b.ctrlKey) && i.startselected ? (i.$element.removeClass("ui-selecting"), i.selecting = !1, i.$element.addClass("ui-selected"), i.selected = !0) : (i.$element.removeClass("ui-selecting"), i.selecting = !1, i.startselected && (i.$element.addClass("ui-unselecting"), i.unselecting = !0), c._trigger("unselecting", b, { unselecting: i.element }))), i.selected && !b.metaKey && !b.ctrlKey && !i.startselected && (i.$element.removeClass("ui-selected"), i.selected = !1, i.$element.addClass("ui-unselecting"), i.unselecting = !0, c._trigger("unselecting", b, { unselecting: i.element }))) }), !1 }, _mouseStop: function (b) { var c = this; this.dragged = !1; var d = this.options; return a(".ui-unselecting", this.element[0]).each(function () { var d = a.data(this, "selectable-item"); d.$element.removeClass("ui-unselecting"), d.unselecting = !1, d.startselected = !1, c._trigger("unselected", b, { unselected: d.element }) }), a(".ui-selecting", this.element[0]).each(function () { var d = a.data(this, "selectable-item"); d.$element.removeClass("ui-selecting").addClass("ui-selected"), d.selecting = !1, d.selected = !0, d.startselected = !0, c._trigger("selected", b, { selected: d.element }) }), this._trigger("stop", b), this.helper.remove(), !1 } }), a.extend(a.ui.selectable, { version: "1.8.21" }) })(jQuery);;/*! jQuery UI - v1.8.21 - 2012-06-05
* https://github.com/jquery/jquery-ui
* Includes: jquery.ui.sortable.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function (a, b) { a.widget("ui.sortable", a.ui.mouse, { widgetEventPrefix: "sort", ready: !1, options: { appendTo: "parent", axis: !1, connectWith: !1, containment: !1, cursor: "auto", cursorAt: !1, dropOnEmpty: !0, forcePlaceholderSize: !1, forceHelperSize: !1, grid: !1, handle: !1, helper: "original", items: "> *", opacity: !1, placeholder: !1, revert: !1, scroll: !0, scrollSensitivity: 20, scrollSpeed: 20, scope: "default", tolerance: "intersect", zIndex: 1e3 }, _create: function () { var a = this.options; this.containerCache = {}, this.element.addClass("ui-sortable"), this.refresh(), this.floating = this.items.length ? a.axis === "x" || /left|right/.test(this.items[0].item.css("float")) || /inline|table-cell/.test(this.items[0].item.css("display")) : !1, this.offset = this.element.offset(), this._mouseInit(), this.ready = !0 }, destroy: function () { a.Widget.prototype.destroy.call(this), this.element.removeClass("ui-sortable ui-sortable-disabled"), this._mouseDestroy(); for (var b = this.items.length - 1; b >= 0; b--) this.items[b].item.removeData(this.widgetName + "-item"); return this }, _setOption: function (b, c) { b === "disabled" ? (this.options[b] = c, this.widget()[c ? "addClass" : "removeClass"]("ui-sortable-disabled")) : a.Widget.prototype._setOption.apply(this, arguments) }, _mouseCapture: function (b, c) { var d = this; if (this.reverting) return !1; if (this.options.disabled || this.options.type == "static") return !1; this._refreshItems(b); var e = null, f = this, g = a(b.target).parents().each(function () { if (a.data(this, d.widgetName + "-item") == f) return e = a(this), !1 }); a.data(b.target, d.widgetName + "-item") == f && (e = a(b.target)); if (!e) return !1; if (this.options.handle && !c) { var h = !1; a(this.options.handle, e).find("*").andSelf().each(function () { this == b.target && (h = !0) }); if (!h) return !1 } return this.currentItem = e, this._removeCurrentsFromItems(), !0 }, _mouseStart: function (b, c, d) { var e = this.options, f = this; this.currentContainer = this, this.refreshPositions(), this.helper = this._createHelper(b), this._cacheHelperProportions(), this._cacheMargins(), this.scrollParent = this.helper.scrollParent(), this.offset = this.currentItem.offset(), this.offset = { top: this.offset.top - this.margins.top, left: this.offset.left - this.margins.left }, a.extend(this.offset, { click: { left: b.pageX - this.offset.left, top: b.pageY - this.offset.top }, parent: this._getParentOffset(), relative: this._getRelativeOffset() }), this.helper.css("position", "absolute"), this.cssPosition = this.helper.css("position"), this.originalPosition = this._generatePosition(b), this.originalPageX = b.pageX, this.originalPageY = b.pageY, e.cursorAt && this._adjustOffsetFromHelper(e.cursorAt), this.domPosition = { prev: this.currentItem.prev()[0], parent: this.currentItem.parent()[0] }, this.helper[0] != this.currentItem[0] && this.currentItem.hide(), this._createPlaceholder(), e.containment && this._setContainment(), e.cursor && (a("body").css("cursor") && (this._storedCursor = a("body").css("cursor")), a("body").css("cursor", e.cursor)), e.opacity && (this.helper.css("opacity") && (this._storedOpacity = this.helper.css("opacity")), this.helper.css("opacity", e.opacity)), e.zIndex && (this.helper.css("zIndex") && (this._storedZIndex = this.helper.css("zIndex")), this.helper.css("zIndex", e.zIndex)), this.scrollParent[0] != document && this.scrollParent[0].tagName != "HTML" && (this.overflowOffset = this.scrollParent.offset()), this._trigger("start", b, this._uiHash()), this._preserveHelperProportions || this._cacheHelperProportions(); if (!d) for (var g = this.containers.length - 1; g >= 0; g--) this.containers[g]._trigger("activate", b, f._uiHash(this)); return a.ui.ddmanager && (a.ui.ddmanager.current = this), a.ui.ddmanager && !e.dropBehaviour && a.ui.ddmanager.prepareOffsets(this, b), this.dragging = !0, this.helper.addClass("ui-sortable-helper"), this._mouseDrag(b), !0 }, _mouseDrag: function (b) { this.position = this._generatePosition(b), this.positionAbs = this._convertPositionTo("absolute"), this.lastPositionAbs || (this.lastPositionAbs = this.positionAbs); if (this.options.scroll) { var c = this.options, d = !1; this.scrollParent[0] != document && this.scrollParent[0].tagName != "HTML" ? (this.overflowOffset.top + this.scrollParent[0].offsetHeight - b.pageY < c.scrollSensitivity ? this.scrollParent[0].scrollTop = d = this.scrollParent[0].scrollTop + c.scrollSpeed : b.pageY - this.overflowOffset.top < c.scrollSensitivity && (this.scrollParent[0].scrollTop = d = this.scrollParent[0].scrollTop - c.scrollSpeed), this.overflowOffset.left + this.scrollParent[0].offsetWidth - b.pageX < c.scrollSensitivity ? this.scrollParent[0].scrollLeft = d = this.scrollParent[0].scrollLeft + c.scrollSpeed : b.pageX - this.overflowOffset.left < c.scrollSensitivity && (this.scrollParent[0].scrollLeft = d = this.scrollParent[0].scrollLeft - c.scrollSpeed)) : (b.pageY - a(document).scrollTop() < c.scrollSensitivity ? d = a(document).scrollTop(a(document).scrollTop() - c.scrollSpeed) : a(window).height() - (b.pageY - a(document).scrollTop()) < c.scrollSensitivity && (d = a(document).scrollTop(a(document).scrollTop() + c.scrollSpeed)), b.pageX - a(document).scrollLeft() < c.scrollSensitivity ? d = a(document).scrollLeft(a(document).scrollLeft() - c.scrollSpeed) : a(window).width() - (b.pageX - a(document).scrollLeft()) < c.scrollSensitivity && (d = a(document).scrollLeft(a(document).scrollLeft() + c.scrollSpeed))), d !== !1 && a.ui.ddmanager && !c.dropBehaviour && a.ui.ddmanager.prepareOffsets(this, b) } this.positionAbs = this._convertPositionTo("absolute"); if (!this.options.axis || this.options.axis != "y") this.helper[0].style.left = this.position.left + "px"; if (!this.options.axis || this.options.axis != "x") this.helper[0].style.top = this.position.top + "px"; for (var e = this.items.length - 1; e >= 0; e--) { var f = this.items[e], g = f.item[0], h = this._intersectsWithPointer(f); if (!h) continue; if (g != this.currentItem[0] && this.placeholder[h == 1 ? "next" : "prev"]()[0] != g && !a.ui.contains(this.placeholder[0], g) && (this.options.type == "semi-dynamic" ? !a.ui.contains(this.element[0], g) : !0)) { this.direction = h == 1 ? "down" : "up"; if (this.options.tolerance == "pointer" || this._intersectsWithSides(f)) this._rearrange(b, f); else break; this._trigger("change", b, this._uiHash()); break } } return this._contactContainers(b), a.ui.ddmanager && a.ui.ddmanager.drag(this, b), this._trigger("sort", b, this._uiHash()), this.lastPositionAbs = this.positionAbs, !1 }, _mouseStop: function (b, c) { if (!b) return; a.ui.ddmanager && !this.options.dropBehaviour && a.ui.ddmanager.drop(this, b); if (this.options.revert) { var d = this, e = d.placeholder.offset(); d.reverting = !0, a(this.helper).animate({ left: e.left - this.offset.parent.left - d.margins.left + (this.offsetParent[0] == document.body ? 0 : this.offsetParent[0].scrollLeft), top: e.top - this.offset.parent.top - d.margins.top + (this.offsetParent[0] == document.body ? 0 : this.offsetParent[0].scrollTop) }, parseInt(this.options.revert, 10) || 500, function () { d._clear(b) }) } else this._clear(b, c); return !1 }, cancel: function () { var b = this; if (this.dragging) { this._mouseUp({ target: null }), this.options.helper == "original" ? this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper") : this.currentItem.show(); for (var c = this.containers.length - 1; c >= 0; c--) this.containers[c]._trigger("deactivate", null, b._uiHash(this)), this.containers[c].containerCache.over && (this.containers[c]._trigger("out", null, b._uiHash(this)), this.containers[c].containerCache.over = 0) } return this.placeholder && (this.placeholder[0].parentNode && this.placeholder[0].parentNode.removeChild(this.placeholder[0]), this.options.helper != "original" && this.helper && this.helper[0].parentNode && this.helper.remove(), a.extend(this, { helper: null, dragging: !1, reverting: !1, _noFinalSort: null }), this.domPosition.prev ? a(this.domPosition.prev).after(this.currentItem) : a(this.domPosition.parent).prepend(this.currentItem)), this }, serialize: function (b) { var c = this._getItemsAsjQuery(b && b.connected), d = []; return b = b || {}, a(c).each(function () { var c = (a(b.item || this).attr(b.attribute || "id") || "").match(b.expression || /(.+)[-=_](.+)/); c && d.push((b.key || c[1] + "[]") + "=" + (b.key && b.expression ? c[1] : c[2])) }), !d.length && b.key && d.push(b.key + "="), d.join("&") }, toArray: function (b) { var c = this._getItemsAsjQuery(b && b.connected), d = []; return b = b || {}, c.each(function () { d.push(a(b.item || this).attr(b.attribute || "id") || "") }), d }, _intersectsWith: function (a) { var b = this.positionAbs.left, c = b + this.helperProportions.width, d = this.positionAbs.top, e = d + this.helperProportions.height, f = a.left, g = f + a.width, h = a.top, i = h + a.height, j = this.offset.click.top, k = this.offset.click.left, l = d + j > h && d + j < i && b + k > f && b + k < g; return this.options.tolerance == "pointer" || this.options.forcePointerForContainers || this.options.tolerance != "pointer" && this.helperProportions[this.floating ? "width" : "height"] > a[this.floating ? "width" : "height"] ? l : f < b + this.helperProportions.width / 2 && c - this.helperProportions.width / 2 < g && h < d + this.helperProportions.height / 2 && e - this.helperProportions.height / 2 < i }, _intersectsWithPointer: function (b) { var c = this.options.axis === "x" || a.ui.isOverAxis(this.positionAbs.top + this.offset.click.top, b.top, b.height), d = this.options.axis === "y" || a.ui.isOverAxis(this.positionAbs.left + this.offset.click.left, b.left, b.width), e = c && d, f = this._getDragVerticalDirection(), g = this._getDragHorizontalDirection(); return e ? this.floating ? g && g == "right" || f == "down" ? 2 : 1 : f && (f == "down" ? 2 : 1) : !1 }, _intersectsWithSides: function (b) { var c = a.ui.isOverAxis(this.positionAbs.top + this.offset.click.top, b.top + b.height / 2, b.height), d = a.ui.isOverAxis(this.positionAbs.left + this.offset.click.left, b.left + b.width / 2, b.width), e = this._getDragVerticalDirection(), f = this._getDragHorizontalDirection(); return this.floating && f ? f == "right" && d || f == "left" && !d : e && (e == "down" && c || e == "up" && !c) }, _getDragVerticalDirection: function () { var a = this.positionAbs.top - this.lastPositionAbs.top; return a != 0 && (a > 0 ? "down" : "up") }, _getDragHorizontalDirection: function () { var a = this.positionAbs.left - this.lastPositionAbs.left; return a != 0 && (a > 0 ? "right" : "left") }, refresh: function (a) { return this._refreshItems(a), this.refreshPositions(), this }, _connectWith: function () { var a = this.options; return a.connectWith.constructor == String ? [a.connectWith] : a.connectWith }, _getItemsAsjQuery: function (b) { var c = this, d = [], e = [], f = this._connectWith(); if (f && b) for (var g = f.length - 1; g >= 0; g--) { var h = a(f[g]); for (var i = h.length - 1; i >= 0; i--) { var j = a.data(h[i], this.widgetName); j && j != this && !j.options.disabled && e.push([a.isFunction(j.options.items) ? j.options.items.call(j.element) : a(j.options.items, j.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"), j]) } } e.push([a.isFunction(this.options.items) ? this.options.items.call(this.element, null, { options: this.options, item: this.currentItem }) : a(this.options.items, this.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"), this]); for (var g = e.length - 1; g >= 0; g--) e[g][0].each(function () { d.push(this) }); return a(d) }, _removeCurrentsFromItems: function () { var a = this.currentItem.find(":data(" + this.widgetName + "-item)"); for (var b = 0; b < this.items.length; b++) for (var c = 0; c < a.length; c++) a[c] == this.items[b].item[0] && this.items.splice(b, 1) }, _refreshItems: function (b) { this.items = [], this.containers = [this]; var c = this.items, d = this, e = [[a.isFunction(this.options.items) ? this.options.items.call(this.element[0], b, { item: this.currentItem }) : a(this.options.items, this.element), this]], f = this._connectWith(); if (f && this.ready) for (var g = f.length - 1; g >= 0; g--) { var h = a(f[g]); for (var i = h.length - 1; i >= 0; i--) { var j = a.data(h[i], this.widgetName); j && j != this && !j.options.disabled && (e.push([a.isFunction(j.options.items) ? j.options.items.call(j.element[0], b, { item: this.currentItem }) : a(j.options.items, j.element), j]), this.containers.push(j)) } } for (var g = e.length - 1; g >= 0; g--) { var k = e[g][1], l = e[g][0]; for (var i = 0, m = l.length; i < m; i++) { var n = a(l[i]); n.data(this.widgetName + "-item", k), c.push({ item: n, instance: k, width: 0, height: 0, left: 0, top: 0 }) } } }, refreshPositions: function (b) { this.offsetParent && this.helper && (this.offset.parent = this._getParentOffset()); for (var c = this.items.length - 1; c >= 0; c--) { var d = this.items[c]; if (d.instance != this.currentContainer && this.currentContainer && d.item[0] != this.currentItem[0]) continue; var e = this.options.toleranceElement ? a(this.options.toleranceElement, d.item) : d.item; b || (d.width = e.outerWidth(), d.height = e.outerHeight()); var f = e.offset(); d.left = f.left, d.top = f.top } if (this.options.custom && this.options.custom.refreshContainers) this.options.custom.refreshContainers.call(this); else for (var c = this.containers.length - 1; c >= 0; c--) { var f = this.containers[c].element.offset(); this.containers[c].containerCache.left = f.left, this.containers[c].containerCache.top = f.top, this.containers[c].containerCache.width = this.containers[c].element.outerWidth(), this.containers[c].containerCache.height = this.containers[c].element.outerHeight() } return this }, _createPlaceholder: function (b) { var c = b || this, d = c.options; if (!d.placeholder || d.placeholder.constructor == String) { var e = d.placeholder; d.placeholder = { element: function () { var b = a(document.createElement(c.currentItem[0].nodeName)).addClass(e || c.currentItem[0].className + " ui-sortable-placeholder").removeClass("ui-sortable-helper")[0]; return e || (b.style.visibility = "hidden"), b }, update: function (a, b) { if (e && !d.forcePlaceholderSize) return; b.height() || b.height(c.currentItem.innerHeight() - parseInt(c.currentItem.css("paddingTop") || 0, 10) - parseInt(c.currentItem.css("paddingBottom") || 0, 10)), b.width() || b.width(c.currentItem.innerWidth() - parseInt(c.currentItem.css("paddingLeft") || 0, 10) - parseInt(c.currentItem.css("paddingRight") || 0, 10)) } } } c.placeholder = a(d.placeholder.element.call(c.element, c.currentItem)), c.currentItem.after(c.placeholder), d.placeholder.update(c, c.placeholder) }, _contactContainers: function (b) { var c = null, d = null; for (var e = this.containers.length - 1; e >= 0; e--) { if (a.ui.contains(this.currentItem[0], this.containers[e].element[0])) continue; if (this._intersectsWith(this.containers[e].containerCache)) { if (c && a.ui.contains(this.containers[e].element[0], c.element[0])) continue; c = this.containers[e], d = e } else this.containers[e].containerCache.over && (this.containers[e]._trigger("out", b, this._uiHash(this)), this.containers[e].containerCache.over = 0) } if (!c) return; if (this.containers.length === 1) this.containers[d]._trigger("over", b, this._uiHash(this)), this.containers[d].containerCache.over = 1; else if (this.currentContainer != this.containers[d]) { var f = 1e4, g = null, h = this.positionAbs[this.containers[d].floating ? "left" : "top"]; for (var i = this.items.length - 1; i >= 0; i--) { if (!a.ui.contains(this.containers[d].element[0], this.items[i].item[0])) continue; var j = this.containers[d].floating ? this.items[i].item.offset().left : this.items[i].item.offset().top; Math.abs(j - h) < f && (f = Math.abs(j - h), g = this.items[i], this.direction = j - h > 0 ? "down" : "up") } if (!g && !this.options.dropOnEmpty) return; this.currentContainer = this.containers[d], g ? this._rearrange(b, g, null, !0) : this._rearrange(b, null, this.containers[d].element, !0), this._trigger("change", b, this._uiHash()), this.containers[d]._trigger("change", b, this._uiHash(this)), this.options.placeholder.update(this.currentContainer, this.placeholder), this.containers[d]._trigger("over", b, this._uiHash(this)), this.containers[d].containerCache.over = 1 } }, _createHelper: function (b) { var c = this.options, d = a.isFunction(c.helper) ? a(c.helper.apply(this.element[0], [b, this.currentItem])) : c.helper == "clone" ? this.currentItem.clone() : this.currentItem; return d.parents("body").length || a(c.appendTo != "parent" ? c.appendTo : this.currentItem[0].parentNode)[0].appendChild(d[0]), d[0] == this.currentItem[0] && (this._storedCSS = { width: this.currentItem[0].style.width, height: this.currentItem[0].style.height, position: this.currentItem.css("position"), top: this.currentItem.css("top"), left: this.currentItem.css("left") }), (d[0].style.width == "" || c.forceHelperSize) && d.width(this.currentItem.width()), (d[0].style.height == "" || c.forceHelperSize) && d.height(this.currentItem.height()), d }, _adjustOffsetFromHelper: function (b) { typeof b == "string" && (b = b.split(" ")), a.isArray(b) && (b = { left: +b[0], top: +b[1] || 0 }), "left" in b && (this.offset.click.left = b.left + this.margins.left), "right" in b && (this.offset.click.left = this.helperProportions.width - b.right + this.margins.left), "top" in b && (this.offset.click.top = b.top + this.margins.top), "bottom" in b && (this.offset.click.top = this.helperProportions.height - b.bottom + this.margins.top) }, _getParentOffset: function () { this.offsetParent = this.helper.offsetParent(); var b = this.offsetParent.offset(); this.cssPosition == "absolute" && this.scrollParent[0] != document && a.ui.contains(this.scrollParent[0], this.offsetParent[0]) && (b.left += this.scrollParent.scrollLeft(), b.top += this.scrollParent.scrollTop()); if (this.offsetParent[0] == document.body || this.offsetParent[0].tagName && this.offsetParent[0].tagName.toLowerCase() == "html" && a.browser.msie) b = { top: 0, left: 0 }; return { top: b.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0), left: b.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0) } }, _getRelativeOffset: function () { if (this.cssPosition == "relative") { var a = this.currentItem.position(); return { top: a.top - (parseInt(this.helper.css("top"), 10) || 0) + this.scrollParent.scrollTop(), left: a.left - (parseInt(this.helper.css("left"), 10) || 0) + this.scrollParent.scrollLeft() } } return { top: 0, left: 0 } }, _cacheMargins: function () { this.margins = { left: parseInt(this.currentItem.css("marginLeft"), 10) || 0, top: parseInt(this.currentItem.css("marginTop"), 10) || 0 } }, _cacheHelperProportions: function () { this.helperProportions = { width: this.helper.outerWidth(), height: this.helper.outerHeight() } }, _setContainment: function () { var b = this.options; b.containment == "parent" && (b.containment = this.helper[0].parentNode); if (b.containment == "document" || b.containment == "window") this.containment = [0 - this.offset.relative.left - this.offset.parent.left, 0 - this.offset.relative.top - this.offset.parent.top, a(b.containment == "document" ? document : window).width() - this.helperProportions.width - this.margins.left, (a(b.containment == "document" ? document : window).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top]; if (!/^(document|window|parent)$/.test(b.containment)) { var c = a(b.containment)[0], d = a(b.containment).offset(), e = a(c).css("overflow") != "hidden"; this.containment = [d.left + (parseInt(a(c).css("borderLeftWidth"), 10) || 0) + (parseInt(a(c).css("paddingLeft"), 10) || 0) - this.margins.left, d.top + (parseInt(a(c).css("borderTopWidth"), 10) || 0) + (parseInt(a(c).css("paddingTop"), 10) || 0) - this.margins.top, d.left + (e ? Math.max(c.scrollWidth, c.offsetWidth) : c.offsetWidth) - (parseInt(a(c).css("borderLeftWidth"), 10) || 0) - (parseInt(a(c).css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left, d.top + (e ? Math.max(c.scrollHeight, c.offsetHeight) : c.offsetHeight) - (parseInt(a(c).css("borderTopWidth"), 10) || 0) - (parseInt(a(c).css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top] } }, _convertPositionTo: function (b, c) { c || (c = this.position); var d = b == "absolute" ? 1 : -1, e = this.options, f = this.cssPosition == "absolute" && (this.scrollParent[0] == document || !a.ui.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent, g = /(html|body)/i.test(f[0].tagName); return { top: c.top + this.offset.relative.top * d + this.offset.parent.top * d - (a.browser.safari && this.cssPosition == "fixed" ? 0 : (this.cssPosition == "fixed" ? -this.scrollParent.scrollTop() : g ? 0 : f.scrollTop()) * d), left: c.left + this.offset.relative.left * d + this.offset.parent.left * d - (a.browser.safari && this.cssPosition == "fixed" ? 0 : (this.cssPosition == "fixed" ? -this.scrollParent.scrollLeft() : g ? 0 : f.scrollLeft()) * d) } }, _generatePosition: function (b) { var c = this.options, d = this.cssPosition == "absolute" && (this.scrollParent[0] == document || !a.ui.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent, e = /(html|body)/i.test(d[0].tagName); this.cssPosition == "relative" && (this.scrollParent[0] == document || this.scrollParent[0] == this.offsetParent[0]) && (this.offset.relative = this._getRelativeOffset()); var f = b.pageX, g = b.pageY; if (this.originalPosition) { this.containment && (b.pageX - this.offset.click.left < this.containment[0] && (f = this.containment[0] + this.offset.click.left), b.pageY - this.offset.click.top < this.containment[1] && (g = this.containment[1] + this.offset.click.top), b.pageX - this.offset.click.left > this.containment[2] && (f = this.containment[2] + this.offset.click.left), b.pageY - this.offset.click.top > this.containment[3] && (g = this.containment[3] + this.offset.click.top)); if (c.grid) { var h = this.originalPageY + Math.round((g - this.originalPageY) / c.grid[1]) * c.grid[1]; g = this.containment ? h - this.offset.click.top < this.containment[1] || h - this.offset.click.top > this.containment[3] ? h - this.offset.click.top < this.containment[1] ? h + c.grid[1] : h - c.grid[1] : h : h; var i = this.originalPageX + Math.round((f - this.originalPageX) / c.grid[0]) * c.grid[0]; f = this.containment ? i - this.offset.click.left < this.containment[0] || i - this.offset.click.left > this.containment[2] ? i - this.offset.click.left < this.containment[0] ? i + c.grid[0] : i - c.grid[0] : i : i } } return { top: g - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + (a.browser.safari && this.cssPosition == "fixed" ? 0 : this.cssPosition == "fixed" ? -this.scrollParent.scrollTop() : e ? 0 : d.scrollTop()), left: f - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + (a.browser.safari && this.cssPosition == "fixed" ? 0 : this.cssPosition == "fixed" ? -this.scrollParent.scrollLeft() : e ? 0 : d.scrollLeft()) } }, _rearrange: function (a, b, c, d) { c ? c[0].appendChild(this.placeholder[0]) : b.item[0].parentNode.insertBefore(this.placeholder[0], this.direction == "down" ? b.item[0] : b.item[0].nextSibling), this.counter = this.counter ? ++this.counter : 1; var e = this, f = this.counter; window.setTimeout(function () { f == e.counter && e.refreshPositions(!d) }, 0) }, _clear: function (b, c) { this.reverting = !1; var d = [], e = this; !this._noFinalSort && this.currentItem.parent().length && this.placeholder.before(this.currentItem), this._noFinalSort = null; if (this.helper[0] == this.currentItem[0]) { for (var f in this._storedCSS) if (this._storedCSS[f] == "auto" || this._storedCSS[f] == "static") this._storedCSS[f] = ""; this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper") } else this.currentItem.show(); this.fromOutside && !c && d.push(function (a) { this._trigger("receive", a, this._uiHash(this.fromOutside)) }), (this.fromOutside || this.domPosition.prev != this.currentItem.prev().not(".ui-sortable-helper")[0] || this.domPosition.parent != this.currentItem.parent()[0]) && !c && d.push(function (a) { this._trigger("update", a, this._uiHash()) }); if (!a.ui.contains(this.element[0], this.currentItem[0])) { c || d.push(function (a) { this._trigger("remove", a, this._uiHash()) }); for (var f = this.containers.length - 1; f >= 0; f--) a.ui.contains(this.containers[f].element[0], this.currentItem[0]) && !c && (d.push(function (a) { return function (b) { a._trigger("receive", b, this._uiHash(this)) } }.call(this, this.containers[f])), d.push(function (a) { return function (b) { a._trigger("update", b, this._uiHash(this)) } }.call(this, this.containers[f]))) } for (var f = this.containers.length - 1; f >= 0; f--) c || d.push(function (a) { return function (b) { a._trigger("deactivate", b, this._uiHash(this)) } }.call(this, this.containers[f])), this.containers[f].containerCache.over && (d.push(function (a) { return function (b) { a._trigger("out", b, this._uiHash(this)) } }.call(this, this.containers[f])), this.containers[f].containerCache.over = 0); this._storedCursor && a("body").css("cursor", this._storedCursor), this._storedOpacity && this.helper.css("opacity", this._storedOpacity), this._storedZIndex && this.helper.css("zIndex", this._storedZIndex == "auto" ? "" : this._storedZIndex), this.dragging = !1; if (this.cancelHelperRemoval) { if (!c) { this._trigger("beforeStop", b, this._uiHash()); for (var f = 0; f < d.length; f++) d[f].call(this, b); this._trigger("stop", b, this._uiHash()) } return !1 } c || this._trigger("beforeStop", b, this._uiHash()), this.placeholder[0].parentNode.removeChild(this.placeholder[0]), this.helper[0] != this.currentItem[0] && this.helper.remove(), this.helper = null; if (!c) { for (var f = 0; f < d.length; f++) d[f].call(this, b); this._trigger("stop", b, this._uiHash()) } return this.fromOutside = !1, !0 }, _trigger: function () { a.Widget.prototype._trigger.apply(this, arguments) === !1 && this.cancel() }, _uiHash: function (b) { var c = b || this; return { helper: c.helper, placeholder: c.placeholder || a([]), position: c.position, originalPosition: c.originalPosition, offset: c.positionAbs, item: c.currentItem, sender: b ? b.element : null } } }), a.extend(a.ui.sortable, { version: "1.8.21" }) })(jQuery);;/*! jQuery UI - v1.8.21 - 2012-06-05
* https://github.com/jquery/jquery-ui
* Includes: jquery.ui.accordion.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function (a, b) { a.widget("ui.accordion", { options: { active: 0, animated: "slide", autoHeight: !0, clearStyle: !1, collapsible: !1, event: "click", fillSpace: !1, header: "> li > :first-child,> :not(li):even", icons: { header: "ui-icon-triangle-1-e", headerSelected: "ui-icon-triangle-1-s" }, navigation: !1, navigationFilter: function () { return this.href.toLowerCase() === location.href.toLowerCase() } }, _create: function () { var b = this, c = b.options; b.running = 0, b.element.addClass("ui-accordion ui-widget ui-helper-reset").children("li").addClass("ui-accordion-li-fix"), b.headers = b.element.find(c.header).addClass("ui-accordion-header ui-helper-reset ui-state-default ui-corner-all").bind("mouseenter.accordion", function () { if (c.disabled) return; a(this).addClass("ui-state-hover") }).bind("mouseleave.accordion", function () { if (c.disabled) return; a(this).removeClass("ui-state-hover") }).bind("focus.accordion", function () { if (c.disabled) return; a(this).addClass("ui-state-focus") }).bind("blur.accordion", function () { if (c.disabled) return; a(this).removeClass("ui-state-focus") }), b.headers.next().addClass("ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom"); if (c.navigation) { var d = b.element.find("a").filter(c.navigationFilter).eq(0); if (d.length) { var e = d.closest(".ui-accordion-header"); e.length ? b.active = e : b.active = d.closest(".ui-accordion-content").prev() } } b.active = b._findActive(b.active || c.active).addClass("ui-state-default ui-state-active").toggleClass("ui-corner-all").toggleClass("ui-corner-top"), b.active.next().addClass("ui-accordion-content-active"), b._createIcons(), b.resize(), b.element.attr("role", "tablist"), b.headers.attr("role", "tab").bind("keydown.accordion", function (a) { return b._keydown(a) }).next().attr("role", "tabpanel"), b.headers.not(b.active || "").attr({ "aria-expanded": "false", "aria-selected": "false", tabIndex: -1 }).next().hide(), b.active.length ? b.active.attr({ "aria-expanded": "true", "aria-selected": "true", tabIndex: 0 }) : b.headers.eq(0).attr("tabIndex", 0), a.browser.safari || b.headers.find("a").attr("tabIndex", -1), c.event && b.headers.bind(c.event.split(" ").join(".accordion ") + ".accordion", function (a) { b._clickHandler.call(b, a, this), a.preventDefault() }) }, _createIcons: function () { var b = this.options; b.icons && (a("<span></span>").addClass("ui-icon " + b.icons.header).prependTo(this.headers), this.active.children(".ui-icon").toggleClass(b.icons.header).toggleClass(b.icons.headerSelected), this.element.addClass("ui-accordion-icons")) }, _destroyIcons: function () { this.headers.children(".ui-icon").remove(), this.element.removeClass("ui-accordion-icons") }, destroy: function () { var b = this.options; this.element.removeClass("ui-accordion ui-widget ui-helper-reset").removeAttr("role"), this.headers.unbind(".accordion").removeClass("ui-accordion-header ui-accordion-disabled ui-helper-reset ui-state-default ui-corner-all ui-state-active ui-state-disabled ui-corner-top").removeAttr("role").removeAttr("aria-expanded").removeAttr("aria-selected").removeAttr("tabIndex"), this.headers.find("a").removeAttr("tabIndex"), this._destroyIcons(); var c = this.headers.next().css("display", "").removeAttr("role").removeClass("ui-helper-reset ui-widget-content ui-corner-bottom ui-accordion-content ui-accordion-content-active ui-accordion-disabled ui-state-disabled"); return (b.autoHeight || b.fillHeight) && c.css("height", ""), a.Widget.prototype.destroy.call(this) }, _setOption: function (b, c) { a.Widget.prototype._setOption.apply(this, arguments), b == "active" && this.activate(c), b == "icons" && (this._destroyIcons(), c && this._createIcons()), b == "disabled" && this.headers.add(this.headers.next())[c ? "addClass" : "removeClass"]("ui-accordion-disabled ui-state-disabled") }, _keydown: function (b) { if (this.options.disabled || b.altKey || b.ctrlKey) return; var c = a.ui.keyCode, d = this.headers.length, e = this.headers.index(b.target), f = !1; switch (b.keyCode) { case c.RIGHT: case c.DOWN: f = this.headers[(e + 1) % d]; break; case c.LEFT: case c.UP: f = this.headers[(e - 1 + d) % d]; break; case c.SPACE: case c.ENTER: this._clickHandler({ target: b.target }, b.target), b.preventDefault() } return f ? (a(b.target).attr("tabIndex", -1), a(f).attr("tabIndex", 0), f.focus(), !1) : !0 }, resize: function () { var b = this.options, c; if (b.fillSpace) { if (a.browser.msie) { var d = this.element.parent().css("overflow"); this.element.parent().css("overflow", "hidden") } c = this.element.parent().height(), a.browser.msie && this.element.parent().css("overflow", d), this.headers.each(function () { c -= a(this).outerHeight(!0) }), this.headers.next().each(function () { a(this).height(Math.max(0, c - a(this).innerHeight() + a(this).height())) }).css("overflow", "auto") } else b.autoHeight && (c = 0, this.headers.next().each(function () { c = Math.max(c, a(this).height("").height()) }).height(c)); return this }, activate: function (a) { this.options.active = a; var b = this._findActive(a)[0]; return this._clickHandler({ target: b }, b), this }, _findActive: function (b) { return b ? typeof b == "number" ? this.headers.filter(":eq(" + b + ")") : this.headers.not(this.headers.not(b)) : b === !1 ? a([]) : this.headers.filter(":eq(0)") }, _clickHandler: function (b, c) { var d = this.options; if (d.disabled) return; if (!b.target) { if (!d.collapsible) return; this.active.removeClass("ui-state-active ui-corner-top").addClass("ui-state-default ui-corner-all").children(".ui-icon").removeClass(d.icons.headerSelected).addClass(d.icons.header), this.active.next().addClass("ui-accordion-content-active"); var e = this.active.next(), f = { options: d, newHeader: a([]), oldHeader: d.active, newContent: a([]), oldContent: e }, g = this.active = a([]); this._toggle(g, e, f); return } var h = a(b.currentTarget || c), i = h[0] === this.active[0]; d.active = d.collapsible && i ? !1 : this.headers.index(h); if (this.running || !d.collapsible && i) return; var j = this.active, g = h.next(), e = this.active.next(), f = { options: d, newHeader: i && d.collapsible ? a([]) : h, oldHeader: this.active, newContent: i && d.collapsible ? a([]) : g, oldContent: e }, k = this.headers.index(this.active[0]) > this.headers.index(h[0]); this.active = i ? a([]) : h, this._toggle(g, e, f, i, k), j.removeClass("ui-state-active ui-corner-top").addClass("ui-state-default ui-corner-all").children(".ui-icon").removeClass(d.icons.headerSelected).addClass(d.icons.header), i || (h.removeClass("ui-state-default ui-corner-all").addClass("ui-state-active ui-corner-top").children(".ui-icon").removeClass(d.icons.header).addClass(d.icons.headerSelected), h.next().addClass("ui-accordion-content-active")); return }, _toggle: function (b, c, d, e, f) { var g = this, h = g.options; g.toShow = b, g.toHide = c, g.data = d; var i = function () { if (!g) return; return g._completed.apply(g, arguments) }; g._trigger("changestart", null, g.data), g.running = c.size() === 0 ? b.size() : c.size(); if (h.animated) { var j = {}; h.collapsible && e ? j = { toShow: a([]), toHide: c, complete: i, down: f, autoHeight: h.autoHeight || h.fillSpace } : j = { toShow: b, toHide: c, complete: i, down: f, autoHeight: h.autoHeight || h.fillSpace }, h.proxied || (h.proxied = h.animated), h.proxiedDuration || (h.proxiedDuration = h.duration), h.animated = a.isFunction(h.proxied) ? h.proxied(j) : h.proxied, h.duration = a.isFunction(h.proxiedDuration) ? h.proxiedDuration(j) : h.proxiedDuration; var k = a.ui.accordion.animations, l = h.duration, m = h.animated; m && !k[m] && !a.easing[m] && (m = "slide"), k[m] || (k[m] = function (a) { this.slide(a, { easing: m, duration: l || 700 }) }), k[m](j) } else h.collapsible && e ? b.toggle() : (c.hide(), b.show()), i(!0); c.prev().attr({ "aria-expanded": "false", "aria-selected": "false", tabIndex: -1 }).blur(), b.prev().attr({ "aria-expanded": "true", "aria-selected": "true", tabIndex: 0 }).focus() }, _completed: function (a) { this.running = a ? 0 : --this.running; if (this.running) return; this.options.clearStyle && this.toShow.add(this.toHide).css({ height: "", overflow: "" }), this.toHide.removeClass("ui-accordion-content-active"), this.toHide.length && (this.toHide.parent()[0].className = this.toHide.parent()[0].className), this._trigger("change", null, this.data) } }), a.extend(a.ui.accordion, { version: "1.8.21", animations: { slide: function (b, c) { b = a.extend({ easing: "swing", duration: 300 }, b, c); if (!b.toHide.size()) { b.toShow.animate({ height: "show", paddingTop: "show", paddingBottom: "show" }, b); return } if (!b.toShow.size()) { b.toHide.animate({ height: "hide", paddingTop: "hide", paddingBottom: "hide" }, b); return } var d = b.toShow.css("overflow"), e = 0, f = {}, g = {}, h = ["height", "paddingTop", "paddingBottom"], i, j = b.toShow; i = j[0].style.width, j.width(j.parent().width() - parseFloat(j.css("paddingLeft")) - parseFloat(j.css("paddingRight")) - (parseFloat(j.css("borderLeftWidth")) || 0) - (parseFloat(j.css("borderRightWidth")) || 0)), a.each(h, function (c, d) { g[d] = "hide"; var e = ("" + a.css(b.toShow[0], d)).match(/^([\d+-.]+)(.*)$/); f[d] = { value: e[1], unit: e[2] || "px" } }), b.toShow.css({ height: 0, overflow: "hidden" }).show(), b.toHide.filter(":hidden").each(b.complete).end().filter(":visible").animate(g, { step: function (a, c) { c.prop == "height" && (e = c.end - c.start === 0 ? 0 : (c.now - c.start) / (c.end - c.start)), b.toShow[0].style[c.prop] = e * f[c.prop].value + f[c.prop].unit }, duration: b.duration, easing: b.easing, complete: function () { b.autoHeight || b.toShow.css("height", ""), b.toShow.css({ width: i, overflow: d }), b.complete() } }) }, bounceslide: function (a) { this.slide(a, { easing: a.down ? "easeOutBounce" : "swing", duration: a.down ? 1e3 : 200 }) } } }) })(jQuery);;/*! jQuery UI - v1.8.21 - 2012-06-05
* https://github.com/jquery/jquery-ui
* Includes: jquery.ui.autocomplete.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function (a, b) {
    var c = 0;
    a.widget("ui.autocomplete", { options: { appendTo: "body", autoFocus: !1, delay: 300, minLength: 1, position: { my: "left top", at: "left bottom", collision: "none" }, source: null }, pending: 0, _create: function () { var b = this, c = this.element[0].ownerDocument, d; this.isMultiLine = this.element.is("textarea"), this.element.addClass("ui-autocomplete-input").attr("autocomplete", "off").attr({ role: "textbox", "aria-autocomplete": "list", "aria-haspopup": "true" }).bind("keydown.autocomplete", function (c) { if (b.options.disabled || b.element.propAttr("readOnly")) return; d = !1; var e = a.ui.keyCode; switch (c.keyCode) { case e.PAGE_UP: b._move("previousPage", c); break; case e.PAGE_DOWN: b._move("nextPage", c); break; case e.UP: b._keyEvent("previous", c); break; case e.DOWN: b._keyEvent("next", c); break; case e.ENTER: case e.NUMPAD_ENTER: b.menu.active && (d = !0, c.preventDefault()); case e.TAB: if (!b.menu.active) return; b.menu.select(c); break; case e.ESCAPE: b.element.val(b.term), b.close(c); break; default: clearTimeout(b.searching), b.searching = setTimeout(function () { b.term != b.element.val() && (b.selectedItem = null, b.search(null, c)) }, b.options.delay) } }).bind("keypress.autocomplete", function (a) { d && (d = !1, a.preventDefault()) }).bind("focus.autocomplete", function () { if (b.options.disabled) return; b.selectedItem = null, b.previous = b.element.val() }).bind("blur.autocomplete", function (a) { if (b.options.disabled) return; clearTimeout(b.searching), b.closing = setTimeout(function () { b.close(a), b._change(a) }, 150) }), this._initSource(), this.menu = a("<ul></ul>").addClass("ui-autocomplete").appendTo(a(this.options.appendTo || "body", c)[0]).mousedown(function (c) { var d = b.menu.element[0]; a(c.target).closest(".ui-menu-item").length || setTimeout(function () { a(document).one("mousedown", function (c) { c.target !== b.element[0] && c.target !== d && !a.ui.contains(d, c.target) && b.close() }) }, 1), setTimeout(function () { clearTimeout(b.closing) }, 13) }).menu({ focus: function (a, c) { var d = c.item.data("item.autocomplete"); !1 !== b._trigger("focus", a, { item: d }) && /^key/.test(a.originalEvent.type) && b.element.val(d.value) }, selected: function (a, d) { var e = d.item.data("item.autocomplete"), f = b.previous; b.element[0] !== c.activeElement && (b.element.focus(), b.previous = f, setTimeout(function () { b.previous = f, b.selectedItem = e }, 1)), !1 !== b._trigger("select", a, { item: e }) && b.element.val(e.value), b.term = b.element.val(), b.close(a), b.selectedItem = e }, blur: function (a, c) { b.menu.element.is(":visible") && b.element.val() !== b.term && b.element.val(b.term) } }).zIndex(this.element.zIndex() + 1).css({ top: 0, left: 0 }).hide().data("menu"), a.fn.bgiframe && this.menu.element.bgiframe(), b.beforeunloadHandler = function () { b.element.removeAttr("autocomplete") }, a(window).bind("beforeunload", b.beforeunloadHandler) }, destroy: function () { this.element.removeClass("ui-autocomplete-input").removeAttr("autocomplete").removeAttr("role").removeAttr("aria-autocomplete").removeAttr("aria-haspopup"), this.menu.element.remove(), a(window).unbind("beforeunload", this.beforeunloadHandler), a.Widget.prototype.destroy.call(this) }, _setOption: function (b, c) { a.Widget.prototype._setOption.apply(this, arguments), b === "source" && this._initSource(), b === "appendTo" && this.menu.element.appendTo(a(c || "body", this.element[0].ownerDocument)[0]), b === "disabled" && c && this.xhr && this.xhr.abort() }, _initSource: function () { var b = this, c, d; a.isArray(this.options.source) ? (c = this.options.source, this.source = function (b, d) { d(a.ui.autocomplete.filter(c, b.term)) }) : typeof this.options.source == "string" ? (d = this.options.source, this.source = function (c, e) { b.xhr && b.xhr.abort(), b.xhr = a.ajax({ url: d, data: c, dataType: "json", success: function (a, b) { e(a) }, error: function () { e([]) } }) }) : this.source = this.options.source }, search: function (a, b) { a = a != null ? a : this.element.val(), this.term = this.element.val(); if (a.length < this.options.minLength) return this.close(b); clearTimeout(this.closing); if (this._trigger("search", b) === !1) return; return this._search(a) }, _search: function (a) { this.pending++, this.element.addClass("ui-autocomplete-loading"), this.source({ term: a }, this._response()) }, _response: function () { var a = this, b = ++c; return function (d) { b === c && a.__response(d), a.pending--, a.pending || a.element.removeClass("ui-autocomplete-loading") } }, __response: function (a) { !this.options.disabled && a && a.length ? (a = this._normalize(a), this._suggest(a), this._trigger("open")) : this.close() }, close: function (a) { clearTimeout(this.closing), this.menu.element.is(":visible") && (this.menu.element.hide(), this.menu.deactivate(), this._trigger("close", a)) }, _change: function (a) { this.previous !== this.element.val() && this._trigger("change", a, { item: this.selectedItem }) }, _normalize: function (b) { return b.length && b[0].label && b[0].value ? b : a.map(b, function (b) { return typeof b == "string" ? { label: b, value: b } : a.extend({ label: b.label || b.value, value: b.value || b.label }, b) }) }, _suggest: function (b) { var c = this.menu.element.empty().zIndex(this.element.zIndex() + 1); this._renderMenu(c, b), this.menu.deactivate(), this.menu.refresh(), c.show(), this._resizeMenu(), c.position(a.extend({ of: this.element }, this.options.position)), this.options.autoFocus && this.menu.next(new a.Event("mouseover")) }, _resizeMenu: function () { var a = this.menu.element; a.outerWidth(Math.max(a.width("").outerWidth() + 1, this.element.outerWidth())) }, _renderMenu: function (b, c) { var d = this; a.each(c, function (a, c) { d._renderItem(b, c) }) }, _renderItem: function (b, c) { return a("<li></li>").data("item.autocomplete", c).append(a("<a></a>").text(c.label)).appendTo(b) }, _move: function (a, b) { if (!this.menu.element.is(":visible")) { this.search(null, b); return } if (this.menu.first() && /^previous/.test(a) || this.menu.last() && /^next/.test(a)) { this.element.val(this.term), this.menu.deactivate(); return } this.menu[a](b) }, widget: function () { return this.menu.element }, _keyEvent: function (a, b) { if (!this.isMultiLine || this.menu.element.is(":visible")) this._move(a, b), b.preventDefault() } }), a.extend(a.ui.autocomplete, { escapeRegex: function (a) { return a.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&") }, filter: function (b, c) { var d = new RegExp(a.ui.autocomplete.escapeRegex(c), "i"); return a.grep(b, function (a) { return d.test(a.label || a.value || a) }) } })
})(jQuery), function (a) { a.widget("ui.menu", { _create: function () { var b = this; this.element.addClass("ui-menu ui-widget ui-widget-content ui-corner-all").attr({ role: "listbox", "aria-activedescendant": "ui-active-menuitem" }).click(function (c) { if (!a(c.target).closest(".ui-menu-item a").length) return; c.preventDefault(), b.select(c) }), this.refresh() }, refresh: function () { var b = this, c = this.element.children("li:not(.ui-menu-item):has(a)").addClass("ui-menu-item").attr("role", "menuitem"); c.children("a").addClass("ui-corner-all").attr("tabindex", -1).mouseenter(function (c) { b.activate(c, a(this).parent()) }).mouseleave(function () { b.deactivate() }) }, activate: function (a, b) { this.deactivate(); if (this.hasScroll()) { var c = b.offset().top - this.element.offset().top, d = this.element.scrollTop(), e = this.element.height(); c < 0 ? this.element.scrollTop(d + c) : c >= e && this.element.scrollTop(d + c - e + b.height()) } this.active = b.eq(0).children("a").addClass("ui-state-hover").attr("id", "ui-active-menuitem").end(), this._trigger("focus", a, { item: b }) }, deactivate: function () { if (!this.active) return; this.active.children("a").removeClass("ui-state-hover").removeAttr("id"), this._trigger("blur"), this.active = null }, next: function (a) { this.move("next", ".ui-menu-item:first", a) }, previous: function (a) { this.move("prev", ".ui-menu-item:last", a) }, first: function () { return this.active && !this.active.prevAll(".ui-menu-item").length }, last: function () { return this.active && !this.active.nextAll(".ui-menu-item").length }, move: function (a, b, c) { if (!this.active) { this.activate(c, this.element.children(b)); return } var d = this.active[a + "All"](".ui-menu-item").eq(0); d.length ? this.activate(c, d) : this.activate(c, this.element.children(b)) }, nextPage: function (b) { if (this.hasScroll()) { if (!this.active || this.last()) { this.activate(b, this.element.children(".ui-menu-item:first")); return } var c = this.active.offset().top, d = this.element.height(), e = this.element.children(".ui-menu-item").filter(function () { var b = a(this).offset().top - c - d + a(this).height(); return b < 10 && b > -10 }); e.length || (e = this.element.children(".ui-menu-item:last")), this.activate(b, e) } else this.activate(b, this.element.children(".ui-menu-item").filter(!this.active || this.last() ? ":first" : ":last")) }, previousPage: function (b) { if (this.hasScroll()) { if (!this.active || this.first()) { this.activate(b, this.element.children(".ui-menu-item:last")); return } var c = this.active.offset().top, d = this.element.height(), e = this.element.children(".ui-menu-item").filter(function () { var b = a(this).offset().top - c + d - a(this).height(); return b < 10 && b > -10 }); e.length || (e = this.element.children(".ui-menu-item:first")), this.activate(b, e) } else this.activate(b, this.element.children(".ui-menu-item").filter(!this.active || this.first() ? ":last" : ":first")) }, hasScroll: function () { return this.element.height() < this.element[a.fn.prop ? "prop" : "attr"]("scrollHeight") }, select: function (a) { this._trigger("selected", a, { item: this.active }) } }) }(jQuery);;/*! jQuery UI - v1.8.21 - 2012-06-05
* https://github.com/jquery/jquery-ui
* Includes: jquery.ui.button.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function (a, b) { var c, d, e, f, g = "ui-button ui-widget ui-state-default ui-corner-all", h = "ui-state-hover ui-state-active ", i = "ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only", j = function () { var b = a(this).find(":ui-button"); setTimeout(function () { b.button("refresh") }, 1) }, k = function (b) { var c = b.name, d = b.form, e = a([]); return c && (d ? e = a(d).find("[name='" + c + "']") : e = a("[name='" + c + "']", b.ownerDocument).filter(function () { return !this.form })), e }; a.widget("ui.button", { options: { disabled: null, text: !0, label: null, icons: { primary: null, secondary: null } }, _create: function () { this.element.closest("form").unbind("reset.button").bind("reset.button", j), typeof this.options.disabled != "boolean" ? this.options.disabled = !!this.element.propAttr("disabled") : this.element.propAttr("disabled", this.options.disabled), this._determineButtonType(), this.hasTitle = !!this.buttonElement.attr("title"); var b = this, h = this.options, i = this.type === "checkbox" || this.type === "radio", l = "ui-state-hover" + (i ? "" : " ui-state-active"), m = "ui-state-focus"; h.label === null && (h.label = this.buttonElement.html()), this.buttonElement.addClass(g).attr("role", "button").bind("mouseenter.button", function () { if (h.disabled) return; a(this).addClass("ui-state-hover"), this === c && a(this).addClass("ui-state-active") }).bind("mouseleave.button", function () { if (h.disabled) return; a(this).removeClass(l) }).bind("click.button", function (a) { h.disabled && (a.preventDefault(), a.stopImmediatePropagation()) }), this.element.bind("focus.button", function () { b.buttonElement.addClass(m) }).bind("blur.button", function () { b.buttonElement.removeClass(m) }), i && (this.element.bind("change.button", function () { if (f) return; b.refresh() }), this.buttonElement.bind("mousedown.button", function (a) { if (h.disabled) return; f = !1, d = a.pageX, e = a.pageY }).bind("mouseup.button", function (a) { if (h.disabled) return; if (d !== a.pageX || e !== a.pageY) f = !0 })), this.type === "checkbox" ? this.buttonElement.bind("click.button", function () { if (h.disabled || f) return !1; a(this).toggleClass("ui-state-active"), b.buttonElement.attr("aria-pressed", b.element[0].checked) }) : this.type === "radio" ? this.buttonElement.bind("click.button", function () { if (h.disabled || f) return !1; a(this).addClass("ui-state-active"), b.buttonElement.attr("aria-pressed", "true"); var c = b.element[0]; k(c).not(c).map(function () { return a(this).button("widget")[0] }).removeClass("ui-state-active").attr("aria-pressed", "false") }) : (this.buttonElement.bind("mousedown.button", function () { if (h.disabled) return !1; a(this).addClass("ui-state-active"), c = this, a(document).one("mouseup", function () { c = null }) }).bind("mouseup.button", function () { if (h.disabled) return !1; a(this).removeClass("ui-state-active") }).bind("keydown.button", function (b) { if (h.disabled) return !1; (b.keyCode == a.ui.keyCode.SPACE || b.keyCode == a.ui.keyCode.ENTER) && a(this).addClass("ui-state-active") }).bind("keyup.button", function () { a(this).removeClass("ui-state-active") }), this.buttonElement.is("a") && this.buttonElement.keyup(function (b) { b.keyCode === a.ui.keyCode.SPACE && a(this).click() })), this._setOption("disabled", h.disabled), this._resetButton() }, _determineButtonType: function () { this.element.is(":checkbox") ? this.type = "checkbox" : this.element.is(":radio") ? this.type = "radio" : this.element.is("input") ? this.type = "input" : this.type = "button"; if (this.type === "checkbox" || this.type === "radio") { var a = this.element.parents().filter(":last"), b = "label[for='" + this.element.attr("id") + "']"; this.buttonElement = a.find(b), this.buttonElement.length || (a = a.length ? a.siblings() : this.element.siblings(), this.buttonElement = a.filter(b), this.buttonElement.length || (this.buttonElement = a.find(b))), this.element.addClass("ui-helper-hidden-accessible"); var c = this.element.is(":checked"); c && this.buttonElement.addClass("ui-state-active"), this.buttonElement.attr("aria-pressed", c) } else this.buttonElement = this.element }, widget: function () { return this.buttonElement }, destroy: function () { this.element.removeClass("ui-helper-hidden-accessible"), this.buttonElement.removeClass(g + " " + h + " " + i).removeAttr("role").removeAttr("aria-pressed").html(this.buttonElement.find(".ui-button-text").html()), this.hasTitle || this.buttonElement.removeAttr("title"), a.Widget.prototype.destroy.call(this) }, _setOption: function (b, c) { a.Widget.prototype._setOption.apply(this, arguments); if (b === "disabled") { c ? this.element.propAttr("disabled", !0) : this.element.propAttr("disabled", !1); return } this._resetButton() }, refresh: function () { var b = this.element.is(":disabled"); b !== this.options.disabled && this._setOption("disabled", b), this.type === "radio" ? k(this.element[0]).each(function () { a(this).is(":checked") ? a(this).button("widget").addClass("ui-state-active").attr("aria-pressed", "true") : a(this).button("widget").removeClass("ui-state-active").attr("aria-pressed", "false") }) : this.type === "checkbox" && (this.element.is(":checked") ? this.buttonElement.addClass("ui-state-active").attr("aria-pressed", "true") : this.buttonElement.removeClass("ui-state-active").attr("aria-pressed", "false")) }, _resetButton: function () { if (this.type === "input") { this.options.label && this.element.val(this.options.label); return } var b = this.buttonElement.removeClass(i), c = a("<span></span>", this.element[0].ownerDocument).addClass("ui-button-text").html(this.options.label).appendTo(b.empty()).text(), d = this.options.icons, e = d.primary && d.secondary, f = []; d.primary || d.secondary ? (this.options.text && f.push("ui-button-text-icon" + (e ? "s" : d.primary ? "-primary" : "-secondary")), d.primary && b.prepend("<span class='ui-button-icon-primary ui-icon " + d.primary + "'></span>"), d.secondary && b.append("<span class='ui-button-icon-secondary ui-icon " + d.secondary + "'></span>"), this.options.text || (f.push(e ? "ui-button-icons-only" : "ui-button-icon-only"), this.hasTitle || b.attr("title", c))) : f.push("ui-button-text-only"), b.addClass(f.join(" ")) } }), a.widget("ui.buttonset", { options: { items: ":button, :submit, :reset, :checkbox, :radio, a, :data(button)" }, _create: function () { this.element.addClass("ui-buttonset") }, _init: function () { this.refresh() }, _setOption: function (b, c) { b === "disabled" && this.buttons.button("option", b, c), a.Widget.prototype._setOption.apply(this, arguments) }, refresh: function () { var b = this.element.css("direction") === "rtl"; this.buttons = this.element.find(this.options.items).filter(":ui-button").button("refresh").end().not(":ui-button").button().end().map(function () { return a(this).button("widget")[0] }).removeClass("ui-corner-all ui-corner-left ui-corner-right").filter(":first").addClass(b ? "ui-corner-right" : "ui-corner-left").end().filter(":last").addClass(b ? "ui-corner-left" : "ui-corner-right").end().end() }, destroy: function () { this.element.removeClass("ui-buttonset"), this.buttons.map(function () { return a(this).button("widget")[0] }).removeClass("ui-corner-left ui-corner-right").end().button("destroy"), a.Widget.prototype.destroy.call(this) } }) })(jQuery);;/*! jQuery UI - v1.8.21 - 2012-06-05
* https://github.com/jquery/jquery-ui
* Includes: jquery.ui.dialog.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function (a, b) { var c = "ui-dialog ui-widget ui-widget-content ui-corner-all ", d = { buttons: !0, height: !0, maxHeight: !0, maxWidth: !0, minHeight: !0, minWidth: !0, width: !0 }, e = { maxHeight: !0, maxWidth: !0, minHeight: !0, minWidth: !0 }, f = a.attrFn || { val: !0, css: !0, html: !0, text: !0, data: !0, width: !0, height: !0, offset: !0, click: !0 }; a.widget("ui.dialog", { options: { autoOpen: !0, buttons: {}, closeOnEscape: !0, closeText: "close", dialogClass: "", draggable: !0, hide: null, height: "auto", maxHeight: !1, maxWidth: !1, minHeight: 150, minWidth: 150, modal: !1, position: { my: "center", at: "center", collision: "fit", using: function (b) { var c = a(this).css(b).offset().top; c < 0 && a(this).css("top", b.top - c) } }, resizable: !0, show: null, stack: !0, title: "", width: 300, zIndex: 1e3 }, _create: function () { this.originalTitle = this.element.attr("title"), typeof this.originalTitle != "string" && (this.originalTitle = ""), this.options.title = this.options.title || this.originalTitle; var b = this, d = b.options, e = d.title || "&#160;", f = a.ui.dialog.getTitleId(b.element), g = (b.uiDialog = a("<div></div>")).appendTo(document.body).hide().addClass(c + d.dialogClass).css({ zIndex: d.zIndex }).attr("tabIndex", -1).css("outline", 0).keydown(function (c) { d.closeOnEscape && !c.isDefaultPrevented() && c.keyCode && c.keyCode === a.ui.keyCode.ESCAPE && (b.close(c), c.preventDefault()) }).attr({ role: "dialog", "aria-labelledby": f }).mousedown(function (a) { b.moveToTop(!1, a) }), h = b.element.show().removeAttr("title").addClass("ui-dialog-content ui-widget-content").appendTo(g), i = (b.uiDialogTitlebar = a("<div></div>")).addClass("ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix").prependTo(g), j = a('<a href="#"></a>').addClass("ui-dialog-titlebar-close ui-corner-all").attr("role", "button").hover(function () { j.addClass("ui-state-hover") }, function () { j.removeClass("ui-state-hover") }).focus(function () { j.addClass("ui-state-focus") }).blur(function () { j.removeClass("ui-state-focus") }).click(function (a) { return b.close(a), !1 }).appendTo(i), k = (b.uiDialogTitlebarCloseText = a("<span></span>")).addClass("ui-icon ui-icon-closethick").text(d.closeText).appendTo(j), l = a("<span></span>").addClass("ui-dialog-title").attr("id", f).html(e).prependTo(i); a.isFunction(d.beforeclose) && !a.isFunction(d.beforeClose) && (d.beforeClose = d.beforeclose), i.find("*").add(i).disableSelection(), d.draggable && a.fn.draggable && b._makeDraggable(), d.resizable && a.fn.resizable && b._makeResizable(), b._createButtons(d.buttons), b._isOpen = !1, a.fn.bgiframe && g.bgiframe() }, _init: function () { this.options.autoOpen && this.open() }, destroy: function () { var a = this; return a.overlay && a.overlay.destroy(), a.uiDialog.hide(), a.element.unbind(".dialog").removeData("dialog").removeClass("ui-dialog-content ui-widget-content").hide().appendTo("body"), a.uiDialog.remove(), a.originalTitle && a.element.attr("title", a.originalTitle), a }, widget: function () { return this.uiDialog }, close: function (b) { var c = this, d, e; if (!1 === c._trigger("beforeClose", b)) return; return c.overlay && c.overlay.destroy(), c.uiDialog.unbind("keypress.ui-dialog"), c._isOpen = !1, c.options.hide ? c.uiDialog.hide(c.options.hide, function () { c._trigger("close", b) }) : (c.uiDialog.hide(), c._trigger("close", b)), a.ui.dialog.overlay.resize(), c.options.modal && (d = 0, a(".ui-dialog").each(function () { this !== c.uiDialog[0] && (e = a(this).css("z-index"), isNaN(e) || (d = Math.max(d, e))) }), a.ui.dialog.maxZ = d), c }, isOpen: function () { return this._isOpen }, moveToTop: function (b, c) { var d = this, e = d.options, f; return e.modal && !b || !e.stack && !e.modal ? d._trigger("focus", c) : (e.zIndex > a.ui.dialog.maxZ && (a.ui.dialog.maxZ = e.zIndex), d.overlay && (a.ui.dialog.maxZ += 1, d.overlay.$el.css("z-index", a.ui.dialog.overlay.maxZ = a.ui.dialog.maxZ)), f = { scrollTop: d.element.scrollTop(), scrollLeft: d.element.scrollLeft() }, a.ui.dialog.maxZ += 1, d.uiDialog.css("z-index", a.ui.dialog.maxZ), d.element.attr(f), d._trigger("focus", c), d) }, open: function () { if (this._isOpen) return; var b = this, c = b.options, d = b.uiDialog; return b.overlay = c.modal ? new a.ui.dialog.overlay(b) : null, b._size(), b._position(c.position), d.show(c.show), b.moveToTop(!0), c.modal && d.bind("keydown.ui-dialog", function (b) { if (b.keyCode !== a.ui.keyCode.TAB) return; var c = a(":tabbable", this), d = c.filter(":first"), e = c.filter(":last"); if (b.target === e[0] && !b.shiftKey) return d.focus(1), !1; if (b.target === d[0] && b.shiftKey) return e.focus(1), !1 }), a(b.element.find(":tabbable").get().concat(d.find(".ui-dialog-buttonpane :tabbable").get().concat(d.get()))).eq(0).focus(), b._isOpen = !0, b._trigger("open"), b }, _createButtons: function (b) { var c = this, d = !1, e = a("<div></div>").addClass("ui-dialog-buttonpane ui-widget-content ui-helper-clearfix"), g = a("<div></div>").addClass("ui-dialog-buttonset").appendTo(e); c.uiDialog.find(".ui-dialog-buttonpane").remove(), typeof b == "object" && b !== null && a.each(b, function () { return !(d = !0) }), d && (a.each(b, function (b, d) { d = a.isFunction(d) ? { click: d, text: b } : d; var e = a('<button type="button"></button>').click(function () { d.click.apply(c.element[0], arguments) }).appendTo(g); a.each(d, function (a, b) { if (a === "click") return; a in f ? e[a](b) : e.attr(a, b) }), a.fn.button && e.button() }), e.appendTo(c.uiDialog)) }, _makeDraggable: function () { function f(a) { return { position: a.position, offset: a.offset } } var b = this, c = b.options, d = a(document), e; b.uiDialog.draggable({ cancel: ".ui-dialog-content, .ui-dialog-titlebar-close", handle: ".ui-dialog-titlebar", containment: "document", start: function (d, g) { e = c.height === "auto" ? "auto" : a(this).height(), a(this).height(a(this).height()).addClass("ui-dialog-dragging"), b._trigger("dragStart", d, f(g)) }, drag: function (a, c) { b._trigger("drag", a, f(c)) }, stop: function (g, h) { c.position = [h.position.left - d.scrollLeft(), h.position.top - d.scrollTop()], a(this).removeClass("ui-dialog-dragging").height(e), b._trigger("dragStop", g, f(h)), a.ui.dialog.overlay.resize() } }) }, _makeResizable: function (c) { function h(a) { return { originalPosition: a.originalPosition, originalSize: a.originalSize, position: a.position, size: a.size } } c = c === b ? this.options.resizable : c; var d = this, e = d.options, f = d.uiDialog.css("position"), g = typeof c == "string" ? c : "n,e,s,w,se,sw,ne,nw"; d.uiDialog.resizable({ cancel: ".ui-dialog-content", containment: "document", alsoResize: d.element, maxWidth: e.maxWidth, maxHeight: e.maxHeight, minWidth: e.minWidth, minHeight: d._minHeight(), handles: g, start: function (b, c) { a(this).addClass("ui-dialog-resizing"), d._trigger("resizeStart", b, h(c)) }, resize: function (a, b) { d._trigger("resize", a, h(b)) }, stop: function (b, c) { a(this).removeClass("ui-dialog-resizing"), e.height = a(this).height(), e.width = a(this).width(), d._trigger("resizeStop", b, h(c)), a.ui.dialog.overlay.resize() } }).css("position", f).find(".ui-resizable-se").addClass("ui-icon ui-icon-grip-diagonal-se") }, _minHeight: function () { var a = this.options; return a.height === "auto" ? a.minHeight : Math.min(a.minHeight, a.height) }, _position: function (b) { var c = [], d = [0, 0], e; if (b) { if (typeof b == "string" || typeof b == "object" && "0" in b) c = b.split ? b.split(" ") : [b[0], b[1]], c.length === 1 && (c[1] = c[0]), a.each(["left", "top"], function (a, b) { +c[a] === c[a] && (d[a] = c[a], c[a] = b) }), b = { my: c.join(" "), at: c.join(" "), offset: d.join(" ") }; b = a.extend({}, a.ui.dialog.prototype.options.position, b) } else b = a.ui.dialog.prototype.options.position; e = this.uiDialog.is(":visible"), e || this.uiDialog.show(), this.uiDialog.css({ top: 0, left: 0 }).position(a.extend({ of: window }, b)), e || this.uiDialog.hide() }, _setOptions: function (b) { var c = this, f = {}, g = !1; a.each(b, function (a, b) { c._setOption(a, b), a in d && (g = !0), a in e && (f[a] = b) }), g && this._size(), this.uiDialog.is(":data(resizable)") && this.uiDialog.resizable("option", f) }, _setOption: function (b, d) { var e = this, f = e.uiDialog; switch (b) { case "beforeclose": b = "beforeClose"; break; case "buttons": e._createButtons(d); break; case "closeText": e.uiDialogTitlebarCloseText.text("" + d); break; case "dialogClass": f.removeClass(e.options.dialogClass).addClass(c + d); break; case "disabled": d ? f.addClass("ui-dialog-disabled") : f.removeClass("ui-dialog-disabled"); break; case "draggable": var g = f.is(":data(draggable)"); g && !d && f.draggable("destroy"), !g && d && e._makeDraggable(); break; case "position": e._position(d); break; case "resizable": var h = f.is(":data(resizable)"); h && !d && f.resizable("destroy"), h && typeof d == "string" && f.resizable("option", "handles", d), !h && d !== !1 && e._makeResizable(d); break; case "title": a(".ui-dialog-title", e.uiDialogTitlebar).html("" + (d || "&#160;")) } a.Widget.prototype._setOption.apply(e, arguments) }, _size: function () { var b = this.options, c, d, e = this.uiDialog.is(":visible"); this.element.show().css({ width: "auto", minHeight: 0, height: 0 }), b.minWidth > b.width && (b.width = b.minWidth), c = this.uiDialog.css({ height: "auto", width: b.width }).height(), d = Math.max(0, b.minHeight - c); if (b.height === "auto") if (a.support.minHeight) this.element.css({ minHeight: d, height: "auto" }); else { this.uiDialog.show(); var f = this.element.css("height", "auto").height(); e || this.uiDialog.hide(), this.element.height(Math.max(f, d)) } else this.element.height(Math.max(b.height - c, 0)); this.uiDialog.is(":data(resizable)") && this.uiDialog.resizable("option", "minHeight", this._minHeight()) } }), a.extend(a.ui.dialog, { version: "1.8.21", uuid: 0, maxZ: 0, getTitleId: function (a) { var b = a.attr("id"); return b || (this.uuid += 1, b = this.uuid), "ui-dialog-title-" + b }, overlay: function (b) { this.$el = a.ui.dialog.overlay.create(b) } }), a.extend(a.ui.dialog.overlay, { instances: [], oldInstances: [], maxZ: 0, events: a.map("focus,mousedown,mouseup,keydown,keypress,click".split(","), function (a) { return a + ".dialog-overlay" }).join(" "), create: function (b) { this.instances.length === 0 && (setTimeout(function () { a.ui.dialog.overlay.instances.length && a(document).bind(a.ui.dialog.overlay.events, function (b) { if (a(b.target).zIndex() < a.ui.dialog.overlay.maxZ) return !1 }) }, 1), a(document).bind("keydown.dialog-overlay", function (c) { b.options.closeOnEscape && !c.isDefaultPrevented() && c.keyCode && c.keyCode === a.ui.keyCode.ESCAPE && (b.close(c), c.preventDefault()) }), a(window).bind("resize.dialog-overlay", a.ui.dialog.overlay.resize)); var c = (this.oldInstances.pop() || a("<div></div>").addClass("ui-widget-overlay")).appendTo(document.body).css({ width: this.width(), height: this.height() }); return a.fn.bgiframe && c.bgiframe(), this.instances.push(c), c }, destroy: function (b) { var c = a.inArray(b, this.instances); c != -1 && this.oldInstances.push(this.instances.splice(c, 1)[0]), this.instances.length === 0 && a([document, window]).unbind(".dialog-overlay"), b.remove(); var d = 0; a.each(this.instances, function () { d = Math.max(d, this.css("z-index")) }), this.maxZ = d }, height: function () { var b, c; return a.browser.msie && a.browser.version < 7 ? (b = Math.max(document.documentElement.scrollHeight, document.body.scrollHeight), c = Math.max(document.documentElement.offsetHeight, document.body.offsetHeight), b < c ? a(window).height() + "px" : b + "px") : a(document).height() + "px" }, width: function () { var b, c; return a.browser.msie ? (b = Math.max(document.documentElement.scrollWidth, document.body.scrollWidth), c = Math.max(document.documentElement.offsetWidth, document.body.offsetWidth), b < c ? a(window).width() + "px" : b + "px") : a(document).width() + "px" }, resize: function () { var b = a([]); a.each(a.ui.dialog.overlay.instances, function () { b = b.add(this) }), b.css({ width: 0, height: 0 }).css({ width: a.ui.dialog.overlay.width(), height: a.ui.dialog.overlay.height() }) } }), a.extend(a.ui.dialog.overlay.prototype, { destroy: function () { a.ui.dialog.overlay.destroy(this.$el) } }) })(jQuery);;/*! jQuery UI - v1.8.21 - 2012-06-05
* https://github.com/jquery/jquery-ui
* Includes: jquery.ui.slider.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function (a, b) { var c = 5; a.widget("ui.slider", a.ui.mouse, { widgetEventPrefix: "slide", options: { animate: !1, distance: 0, max: 100, min: 0, orientation: "horizontal", range: !1, step: 1, value: 0, values: null }, _create: function () { var b = this, d = this.options, e = this.element.find(".ui-slider-handle").addClass("ui-state-default ui-corner-all"), f = "<a class='ui-slider-handle ui-state-default ui-corner-all' href='#'></a>", g = d.values && d.values.length || 1, h = []; this._keySliding = !1, this._mouseSliding = !1, this._animateOff = !0, this._handleIndex = null, this._detectOrientation(), this._mouseInit(), this.element.addClass("ui-slider ui-slider-" + this.orientation + " ui-widget" + " ui-widget-content" + " ui-corner-all" + (d.disabled ? " ui-slider-disabled ui-disabled" : "")), this.range = a([]), d.range && (d.range === !0 && (d.values || (d.values = [this._valueMin(), this._valueMin()]), d.values.length && d.values.length !== 2 && (d.values = [d.values[0], d.values[0]])), this.range = a("<div></div>").appendTo(this.element).addClass("ui-slider-range ui-widget-header" + (d.range === "min" || d.range === "max" ? " ui-slider-range-" + d.range : ""))); for (var i = e.length; i < g; i += 1) h.push(f); this.handles = e.add(a(h.join("")).appendTo(b.element)), this.handle = this.handles.eq(0), this.handles.add(this.range).filter("a").click(function (a) { a.preventDefault() }).hover(function () { d.disabled || a(this).addClass("ui-state-hover") }, function () { a(this).removeClass("ui-state-hover") }).focus(function () { d.disabled ? a(this).blur() : (a(".ui-slider .ui-state-focus").removeClass("ui-state-focus"), a(this).addClass("ui-state-focus")) }).blur(function () { a(this).removeClass("ui-state-focus") }), this.handles.each(function (b) { a(this).data("index.ui-slider-handle", b) }), this.handles.keydown(function (d) { var e = a(this).data("index.ui-slider-handle"), f, g, h, i; if (b.options.disabled) return; switch (d.keyCode) { case a.ui.keyCode.HOME: case a.ui.keyCode.END: case a.ui.keyCode.PAGE_UP: case a.ui.keyCode.PAGE_DOWN: case a.ui.keyCode.UP: case a.ui.keyCode.RIGHT: case a.ui.keyCode.DOWN: case a.ui.keyCode.LEFT: d.preventDefault(); if (!b._keySliding) { b._keySliding = !0, a(this).addClass("ui-state-active"), f = b._start(d, e); if (f === !1) return } } i = b.options.step, b.options.values && b.options.values.length ? g = h = b.values(e) : g = h = b.value(); switch (d.keyCode) { case a.ui.keyCode.HOME: h = b._valueMin(); break; case a.ui.keyCode.END: h = b._valueMax(); break; case a.ui.keyCode.PAGE_UP: h = b._trimAlignValue(g + (b._valueMax() - b._valueMin()) / c); break; case a.ui.keyCode.PAGE_DOWN: h = b._trimAlignValue(g - (b._valueMax() - b._valueMin()) / c); break; case a.ui.keyCode.UP: case a.ui.keyCode.RIGHT: if (g === b._valueMax()) return; h = b._trimAlignValue(g + i); break; case a.ui.keyCode.DOWN: case a.ui.keyCode.LEFT: if (g === b._valueMin()) return; h = b._trimAlignValue(g - i) } b._slide(d, e, h) }).keyup(function (c) { var d = a(this).data("index.ui-slider-handle"); b._keySliding && (b._keySliding = !1, b._stop(c, d), b._change(c, d), a(this).removeClass("ui-state-active")) }), this._refreshValue(), this._animateOff = !1 }, destroy: function () { return this.handles.remove(), this.range.remove(), this.element.removeClass("ui-slider ui-slider-horizontal ui-slider-vertical ui-slider-disabled ui-widget ui-widget-content ui-corner-all").removeData("slider").unbind(".slider"), this._mouseDestroy(), this }, _mouseCapture: function (b) { var c = this.options, d, e, f, g, h, i, j, k, l; return c.disabled ? !1 : (this.elementSize = { width: this.element.outerWidth(), height: this.element.outerHeight() }, this.elementOffset = this.element.offset(), d = { x: b.pageX, y: b.pageY }, e = this._normValueFromMouse(d), f = this._valueMax() - this._valueMin() + 1, h = this, this.handles.each(function (b) { var c = Math.abs(e - h.values(b)); f > c && (f = c, g = a(this), i = b) }), c.range === !0 && this.values(1) === c.min && (i += 1, g = a(this.handles[i])), j = this._start(b, i), j === !1 ? !1 : (this._mouseSliding = !0, h._handleIndex = i, g.addClass("ui-state-active").focus(), k = g.offset(), l = !a(b.target).parents().andSelf().is(".ui-slider-handle"), this._clickOffset = l ? { left: 0, top: 0 } : { left: b.pageX - k.left - g.width() / 2, top: b.pageY - k.top - g.height() / 2 - (parseInt(g.css("borderTopWidth"), 10) || 0) - (parseInt(g.css("borderBottomWidth"), 10) || 0) + (parseInt(g.css("marginTop"), 10) || 0) }, this.handles.hasClass("ui-state-hover") || this._slide(b, i, e), this._animateOff = !0, !0)) }, _mouseStart: function (a) { return !0 }, _mouseDrag: function (a) { var b = { x: a.pageX, y: a.pageY }, c = this._normValueFromMouse(b); return this._slide(a, this._handleIndex, c), !1 }, _mouseStop: function (a) { return this.handles.removeClass("ui-state-active"), this._mouseSliding = !1, this._stop(a, this._handleIndex), this._change(a, this._handleIndex), this._handleIndex = null, this._clickOffset = null, this._animateOff = !1, !1 }, _detectOrientation: function () { this.orientation = this.options.orientation === "vertical" ? "vertical" : "horizontal" }, _normValueFromMouse: function (a) { var b, c, d, e, f; return this.orientation === "horizontal" ? (b = this.elementSize.width, c = a.x - this.elementOffset.left - (this._clickOffset ? this._clickOffset.left : 0)) : (b = this.elementSize.height, c = a.y - this.elementOffset.top - (this._clickOffset ? this._clickOffset.top : 0)), d = c / b, d > 1 && (d = 1), d < 0 && (d = 0), this.orientation === "vertical" && (d = 1 - d), e = this._valueMax() - this._valueMin(), f = this._valueMin() + d * e, this._trimAlignValue(f) }, _start: function (a, b) { var c = { handle: this.handles[b], value: this.value() }; return this.options.values && this.options.values.length && (c.value = this.values(b), c.values = this.values()), this._trigger("start", a, c) }, _slide: function (a, b, c) { var d, e, f; this.options.values && this.options.values.length ? (d = this.values(b ? 0 : 1), this.options.values.length === 2 && this.options.range === !0 && (b === 0 && c > d || b === 1 && c < d) && (c = d), c !== this.values(b) && (e = this.values(), e[b] = c, f = this._trigger("slide", a, { handle: this.handles[b], value: c, values: e }), d = this.values(b ? 0 : 1), f !== !1 && this.values(b, c, !0))) : c !== this.value() && (f = this._trigger("slide", a, { handle: this.handles[b], value: c }), f !== !1 && this.value(c)) }, _stop: function (a, b) { var c = { handle: this.handles[b], value: this.value() }; this.options.values && this.options.values.length && (c.value = this.values(b), c.values = this.values()), this._trigger("stop", a, c) }, _change: function (a, b) { if (!this._keySliding && !this._mouseSliding) { var c = { handle: this.handles[b], value: this.value() }; this.options.values && this.options.values.length && (c.value = this.values(b), c.values = this.values()), this._trigger("change", a, c) } }, value: function (a) { if (arguments.length) { this.options.value = this._trimAlignValue(a), this._refreshValue(), this._change(null, 0); return } return this._value() }, values: function (b, c) { var d, e, f; if (arguments.length > 1) { this.options.values[b] = this._trimAlignValue(c), this._refreshValue(), this._change(null, b); return } if (!arguments.length) return this._values(); if (!a.isArray(arguments[0])) return this.options.values && this.options.values.length ? this._values(b) : this.value(); d = this.options.values, e = arguments[0]; for (f = 0; f < d.length; f += 1) d[f] = this._trimAlignValue(e[f]), this._change(null, f); this._refreshValue() }, _setOption: function (b, c) { var d, e = 0; a.isArray(this.options.values) && (e = this.options.values.length), a.Widget.prototype._setOption.apply(this, arguments); switch (b) { case "disabled": c ? (this.handles.filter(".ui-state-focus").blur(), this.handles.removeClass("ui-state-hover"), this.handles.propAttr("disabled", !0), this.element.addClass("ui-disabled")) : (this.handles.propAttr("disabled", !1), this.element.removeClass("ui-disabled")); break; case "orientation": this._detectOrientation(), this.element.removeClass("ui-slider-horizontal ui-slider-vertical").addClass("ui-slider-" + this.orientation), this._refreshValue(); break; case "value": this._animateOff = !0, this._refreshValue(), this._change(null, 0), this._animateOff = !1; break; case "values": this._animateOff = !0, this._refreshValue(); for (d = 0; d < e; d += 1) this._change(null, d); this._animateOff = !1 } }, _value: function () { var a = this.options.value; return a = this._trimAlignValue(a), a }, _values: function (a) { var b, c, d; if (arguments.length) return b = this.options.values[a], b = this._trimAlignValue(b), b; c = this.options.values.slice(); for (d = 0; d < c.length; d += 1) c[d] = this._trimAlignValue(c[d]); return c }, _trimAlignValue: function (a) { if (a <= this._valueMin()) return this._valueMin(); if (a >= this._valueMax()) return this._valueMax(); var b = this.options.step > 0 ? this.options.step : 1, c = (a - this._valueMin()) % b, d = a - c; return Math.abs(c) * 2 >= b && (d += c > 0 ? b : -b), parseFloat(d.toFixed(5)) }, _valueMin: function () { return this.options.min }, _valueMax: function () { return this.options.max }, _refreshValue: function () { var b = this.options.range, c = this.options, d = this, e = this._animateOff ? !1 : c.animate, f, g = {}, h, i, j, k; this.options.values && this.options.values.length ? this.handles.each(function (b, i) { f = (d.values(b) - d._valueMin()) / (d._valueMax() - d._valueMin()) * 100, g[d.orientation === "horizontal" ? "left" : "bottom"] = f + "%", a(this).stop(1, 1)[e ? "animate" : "css"](g, c.animate), d.options.range === !0 && (d.orientation === "horizontal" ? (b === 0 && d.range.stop(1, 1)[e ? "animate" : "css"]({ left: f + "%" }, c.animate), b === 1 && d.range[e ? "animate" : "css"]({ width: f - h + "%" }, { queue: !1, duration: c.animate })) : (b === 0 && d.range.stop(1, 1)[e ? "animate" : "css"]({ bottom: f + "%" }, c.animate), b === 1 && d.range[e ? "animate" : "css"]({ height: f - h + "%" }, { queue: !1, duration: c.animate }))), h = f }) : (i = this.value(), j = this._valueMin(), k = this._valueMax(), f = k !== j ? (i - j) / (k - j) * 100 : 0, g[d.orientation === "horizontal" ? "left" : "bottom"] = f + "%", this.handle.stop(1, 1)[e ? "animate" : "css"](g, c.animate), b === "min" && this.orientation === "horizontal" && this.range.stop(1, 1)[e ? "animate" : "css"]({ width: f + "%" }, c.animate), b === "max" && this.orientation === "horizontal" && this.range[e ? "animate" : "css"]({ width: 100 - f + "%" }, { queue: !1, duration: c.animate }), b === "min" && this.orientation === "vertical" && this.range.stop(1, 1)[e ? "animate" : "css"]({ height: f + "%" }, c.animate), b === "max" && this.orientation === "vertical" && this.range[e ? "animate" : "css"]({ height: 100 - f + "%" }, { queue: !1, duration: c.animate })) } }), a.extend(a.ui.slider, { version: "1.8.21" }) })(jQuery);;/*! jQuery UI - v1.8.21 - 2012-06-05
* https://github.com/jquery/jquery-ui
* Includes: jquery.ui.tabs.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function (a, b) { function e() { return ++c } function f() { return ++d } var c = 0, d = 0; a.widget("ui.tabs", { options: { add: null, ajaxOptions: null, cache: !1, cookie: null, collapsible: !1, disable: null, disabled: [], enable: null, event: "click", fx: null, idPrefix: "ui-tabs-", load: null, panelTemplate: "<div></div>", remove: null, select: null, show: null, spinner: "<em>Loading&#8230;</em>", tabTemplate: "<li><a href='#{href}'><span>#{label}</span></a></li>" }, _create: function () { this._tabify(!0) }, _setOption: function (a, b) { if (a == "selected") { if (this.options.collapsible && b == this.options.selected) return; this.select(b) } else this.options[a] = b, this._tabify() }, _tabId: function (a) { return a.title && a.title.replace(/\s/g, "_").replace(/[^\w\u00c0-\uFFFF-]/g, "") || this.options.idPrefix + e() }, _sanitizeSelector: function (a) { return a.replace(/:/g, "\\:") }, _cookie: function () { var b = this.cookie || (this.cookie = this.options.cookie.name || "ui-tabs-" + f()); return a.cookie.apply(null, [b].concat(a.makeArray(arguments))) }, _ui: function (a, b) { return { tab: a, panel: b, index: this.anchors.index(a) } }, _cleanup: function () { this.lis.filter(".ui-state-processing").removeClass("ui-state-processing").find("span:data(label.tabs)").each(function () { var b = a(this); b.html(b.data("label.tabs")).removeData("label.tabs") }) }, _tabify: function (c) { function m(b, c) { b.css("display", ""), !a.support.opacity && c.opacity && b[0].style.removeAttribute("filter") } var d = this, e = this.options, f = /^#.+/; this.list = this.element.find("ol,ul").eq(0), this.lis = a(" > li:has(a[href])", this.list), this.anchors = this.lis.map(function () { return a("a", this)[0] }), this.panels = a([]), this.anchors.each(function (b, c) { var g = a(c).attr("href"), h = g.split("#")[0], i; h && (h === location.toString().split("#")[0] || (i = a("base")[0]) && h === i.href) && (g = c.hash, c.href = g); if (f.test(g)) d.panels = d.panels.add(d.element.find(d._sanitizeSelector(g))); else if (g && g !== "#") { a.data(c, "href.tabs", g), a.data(c, "load.tabs", g.replace(/#.*$/, "")); var j = d._tabId(c); c.href = "#" + j; var k = d.element.find("#" + j); k.length || (k = a(e.panelTemplate).attr("id", j).addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").insertAfter(d.panels[b - 1] || d.list), k.data("destroy.tabs", !0)), d.panels = d.panels.add(k) } else e.disabled.push(b) }), c ? (this.element.addClass("ui-tabs ui-widget ui-widget-content ui-corner-all"), this.list.addClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all"), this.lis.addClass("ui-state-default ui-corner-top"), this.panels.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom"), e.selected === b ? (location.hash && this.anchors.each(function (a, b) { if (b.hash == location.hash) return e.selected = a, !1 }), typeof e.selected != "number" && e.cookie && (e.selected = parseInt(d._cookie(), 10)), typeof e.selected != "number" && this.lis.filter(".ui-tabs-selected").length && (e.selected = this.lis.index(this.lis.filter(".ui-tabs-selected"))), e.selected = e.selected || (this.lis.length ? 0 : -1)) : e.selected === null && (e.selected = -1), e.selected = e.selected >= 0 && this.anchors[e.selected] || e.selected < 0 ? e.selected : 0, e.disabled = a.unique(e.disabled.concat(a.map(this.lis.filter(".ui-state-disabled"), function (a, b) { return d.lis.index(a) }))).sort(), a.inArray(e.selected, e.disabled) != -1 && e.disabled.splice(a.inArray(e.selected, e.disabled), 1), this.panels.addClass("ui-tabs-hide"), this.lis.removeClass("ui-tabs-selected ui-state-active"), e.selected >= 0 && this.anchors.length && (d.element.find(d._sanitizeSelector(d.anchors[e.selected].hash)).removeClass("ui-tabs-hide"), this.lis.eq(e.selected).addClass("ui-tabs-selected ui-state-active"), d.element.queue("tabs", function () { d._trigger("show", null, d._ui(d.anchors[e.selected], d.element.find(d._sanitizeSelector(d.anchors[e.selected].hash))[0])) }), this.load(e.selected)), a(window).bind("unload", function () { d.lis.add(d.anchors).unbind(".tabs"), d.lis = d.anchors = d.panels = null })) : e.selected = this.lis.index(this.lis.filter(".ui-tabs-selected")), this.element[e.collapsible ? "addClass" : "removeClass"]("ui-tabs-collapsible"), e.cookie && this._cookie(e.selected, e.cookie); for (var g = 0, h; h = this.lis[g]; g++) a(h)[a.inArray(g, e.disabled) != -1 && !a(h).hasClass("ui-tabs-selected") ? "addClass" : "removeClass"]("ui-state-disabled"); e.cache === !1 && this.anchors.removeData("cache.tabs"), this.lis.add(this.anchors).unbind(".tabs"); if (e.event !== "mouseover") { var i = function (a, b) { b.is(":not(.ui-state-disabled)") && b.addClass("ui-state-" + a) }, j = function (a, b) { b.removeClass("ui-state-" + a) }; this.lis.bind("mouseover.tabs", function () { i("hover", a(this)) }), this.lis.bind("mouseout.tabs", function () { j("hover", a(this)) }), this.anchors.bind("focus.tabs", function () { i("focus", a(this).closest("li")) }), this.anchors.bind("blur.tabs", function () { j("focus", a(this).closest("li")) }) } var k, l; e.fx && (a.isArray(e.fx) ? (k = e.fx[0], l = e.fx[1]) : k = l = e.fx); var n = l ? function (b, c) { a(b).closest("li").addClass("ui-tabs-selected ui-state-active"), c.hide().removeClass("ui-tabs-hide").animate(l, l.duration || "normal", function () { m(c, l), d._trigger("show", null, d._ui(b, c[0])) }) } : function (b, c) { a(b).closest("li").addClass("ui-tabs-selected ui-state-active"), c.removeClass("ui-tabs-hide"), d._trigger("show", null, d._ui(b, c[0])) }, o = k ? function (a, b) { b.animate(k, k.duration || "normal", function () { d.lis.removeClass("ui-tabs-selected ui-state-active"), b.addClass("ui-tabs-hide"), m(b, k), d.element.dequeue("tabs") }) } : function (a, b, c) { d.lis.removeClass("ui-tabs-selected ui-state-active"), b.addClass("ui-tabs-hide"), d.element.dequeue("tabs") }; this.anchors.bind(e.event + ".tabs", function () { var b = this, c = a(b).closest("li"), f = d.panels.filter(":not(.ui-tabs-hide)"), g = d.element.find(d._sanitizeSelector(b.hash)); if (c.hasClass("ui-tabs-selected") && !e.collapsible || c.hasClass("ui-state-disabled") || c.hasClass("ui-state-processing") || d.panels.filter(":animated").length || d._trigger("select", null, d._ui(this, g[0])) === !1) return this.blur(), !1; e.selected = d.anchors.index(this), d.abort(); if (e.collapsible) { if (c.hasClass("ui-tabs-selected")) return e.selected = -1, e.cookie && d._cookie(e.selected, e.cookie), d.element.queue("tabs", function () { o(b, f) }).dequeue("tabs"), this.blur(), !1; if (!f.length) return e.cookie && d._cookie(e.selected, e.cookie), d.element.queue("tabs", function () { n(b, g) }), d.load(d.anchors.index(this)), this.blur(), !1 } e.cookie && d._cookie(e.selected, e.cookie); if (g.length) f.length && d.element.queue("tabs", function () { o(b, f) }), d.element.queue("tabs", function () { n(b, g) }), d.load(d.anchors.index(this)); else throw "jQuery UI Tabs: Mismatching fragment identifier."; a.browser.msie && this.blur() }), this.anchors.bind("click.tabs", function () { return !1 }) }, _getIndex: function (a) { return typeof a == "string" && (a = this.anchors.index(this.anchors.filter("[href$='" + a + "']"))), a }, destroy: function () { var b = this.options; return this.abort(), this.element.unbind(".tabs").removeClass("ui-tabs ui-widget ui-widget-content ui-corner-all ui-tabs-collapsible").removeData("tabs"), this.list.removeClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all"), this.anchors.each(function () { var b = a.data(this, "href.tabs"); b && (this.href = b); var c = a(this).unbind(".tabs"); a.each(["href", "load", "cache"], function (a, b) { c.removeData(b + ".tabs") }) }), this.lis.unbind(".tabs").add(this.panels).each(function () { a.data(this, "destroy.tabs") ? a(this).remove() : a(this).removeClass(["ui-state-default", "ui-corner-top", "ui-tabs-selected", "ui-state-active", "ui-state-hover", "ui-state-focus", "ui-state-disabled", "ui-tabs-panel", "ui-widget-content", "ui-corner-bottom", "ui-tabs-hide"].join(" ")) }), b.cookie && this._cookie(null, b.cookie), this }, add: function (c, d, e) { e === b && (e = this.anchors.length); var f = this, g = this.options, h = a(g.tabTemplate.replace(/#\{href\}/g, c).replace(/#\{label\}/g, d)), i = c.indexOf("#") ? this._tabId(a("a", h)[0]) : c.replace("#", ""); h.addClass("ui-state-default ui-corner-top").data("destroy.tabs", !0); var j = f.element.find("#" + i); return j.length || (j = a(g.panelTemplate).attr("id", i).data("destroy.tabs", !0)), j.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom ui-tabs-hide"), e >= this.lis.length ? (h.appendTo(this.list), j.appendTo(this.list[0].parentNode)) : (h.insertBefore(this.lis[e]), j.insertBefore(this.panels[e])), g.disabled = a.map(g.disabled, function (a, b) { return a >= e ? ++a : a }), this._tabify(), this.anchors.length == 1 && (g.selected = 0, h.addClass("ui-tabs-selected ui-state-active"), j.removeClass("ui-tabs-hide"), this.element.queue("tabs", function () { f._trigger("show", null, f._ui(f.anchors[0], f.panels[0])) }), this.load(0)), this._trigger("add", null, this._ui(this.anchors[e], this.panels[e])), this }, remove: function (b) { b = this._getIndex(b); var c = this.options, d = this.lis.eq(b).remove(), e = this.panels.eq(b).remove(); return d.hasClass("ui-tabs-selected") && this.anchors.length > 1 && this.select(b + (b + 1 < this.anchors.length ? 1 : -1)), c.disabled = a.map(a.grep(c.disabled, function (a, c) { return a != b }), function (a, c) { return a >= b ? --a : a }), this._tabify(), this._trigger("remove", null, this._ui(d.find("a")[0], e[0])), this }, enable: function (b) { b = this._getIndex(b); var c = this.options; if (a.inArray(b, c.disabled) == -1) return; return this.lis.eq(b).removeClass("ui-state-disabled"), c.disabled = a.grep(c.disabled, function (a, c) { return a != b }), this._trigger("enable", null, this._ui(this.anchors[b], this.panels[b])), this }, disable: function (a) { a = this._getIndex(a); var b = this, c = this.options; return a != c.selected && (this.lis.eq(a).addClass("ui-state-disabled"), c.disabled.push(a), c.disabled.sort(), this._trigger("disable", null, this._ui(this.anchors[a], this.panels[a]))), this }, select: function (a) { a = this._getIndex(a); if (a == -1) if (this.options.collapsible && this.options.selected != -1) a = this.options.selected; else return this; return this.anchors.eq(a).trigger(this.options.event + ".tabs"), this }, load: function (b) { b = this._getIndex(b); var c = this, d = this.options, e = this.anchors.eq(b)[0], f = a.data(e, "load.tabs"); this.abort(); if (!f || this.element.queue("tabs").length !== 0 && a.data(e, "cache.tabs")) { this.element.dequeue("tabs"); return } this.lis.eq(b).addClass("ui-state-processing"); if (d.spinner) { var g = a("span", e); g.data("label.tabs", g.html()).html(d.spinner) } return this.xhr = a.ajax(a.extend({}, d.ajaxOptions, { url: f, success: function (f, g) { c.element.find(c._sanitizeSelector(e.hash)).html(f), c._cleanup(), d.cache && a.data(e, "cache.tabs", !0), c._trigger("load", null, c._ui(c.anchors[b], c.panels[b])); try { d.ajaxOptions.success(f, g) } catch (h) { } }, error: function (a, f, g) { c._cleanup(), c._trigger("load", null, c._ui(c.anchors[b], c.panels[b])); try { d.ajaxOptions.error(a, f, b, e) } catch (g) { } } })), c.element.dequeue("tabs"), this }, abort: function () { return this.element.queue([]), this.panels.stop(!1, !0), this.element.queue("tabs", this.element.queue("tabs").splice(-2, 2)), this.xhr && (this.xhr.abort(), delete this.xhr), this._cleanup(), this }, url: function (a, b) { return this.anchors.eq(a).removeData("cache.tabs").data("load.tabs", b), this }, length: function () { return this.anchors.length } }), a.extend(a.ui.tabs, { version: "1.8.21" }), a.extend(a.ui.tabs.prototype, { rotation: null, rotate: function (a, b) { var c = this, d = this.options, e = c._rotate || (c._rotate = function (b) { clearTimeout(c.rotation), c.rotation = setTimeout(function () { var a = d.selected; c.select(++a < c.anchors.length ? a : 0) }, a), b && b.stopPropagation() }), f = c._unrotate || (c._unrotate = b ? function (a) { e() } : function (a) { a.clientX && c.rotate(null) }); return a ? (this.element.bind("tabsshow", e), this.anchors.bind(d.event + ".tabs", f), e()) : (clearTimeout(c.rotation), this.element.unbind("tabsshow", e), this.anchors.unbind(d.event + ".tabs", f), delete this._rotate, delete this._unrotate), this } }) })(jQuery);;/*! jQuery UI - v1.8.21 - 2012-06-05
* https://github.com/jquery/jquery-ui
* Includes: jquery.ui.datepicker.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function ($, undefined) { function Datepicker() { this.debug = !1, this._curInst = null, this._keyEvent = !1, this._disabledInputs = [], this._datepickerShowing = !1, this._inDialog = !1, this._mainDivId = "ui-datepicker-div", this._inlineClass = "ui-datepicker-inline", this._appendClass = "ui-datepicker-append", this._triggerClass = "ui-datepicker-trigger", this._dialogClass = "ui-datepicker-dialog", this._disableClass = "ui-datepicker-disabled", this._unselectableClass = "ui-datepicker-unselectable", this._currentClass = "ui-datepicker-current-day", this._dayOverClass = "ui-datepicker-days-cell-over", this.regional = [], this.regional[""] = { closeText: "Done", prevText: "Prev", nextText: "Next", currentText: "Today", monthNames: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], monthNamesShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], dayNames: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], dayNamesShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], dayNamesMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"], weekHeader: "Wk", dateFormat: "mm/dd/yy", firstDay: 0, isRTL: !1, showMonthAfterYear: !1, yearSuffix: "" }, this._defaults = { showOn: "focus", showAnim: "fadeIn", showOptions: {}, defaultDate: null, appendText: "", buttonText: "...", buttonImage: "", buttonImageOnly: !1, hideIfNoPrevNext: !1, navigationAsDateFormat: !1, gotoCurrent: !1, changeMonth: !1, changeYear: !1, yearRange: "c-10:c+10", showOtherMonths: !1, selectOtherMonths: !1, showWeek: !1, calculateWeek: this.iso8601Week, shortYearCutoff: "+10", minDate: null, maxDate: null, duration: "fast", beforeShowDay: null, beforeShow: null, onSelect: null, onChangeMonthYear: null, onClose: null, numberOfMonths: 1, showCurrentAtPos: 0, stepMonths: 1, stepBigMonths: 12, altField: "", altFormat: "", constrainInput: !0, showButtonPanel: !1, autoSize: !1, disabled: !1 }, $.extend(this._defaults, this.regional[""]), this.dpDiv = bindHover($('<div id="' + this._mainDivId + '" class="ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>')) } function bindHover(a) { var b = "button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a"; return a.bind("mouseout", function (a) { var c = $(a.target).closest(b); if (!c.length) return; c.removeClass("ui-state-hover ui-datepicker-prev-hover ui-datepicker-next-hover") }).bind("mouseover", function (c) { var d = $(c.target).closest(b); if ($.datepicker._isDisabledDatepicker(instActive.inline ? a.parent()[0] : instActive.input[0]) || !d.length) return; d.parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover"), d.addClass("ui-state-hover"), d.hasClass("ui-datepicker-prev") && d.addClass("ui-datepicker-prev-hover"), d.hasClass("ui-datepicker-next") && d.addClass("ui-datepicker-next-hover") }) } function extendRemove(a, b) { $.extend(a, b); for (var c in b) if (b[c] == null || b[c] == undefined) a[c] = b[c]; return a } function isArray(a) { return a && ($.browser.safari && typeof a == "object" && a.length || a.constructor && a.constructor.toString().match(/\Array\(\)/)) } $.extend($.ui, { datepicker: { version: "1.8.21" } }); var PROP_NAME = "datepicker", dpuuid = (new Date).getTime(), instActive; $.extend(Datepicker.prototype, { markerClassName: "hasDatepicker", maxRows: 4, log: function () { this.debug && console.log.apply("", arguments) }, _widgetDatepicker: function () { return this.dpDiv }, setDefaults: function (a) { return extendRemove(this._defaults, a || {}), this }, _attachDatepicker: function (target, settings) { var inlineSettings = null; for (var attrName in this._defaults) { var attrValue = target.getAttribute("date:" + attrName); if (attrValue) { inlineSettings = inlineSettings || {}; try { inlineSettings[attrName] = eval(attrValue) } catch (err) { inlineSettings[attrName] = attrValue } } } var nodeName = target.nodeName.toLowerCase(), inline = nodeName == "div" || nodeName == "span"; target.id || (this.uuid += 1, target.id = "dp" + this.uuid); var inst = this._newInst($(target), inline); inst.settings = $.extend({}, settings || {}, inlineSettings || {}), nodeName == "input" ? this._connectDatepicker(target, inst) : inline && this._inlineDatepicker(target, inst) }, _newInst: function (a, b) { var c = a[0].id.replace(/([^A-Za-z0-9_-])/g, "\\\\$1"); return { id: c, input: a, selectedDay: 0, selectedMonth: 0, selectedYear: 0, drawMonth: 0, drawYear: 0, inline: b, dpDiv: b ? bindHover($('<div class="' + this._inlineClass + ' ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>')) : this.dpDiv } }, _connectDatepicker: function (a, b) { var c = $(a); b.append = $([]), b.trigger = $([]); if (c.hasClass(this.markerClassName)) return; this._attachments(c, b), c.addClass(this.markerClassName).keydown(this._doKeyDown).keypress(this._doKeyPress).keyup(this._doKeyUp).bind("setData.datepicker", function (a, c, d) { b.settings[c] = d }).bind("getData.datepicker", function (a, c) { return this._get(b, c) }), this._autoSize(b), $.data(a, PROP_NAME, b), b.settings.disabled && this._disableDatepicker(a) }, _attachments: function (a, b) { var c = this._get(b, "appendText"), d = this._get(b, "isRTL"); b.append && b.append.remove(), c && (b.append = $('<span class="' + this._appendClass + '">' + c + "</span>"), a[d ? "before" : "after"](b.append)), a.unbind("focus", this._showDatepicker), b.trigger && b.trigger.remove(); var e = this._get(b, "showOn"); (e == "focus" || e == "both") && a.focus(this._showDatepicker); if (e == "button" || e == "both") { var f = this._get(b, "buttonText"), g = this._get(b, "buttonImage"); b.trigger = $(this._get(b, "buttonImageOnly") ? $("<img/>").addClass(this._triggerClass).attr({ src: g, alt: f, title: f }) : $('<button type="button"></button>').addClass(this._triggerClass).html(g == "" ? f : $("<img/>").attr({ src: g, alt: f, title: f }))), a[d ? "before" : "after"](b.trigger), b.trigger.click(function () { return $.datepicker._datepickerShowing && $.datepicker._lastInput == a[0] ? $.datepicker._hideDatepicker() : $.datepicker._datepickerShowing && $.datepicker._lastInput != a[0] ? ($.datepicker._hideDatepicker(), $.datepicker._showDatepicker(a[0])) : $.datepicker._showDatepicker(a[0]), !1 }) } }, _autoSize: function (a) { if (this._get(a, "autoSize") && !a.inline) { var b = new Date(2009, 11, 20), c = this._get(a, "dateFormat"); if (c.match(/[DM]/)) { var d = function (a) { var b = 0, c = 0; for (var d = 0; d < a.length; d++) a[d].length > b && (b = a[d].length, c = d); return c }; b.setMonth(d(this._get(a, c.match(/MM/) ? "monthNames" : "monthNamesShort"))), b.setDate(d(this._get(a, c.match(/DD/) ? "dayNames" : "dayNamesShort")) + 20 - b.getDay()) } a.input.attr("size", this._formatDate(a, b).length) } }, _inlineDatepicker: function (a, b) { var c = $(a); if (c.hasClass(this.markerClassName)) return; c.addClass(this.markerClassName).append(b.dpDiv).bind("setData.datepicker", function (a, c, d) { b.settings[c] = d }).bind("getData.datepicker", function (a, c) { return this._get(b, c) }), $.data(a, PROP_NAME, b), this._setDate(b, this._getDefaultDate(b), !0), this._updateDatepicker(b), this._updateAlternate(b), b.settings.disabled && this._disableDatepicker(a), b.dpDiv.css("display", "block") }, _dialogDatepicker: function (a, b, c, d, e) { var f = this._dialogInst; if (!f) { this.uuid += 1; var g = "dp" + this.uuid; this._dialogInput = $('<input type="text" id="' + g + '" style="position: absolute; top: -100px; width: 0px; z-index: -10;"/>'), this._dialogInput.keydown(this._doKeyDown), $("body").append(this._dialogInput), f = this._dialogInst = this._newInst(this._dialogInput, !1), f.settings = {}, $.data(this._dialogInput[0], PROP_NAME, f) } extendRemove(f.settings, d || {}), b = b && b.constructor == Date ? this._formatDate(f, b) : b, this._dialogInput.val(b), this._pos = e ? e.length ? e : [e.pageX, e.pageY] : null; if (!this._pos) { var h = document.documentElement.clientWidth, i = document.documentElement.clientHeight, j = document.documentElement.scrollLeft || document.body.scrollLeft, k = document.documentElement.scrollTop || document.body.scrollTop; this._pos = [h / 2 - 100 + j, i / 2 - 150 + k] } return this._dialogInput.css("left", this._pos[0] + 20 + "px").css("top", this._pos[1] + "px"), f.settings.onSelect = c, this._inDialog = !0, this.dpDiv.addClass(this._dialogClass), this._showDatepicker(this._dialogInput[0]), $.blockUI && $.blockUI(this.dpDiv), $.data(this._dialogInput[0], PROP_NAME, f), this }, _destroyDatepicker: function (a) { var b = $(a), c = $.data(a, PROP_NAME); if (!b.hasClass(this.markerClassName)) return; var d = a.nodeName.toLowerCase(); $.removeData(a, PROP_NAME), d == "input" ? (c.append.remove(), c.trigger.remove(), b.removeClass(this.markerClassName).unbind("focus", this._showDatepicker).unbind("keydown", this._doKeyDown).unbind("keypress", this._doKeyPress).unbind("keyup", this._doKeyUp)) : (d == "div" || d == "span") && b.removeClass(this.markerClassName).empty() }, _enableDatepicker: function (a) { var b = $(a), c = $.data(a, PROP_NAME); if (!b.hasClass(this.markerClassName)) return; var d = a.nodeName.toLowerCase(); if (d == "input") a.disabled = !1, c.trigger.filter("button").each(function () { this.disabled = !1 }).end().filter("img").css({ opacity: "1.0", cursor: "" }); else if (d == "div" || d == "span") { var e = b.children("." + this._inlineClass); e.children().removeClass("ui-state-disabled"), e.find("select.ui-datepicker-month, select.ui-datepicker-year").removeAttr("disabled") } this._disabledInputs = $.map(this._disabledInputs, function (b) { return b == a ? null : b }) }, _disableDatepicker: function (a) { var b = $(a), c = $.data(a, PROP_NAME); if (!b.hasClass(this.markerClassName)) return; var d = a.nodeName.toLowerCase(); if (d == "input") a.disabled = !0, c.trigger.filter("button").each(function () { this.disabled = !0 }).end().filter("img").css({ opacity: "0.5", cursor: "default" }); else if (d == "div" || d == "span") { var e = b.children("." + this._inlineClass); e.children().addClass("ui-state-disabled"), e.find("select.ui-datepicker-month, select.ui-datepicker-year").attr("disabled", "disabled") } this._disabledInputs = $.map(this._disabledInputs, function (b) { return b == a ? null : b }), this._disabledInputs[this._disabledInputs.length] = a }, _isDisabledDatepicker: function (a) { if (!a) return !1; for (var b = 0; b < this._disabledInputs.length; b++) if (this._disabledInputs[b] == a) return !0; return !1 }, _getInst: function (a) { try { return $.data(a, PROP_NAME) } catch (b) { throw "Missing instance data for this datepicker" } }, _optionDatepicker: function (a, b, c) { var d = this._getInst(a); if (arguments.length == 2 && typeof b == "string") return b == "defaults" ? $.extend({}, $.datepicker._defaults) : d ? b == "all" ? $.extend({}, d.settings) : this._get(d, b) : null; var e = b || {}; typeof b == "string" && (e = {}, e[b] = c); if (d) { this._curInst == d && this._hideDatepicker(); var f = this._getDateDatepicker(a, !0), g = this._getMinMaxDate(d, "min"), h = this._getMinMaxDate(d, "max"); extendRemove(d.settings, e), g !== null && e.dateFormat !== undefined && e.minDate === undefined && (d.settings.minDate = this._formatDate(d, g)), h !== null && e.dateFormat !== undefined && e.maxDate === undefined && (d.settings.maxDate = this._formatDate(d, h)), this._attachments($(a), d), this._autoSize(d), this._setDate(d, f), this._updateAlternate(d), this._updateDatepicker(d) } }, _changeDatepicker: function (a, b, c) { this._optionDatepicker(a, b, c) }, _refreshDatepicker: function (a) { var b = this._getInst(a); b && this._updateDatepicker(b) }, _setDateDatepicker: function (a, b) { var c = this._getInst(a); c && (this._setDate(c, b), this._updateDatepicker(c), this._updateAlternate(c)) }, _getDateDatepicker: function (a, b) { var c = this._getInst(a); return c && !c.inline && this._setDateFromField(c, b), c ? this._getDate(c) : null }, _doKeyDown: function (a) { var b = $.datepicker._getInst(a.target), c = !0, d = b.dpDiv.is(".ui-datepicker-rtl"); b._keyEvent = !0; if ($.datepicker._datepickerShowing) switch (a.keyCode) { case 9: $.datepicker._hideDatepicker(), c = !1; break; case 13: var e = $("td." + $.datepicker._dayOverClass + ":not(." + $.datepicker._currentClass + ")", b.dpDiv); e[0] && $.datepicker._selectDay(a.target, b.selectedMonth, b.selectedYear, e[0]); var f = $.datepicker._get(b, "onSelect"); if (f) { var g = $.datepicker._formatDate(b); f.apply(b.input ? b.input[0] : null, [g, b]) } else $.datepicker._hideDatepicker(); return !1; case 27: $.datepicker._hideDatepicker(); break; case 33: $.datepicker._adjustDate(a.target, a.ctrlKey ? -$.datepicker._get(b, "stepBigMonths") : -$.datepicker._get(b, "stepMonths"), "M"); break; case 34: $.datepicker._adjustDate(a.target, a.ctrlKey ? +$.datepicker._get(b, "stepBigMonths") : +$.datepicker._get(b, "stepMonths"), "M"); break; case 35: (a.ctrlKey || a.metaKey) && $.datepicker._clearDate(a.target), c = a.ctrlKey || a.metaKey; break; case 36: (a.ctrlKey || a.metaKey) && $.datepicker._gotoToday(a.target), c = a.ctrlKey || a.metaKey; break; case 37: (a.ctrlKey || a.metaKey) && $.datepicker._adjustDate(a.target, d ? 1 : -1, "D"), c = a.ctrlKey || a.metaKey, a.originalEvent.altKey && $.datepicker._adjustDate(a.target, a.ctrlKey ? -$.datepicker._get(b, "stepBigMonths") : -$.datepicker._get(b, "stepMonths"), "M"); break; case 38: (a.ctrlKey || a.metaKey) && $.datepicker._adjustDate(a.target, -7, "D"), c = a.ctrlKey || a.metaKey; break; case 39: (a.ctrlKey || a.metaKey) && $.datepicker._adjustDate(a.target, d ? -1 : 1, "D"), c = a.ctrlKey || a.metaKey, a.originalEvent.altKey && $.datepicker._adjustDate(a.target, a.ctrlKey ? +$.datepicker._get(b, "stepBigMonths") : +$.datepicker._get(b, "stepMonths"), "M"); break; case 40: (a.ctrlKey || a.metaKey) && $.datepicker._adjustDate(a.target, 7, "D"), c = a.ctrlKey || a.metaKey; break; default: c = !1 } else a.keyCode == 36 && a.ctrlKey ? $.datepicker._showDatepicker(this) : c = !1; c && (a.preventDefault(), a.stopPropagation()) }, _doKeyPress: function (a) { var b = $.datepicker._getInst(a.target); if ($.datepicker._get(b, "constrainInput")) { var c = $.datepicker._possibleChars($.datepicker._get(b, "dateFormat")), d = String.fromCharCode(a.charCode == undefined ? a.keyCode : a.charCode); return a.ctrlKey || a.metaKey || d < " " || !c || c.indexOf(d) > -1 } }, _doKeyUp: function (a) { var b = $.datepicker._getInst(a.target); if (b.input.val() != b.lastVal) try { var c = $.datepicker.parseDate($.datepicker._get(b, "dateFormat"), b.input ? b.input.val() : null, $.datepicker._getFormatConfig(b)); c && ($.datepicker._setDateFromField(b), $.datepicker._updateAlternate(b), $.datepicker._updateDatepicker(b)) } catch (d) { $.datepicker.log(d) } return !0 }, _showDatepicker: function (a) { a = a.target || a, a.nodeName.toLowerCase() != "input" && (a = $("input", a.parentNode)[0]); if ($.datepicker._isDisabledDatepicker(a) || $.datepicker._lastInput == a) return; var b = $.datepicker._getInst(a); $.datepicker._curInst && $.datepicker._curInst != b && ($.datepicker._curInst.dpDiv.stop(!0, !0), b && $.datepicker._datepickerShowing && $.datepicker._hideDatepicker($.datepicker._curInst.input[0])); var c = $.datepicker._get(b, "beforeShow"), d = c ? c.apply(a, [a, b]) : {}; if (d === !1) return; extendRemove(b.settings, d), b.lastVal = null, $.datepicker._lastInput = a, $.datepicker._setDateFromField(b), $.datepicker._inDialog && (a.value = ""), $.datepicker._pos || ($.datepicker._pos = $.datepicker._findPos(a), $.datepicker._pos[1] += a.offsetHeight); var e = !1; $(a).parents().each(function () { return e |= $(this).css("position") == "fixed", !e }), e && $.browser.opera && ($.datepicker._pos[0] -= document.documentElement.scrollLeft, $.datepicker._pos[1] -= document.documentElement.scrollTop); var f = { left: $.datepicker._pos[0], top: $.datepicker._pos[1] }; $.datepicker._pos = null, b.dpDiv.empty(), b.dpDiv.css({ position: "absolute", display: "block", top: "-1000px" }), $.datepicker._updateDatepicker(b), f = $.datepicker._checkOffset(b, f, e), b.dpDiv.css({ position: $.datepicker._inDialog && $.blockUI ? "static" : e ? "fixed" : "absolute", display: "none", left: f.left + "px", top: f.top + "px" }); if (!b.inline) { var g = $.datepicker._get(b, "showAnim"), h = $.datepicker._get(b, "duration"), i = function () { var a = b.dpDiv.find("iframe.ui-datepicker-cover"); if (!!a.length) { var c = $.datepicker._getBorders(b.dpDiv); a.css({ left: -c[0], top: -c[1], width: b.dpDiv.outerWidth(), height: b.dpDiv.outerHeight() }) } }; b.dpDiv.zIndex($(a).zIndex() + 1), $.datepicker._datepickerShowing = !0, $.effects && $.effects[g] ? b.dpDiv.show(g, $.datepicker._get(b, "showOptions"), h, i) : b.dpDiv[g || "show"](g ? h : null, i), (!g || !h) && i(), b.input.is(":visible") && !b.input.is(":disabled") && b.input.focus(), $.datepicker._curInst = b } }, _updateDatepicker: function (a) { var b = this; b.maxRows = 4; var c = $.datepicker._getBorders(a.dpDiv); instActive = a, a.dpDiv.empty().append(this._generateHTML(a)); var d = a.dpDiv.find("iframe.ui-datepicker-cover"); !d.length || d.css({ left: -c[0], top: -c[1], width: a.dpDiv.outerWidth(), height: a.dpDiv.outerHeight() }), a.dpDiv.find("." + this._dayOverClass + " a").mouseover(); var e = this._getNumberOfMonths(a), f = e[1], g = 17; a.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width(""), f > 1 && a.dpDiv.addClass("ui-datepicker-multi-" + f).css("width", g * f + "em"), a.dpDiv[(e[0] != 1 || e[1] != 1 ? "add" : "remove") + "Class"]("ui-datepicker-multi"), a.dpDiv[(this._get(a, "isRTL") ? "add" : "remove") + "Class"]("ui-datepicker-rtl"), a == $.datepicker._curInst && $.datepicker._datepickerShowing && a.input && a.input.is(":visible") && !a.input.is(":disabled") && a.input[0] != document.activeElement && a.input.focus(); if (a.yearshtml) { var h = a.yearshtml; setTimeout(function () { h === a.yearshtml && a.yearshtml && a.dpDiv.find("select.ui-datepicker-year:first").replaceWith(a.yearshtml), h = a.yearshtml = null }, 0) } }, _getBorders: function (a) { var b = function (a) { return { thin: 1, medium: 2, thick: 3 }[a] || a }; return [parseFloat(b(a.css("border-left-width"))), parseFloat(b(a.css("border-top-width")))] }, _checkOffset: function (a, b, c) { var d = a.dpDiv.outerWidth(), e = a.dpDiv.outerHeight(), f = a.input ? a.input.outerWidth() : 0, g = a.input ? a.input.outerHeight() : 0, h = document.documentElement.clientWidth + $(document).scrollLeft(), i = document.documentElement.clientHeight + $(document).scrollTop(); return b.left -= this._get(a, "isRTL") ? d - f : 0, b.left -= c && b.left == a.input.offset().left ? $(document).scrollLeft() : 0, b.top -= c && b.top == a.input.offset().top + g ? $(document).scrollTop() : 0, b.left -= Math.min(b.left, b.left + d > h && h > d ? Math.abs(b.left + d - h) : 0), b.top -= Math.min(b.top, b.top + e > i && i > e ? Math.abs(e + g) : 0), b }, _findPos: function (a) { var b = this._getInst(a), c = this._get(b, "isRTL"); while (a && (a.type == "hidden" || a.nodeType != 1 || $.expr.filters.hidden(a))) a = a[c ? "previousSibling" : "nextSibling"]; var d = $(a).offset(); return [d.left, d.top] }, _hideDatepicker: function (a) { var b = this._curInst; if (!b || a && b != $.data(a, PROP_NAME)) return; if (this._datepickerShowing) { var c = this._get(b, "showAnim"), d = this._get(b, "duration"), e = function () { $.datepicker._tidyDialog(b) }; $.effects && $.effects[c] ? b.dpDiv.hide(c, $.datepicker._get(b, "showOptions"), d, e) : b.dpDiv[c == "slideDown" ? "slideUp" : c == "fadeIn" ? "fadeOut" : "hide"](c ? d : null, e), c || e(), this._datepickerShowing = !1; var f = this._get(b, "onClose"); f && f.apply(b.input ? b.input[0] : null, [b.input ? b.input.val() : "", b]), this._lastInput = null, this._inDialog && (this._dialogInput.css({ position: "absolute", left: "0", top: "-100px" }), $.blockUI && ($.unblockUI(), $("body").append(this.dpDiv))), this._inDialog = !1 } }, _tidyDialog: function (a) { a.dpDiv.removeClass(this._dialogClass).unbind(".ui-datepicker-calendar") }, _checkExternalClick: function (a) { if (!$.datepicker._curInst) return; var b = $(a.target), c = $.datepicker._getInst(b[0]); (b[0].id != $.datepicker._mainDivId && b.parents("#" + $.datepicker._mainDivId).length == 0 && !b.hasClass($.datepicker.markerClassName) && !b.closest("." + $.datepicker._triggerClass).length && $.datepicker._datepickerShowing && (!$.datepicker._inDialog || !$.blockUI) || b.hasClass($.datepicker.markerClassName) && $.datepicker._curInst != c) && $.datepicker._hideDatepicker() }, _adjustDate: function (a, b, c) { var d = $(a), e = this._getInst(d[0]); if (this._isDisabledDatepicker(d[0])) return; this._adjustInstDate(e, b + (c == "M" ? this._get(e, "showCurrentAtPos") : 0), c), this._updateDatepicker(e) }, _gotoToday: function (a) { var b = $(a), c = this._getInst(b[0]); if (this._get(c, "gotoCurrent") && c.currentDay) c.selectedDay = c.currentDay, c.drawMonth = c.selectedMonth = c.currentMonth, c.drawYear = c.selectedYear = c.currentYear; else { var d = new Date; c.selectedDay = d.getDate(), c.drawMonth = c.selectedMonth = d.getMonth(), c.drawYear = c.selectedYear = d.getFullYear() } this._notifyChange(c), this._adjustDate(b) }, _selectMonthYear: function (a, b, c) { var d = $(a), e = this._getInst(d[0]); e["selected" + (c == "M" ? "Month" : "Year")] = e["draw" + (c == "M" ? "Month" : "Year")] = parseInt(b.options[b.selectedIndex].value, 10), this._notifyChange(e), this._adjustDate(d) }, _selectDay: function (a, b, c, d) { var e = $(a); if ($(d).hasClass(this._unselectableClass) || this._isDisabledDatepicker(e[0])) return; var f = this._getInst(e[0]); f.selectedDay = f.currentDay = $("a", d).html(), f.selectedMonth = f.currentMonth = b, f.selectedYear = f.currentYear = c, this._selectDate(a, this._formatDate(f, f.currentDay, f.currentMonth, f.currentYear)) }, _clearDate: function (a) { var b = $(a), c = this._getInst(b[0]); this._selectDate(b, "") }, _selectDate: function (a, b) { var c = $(a), d = this._getInst(c[0]); b = b != null ? b : this._formatDate(d), d.input && d.input.val(b), this._updateAlternate(d); var e = this._get(d, "onSelect"); e ? e.apply(d.input ? d.input[0] : null, [b, d]) : d.input && d.input.trigger("change"), d.inline ? this._updateDatepicker(d) : (this._hideDatepicker(), this._lastInput = d.input[0], typeof d.input[0] != "object" && d.input.focus(), this._lastInput = null) }, _updateAlternate: function (a) { var b = this._get(a, "altField"); if (b) { var c = this._get(a, "altFormat") || this._get(a, "dateFormat"), d = this._getDate(a), e = this.formatDate(c, d, this._getFormatConfig(a)); $(b).each(function () { $(this).val(e) }) } }, noWeekends: function (a) { var b = a.getDay(); return [b > 0 && b < 6, ""] }, iso8601Week: function (a) { var b = new Date(a.getTime()); b.setDate(b.getDate() + 4 - (b.getDay() || 7)); var c = b.getTime(); return b.setMonth(0), b.setDate(1), Math.floor(Math.round((c - b) / 864e5) / 7) + 1 }, parseDate: function (a, b, c) { if (a == null || b == null) throw "Invalid arguments"; b = typeof b == "object" ? b.toString() : b + ""; if (b == "") return null; var d = (c ? c.shortYearCutoff : null) || this._defaults.shortYearCutoff; d = typeof d != "string" ? d : (new Date).getFullYear() % 100 + parseInt(d, 10); var e = (c ? c.dayNamesShort : null) || this._defaults.dayNamesShort, f = (c ? c.dayNames : null) || this._defaults.dayNames, g = (c ? c.monthNamesShort : null) || this._defaults.monthNamesShort, h = (c ? c.monthNames : null) || this._defaults.monthNames, i = -1, j = -1, k = -1, l = -1, m = !1, n = function (b) { var c = s + 1 < a.length && a.charAt(s + 1) == b; return c && s++, c }, o = function (a) { var c = n(a), d = a == "@" ? 14 : a == "!" ? 20 : a == "y" && c ? 4 : a == "o" ? 3 : 2, e = new RegExp("^\\d{1," + d + "}"), f = b.substring(r).match(e); if (!f) throw "Missing number at position " + r; return r += f[0].length, parseInt(f[0], 10) }, p = function (a, c, d) { var e = $.map(n(a) ? d : c, function (a, b) { return [[b, a]] }).sort(function (a, b) { return -(a[1].length - b[1].length) }), f = -1; $.each(e, function (a, c) { var d = c[1]; if (b.substr(r, d.length).toLowerCase() == d.toLowerCase()) return f = c[0], r += d.length, !1 }); if (f != -1) return f + 1; throw "Unknown name at position " + r }, q = function () { if (b.charAt(r) != a.charAt(s)) throw "Unexpected literal at position " + r; r++ }, r = 0; for (var s = 0; s < a.length; s++) if (m) a.charAt(s) == "'" && !n("'") ? m = !1 : q(); else switch (a.charAt(s)) { case "d": k = o("d"); break; case "D": p("D", e, f); break; case "o": l = o("o"); break; case "m": j = o("m"); break; case "M": j = p("M", g, h); break; case "y": i = o("y"); break; case "@": var t = new Date(o("@")); i = t.getFullYear(), j = t.getMonth() + 1, k = t.getDate(); break; case "!": var t = new Date((o("!") - this._ticksTo1970) / 1e4); i = t.getFullYear(), j = t.getMonth() + 1, k = t.getDate(); break; case "'": n("'") ? q() : m = !0; break; default: q() } if (r < b.length) throw "Extra/unparsed characters found in date: " + b.substring(r); i == -1 ? i = (new Date).getFullYear() : i < 100 && (i += (new Date).getFullYear() - (new Date).getFullYear() % 100 + (i <= d ? 0 : -100)); if (l > -1) { j = 1, k = l; do { var u = this._getDaysInMonth(i, j - 1); if (k <= u) break; j++, k -= u } while (!0) } var t = this._daylightSavingAdjust(new Date(i, j - 1, k)); if (t.getFullYear() != i || t.getMonth() + 1 != j || t.getDate() != k) throw "Invalid date"; return t }, ATOM: "yy-mm-dd", COOKIE: "D, dd M yy", ISO_8601: "yy-mm-dd", RFC_822: "D, d M y", RFC_850: "DD, dd-M-y", RFC_1036: "D, d M y", RFC_1123: "D, d M yy", RFC_2822: "D, d M yy", RSS: "D, d M y", TICKS: "!", TIMESTAMP: "@", W3C: "yy-mm-dd", _ticksTo1970: (718685 + Math.floor(492.5) - Math.floor(19.7) + Math.floor(4.925)) * 24 * 60 * 60 * 1e7, formatDate: function (a, b, c) { if (!b) return ""; var d = (c ? c.dayNamesShort : null) || this._defaults.dayNamesShort, e = (c ? c.dayNames : null) || this._defaults.dayNames, f = (c ? c.monthNamesShort : null) || this._defaults.monthNamesShort, g = (c ? c.monthNames : null) || this._defaults.monthNames, h = function (b) { var c = m + 1 < a.length && a.charAt(m + 1) == b; return c && m++, c }, i = function (a, b, c) { var d = "" + b; if (h(a)) while (d.length < c) d = "0" + d; return d }, j = function (a, b, c, d) { return h(a) ? d[b] : c[b] }, k = "", l = !1; if (b) for (var m = 0; m < a.length; m++) if (l) a.charAt(m) == "'" && !h("'") ? l = !1 : k += a.charAt(m); else switch (a.charAt(m)) { case "d": k += i("d", b.getDate(), 2); break; case "D": k += j("D", b.getDay(), d, e); break; case "o": k += i("o", Math.round(((new Date(b.getFullYear(), b.getMonth(), b.getDate())).getTime() - (new Date(b.getFullYear(), 0, 0)).getTime()) / 864e5), 3); break; case "m": k += i("m", b.getMonth() + 1, 2); break; case "M": k += j("M", b.getMonth(), f, g); break; case "y": k += h("y") ? b.getFullYear() : (b.getYear() % 100 < 10 ? "0" : "") + b.getYear() % 100; break; case "@": k += b.getTime(); break; case "!": k += b.getTime() * 1e4 + this._ticksTo1970; break; case "'": h("'") ? k += "'" : l = !0; break; default: k += a.charAt(m) } return k }, _possibleChars: function (a) { var b = "", c = !1, d = function (b) { var c = e + 1 < a.length && a.charAt(e + 1) == b; return c && e++, c }; for (var e = 0; e < a.length; e++) if (c) a.charAt(e) == "'" && !d("'") ? c = !1 : b += a.charAt(e); else switch (a.charAt(e)) { case "d": case "m": case "y": case "@": b += "0123456789"; break; case "D": case "M": return null; case "'": d("'") ? b += "'" : c = !0; break; default: b += a.charAt(e) } return b }, _get: function (a, b) { return a.settings[b] !== undefined ? a.settings[b] : this._defaults[b] }, _setDateFromField: function (a, b) { if (a.input.val() == a.lastVal) return; var c = this._get(a, "dateFormat"), d = a.lastVal = a.input ? a.input.val() : null, e, f; e = f = this._getDefaultDate(a); var g = this._getFormatConfig(a); try { e = this.parseDate(c, d, g) || f } catch (h) { this.log(h), d = b ? "" : d } a.selectedDay = e.getDate(), a.drawMonth = a.selectedMonth = e.getMonth(), a.drawYear = a.selectedYear = e.getFullYear(), a.currentDay = d ? e.getDate() : 0, a.currentMonth = d ? e.getMonth() : 0, a.currentYear = d ? e.getFullYear() : 0, this._adjustInstDate(a) }, _getDefaultDate: function (a) { return this._restrictMinMax(a, this._determineDate(a, this._get(a, "defaultDate"), new Date)) }, _determineDate: function (a, b, c) { var d = function (a) { var b = new Date; return b.setDate(b.getDate() + a), b }, e = function (b) { try { return $.datepicker.parseDate($.datepicker._get(a, "dateFormat"), b, $.datepicker._getFormatConfig(a)) } catch (c) { } var d = (b.toLowerCase().match(/^c/) ? $.datepicker._getDate(a) : null) || new Date, e = d.getFullYear(), f = d.getMonth(), g = d.getDate(), h = /([+-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g, i = h.exec(b); while (i) { switch (i[2] || "d") { case "d": case "D": g += parseInt(i[1], 10); break; case "w": case "W": g += parseInt(i[1], 10) * 7; break; case "m": case "M": f += parseInt(i[1], 10), g = Math.min(g, $.datepicker._getDaysInMonth(e, f)); break; case "y": case "Y": e += parseInt(i[1], 10), g = Math.min(g, $.datepicker._getDaysInMonth(e, f)) } i = h.exec(b) } return new Date(e, f, g) }, f = b == null || b === "" ? c : typeof b == "string" ? e(b) : typeof b == "number" ? isNaN(b) ? c : d(b) : new Date(b.getTime()); return f = f && f.toString() == "Invalid Date" ? c : f, f && (f.setHours(0), f.setMinutes(0), f.setSeconds(0), f.setMilliseconds(0)), this._daylightSavingAdjust(f) }, _daylightSavingAdjust: function (a) { return a ? (a.setHours(a.getHours() > 12 ? a.getHours() + 2 : 0), a) : null }, _setDate: function (a, b, c) { var d = !b, e = a.selectedMonth, f = a.selectedYear, g = this._restrictMinMax(a, this._determineDate(a, b, new Date)); a.selectedDay = a.currentDay = g.getDate(), a.drawMonth = a.selectedMonth = a.currentMonth = g.getMonth(), a.drawYear = a.selectedYear = a.currentYear = g.getFullYear(), (e != a.selectedMonth || f != a.selectedYear) && !c && this._notifyChange(a), this._adjustInstDate(a), a.input && a.input.val(d ? "" : this._formatDate(a)) }, _getDate: function (a) { var b = !a.currentYear || a.input && a.input.val() == "" ? null : this._daylightSavingAdjust(new Date(a.currentYear, a.currentMonth, a.currentDay)); return b }, _generateHTML: function (a) { var b = new Date; b = this._daylightSavingAdjust(new Date(b.getFullYear(), b.getMonth(), b.getDate())); var c = this._get(a, "isRTL"), d = this._get(a, "showButtonPanel"), e = this._get(a, "hideIfNoPrevNext"), f = this._get(a, "navigationAsDateFormat"), g = this._getNumberOfMonths(a), h = this._get(a, "showCurrentAtPos"), i = this._get(a, "stepMonths"), j = g[0] != 1 || g[1] != 1, k = this._daylightSavingAdjust(a.currentDay ? new Date(a.currentYear, a.currentMonth, a.currentDay) : new Date(9999, 9, 9)), l = this._getMinMaxDate(a, "min"), m = this._getMinMaxDate(a, "max"), n = a.drawMonth - h, o = a.drawYear; n < 0 && (n += 12, o--); if (m) { var p = this._daylightSavingAdjust(new Date(m.getFullYear(), m.getMonth() - g[0] * g[1] + 1, m.getDate())); p = l && p < l ? l : p; while (this._daylightSavingAdjust(new Date(o, n, 1)) > p) n--, n < 0 && (n = 11, o--) } a.drawMonth = n, a.drawYear = o; var q = this._get(a, "prevText"); q = f ? this.formatDate(q, this._daylightSavingAdjust(new Date(o, n - i, 1)), this._getFormatConfig(a)) : q; var r = this._canAdjustMonth(a, -1, o, n) ? '<a class="ui-datepicker-prev ui-corner-all" onclick="DP_jQuery_' + dpuuid + ".datepicker._adjustDate('#" + a.id + "', -" + i + ", 'M');\"" + ' title="' + q + '"><span class="ui-icon ui-icon-circle-triangle-' + (c ? "e" : "w") + '">' + q + "</span></a>" : e ? "" : '<a class="ui-datepicker-prev ui-corner-all ui-state-disabled" title="' + q + '"><span class="ui-icon ui-icon-circle-triangle-' + (c ? "e" : "w") + '">' + q + "</span></a>", s = this._get(a, "nextText"); s = f ? this.formatDate(s, this._daylightSavingAdjust(new Date(o, n + i, 1)), this._getFormatConfig(a)) : s; var t = this._canAdjustMonth(a, 1, o, n) ? '<a class="ui-datepicker-next ui-corner-all" onclick="DP_jQuery_' + dpuuid + ".datepicker._adjustDate('#" + a.id + "', +" + i + ", 'M');\"" + ' title="' + s + '"><span class="ui-icon ui-icon-circle-triangle-' + (c ? "w" : "e") + '">' + s + "</span></a>" : e ? "" : '<a class="ui-datepicker-next ui-corner-all ui-state-disabled" title="' + s + '"><span class="ui-icon ui-icon-circle-triangle-' + (c ? "w" : "e") + '">' + s + "</span></a>", u = this._get(a, "currentText"), v = this._get(a, "gotoCurrent") && a.currentDay ? k : b; u = f ? this.formatDate(u, v, this._getFormatConfig(a)) : u; var w = a.inline ? "" : '<button type="button" class="ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all" onclick="DP_jQuery_' + dpuuid + '.datepicker._hideDatepicker();">' + this._get(a, "closeText") + "</button>", x = d ? '<div class="ui-datepicker-buttonpane ui-widget-content">' + (c ? w : "") + (this._isInRange(a, v) ? '<button type="button" class="ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all" onclick="DP_jQuery_' + dpuuid + ".datepicker._gotoToday('#" + a.id + "');\"" + ">" + u + "</button>" : "") + (c ? "" : w) + "</div>" : "", y = parseInt(this._get(a, "firstDay"), 10); y = isNaN(y) ? 0 : y; var z = this._get(a, "showWeek"), A = this._get(a, "dayNames"), B = this._get(a, "dayNamesShort"), C = this._get(a, "dayNamesMin"), D = this._get(a, "monthNames"), E = this._get(a, "monthNamesShort"), F = this._get(a, "beforeShowDay"), G = this._get(a, "showOtherMonths"), H = this._get(a, "selectOtherMonths"), I = this._get(a, "calculateWeek") || this.iso8601Week, J = this._getDefaultDate(a), K = ""; for (var L = 0; L < g[0]; L++) { var M = ""; this.maxRows = 4; for (var N = 0; N < g[1]; N++) { var O = this._daylightSavingAdjust(new Date(o, n, a.selectedDay)), P = " ui-corner-all", Q = ""; if (j) { Q += '<div class="ui-datepicker-group'; if (g[1] > 1) switch (N) { case 0: Q += " ui-datepicker-group-first", P = " ui-corner-" + (c ? "right" : "left"); break; case g[1] - 1: Q += " ui-datepicker-group-last", P = " ui-corner-" + (c ? "left" : "right"); break; default: Q += " ui-datepicker-group-middle", P = "" } Q += '">' } Q += '<div class="ui-datepicker-header ui-widget-header ui-helper-clearfix' + P + '">' + (/all|left/.test(P) && L == 0 ? c ? t : r : "") + (/all|right/.test(P) && L == 0 ? c ? r : t : "") + this._generateMonthYearHeader(a, n, o, l, m, L > 0 || N > 0, D, E) + '</div><table class="ui-datepicker-calendar"><thead>' + "<tr>"; var R = z ? '<th class="ui-datepicker-week-col">' + this._get(a, "weekHeader") + "</th>" : ""; for (var S = 0; S < 7; S++) { var T = (S + y) % 7; R += "<th" + ((S + y + 6) % 7 >= 5 ? ' class="ui-datepicker-week-end"' : "") + ">" + '<span title="' + A[T] + '">' + C[T] + "</span></th>" } Q += R + "</tr></thead><tbody>"; var U = this._getDaysInMonth(o, n); o == a.selectedYear && n == a.selectedMonth && (a.selectedDay = Math.min(a.selectedDay, U)); var V = (this._getFirstDayOfMonth(o, n) - y + 7) % 7, W = Math.ceil((V + U) / 7), X = j ? this.maxRows > W ? this.maxRows : W : W; this.maxRows = X; var Y = this._daylightSavingAdjust(new Date(o, n, 1 - V)); for (var Z = 0; Z < X; Z++) { Q += "<tr>"; var _ = z ? '<td class="ui-datepicker-week-col">' + this._get(a, "calculateWeek")(Y) + "</td>" : ""; for (var S = 0; S < 7; S++) { var ba = F ? F.apply(a.input ? a.input[0] : null, [Y]) : [!0, ""], bb = Y.getMonth() != n, bc = bb && !H || !ba[0] || l && Y < l || m && Y > m; _ += '<td class="' + ((S + y + 6) % 7 >= 5 ? " ui-datepicker-week-end" : "") + (bb ? " ui-datepicker-other-month" : "") + (Y.getTime() == O.getTime() && n == a.selectedMonth && a._keyEvent || J.getTime() == Y.getTime() && J.getTime() == O.getTime() ? " " + this._dayOverClass : "") + (bc ? " " + this._unselectableClass + " ui-state-disabled" : "") + (bb && !G ? "" : " " + ba[1] + (Y.getTime() == k.getTime() ? " " + this._currentClass : "") + (Y.getTime() == b.getTime() ? " ui-datepicker-today" : "")) + '"' + ((!bb || G) && ba[2] ? ' title="' + ba[2] + '"' : "") + (bc ? "" : ' onclick="DP_jQuery_' + dpuuid + ".datepicker._selectDay('#" + a.id + "'," + Y.getMonth() + "," + Y.getFullYear() + ', this);return false;"') + ">" + (bb && !G ? "&#xa0;" : bc ? '<span class="ui-state-default">' + Y.getDate() + "</span>" : '<a class="ui-state-default' + (Y.getTime() == b.getTime() ? " ui-state-highlight" : "") + (Y.getTime() == k.getTime() ? " ui-state-active" : "") + (bb ? " ui-priority-secondary" : "") + '" href="#">' + Y.getDate() + "</a>") + "</td>", Y.setDate(Y.getDate() + 1), Y = this._daylightSavingAdjust(Y) } Q += _ + "</tr>" } n++, n > 11 && (n = 0, o++), Q += "</tbody></table>" + (j ? "</div>" + (g[0] > 0 && N == g[1] - 1 ? '<div class="ui-datepicker-row-break"></div>' : "") : ""), M += Q } K += M } return K += x + ($.browser.msie && parseInt($.browser.version, 10) < 7 && !a.inline ? '<iframe src="javascript:false;" class="ui-datepicker-cover" frameborder="0"></iframe>' : ""), a._keyEvent = !1, K }, _generateMonthYearHeader: function (a, b, c, d, e, f, g, h) { var i = this._get(a, "changeMonth"), j = this._get(a, "changeYear"), k = this._get(a, "showMonthAfterYear"), l = '<div class="ui-datepicker-title">', m = ""; if (f || !i) m += '<span class="ui-datepicker-month">' + g[b] + "</span>"; else { var n = d && d.getFullYear() == c, o = e && e.getFullYear() == c; m += '<select class="ui-datepicker-month" onchange="DP_jQuery_' + dpuuid + ".datepicker._selectMonthYear('#" + a.id + "', this, 'M');\" " + ">"; for (var p = 0; p < 12; p++) (!n || p >= d.getMonth()) && (!o || p <= e.getMonth()) && (m += '<option value="' + p + '"' + (p == b ? ' selected="selected"' : "") + ">" + h[p] + "</option>"); m += "</select>" } k || (l += m + (f || !i || !j ? "&#xa0;" : "")); if (!a.yearshtml) { a.yearshtml = ""; if (f || !j) l += '<span class="ui-datepicker-year">' + c + "</span>"; else { var q = this._get(a, "yearRange").split(":"), r = (new Date).getFullYear(), s = function (a) { var b = a.match(/c[+-].*/) ? c + parseInt(a.substring(1), 10) : a.match(/[+-].*/) ? r + parseInt(a, 10) : parseInt(a, 10); return isNaN(b) ? r : b }, t = s(q[0]), u = Math.max(t, s(q[1] || "")); t = d ? Math.max(t, d.getFullYear()) : t, u = e ? Math.min(u, e.getFullYear()) : u, a.yearshtml += '<select class="ui-datepicker-year" onchange="DP_jQuery_' + dpuuid + ".datepicker._selectMonthYear('#" + a.id + "', this, 'Y');\" " + ">"; for (; t <= u; t++) a.yearshtml += '<option value="' + t + '"' + (t == c ? ' selected="selected"' : "") + ">" + t + "</option>"; a.yearshtml += "</select>", l += a.yearshtml, a.yearshtml = null } } return l += this._get(a, "yearSuffix"), k && (l += (f || !i || !j ? "&#xa0;" : "") + m), l += "</div>", l }, _adjustInstDate: function (a, b, c) { var d = a.drawYear + (c == "Y" ? b : 0), e = a.drawMonth + (c == "M" ? b : 0), f = Math.min(a.selectedDay, this._getDaysInMonth(d, e)) + (c == "D" ? b : 0), g = this._restrictMinMax(a, this._daylightSavingAdjust(new Date(d, e, f))); a.selectedDay = g.getDate(), a.drawMonth = a.selectedMonth = g.getMonth(), a.drawYear = a.selectedYear = g.getFullYear(), (c == "M" || c == "Y") && this._notifyChange(a) }, _restrictMinMax: function (a, b) { var c = this._getMinMaxDate(a, "min"), d = this._getMinMaxDate(a, "max"), e = c && b < c ? c : b; return e = d && e > d ? d : e, e }, _notifyChange: function (a) { var b = this._get(a, "onChangeMonthYear"); b && b.apply(a.input ? a.input[0] : null, [a.selectedYear, a.selectedMonth + 1, a]) }, _getNumberOfMonths: function (a) { var b = this._get(a, "numberOfMonths"); return b == null ? [1, 1] : typeof b == "number" ? [1, b] : b }, _getMinMaxDate: function (a, b) { return this._determineDate(a, this._get(a, b + "Date"), null) }, _getDaysInMonth: function (a, b) { return 32 - this._daylightSavingAdjust(new Date(a, b, 32)).getDate() }, _getFirstDayOfMonth: function (a, b) { return (new Date(a, b, 1)).getDay() }, _canAdjustMonth: function (a, b, c, d) { var e = this._getNumberOfMonths(a), f = this._daylightSavingAdjust(new Date(c, d + (b < 0 ? b : e[0] * e[1]), 1)); return b < 0 && f.setDate(this._getDaysInMonth(f.getFullYear(), f.getMonth())), this._isInRange(a, f) }, _isInRange: function (a, b) { var c = this._getMinMaxDate(a, "min"), d = this._getMinMaxDate(a, "max"); return (!c || b.getTime() >= c.getTime()) && (!d || b.getTime() <= d.getTime()) }, _getFormatConfig: function (a) { var b = this._get(a, "shortYearCutoff"); return b = typeof b != "string" ? b : (new Date).getFullYear() % 100 + parseInt(b, 10), { shortYearCutoff: b, dayNamesShort: this._get(a, "dayNamesShort"), dayNames: this._get(a, "dayNames"), monthNamesShort: this._get(a, "monthNamesShort"), monthNames: this._get(a, "monthNames") } }, _formatDate: function (a, b, c, d) { b || (a.currentDay = a.selectedDay, a.currentMonth = a.selectedMonth, a.currentYear = a.selectedYear); var e = b ? typeof b == "object" ? b : this._daylightSavingAdjust(new Date(d, c, b)) : this._daylightSavingAdjust(new Date(a.currentYear, a.currentMonth, a.currentDay)); return this.formatDate(this._get(a, "dateFormat"), e, this._getFormatConfig(a)) } }), $.fn.datepicker = function (a) { if (!this.length) return this; $.datepicker.initialized || ($(document).mousedown($.datepicker._checkExternalClick).find("body").append($.datepicker.dpDiv), $.datepicker.initialized = !0); var b = Array.prototype.slice.call(arguments, 1); return typeof a != "string" || a != "isDisabled" && a != "getDate" && a != "widget" ? a == "option" && arguments.length == 2 && typeof arguments[1] == "string" ? $.datepicker["_" + a + "Datepicker"].apply($.datepicker, [this[0]].concat(b)) : this.each(function () { typeof a == "string" ? $.datepicker["_" + a + "Datepicker"].apply($.datepicker, [this].concat(b)) : $.datepicker._attachDatepicker(this, a) }) : $.datepicker["_" + a + "Datepicker"].apply($.datepicker, [this[0]].concat(b)) }, $.datepicker = new Datepicker, $.datepicker.initialized = !1, $.datepicker.uuid = (new Date).getTime(), $.datepicker.version = "1.8.21", window["DP_jQuery_" + dpuuid] = $ })(jQuery);;/*! jQuery UI - v1.8.21 - 2012-06-05
* https://github.com/jquery/jquery-ui
* Includes: jquery.ui.progressbar.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function (a, b) { a.widget("ui.progressbar", { options: { value: 0, max: 100 }, min: 0, _create: function () { this.element.addClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").attr({ role: "progressbar", "aria-valuemin": this.min, "aria-valuemax": this.options.max, "aria-valuenow": this._value() }), this.valueDiv = a("<div class='ui-progressbar-value ui-widget-header ui-corner-left'></div>").appendTo(this.element), this.oldValue = this._value(), this._refreshValue() }, destroy: function () { this.element.removeClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").removeAttr("role").removeAttr("aria-valuemin").removeAttr("aria-valuemax").removeAttr("aria-valuenow"), this.valueDiv.remove(), a.Widget.prototype.destroy.apply(this, arguments) }, value: function (a) { return a === b ? this._value() : (this._setOption("value", a), this) }, _setOption: function (b, c) { b === "value" && (this.options.value = c, this._refreshValue(), this._value() === this.options.max && this._trigger("complete")), a.Widget.prototype._setOption.apply(this, arguments) }, _value: function () { var a = this.options.value; return typeof a != "number" && (a = 0), Math.min(this.options.max, Math.max(this.min, a)) }, _percentage: function () { return 100 * this._value() / this.options.max }, _refreshValue: function () { var a = this.value(), b = this._percentage(); this.oldValue !== a && (this.oldValue = a, this._trigger("change")), this.valueDiv.toggle(a > this.min).toggleClass("ui-corner-right", a === this.options.max).width(b.toFixed(0) + "%"), this.element.attr("aria-valuenow", a) } }), a.extend(a.ui.progressbar, { version: "1.8.21" }) })(jQuery);;/*! jQuery UI - v1.8.21 - 2012-06-05
* https://github.com/jquery/jquery-ui
* Includes: jquery.effects.core.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
jQuery.effects || function (a, b) { function c(b) { var c; return b && b.constructor == Array && b.length == 3 ? b : (c = /rgb\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*\)/.exec(b)) ? [parseInt(c[1], 10), parseInt(c[2], 10), parseInt(c[3], 10)] : (c = /rgb\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*\)/.exec(b)) ? [parseFloat(c[1]) * 2.55, parseFloat(c[2]) * 2.55, parseFloat(c[3]) * 2.55] : (c = /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec(b)) ? [parseInt(c[1], 16), parseInt(c[2], 16), parseInt(c[3], 16)] : (c = /#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/.exec(b)) ? [parseInt(c[1] + c[1], 16), parseInt(c[2] + c[2], 16), parseInt(c[3] + c[3], 16)] : (c = /rgba\(0, 0, 0, 0\)/.exec(b)) ? e.transparent : e[a.trim(b).toLowerCase()] } function d(b, d) { var e; do { e = a.curCSS(b, d); if (e != "" && e != "transparent" || a.nodeName(b, "body")) break; d = "backgroundColor" } while (b = b.parentNode); return c(e) } function h() { var a = document.defaultView ? document.defaultView.getComputedStyle(this, null) : this.currentStyle, b = {}, c, d; if (a && a.length && a[0] && a[a[0]]) { var e = a.length; while (e--) c = a[e], typeof a[c] == "string" && (d = c.replace(/\-(\w)/g, function (a, b) { return b.toUpperCase() }), b[d] = a[c]) } else for (c in a) typeof a[c] == "string" && (b[c] = a[c]); return b } function i(b) { var c, d; for (c in b) d = b[c], (d == null || a.isFunction(d) || c in g || /scrollbar/.test(c) || !/color/i.test(c) && isNaN(parseFloat(d))) && delete b[c]; return b } function j(a, b) { var c = { _: 0 }, d; for (d in b) a[d] != b[d] && (c[d] = b[d]); return c } function k(b, c, d, e) { typeof b == "object" && (e = c, d = null, c = b, b = c.effect), a.isFunction(c) && (e = c, d = null, c = {}); if (typeof c == "number" || a.fx.speeds[c]) e = d, d = c, c = {}; return a.isFunction(d) && (e = d, d = null), c = c || {}, d = d || c.duration, d = a.fx.off ? 0 : typeof d == "number" ? d : d in a.fx.speeds ? a.fx.speeds[d] : a.fx.speeds._default, e = e || c.complete, [b, c, d, e] } function l(b) { return !b || typeof b == "number" || a.fx.speeds[b] ? !0 : typeof b == "string" && !a.effects[b] ? !0 : !1 } a.effects = {}, a.each(["backgroundColor", "borderBottomColor", "borderLeftColor", "borderRightColor", "borderTopColor", "borderColor", "color", "outlineColor"], function (b, e) { a.fx.step[e] = function (a) { a.colorInit || (a.start = d(a.elem, e), a.end = c(a.end), a.colorInit = !0), a.elem.style[e] = "rgb(" + Math.max(Math.min(parseInt(a.pos * (a.end[0] - a.start[0]) + a.start[0], 10), 255), 0) + "," + Math.max(Math.min(parseInt(a.pos * (a.end[1] - a.start[1]) + a.start[1], 10), 255), 0) + "," + Math.max(Math.min(parseInt(a.pos * (a.end[2] - a.start[2]) + a.start[2], 10), 255), 0) + ")" } }); var e = { aqua: [0, 255, 255], azure: [240, 255, 255], beige: [245, 245, 220], black: [0, 0, 0], blue: [0, 0, 255], brown: [165, 42, 42], cyan: [0, 255, 255], darkblue: [0, 0, 139], darkcyan: [0, 139, 139], darkgrey: [169, 169, 169], darkgreen: [0, 100, 0], darkkhaki: [189, 183, 107], darkmagenta: [139, 0, 139], darkolivegreen: [85, 107, 47], darkorange: [255, 140, 0], darkorchid: [153, 50, 204], darkred: [139, 0, 0], darksalmon: [233, 150, 122], darkviolet: [148, 0, 211], fuchsia: [255, 0, 255], gold: [255, 215, 0], green: [0, 128, 0], indigo: [75, 0, 130], khaki: [240, 230, 140], lightblue: [173, 216, 230], lightcyan: [224, 255, 255], lightgreen: [144, 238, 144], lightgrey: [211, 211, 211], lightpink: [255, 182, 193], lightyellow: [255, 255, 224], lime: [0, 255, 0], magenta: [255, 0, 255], maroon: [128, 0, 0], navy: [0, 0, 128], olive: [128, 128, 0], orange: [255, 165, 0], pink: [255, 192, 203], purple: [128, 0, 128], violet: [128, 0, 128], red: [255, 0, 0], silver: [192, 192, 192], white: [255, 255, 255], yellow: [255, 255, 0], transparent: [255, 255, 255] }, f = ["add", "remove", "toggle"], g = { border: 1, borderBottom: 1, borderColor: 1, borderLeft: 1, borderRight: 1, borderTop: 1, borderWidth: 1, margin: 1, padding: 1 }; a.effects.animateClass = function (b, c, d, e) { return a.isFunction(d) && (e = d, d = null), this.queue(function () { var g = a(this), k = g.attr("style") || " ", l = i(h.call(this)), m, n = g.attr("class") || ""; a.each(f, function (a, c) { b[c] && g[c + "Class"](b[c]) }), m = i(h.call(this)), g.attr("class", n), g.animate(j(l, m), { queue: !1, duration: c, easing: d, complete: function () { a.each(f, function (a, c) { b[c] && g[c + "Class"](b[c]) }), typeof g.attr("style") == "object" ? (g.attr("style").cssText = "", g.attr("style").cssText = k) : g.attr("style", k), e && e.apply(this, arguments), a.dequeue(this) } }) }) }, a.fn.extend({ _addClass: a.fn.addClass, addClass: function (b, c, d, e) { return c ? a.effects.animateClass.apply(this, [{ add: b }, c, d, e]) : this._addClass(b) }, _removeClass: a.fn.removeClass, removeClass: function (b, c, d, e) { return c ? a.effects.animateClass.apply(this, [{ remove: b }, c, d, e]) : this._removeClass(b) }, _toggleClass: a.fn.toggleClass, toggleClass: function (c, d, e, f, g) { return typeof d == "boolean" || d === b ? e ? a.effects.animateClass.apply(this, [d ? { add: c } : { remove: c }, e, f, g]) : this._toggleClass(c, d) : a.effects.animateClass.apply(this, [{ toggle: c }, d, e, f]) }, switchClass: function (b, c, d, e, f) { return a.effects.animateClass.apply(this, [{ add: c, remove: b }, d, e, f]) } }), a.extend(a.effects, { version: "1.8.21", save: function (a, b) { for (var c = 0; c < b.length; c++) b[c] !== null && a.data("ec.storage." + b[c], a[0].style[b[c]]) }, restore: function (a, b) { for (var c = 0; c < b.length; c++) b[c] !== null && a.css(b[c], a.data("ec.storage." + b[c])) }, setMode: function (a, b) { return b == "toggle" && (b = a.is(":hidden") ? "show" : "hide"), b }, getBaseline: function (a, b) { var c, d; switch (a[0]) { case "top": c = 0; break; case "middle": c = .5; break; case "bottom": c = 1; break; default: c = a[0] / b.height } switch (a[1]) { case "left": d = 0; break; case "center": d = .5; break; case "right": d = 1; break; default: d = a[1] / b.width } return { x: d, y: c } }, createWrapper: function (b) { if (b.parent().is(".ui-effects-wrapper")) return b.parent(); var c = { width: b.outerWidth(!0), height: b.outerHeight(!0), "float": b.css("float") }, d = a("<div></div>").addClass("ui-effects-wrapper").css({ fontSize: "100%", background: "transparent", border: "none", margin: 0, padding: 0 }), e = document.activeElement; try { e.id } catch (f) { e = document.body } return b.wrap(d), (b[0] === e || a.contains(b[0], e)) && a(e).focus(), d = b.parent(), b.css("position") == "static" ? (d.css({ position: "relative" }), b.css({ position: "relative" })) : (a.extend(c, { position: b.css("position"), zIndex: b.css("z-index") }), a.each(["top", "left", "bottom", "right"], function (a, d) { c[d] = b.css(d), isNaN(parseInt(c[d], 10)) && (c[d] = "auto") }), b.css({ position: "relative", top: 0, left: 0, right: "auto", bottom: "auto" })), d.css(c).show() }, removeWrapper: function (b) { var c, d = document.activeElement; return b.parent().is(".ui-effects-wrapper") ? (c = b.parent().replaceWith(b), (b[0] === d || a.contains(b[0], d)) && a(d).focus(), c) : b }, setTransition: function (b, c, d, e) { return e = e || {}, a.each(c, function (a, c) { var f = b.cssUnit(c); f[0] > 0 && (e[c] = f[0] * d + f[1]) }), e } }), a.fn.extend({ effect: function (b, c, d, e) { var f = k.apply(this, arguments), g = { options: f[1], duration: f[2], callback: f[3] }, h = g.options.mode, i = a.effects[b]; return a.fx.off || !i ? h ? this[h](g.duration, g.callback) : this.each(function () { g.callback && g.callback.call(this) }) : i.call(this, g) }, _show: a.fn.show, show: function (a) { if (l(a)) return this._show.apply(this, arguments); var b = k.apply(this, arguments); return b[1].mode = "show", this.effect.apply(this, b) }, _hide: a.fn.hide, hide: function (a) { if (l(a)) return this._hide.apply(this, arguments); var b = k.apply(this, arguments); return b[1].mode = "hide", this.effect.apply(this, b) }, __toggle: a.fn.toggle, toggle: function (b) { if (l(b) || typeof b == "boolean" || a.isFunction(b)) return this.__toggle.apply(this, arguments); var c = k.apply(this, arguments); return c[1].mode = "toggle", this.effect.apply(this, c) }, cssUnit: function (b) { var c = this.css(b), d = []; return a.each(["em", "px", "%", "pt"], function (a, b) { c.indexOf(b) > 0 && (d = [parseFloat(c), b]) }), d } }), a.easing.jswing = a.easing.swing, a.extend(a.easing, { def: "easeOutQuad", swing: function (b, c, d, e, f) { return a.easing[a.easing.def](b, c, d, e, f) }, easeInQuad: function (a, b, c, d, e) { return d * (b /= e) * b + c }, easeOutQuad: function (a, b, c, d, e) { return -d * (b /= e) * (b - 2) + c }, easeInOutQuad: function (a, b, c, d, e) { return (b /= e / 2) < 1 ? d / 2 * b * b + c : -d / 2 * (--b * (b - 2) - 1) + c }, easeInCubic: function (a, b, c, d, e) { return d * (b /= e) * b * b + c }, easeOutCubic: function (a, b, c, d, e) { return d * ((b = b / e - 1) * b * b + 1) + c }, easeInOutCubic: function (a, b, c, d, e) { return (b /= e / 2) < 1 ? d / 2 * b * b * b + c : d / 2 * ((b -= 2) * b * b + 2) + c }, easeInQuart: function (a, b, c, d, e) { return d * (b /= e) * b * b * b + c }, easeOutQuart: function (a, b, c, d, e) { return -d * ((b = b / e - 1) * b * b * b - 1) + c }, easeInOutQuart: function (a, b, c, d, e) { return (b /= e / 2) < 1 ? d / 2 * b * b * b * b + c : -d / 2 * ((b -= 2) * b * b * b - 2) + c }, easeInQuint: function (a, b, c, d, e) { return d * (b /= e) * b * b * b * b + c }, easeOutQuint: function (a, b, c, d, e) { return d * ((b = b / e - 1) * b * b * b * b + 1) + c }, easeInOutQuint: function (a, b, c, d, e) { return (b /= e / 2) < 1 ? d / 2 * b * b * b * b * b + c : d / 2 * ((b -= 2) * b * b * b * b + 2) + c }, easeInSine: function (a, b, c, d, e) { return -d * Math.cos(b / e * (Math.PI / 2)) + d + c }, easeOutSine: function (a, b, c, d, e) { return d * Math.sin(b / e * (Math.PI / 2)) + c }, easeInOutSine: function (a, b, c, d, e) { return -d / 2 * (Math.cos(Math.PI * b / e) - 1) + c }, easeInExpo: function (a, b, c, d, e) { return b == 0 ? c : d * Math.pow(2, 10 * (b / e - 1)) + c }, easeOutExpo: function (a, b, c, d, e) { return b == e ? c + d : d * (-Math.pow(2, -10 * b / e) + 1) + c }, easeInOutExpo: function (a, b, c, d, e) { return b == 0 ? c : b == e ? c + d : (b /= e / 2) < 1 ? d / 2 * Math.pow(2, 10 * (b - 1)) + c : d / 2 * (-Math.pow(2, -10 * --b) + 2) + c }, easeInCirc: function (a, b, c, d, e) { return -d * (Math.sqrt(1 - (b /= e) * b) - 1) + c }, easeOutCirc: function (a, b, c, d, e) { return d * Math.sqrt(1 - (b = b / e - 1) * b) + c }, easeInOutCirc: function (a, b, c, d, e) { return (b /= e / 2) < 1 ? -d / 2 * (Math.sqrt(1 - b * b) - 1) + c : d / 2 * (Math.sqrt(1 - (b -= 2) * b) + 1) + c }, easeInElastic: function (a, b, c, d, e) { var f = 1.70158, g = 0, h = d; if (b == 0) return c; if ((b /= e) == 1) return c + d; g || (g = e * .3); if (h < Math.abs(d)) { h = d; var f = g / 4 } else var f = g / (2 * Math.PI) * Math.asin(d / h); return -(h * Math.pow(2, 10 * (b -= 1)) * Math.sin((b * e - f) * 2 * Math.PI / g)) + c }, easeOutElastic: function (a, b, c, d, e) { var f = 1.70158, g = 0, h = d; if (b == 0) return c; if ((b /= e) == 1) return c + d; g || (g = e * .3); if (h < Math.abs(d)) { h = d; var f = g / 4 } else var f = g / (2 * Math.PI) * Math.asin(d / h); return h * Math.pow(2, -10 * b) * Math.sin((b * e - f) * 2 * Math.PI / g) + d + c }, easeInOutElastic: function (a, b, c, d, e) { var f = 1.70158, g = 0, h = d; if (b == 0) return c; if ((b /= e / 2) == 2) return c + d; g || (g = e * .3 * 1.5); if (h < Math.abs(d)) { h = d; var f = g / 4 } else var f = g / (2 * Math.PI) * Math.asin(d / h); return b < 1 ? -0.5 * h * Math.pow(2, 10 * (b -= 1)) * Math.sin((b * e - f) * 2 * Math.PI / g) + c : h * Math.pow(2, -10 * (b -= 1)) * Math.sin((b * e - f) * 2 * Math.PI / g) * .5 + d + c }, easeInBack: function (a, c, d, e, f, g) { return g == b && (g = 1.70158), e * (c /= f) * c * ((g + 1) * c - g) + d }, easeOutBack: function (a, c, d, e, f, g) { return g == b && (g = 1.70158), e * ((c = c / f - 1) * c * ((g + 1) * c + g) + 1) + d }, easeInOutBack: function (a, c, d, e, f, g) { return g == b && (g = 1.70158), (c /= f / 2) < 1 ? e / 2 * c * c * (((g *= 1.525) + 1) * c - g) + d : e / 2 * ((c -= 2) * c * (((g *= 1.525) + 1) * c + g) + 2) + d }, easeInBounce: function (b, c, d, e, f) { return e - a.easing.easeOutBounce(b, f - c, 0, e, f) + d }, easeOutBounce: function (a, b, c, d, e) { return (b /= e) < 1 / 2.75 ? d * 7.5625 * b * b + c : b < 2 / 2.75 ? d * (7.5625 * (b -= 1.5 / 2.75) * b + .75) + c : b < 2.5 / 2.75 ? d * (7.5625 * (b -= 2.25 / 2.75) * b + .9375) + c : d * (7.5625 * (b -= 2.625 / 2.75) * b + .984375) + c }, easeInOutBounce: function (b, c, d, e, f) { return c < f / 2 ? a.easing.easeInBounce(b, c * 2, 0, e, f) * .5 + d : a.easing.easeOutBounce(b, c * 2 - f, 0, e, f) * .5 + e * .5 + d } }) }(jQuery);;/*! jQuery UI - v1.8.21 - 2012-06-05
* https://github.com/jquery/jquery-ui
* Includes: jquery.effects.blind.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function (a, b) { a.effects.blind = function (b) { return this.queue(function () { var c = a(this), d = ["position", "top", "bottom", "left", "right"], e = a.effects.setMode(c, b.options.mode || "hide"), f = b.options.direction || "vertical"; a.effects.save(c, d), c.show(); var g = a.effects.createWrapper(c).css({ overflow: "hidden" }), h = f == "vertical" ? "height" : "width", i = f == "vertical" ? g.height() : g.width(); e == "show" && g.css(h, 0); var j = {}; j[h] = e == "show" ? i : 0, g.animate(j, b.duration, b.options.easing, function () { e == "hide" && c.hide(), a.effects.restore(c, d), a.effects.removeWrapper(c), b.callback && b.callback.apply(c[0], arguments), c.dequeue() }) }) } })(jQuery);;/*! jQuery UI - v1.8.21 - 2012-06-05
* https://github.com/jquery/jquery-ui
* Includes: jquery.effects.bounce.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function (a, b) { a.effects.bounce = function (b) { return this.queue(function () { var c = a(this), d = ["position", "top", "bottom", "left", "right"], e = a.effects.setMode(c, b.options.mode || "effect"), f = b.options.direction || "up", g = b.options.distance || 20, h = b.options.times || 5, i = b.duration || 250; /show|hide/.test(e) && d.push("opacity"), a.effects.save(c, d), c.show(), a.effects.createWrapper(c); var j = f == "up" || f == "down" ? "top" : "left", k = f == "up" || f == "left" ? "pos" : "neg", g = b.options.distance || (j == "top" ? c.outerHeight({ margin: !0 }) / 3 : c.outerWidth({ margin: !0 }) / 3); e == "show" && c.css("opacity", 0).css(j, k == "pos" ? -g : g), e == "hide" && (g = g / (h * 2)), e != "hide" && h--; if (e == "show") { var l = { opacity: 1 }; l[j] = (k == "pos" ? "+=" : "-=") + g, c.animate(l, i / 2, b.options.easing), g = g / 2, h-- } for (var m = 0; m < h; m++) { var n = {}, p = {}; n[j] = (k == "pos" ? "-=" : "+=") + g, p[j] = (k == "pos" ? "+=" : "-=") + g, c.animate(n, i / 2, b.options.easing).animate(p, i / 2, b.options.easing), g = e == "hide" ? g * 2 : g / 2 } if (e == "hide") { var l = { opacity: 0 }; l[j] = (k == "pos" ? "-=" : "+=") + g, c.animate(l, i / 2, b.options.easing, function () { c.hide(), a.effects.restore(c, d), a.effects.removeWrapper(c), b.callback && b.callback.apply(this, arguments) }) } else { var n = {}, p = {}; n[j] = (k == "pos" ? "-=" : "+=") + g, p[j] = (k == "pos" ? "+=" : "-=") + g, c.animate(n, i / 2, b.options.easing).animate(p, i / 2, b.options.easing, function () { a.effects.restore(c, d), a.effects.removeWrapper(c), b.callback && b.callback.apply(this, arguments) }) } c.queue("fx", function () { c.dequeue() }), c.dequeue() }) } })(jQuery);;/*! jQuery UI - v1.8.21 - 2012-06-05
* https://github.com/jquery/jquery-ui
* Includes: jquery.effects.clip.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function (a, b) { a.effects.clip = function (b) { return this.queue(function () { var c = a(this), d = ["position", "top", "bottom", "left", "right", "height", "width"], e = a.effects.setMode(c, b.options.mode || "hide"), f = b.options.direction || "vertical"; a.effects.save(c, d), c.show(); var g = a.effects.createWrapper(c).css({ overflow: "hidden" }), h = c[0].tagName == "IMG" ? g : c, i = { size: f == "vertical" ? "height" : "width", position: f == "vertical" ? "top" : "left" }, j = f == "vertical" ? h.height() : h.width(); e == "show" && (h.css(i.size, 0), h.css(i.position, j / 2)); var k = {}; k[i.size] = e == "show" ? j : 0, k[i.position] = e == "show" ? 0 : j / 2, h.animate(k, { queue: !1, duration: b.duration, easing: b.options.easing, complete: function () { e == "hide" && c.hide(), a.effects.restore(c, d), a.effects.removeWrapper(c), b.callback && b.callback.apply(c[0], arguments), c.dequeue() } }) }) } })(jQuery);;/*! jQuery UI - v1.8.21 - 2012-06-05
* https://github.com/jquery/jquery-ui
* Includes: jquery.effects.drop.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function (a, b) { a.effects.drop = function (b) { return this.queue(function () { var c = a(this), d = ["position", "top", "bottom", "left", "right", "opacity"], e = a.effects.setMode(c, b.options.mode || "hide"), f = b.options.direction || "left"; a.effects.save(c, d), c.show(), a.effects.createWrapper(c); var g = f == "up" || f == "down" ? "top" : "left", h = f == "up" || f == "left" ? "pos" : "neg", i = b.options.distance || (g == "top" ? c.outerHeight({ margin: !0 }) / 2 : c.outerWidth({ margin: !0 }) / 2); e == "show" && c.css("opacity", 0).css(g, h == "pos" ? -i : i); var j = { opacity: e == "show" ? 1 : 0 }; j[g] = (e == "show" ? h == "pos" ? "+=" : "-=" : h == "pos" ? "-=" : "+=") + i, c.animate(j, { queue: !1, duration: b.duration, easing: b.options.easing, complete: function () { e == "hide" && c.hide(), a.effects.restore(c, d), a.effects.removeWrapper(c), b.callback && b.callback.apply(this, arguments), c.dequeue() } }) }) } })(jQuery);;/*! jQuery UI - v1.8.21 - 2012-06-05
* https://github.com/jquery/jquery-ui
* Includes: jquery.effects.explode.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function (a, b) { a.effects.explode = function (b) { return this.queue(function () { var c = b.options.pieces ? Math.round(Math.sqrt(b.options.pieces)) : 3, d = b.options.pieces ? Math.round(Math.sqrt(b.options.pieces)) : 3; b.options.mode = b.options.mode == "toggle" ? a(this).is(":visible") ? "hide" : "show" : b.options.mode; var e = a(this).show().css("visibility", "hidden"), f = e.offset(); f.top -= parseInt(e.css("marginTop"), 10) || 0, f.left -= parseInt(e.css("marginLeft"), 10) || 0; var g = e.outerWidth(!0), h = e.outerHeight(!0); for (var i = 0; i < c; i++) for (var j = 0; j < d; j++) e.clone().appendTo("body").wrap("<div></div>").css({ position: "absolute", visibility: "visible", left: -j * (g / d), top: -i * (h / c) }).parent().addClass("ui-effects-explode").css({ position: "absolute", overflow: "hidden", width: g / d, height: h / c, left: f.left + j * (g / d) + (b.options.mode == "show" ? (j - Math.floor(d / 2)) * (g / d) : 0), top: f.top + i * (h / c) + (b.options.mode == "show" ? (i - Math.floor(c / 2)) * (h / c) : 0), opacity: b.options.mode == "show" ? 0 : 1 }).animate({ left: f.left + j * (g / d) + (b.options.mode == "show" ? 0 : (j - Math.floor(d / 2)) * (g / d)), top: f.top + i * (h / c) + (b.options.mode == "show" ? 0 : (i - Math.floor(c / 2)) * (h / c)), opacity: b.options.mode == "show" ? 1 : 0 }, b.duration || 500); setTimeout(function () { b.options.mode == "show" ? e.css({ visibility: "visible" }) : e.css({ visibility: "visible" }).hide(), b.callback && b.callback.apply(e[0]), e.dequeue(), a("div.ui-effects-explode").remove() }, b.duration || 500) }) } })(jQuery);;/*! jQuery UI - v1.8.21 - 2012-06-05
* https://github.com/jquery/jquery-ui
* Includes: jquery.effects.fade.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function (a, b) { a.effects.fade = function (b) { return this.queue(function () { var c = a(this), d = a.effects.setMode(c, b.options.mode || "hide"); c.animate({ opacity: d }, { queue: !1, duration: b.duration, easing: b.options.easing, complete: function () { b.callback && b.callback.apply(this, arguments), c.dequeue() } }) }) } })(jQuery);;/*! jQuery UI - v1.8.21 - 2012-06-05
* https://github.com/jquery/jquery-ui
* Includes: jquery.effects.fold.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function (a, b) { a.effects.fold = function (b) { return this.queue(function () { var c = a(this), d = ["position", "top", "bottom", "left", "right"], e = a.effects.setMode(c, b.options.mode || "hide"), f = b.options.size || 15, g = !!b.options.horizFirst, h = b.duration ? b.duration / 2 : a.fx.speeds._default / 2; a.effects.save(c, d), c.show(); var i = a.effects.createWrapper(c).css({ overflow: "hidden" }), j = e == "show" != g, k = j ? ["width", "height"] : ["height", "width"], l = j ? [i.width(), i.height()] : [i.height(), i.width()], m = /([0-9]+)%/.exec(f); m && (f = parseInt(m[1], 10) / 100 * l[e == "hide" ? 0 : 1]), e == "show" && i.css(g ? { height: 0, width: f } : { height: f, width: 0 }); var n = {}, p = {}; n[k[0]] = e == "show" ? l[0] : f, p[k[1]] = e == "show" ? l[1] : 0, i.animate(n, h, b.options.easing).animate(p, h, b.options.easing, function () { e == "hide" && c.hide(), a.effects.restore(c, d), a.effects.removeWrapper(c), b.callback && b.callback.apply(c[0], arguments), c.dequeue() }) }) } })(jQuery);;/*! jQuery UI - v1.8.21 - 2012-06-05
* https://github.com/jquery/jquery-ui
* Includes: jquery.effects.highlight.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function (a, b) { a.effects.highlight = function (b) { return this.queue(function () { var c = a(this), d = ["backgroundImage", "backgroundColor", "opacity"], e = a.effects.setMode(c, b.options.mode || "show"), f = { backgroundColor: c.css("backgroundColor") }; e == "hide" && (f.opacity = 0), a.effects.save(c, d), c.show().css({ backgroundImage: "none", backgroundColor: b.options.color || "#ffff99" }).animate(f, { queue: !1, duration: b.duration, easing: b.options.easing, complete: function () { e == "hide" && c.hide(), a.effects.restore(c, d), e == "show" && !a.support.opacity && this.style.removeAttribute("filter"), b.callback && b.callback.apply(this, arguments), c.dequeue() } }) }) } })(jQuery);;/*! jQuery UI - v1.8.21 - 2012-06-05
* https://github.com/jquery/jquery-ui
* Includes: jquery.effects.pulsate.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function (a, b) { a.effects.pulsate = function (b) { return this.queue(function () { var c = a(this), d = a.effects.setMode(c, b.options.mode || "show"), e = (b.options.times || 5) * 2 - 1, f = b.duration ? b.duration / 2 : a.fx.speeds._default / 2, g = c.is(":visible"), h = 0; g || (c.css("opacity", 0).show(), h = 1), (d == "hide" && g || d == "show" && !g) && e--; for (var i = 0; i < e; i++) c.animate({ opacity: h }, f, b.options.easing), h = (h + 1) % 2; c.animate({ opacity: h }, f, b.options.easing, function () { h == 0 && c.hide(), b.callback && b.callback.apply(this, arguments) }), c.queue("fx", function () { c.dequeue() }).dequeue() }) } })(jQuery);;/*! jQuery UI - v1.8.21 - 2012-06-05
* https://github.com/jquery/jquery-ui
* Includes: jquery.effects.scale.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function (a, b) { a.effects.puff = function (b) { return this.queue(function () { var c = a(this), d = a.effects.setMode(c, b.options.mode || "hide"), e = parseInt(b.options.percent, 10) || 150, f = e / 100, g = { height: c.height(), width: c.width() }; a.extend(b.options, { fade: !0, mode: d, percent: d == "hide" ? e : 100, from: d == "hide" ? g : { height: g.height * f, width: g.width * f } }), c.effect("scale", b.options, b.duration, b.callback), c.dequeue() }) }, a.effects.scale = function (b) { return this.queue(function () { var c = a(this), d = a.extend(!0, {}, b.options), e = a.effects.setMode(c, b.options.mode || "effect"), f = parseInt(b.options.percent, 10) || (parseInt(b.options.percent, 10) == 0 ? 0 : e == "hide" ? 0 : 100), g = b.options.direction || "both", h = b.options.origin; e != "effect" && (d.origin = h || ["middle", "center"], d.restore = !0); var i = { height: c.height(), width: c.width() }; c.from = b.options.from || (e == "show" ? { height: 0, width: 0 } : i); var j = { y: g != "horizontal" ? f / 100 : 1, x: g != "vertical" ? f / 100 : 1 }; c.to = { height: i.height * j.y, width: i.width * j.x }, b.options.fade && (e == "show" && (c.from.opacity = 0, c.to.opacity = 1), e == "hide" && (c.from.opacity = 1, c.to.opacity = 0)), d.from = c.from, d.to = c.to, d.mode = e, c.effect("size", d, b.duration, b.callback), c.dequeue() }) }, a.effects.size = function (b) { return this.queue(function () { var c = a(this), d = ["position", "top", "bottom", "left", "right", "width", "height", "overflow", "opacity"], e = ["position", "top", "bottom", "left", "right", "overflow", "opacity"], f = ["width", "height", "overflow"], g = ["fontSize"], h = ["borderTopWidth", "borderBottomWidth", "paddingTop", "paddingBottom"], i = ["borderLeftWidth", "borderRightWidth", "paddingLeft", "paddingRight"], j = a.effects.setMode(c, b.options.mode || "effect"), k = b.options.restore || !1, l = b.options.scale || "both", m = b.options.origin, n = { height: c.height(), width: c.width() }; c.from = b.options.from || n, c.to = b.options.to || n; if (m) { var p = a.effects.getBaseline(m, n); c.from.top = (n.height - c.from.height) * p.y, c.from.left = (n.width - c.from.width) * p.x, c.to.top = (n.height - c.to.height) * p.y, c.to.left = (n.width - c.to.width) * p.x } var q = { from: { y: c.from.height / n.height, x: c.from.width / n.width }, to: { y: c.to.height / n.height, x: c.to.width / n.width } }; if (l == "box" || l == "both") q.from.y != q.to.y && (d = d.concat(h), c.from = a.effects.setTransition(c, h, q.from.y, c.from), c.to = a.effects.setTransition(c, h, q.to.y, c.to)), q.from.x != q.to.x && (d = d.concat(i), c.from = a.effects.setTransition(c, i, q.from.x, c.from), c.to = a.effects.setTransition(c, i, q.to.x, c.to)); (l == "content" || l == "both") && q.from.y != q.to.y && (d = d.concat(g), c.from = a.effects.setTransition(c, g, q.from.y, c.from), c.to = a.effects.setTransition(c, g, q.to.y, c.to)), a.effects.save(c, k ? d : e), c.show(), a.effects.createWrapper(c), c.css("overflow", "hidden").css(c.from); if (l == "content" || l == "both") h = h.concat(["marginTop", "marginBottom"]).concat(g), i = i.concat(["marginLeft", "marginRight"]), f = d.concat(h).concat(i), c.find("*[width]").each(function () { var c = a(this); k && a.effects.save(c, f); var d = { height: c.height(), width: c.width() }; c.from = { height: d.height * q.from.y, width: d.width * q.from.x }, c.to = { height: d.height * q.to.y, width: d.width * q.to.x }, q.from.y != q.to.y && (c.from = a.effects.setTransition(c, h, q.from.y, c.from), c.to = a.effects.setTransition(c, h, q.to.y, c.to)), q.from.x != q.to.x && (c.from = a.effects.setTransition(c, i, q.from.x, c.from), c.to = a.effects.setTransition(c, i, q.to.x, c.to)), c.css(c.from), c.animate(c.to, b.duration, b.options.easing, function () { k && a.effects.restore(c, f) }) }); c.animate(c.to, { queue: !1, duration: b.duration, easing: b.options.easing, complete: function () { c.to.opacity === 0 && c.css("opacity", c.from.opacity), j == "hide" && c.hide(), a.effects.restore(c, k ? d : e), a.effects.removeWrapper(c), b.callback && b.callback.apply(this, arguments), c.dequeue() } }) }) } })(jQuery);;/*! jQuery UI - v1.8.21 - 2012-06-05
* https://github.com/jquery/jquery-ui
* Includes: jquery.effects.shake.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function (a, b) { a.effects.shake = function (b) { return this.queue(function () { var c = a(this), d = ["position", "top", "bottom", "left", "right"], e = a.effects.setMode(c, b.options.mode || "effect"), f = b.options.direction || "left", g = b.options.distance || 20, h = b.options.times || 3, i = b.duration || b.options.duration || 140; a.effects.save(c, d), c.show(), a.effects.createWrapper(c); var j = f == "up" || f == "down" ? "top" : "left", k = f == "up" || f == "left" ? "pos" : "neg", l = {}, m = {}, n = {}; l[j] = (k == "pos" ? "-=" : "+=") + g, m[j] = (k == "pos" ? "+=" : "-=") + g * 2, n[j] = (k == "pos" ? "-=" : "+=") + g * 2, c.animate(l, i, b.options.easing); for (var p = 1; p < h; p++) c.animate(m, i, b.options.easing).animate(n, i, b.options.easing); c.animate(m, i, b.options.easing).animate(l, i / 2, b.options.easing, function () { a.effects.restore(c, d), a.effects.removeWrapper(c), b.callback && b.callback.apply(this, arguments) }), c.queue("fx", function () { c.dequeue() }), c.dequeue() }) } })(jQuery);;/*! jQuery UI - v1.8.21 - 2012-06-05
* https://github.com/jquery/jquery-ui
* Includes: jquery.effects.slide.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function (a, b) { a.effects.slide = function (b) { return this.queue(function () { var c = a(this), d = ["position", "top", "bottom", "left", "right"], e = a.effects.setMode(c, b.options.mode || "show"), f = b.options.direction || "left"; a.effects.save(c, d), c.show(), a.effects.createWrapper(c).css({ overflow: "hidden" }); var g = f == "up" || f == "down" ? "top" : "left", h = f == "up" || f == "left" ? "pos" : "neg", i = b.options.distance || (g == "top" ? c.outerHeight({ margin: !0 }) : c.outerWidth({ margin: !0 })); e == "show" && c.css(g, h == "pos" ? isNaN(i) ? "-" + i : -i : i); var j = {}; j[g] = (e == "show" ? h == "pos" ? "+=" : "-=" : h == "pos" ? "-=" : "+=") + i, c.animate(j, { queue: !1, duration: b.duration, easing: b.options.easing, complete: function () { e == "hide" && c.hide(), a.effects.restore(c, d), a.effects.removeWrapper(c), b.callback && b.callback.apply(this, arguments), c.dequeue() } }) }) } })(jQuery);;/*! jQuery UI - v1.8.21 - 2012-06-05
* https://github.com/jquery/jquery-ui
* Includes: jquery.effects.transfer.js
* Copyright (c) 2012 AUTHORS.txt; Licensed MIT, GPL */
(function (a, b) { a.effects.transfer = function (b) { return this.queue(function () { var c = a(this), d = a(b.options.to), e = d.offset(), f = { top: e.top, left: e.left, height: d.innerHeight(), width: d.innerWidth() }, g = c.offset(), h = a('<div class="ui-effects-transfer"></div>').appendTo(document.body).addClass(b.options.className).css({ top: g.top, left: g.left, height: c.innerHeight(), width: c.innerWidth(), position: "absolute" }).animate(f, b.duration, b.options.easing, function () { h.remove(), b.callback && b.callback.apply(c[0], arguments), c.dequeue() }) }) } })(jQuery);;

/* jQuery.js */
//$.fn.equalHeights = function (px) {
//    $(this).each(function () {
//        var currentTallest = 0; $(this).children().each(function (i) { if ($(this).height() > currentTallest) { currentTallest = $(this).height(); } }); if (!px || !Number.prototype.pxToEm) currentTallest = currentTallest.pxToEm(); if ($.browser.msie && $.browser.version == 6.0) { $(this).children().css({ 'height': currentTallest }); }
//        $(this).children().css({ 'min-height': currentTallest });
//    }); return this;
//}; $.fn.equalWidths = function (px) {
//    $(this).each(function () {
//        var currentWidest = 0; $(this).children().each(function (i) { if ($(this).width() > currentWidest) { currentWidest = $(this).width(); } }); if (!px || !Number.prototype.pxToEm) currentWidest = currentWidest.pxToEm(); if ($.browser.msie && $.browser.version == 6.0) { $(this).children().css({ 'width': currentWidest }); }
//        $(this).children().css({ 'min-width': currentWidest });
//    }); return this;
//}; Number.prototype.pxToEm = String.prototype.pxToEm = function (settings) {
//    settings = jQuery.extend({ scope: 'body', reverse: false }, settings); var pxVal = (this == '') ? 0 : parseFloat(this); var scopeVal; var getWindowWidth = function () { var de = document.documentElement; return self.innerWidth || (de && de.clientWidth) || document.body.clientWidth; }; if (settings.scope == 'body' && $.browser.msie && (parseFloat($('body').css('font-size')) / getWindowWidth()).toFixed(1) > 0.0) { var calcFontSize = function () { return (parseFloat($('body').css('font-size')) / getWindowWidth()).toFixed(3) * 16; }; scopeVal = calcFontSize(); }
//    else { scopeVal = parseFloat(jQuery(settings.scope).css("font-size")); }; var result = (settings.reverse == true) ? (pxVal * scopeVal).toFixed(2) + 'px' : (pxVal / scopeVal).toFixed(2) + 'em'; return result;
//};

/* jquery.blockUI.js */
; (function ($) {
    if (/1\.(0|1|2)\.(0|1|2)/.test($.fn.jquery) || /^1.1/.test($.fn.jquery)) { alert('blockUI requires jQuery v1.2.3 or later!  You are using v' + $.fn.jquery); return; }
    $.fn._fadeIn = $.fn.fadeIn; var noOp = function () { }; var mode = document.documentMode || 0; var setExpr = $.browser.msie && (($.browser.version < 8 && !mode) || mode < 8); var ie6 = $.browser.msie && /MSIE 6.0/.test(navigator.userAgent) && !mode; $.blockUI = function (opts) { install(window, opts); }; $.unblockUI = function (opts) { remove(window, opts); }; $.growlUI = function (title, message, timeout, onClose) { var $m = $('<div class="growlUI"></div>'); if (title) $m.append('<h1>' + title + '</h1>'); if (message) $m.append('<h2>' + message + '</h2>'); if (timeout == undefined) timeout = 3000; $.blockUI({ message: $m, fadeIn: 700, fadeOut: 1000, centerY: false, timeout: timeout, showOverlay: false, onUnblock: onClose, css: $.blockUI.defaults.growlCSS }); }; $.fn.block = function (opts) {
        return this.unblock({ fadeOut: 0 }).each(function () {
            if ($.css(this, 'position') == 'static')
                this.style.position = 'relative'; if ($.browser.msie)
                    this.style.zoom = 1; install(this, opts);
        });
    }; $.fn.unblock = function (opts) { return this.each(function () { remove(this, opts); }); }; $.blockUI.version = 2.33; $.blockUI.defaults = { message: '<h1>Please wait...</h1>', title: null, draggable: true, theme: false, css: { padding: 0, margin: 0, width: '250px', top: '40%', left: '35%', textAlign: 'center', color: '#000', border: '3px solid #aaa', backgroundColor: '#fff' }, themedCSS: { width: '250px', top: '40%', left: '35%' }, overlayCSS: { backgroundColor: '#000', opacity: 0.6 }, growlCSS: { width: '350px', top: '10px', left: '', right: '10px', border: 'none', padding: '5px', opacity: 0.6, cursor: 'default', color: '#fff', backgroundColor: '#000', '-webkit-border-radius': '10px', '-moz-border-radius': '10px', 'border-radius': '10px' }, iframeSrc: /^https/i.test(window.location.href || '') ? 'javascript:false' : 'about:blank', forceIframe: false, baseZ: 1000, centerX: true, centerY: true, allowBodyStretch: true, bindEvents: true, constrainTabKey: true, fadeIn: 200, fadeOut: 400, timeout: 0, showOverlay: true, focusInput: true, applyPlatformOpacityRules: true, onBlock: null, onUnblock: null, quirksmodeOffsetHack: 4 }; var pageBlock = null; var pageBlockEls = []; function install(el, opts) {
        var full = (el == window); var msg = opts && opts.message !== undefined ? opts.message : undefined; opts = $.extend({}, $.blockUI.defaults, opts || {}); opts.overlayCSS = $.extend({}, $.blockUI.defaults.overlayCSS, opts.overlayCSS || {}); var css = $.extend({}, $.blockUI.defaults.css, opts.css || {}); var themedCSS = $.extend({}, $.blockUI.defaults.themedCSS, opts.themedCSS || {}); msg = msg === undefined ? opts.message : msg; if (full && pageBlock)
            remove(window, { fadeOut: 0 }); if (msg && typeof msg != 'string' && (msg.parentNode || msg.jquery)) {
                var node = msg.jquery ? msg[0] : msg; var data = {}; $(el).data('blockUI.history', data); data.el = node; data.parent = node.parentNode; data.display = node.style.display; data.position = node.style.position; if (data.parent)
                    data.parent.removeChild(node);
            }
        var z = opts.baseZ; var lyr1 = ($.browser.msie || opts.forceIframe)
        ? $('<iframe class="blockUI" style="z-index:' + (z++) + ';display:none;border:none;margin:0;padding:0;position:absolute;width:100%;height:100%;top:0;left:0" src="' + opts.iframeSrc + '"></iframe>')
        : $('<div class="blockUI" style="display:none"></div>'); var lyr2 = $('<div class="blockUI blockOverlay" style="z-index:' + (z++) + ';display:none;border:none;margin:0;padding:0;width:100%;height:100%;top:0;left:0"></div>'); var lyr3, s; if (opts.theme && full) {
            s = '<div class="blockUI blockMsg blockPage ui-dialog ui-widget ui-corner-all" style="z-index:' + z + ';display:none;position:fixed">' +
            '<div class="ui-widget-header ui-dialog-titlebar blockTitle">' + (opts.title || '&nbsp;') + '</div>' +
            '<div class="ui-widget-content ui-dialog-content"></div>' +
            '</div>';
        }
        else if (opts.theme) {
            s = '<div class="blockUI blockMsg blockElement ui-dialog ui-widget ui-corner-all" style="z-index:' + z + ';display:none;position:absolute">' +
            '<div class="ui-widget-header ui-dialog-titlebar blockTitle">' + (opts.title || '&nbsp;') + '</div>' +
            '<div class="ui-widget-content ui-dialog-content"></div>' +
            '</div>';
        }
        else if (full) { s = '<div class="blockUI blockMsg blockPage" style="z-index:' + z + ';display:none;position:fixed"></div>'; }
        else { s = '<div class="blockUI blockMsg blockElement" style="z-index:' + z + ';display:none;position:absolute"></div>'; }
        lyr3 = $(s); if (msg) {
            if (opts.theme) { lyr3.css(themedCSS); lyr3.addClass('ui-widget-content'); }
            else
                lyr3.css(css);
        }
        if (!opts.applyPlatformOpacityRules || !($.browser.mozilla && /Linux/.test(navigator.platform)))
            lyr2.css(opts.overlayCSS); lyr2.css('position', full ? 'fixed' : 'absolute'); if ($.browser.msie || opts.forceIframe)
                lyr1.css('opacity', 0.0); var layers = [lyr1, lyr2, lyr3], $par = full ? $('body') : $(el); $.each(layers, function () { this.appendTo($par); }); if (opts.theme && opts.draggable && $.fn.draggable) { lyr3.draggable({ handle: '.ui-dialog-titlebar', cancel: 'li' }); }
        var expr = setExpr && (!$.boxModel || $('object,embed', full ? null : el).length > 0); if (ie6 || expr) {
            if (full && opts.allowBodyStretch && $.boxModel)
                $('html,body').css('height', '100%'); if ((ie6 || !$.boxModel) && !full) { var t = sz(el, 'borderTopWidth'), l = sz(el, 'borderLeftWidth'); var fixT = t ? '(0 - ' + t + ')' : 0; var fixL = l ? '(0 - ' + l + ')' : 0; }
            $.each([lyr1, lyr2, lyr3], function (i, o) {
                var s = o[0].style; s.position = 'absolute'; if (i < 2) {
                    full ? s.setExpression('height', 'Math.max(document.body.scrollHeight, document.body.offsetHeight) - (jQuery.boxModel?0:' + opts.quirksmodeOffsetHack + ') + "px"')
                    : s.setExpression('height', 'this.parentNode.offsetHeight + "px"'); full ? s.setExpression('width', 'jQuery.boxModel && document.documentElement.clientWidth || document.body.clientWidth + "px"')
                    : s.setExpression('width', 'this.parentNode.offsetWidth + "px"'); if (fixL) s.setExpression('left', fixL); if (fixT) s.setExpression('top', fixT);
                }
                else if (opts.centerY) { if (full) s.setExpression('top', '(document.documentElement.clientHeight || document.body.clientHeight) / 2 - (this.offsetHeight / 2) + (blah = document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop) + "px"'); s.marginTop = 0; }
                else if (!opts.centerY && full) { var top = (opts.css && opts.css.top) ? parseInt(opts.css.top) : 0; var expression = '((document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop) + ' + top + ') + "px"'; s.setExpression('top', expression); }
            });
        }
        if (msg) {
            if (opts.theme)
                lyr3.find('.ui-widget-content').append(msg); else
                lyr3.append(msg); if (msg.jquery || msg.nodeType)
                    $(msg).show();
        }
        if (($.browser.msie || opts.forceIframe) && opts.showOverlay)
            lyr1.show(); if (opts.fadeIn) {
                var cb = opts.onBlock ? opts.onBlock : noOp; var cb1 = (opts.showOverlay && !msg) ? cb : noOp; var cb2 = msg ? cb : noOp; if (opts.showOverlay)
                    lyr2._fadeIn(opts.fadeIn, cb1); if (msg)
                        lyr3._fadeIn(opts.fadeIn, cb2);
            }
            else {
                if (opts.showOverlay)
                    lyr2.show(); if (msg)
                        lyr3.show(); if (opts.onBlock)
                            opts.onBlock();
            }
        bind(1, el, opts); if (full) {
            pageBlock = lyr3[0]; pageBlockEls = $(':input:enabled:visible', pageBlock); if (opts.focusInput)
                setTimeout(focus, 20);
        }
        else
            center(lyr3[0], opts.centerX, opts.centerY); if (opts.timeout) { var to = setTimeout(function () { full ? $.unblockUI(opts) : $(el).unblock(opts); }, opts.timeout); $(el).data('blockUI.timeout', to); }
    }; function remove(el, opts) {
        var full = (el == window); var $el = $(el); var data = $el.data('blockUI.history'); var to = $el.data('blockUI.timeout'); if (to) { clearTimeout(to); $el.removeData('blockUI.timeout'); }
        opts = $.extend({}, $.blockUI.defaults, opts || {}); bind(0, el, opts); var els; if (full)
            els = $('body').children().filter('.blockUI').add('body > .blockUI'); else
            els = $('.blockUI', el); if (full)
                pageBlock = pageBlockEls = null; if (opts.fadeOut) { els.fadeOut(opts.fadeOut); setTimeout(function () { reset(els, data, opts, el); }, opts.fadeOut); }
                else
                    reset(els, data, opts, el);
    }; function reset(els, data, opts, el) {
        els.each(function (i, o) {
            if (this.parentNode)
                this.parentNode.removeChild(this);
        }); if (data && data.el) {
            data.el.style.display = data.display; data.el.style.position = data.position; if (data.parent)
                data.parent.appendChild(data.el); $(el).removeData('blockUI.history');
        }
        if (typeof opts.onUnblock == 'function')
            opts.onUnblock(el, opts);
    }; function bind(b, el, opts) {
        var full = el == window, $el = $(el); if (!b && (full && !pageBlock || !full && !$el.data('blockUI.isBlocked')))
            return; if (!full)
                $el.data('blockUI.isBlocked', b); if (!opts.bindEvents || (b && !opts.showOverlay))
                    return; var events = 'mousedown mouseup keydown keypress'; b ? $(document).bind(events, opts, handler) : $(document).unbind(events, handler);
    }; function handler(e) {
        if (e.keyCode && e.keyCode == 9) { if (pageBlock && e.data.constrainTabKey) { var els = pageBlockEls; var fwd = !e.shiftKey && e.target == els[els.length - 1]; var back = e.shiftKey && e.target == els[0]; if (fwd || back) { setTimeout(function () { focus(back) }, 10); return false; } } }
        if ($(e.target).parents('div.blockMsg').length > 0)
            return true; return $(e.target).parents().children().filter('div.blockUI').length == 0;
    }; function focus(back) {
        if (!pageBlockEls)
            return; var e = pageBlockEls[back === true ? pageBlockEls.length - 1 : 0]; if (e)
                e.focus();
    }; function center(el, x, y) { var p = el.parentNode, s = el.style; var l = ((p.offsetWidth - el.offsetWidth) / 2) - sz(p, 'borderLeftWidth'); var t = ((p.offsetHeight - el.offsetHeight) / 2) - sz(p, 'borderTopWidth'); if (x) s.left = l > 0 ? (l + 'px') : '0'; if (y) s.top = t > 0 ? (t + 'px') : '0'; }; function sz(el, p) { return parseInt($.css(el, p)) || 0; };
})(jQuery);

/* jquery.jcarousel.min.js */
(function (g) { var q = { vertical: !1, rtl: !1, start: 1, offset: 1, size: null, scroll: 3, visible: null, animation: "normal", easing: "swing", auto: 0, wrap: null, initCallback: null, setupCallback: null, reloadCallback: null, itemLoadCallback: null, itemFirstInCallback: null, itemFirstOutCallback: null, itemLastInCallback: null, itemLastOutCallback: null, itemVisibleInCallback: null, itemVisibleOutCallback: null, animationStepCallback: null, buttonNextHTML: "<div></div>", buttonPrevHTML: "<div></div>", buttonNextEvent: "click", buttonPrevEvent: "click", buttonNextCallback: null, buttonPrevCallback: null, itemFallbackDimension: null }, m = !1; g(window).bind("load.jcarousel", function () { m = !0 }); g.jcarousel = function (a, c) { this.options = g.extend({}, q, c || {}); this.autoStopped = this.locked = !1; this.buttonPrevState = this.buttonNextState = this.buttonPrev = this.buttonNext = this.list = this.clip = this.container = null; if (!c || c.rtl === void 0) this.options.rtl = (g(a).attr("dir") || g("html").attr("dir") || "").toLowerCase() == "rtl"; this.wh = !this.options.vertical ? "width" : "height"; this.lt = !this.options.vertical ? this.options.rtl ? "right" : "left" : "top"; for (var b = "", d = a.className.split(" "), f = 0; f < d.length; f++) if (d[f].indexOf("jcarousel-skin") != -1) { g(a).removeClass(d[f]); b = d[f]; break } a.nodeName.toUpperCase() == "UL" || a.nodeName.toUpperCase() == "OL" ? (this.list = g(a), this.clip = this.list.parents(".jcarousel-clip"), this.container = this.list.parents(".jcarousel-container")) : (this.container = g(a), this.list = this.container.find("ul,ol").eq(0), this.clip = this.container.find(".jcarousel-clip")); if (this.clip.size() === 0) this.clip = this.list.wrap("<div></div>").parent(); if (this.container.size() === 0) this.container = this.clip.wrap("<div></div>").parent(); b !== "" && this.container.parent()[0].className.indexOf("jcarousel-skin") == -1 && this.container.wrap('<div class=" ' + b + '"></div>'); this.buttonPrev = g(".jcarousel-prev", this.container); if (this.buttonPrev.size() === 0 && this.options.buttonPrevHTML !== null) this.buttonPrev = g(this.options.buttonPrevHTML).appendTo(this.container); this.buttonPrev.addClass(this.className("jcarousel-prev")); this.buttonNext = g(".jcarousel-next", this.container); if (this.buttonNext.size() === 0 && this.options.buttonNextHTML !== null) this.buttonNext = g(this.options.buttonNextHTML).appendTo(this.container); this.buttonNext.addClass(this.className("jcarousel-next")); this.clip.addClass(this.className("jcarousel-clip")).css({ position: "relative" }); this.list.addClass(this.className("jcarousel-list")).css({ overflow: "hidden", position: "relative", top: 0, margin: 0, padding: 0 }).css(this.options.rtl ? "right" : "left", 0); this.container.addClass(this.className("jcarousel-container")).css({ position: "relative" }); !this.options.vertical && this.options.rtl && this.container.addClass("jcarousel-direction-rtl").attr("dir", "rtl"); var j = this.options.visible !== null ? Math.ceil(this.clipping() / this.options.visible) : null, b = this.list.children("li"), e = this; if (b.size() > 0) { var h = 0, i = this.options.offset; b.each(function () { e.format(this, i++); h += e.dimension(this, j) }); this.list.css(this.wh, h + 100 + "px"); if (!c || c.size === void 0) this.options.size = b.size() } this.container.css("display", "block"); this.buttonNext.css("display", "block"); this.buttonPrev.css("display", "block"); this.funcNext = function () { e.next() }; this.funcPrev = function () { e.prev() }; this.funcResize = function () { e.resizeTimer && clearTimeout(e.resizeTimer); e.resizeTimer = setTimeout(function () { e.reload() }, 100) }; this.options.initCallback !== null && this.options.initCallback(this, "init"); !m && g.browser.safari ? (this.buttons(!1, !1), g(window).bind("load.jcarousel", function () { e.setup() })) : this.setup() }; var f = g.jcarousel; f.fn = f.prototype = { jcarousel: "0.2.8" }; f.fn.extend = f.extend = g.extend; f.fn.extend({ setup: function () { this.prevLast = this.prevFirst = this.last = this.first = null; this.animating = !1; this.tail = this.resizeTimer = this.timer = null; this.inTail = !1; if (!this.locked) { this.list.css(this.lt, this.pos(this.options.offset) + "px"); var a = this.pos(this.options.start, !0); this.prevFirst = this.prevLast = null; this.animate(a, !1); g(window).unbind("resize.jcarousel", this.funcResize).bind("resize.jcarousel", this.funcResize); this.options.setupCallback !== null && this.options.setupCallback(this) } }, reset: function () { this.list.empty(); this.list.css(this.lt, "0px"); this.list.css(this.wh, "10px"); this.options.initCallback !== null && this.options.initCallback(this, "reset"); this.setup() }, reload: function () { this.tail !== null && this.inTail && this.list.css(this.lt, f.intval(this.list.css(this.lt)) + this.tail); this.tail = null; this.inTail = !1; this.options.reloadCallback !== null && this.options.reloadCallback(this); if (this.options.visible !== null) { var a = this, c = Math.ceil(this.clipping() / this.options.visible), b = 0, d = 0; this.list.children("li").each(function (f) { b += a.dimension(this, c); f + 1 < a.first && (d = b) }); this.list.css(this.wh, b + "px"); this.list.css(this.lt, -d + "px") } this.scroll(this.first, !1) }, lock: function () { this.locked = !0; this.buttons() }, unlock: function () { this.locked = !1; this.buttons() }, size: function (a) { if (a !== void 0) this.options.size = a, this.locked || this.buttons(); return this.options.size }, has: function (a, c) { if (c === void 0 || !c) c = a; if (this.options.size !== null && c > this.options.size) c = this.options.size; for (var b = a; b <= c; b++) { var d = this.get(b); if (!d.length || d.hasClass("jcarousel-item-placeholder")) return !1 } return !0 }, get: function (a) { return g(">.jcarousel-item-" + a, this.list) }, add: function (a, c) { var b = this.get(a), d = 0, p = g(c); if (b.length === 0) for (var j, e = f.intval(a), b = this.create(a) ; ;) { if (j = this.get(--e), e <= 0 || j.length) { e <= 0 ? this.list.prepend(b) : j.after(b); break } } else d = this.dimension(b); p.get(0).nodeName.toUpperCase() == "LI" ? (b.replaceWith(p), b = p) : b.empty().append(c); this.format(b.removeClass(this.className("jcarousel-item-placeholder")), a); p = this.options.visible !== null ? Math.ceil(this.clipping() / this.options.visible) : null; d = this.dimension(b, p) - d; a > 0 && a < this.first && this.list.css(this.lt, f.intval(this.list.css(this.lt)) - d + "px"); this.list.css(this.wh, f.intval(this.list.css(this.wh)) + d + "px"); return b }, remove: function (a) { var c = this.get(a); if (c.length && !(a >= this.first && a <= this.last)) { var b = this.dimension(c); a < this.first && this.list.css(this.lt, f.intval(this.list.css(this.lt)) + b + "px"); c.remove(); this.list.css(this.wh, f.intval(this.list.css(this.wh)) - b + "px") } }, next: function () { this.tail !== null && !this.inTail ? this.scrollTail(!1) : this.scroll((this.options.wrap == "both" || this.options.wrap == "last") && this.options.size !== null && this.last == this.options.size ? 1 : this.first + this.options.scroll) }, prev: function () { this.tail !== null && this.inTail ? this.scrollTail(!0) : this.scroll((this.options.wrap == "both" || this.options.wrap == "first") && this.options.size !== null && this.first == 1 ? this.options.size : this.first - this.options.scroll) }, scrollTail: function (a) { if (!this.locked && !this.animating && this.tail) { this.pauseAuto(); var c = f.intval(this.list.css(this.lt)), c = !a ? c - this.tail : c + this.tail; this.inTail = !a; this.prevFirst = this.first; this.prevLast = this.last; this.animate(c) } }, scroll: function (a, c) { !this.locked && !this.animating && (this.pauseAuto(), this.animate(this.pos(a), c)) }, pos: function (a, c) { var b = f.intval(this.list.css(this.lt)); if (this.locked || this.animating) return b; this.options.wrap != "circular" && (a = a < 1 ? 1 : this.options.size && a > this.options.size ? this.options.size : a); for (var d = this.first > a, g = this.options.wrap != "circular" && this.first <= 1 ? 1 : this.first, j = d ? this.get(g) : this.get(this.last), e = d ? g : g - 1, h = null, i = 0, k = !1, l = 0; d ? --e >= a : ++e < a;) { h = this.get(e); k = !h.length; if (h.length === 0 && (h = this.create(e).addClass(this.className("jcarousel-item-placeholder")), j[d ? "before" : "after"](h), this.first !== null && this.options.wrap == "circular" && this.options.size !== null && (e <= 0 || e > this.options.size))) j = this.get(this.index(e)), j.length && (h = this.add(e, j.clone(!0))); j = h; l = this.dimension(h); k && (i += l); if (this.first !== null && (this.options.wrap == "circular" || e >= 1 && (this.options.size === null || e <= this.options.size))) b = d ? b + l : b - l } for (var g = this.clipping(), m = [], o = 0, n = 0, j = this.get(a - 1), e = a; ++o;) { h = this.get(e); k = !h.length; if (h.length === 0) { h = this.create(e).addClass(this.className("jcarousel-item-placeholder")); if (j.length === 0) this.list.prepend(h); else j[d ? "before" : "after"](h); if (this.first !== null && this.options.wrap == "circular" && this.options.size !== null && (e <= 0 || e > this.options.size)) j = this.get(this.index(e)), j.length && (h = this.add(e, j.clone(!0))) } j = h; l = this.dimension(h); if (l === 0) throw Error("jCarousel: No width/height set for items. This will cause an infinite loop. Aborting..."); this.options.wrap != "circular" && this.options.size !== null && e > this.options.size ? m.push(h) : k && (i += l); n += l; if (n >= g) break; e++ } for (h = 0; h < m.length; h++) m[h].remove(); i > 0 && (this.list.css(this.wh, this.dimension(this.list) + i + "px"), d && (b -= i, this.list.css(this.lt, f.intval(this.list.css(this.lt)) - i + "px"))); i = a + o - 1; if (this.options.wrap != "circular" && this.options.size && i > this.options.size) i = this.options.size; if (e > i) { o = 0; e = i; for (n = 0; ++o;) { h = this.get(e--); if (!h.length) break; n += this.dimension(h); if (n >= g) break } } e = i - o + 1; this.options.wrap != "circular" && e < 1 && (e = 1); if (this.inTail && d) b += this.tail, this.inTail = !1; this.tail = null; if (this.options.wrap != "circular" && i == this.options.size && i - o + 1 >= 1 && (d = f.intval(this.get(i).css(!this.options.vertical ? "marginRight" : "marginBottom")), n - d > g)) this.tail = n - g - d; if (c && a === this.options.size && this.tail) b -= this.tail, this.inTail = !0; for (; a-- > e;) b += this.dimension(this.get(a)); this.prevFirst = this.first; this.prevLast = this.last; this.first = e; this.last = i; return b }, animate: function (a, c) { if (!this.locked && !this.animating) { this.animating = !0; var b = this, d = function () { b.animating = !1; a === 0 && b.list.css(b.lt, 0); !b.autoStopped && (b.options.wrap == "circular" || b.options.wrap == "both" || b.options.wrap == "last" || b.options.size === null || b.last < b.options.size || b.last == b.options.size && b.tail !== null && !b.inTail) && b.startAuto(); b.buttons(); b.notify("onAfterAnimation"); if (b.options.wrap == "circular" && b.options.size !== null) for (var c = b.prevFirst; c <= b.prevLast; c++) c !== null && !(c >= b.first && c <= b.last) && (c < 1 || c > b.options.size) && b.remove(c) }; this.notify("onBeforeAnimation"); if (!this.options.animation || c === !1) this.list.css(this.lt, a + "px"), d(); else { var f = !this.options.vertical ? this.options.rtl ? { right: a } : { left: a } : { top: a }, d = { duration: this.options.animation, easing: this.options.easing, complete: d }; if (g.isFunction(this.options.animationStepCallback)) d.step = this.options.animationStepCallback; this.list.animate(f, d) } } }, startAuto: function (a) { if (a !== void 0) this.options.auto = a; if (this.options.auto === 0) return this.stopAuto(); if (this.timer === null) { this.autoStopped = !1; var c = this; this.timer = window.setTimeout(function () { c.next() }, this.options.auto * 1E3) } }, stopAuto: function () { this.pauseAuto(); this.autoStopped = !0 }, pauseAuto: function () { if (this.timer !== null) window.clearTimeout(this.timer), this.timer = null }, buttons: function (a, c) { if (a == null && (a = !this.locked && this.options.size !== 0 && (this.options.wrap && this.options.wrap != "first" || this.options.size === null || this.last < this.options.size), !this.locked && (!this.options.wrap || this.options.wrap == "first") && this.options.size !== null && this.last >= this.options.size)) a = this.tail !== null && !this.inTail; if (c == null && (c = !this.locked && this.options.size !== 0 && (this.options.wrap && this.options.wrap != "last" || this.first > 1), !this.locked && (!this.options.wrap || this.options.wrap == "last") && this.options.size !== null && this.first == 1)) c = this.tail !== null && this.inTail; var b = this; this.buttonNext.size() > 0 ? (this.buttonNext.unbind(this.options.buttonNextEvent + ".jcarousel", this.funcNext), a && this.buttonNext.bind(this.options.buttonNextEvent + ".jcarousel", this.funcNext), this.buttonNext[a ? "removeClass" : "addClass"](this.className("jcarousel-next-disabled")).attr("disabled", a ? !1 : !0), this.options.buttonNextCallback !== null && this.buttonNext.data("jcarouselstate") != a && this.buttonNext.each(function () { b.options.buttonNextCallback(b, this, a) }).data("jcarouselstate", a)) : this.options.buttonNextCallback !== null && this.buttonNextState != a && this.options.buttonNextCallback(b, null, a); this.buttonPrev.size() > 0 ? (this.buttonPrev.unbind(this.options.buttonPrevEvent + ".jcarousel", this.funcPrev), c && this.buttonPrev.bind(this.options.buttonPrevEvent + ".jcarousel", this.funcPrev), this.buttonPrev[c ? "removeClass" : "addClass"](this.className("jcarousel-prev-disabled")).attr("disabled", c ? !1 : !0), this.options.buttonPrevCallback !== null && this.buttonPrev.data("jcarouselstate") != c && this.buttonPrev.each(function () { b.options.buttonPrevCallback(b, this, c) }).data("jcarouselstate", c)) : this.options.buttonPrevCallback !== null && this.buttonPrevState != c && this.options.buttonPrevCallback(b, null, c); this.buttonNextState = a; this.buttonPrevState = c }, notify: function (a) { var c = this.prevFirst === null ? "init" : this.prevFirst < this.first ? "next" : "prev"; this.callback("itemLoadCallback", a, c); this.prevFirst !== this.first && (this.callback("itemFirstInCallback", a, c, this.first), this.callback("itemFirstOutCallback", a, c, this.prevFirst)); this.prevLast !== this.last && (this.callback("itemLastInCallback", a, c, this.last), this.callback("itemLastOutCallback", a, c, this.prevLast)); this.callback("itemVisibleInCallback", a, c, this.first, this.last, this.prevFirst, this.prevLast); this.callback("itemVisibleOutCallback", a, c, this.prevFirst, this.prevLast, this.first, this.last) }, callback: function (a, c, b, d, f, j, e) { if (!(this.options[a] == null || typeof this.options[a] != "object" && c != "onAfterAnimation")) { var h = typeof this.options[a] == "object" ? this.options[a][c] : this.options[a]; if (g.isFunction(h)) { var i = this; if (d === void 0) h(i, b, c); else if (f === void 0) this.get(d).each(function () { h(i, this, d, b, c) }); else for (var a = function (a) { i.get(a).each(function () { h(i, this, a, b, c) }) }, k = d; k <= f; k++) k !== null && !(k >= j && k <= e) && a(k) } } }, create: function (a) { return this.format("<li></li>", a) }, format: function (a, c) { for (var a = g(a), b = a.get(0).className.split(" "), d = 0; d < b.length; d++) b[d].indexOf("jcarousel-") != -1 && a.removeClass(b[d]); a.addClass(this.className("jcarousel-item")).addClass(this.className("jcarousel-item-" + c)).css({ "float": this.options.rtl ? "right" : "left", "list-style": "none" }).attr("jcarouselindex", c); return a }, className: function (a) { return a + " " + a + (!this.options.vertical ? "-horizontal" : "-vertical") }, dimension: function (a, c) { var b = g(a); if (c == null) return !this.options.vertical ? b.outerWidth(!0) || f.intval(this.options.itemFallbackDimension) : b.outerHeight(!0) || f.intval(this.options.itemFallbackDimension); else { var d = !this.options.vertical ? c - f.intval(b.css("marginLeft")) - f.intval(b.css("marginRight")) : c - f.intval(b.css("marginTop")) - f.intval(b.css("marginBottom")); g(b).css(this.wh, d + "px"); return this.dimension(b) } }, clipping: function () { return !this.options.vertical ? this.clip[0].offsetWidth - f.intval(this.clip.css("borderLeftWidth")) - f.intval(this.clip.css("borderRightWidth")) : this.clip[0].offsetHeight - f.intval(this.clip.css("borderTopWidth")) - f.intval(this.clip.css("borderBottomWidth")) }, index: function (a, c) { if (c == null) c = this.options.size; return Math.round(((a - 1) / c - Math.floor((a - 1) / c)) * c) + 1 } }); f.extend({ defaults: function (a) { return g.extend(q, a || {}) }, intval: function (a) { a = parseInt(a, 10); return isNaN(a) ? 0 : a }, windowLoaded: function () { m = !0 } }); g.fn.jcarousel = function (a) { if (typeof a == "string") { var c = g(this).data("jcarousel"), b = Array.prototype.slice.call(arguments, 1); return c[a].apply(c, b) } else return this.each(function () { var b = g(this).data("jcarousel"); b ? (a && g.extend(b.options, a), b.reload()) : g(this).data("jcarousel", new f(this, a)) }) } })(jQuery);

/* jquery.autocomplete.js */
; (function ($) {
    $.fn.extend({
        autocomplete: function (urlOrData, options) {
            var isUrl = typeof urlOrData == "string";
            options = $.extend({},
                $.Autocompleter.defaults,
                {
                    url: isUrl ? urlOrData : null,
                    data: isUrl ? null : urlOrData,
                    delay: isUrl ? $.Autocompleter.defaults.delay : 10, max: options && !options.scroll ? 10 : 150
                },
                options);
            options.highlight = options.highlight || function (value) { return value; }; options.formatMatch = options.formatMatch || options.formatItem; return this.each(function () { new $.Autocompleter(this, options); });
        }, result: function (handler) { return this.bind("result", handler); }, search: function (handler) { return this.trigger("search", [handler]); }, flushCache: function () { return this.trigger("flushCache"); }, setOptions: function (options) { return this.trigger("setOptions", [options]); }, unautocomplete: function () { return this.trigger("unautocomplete"); }
    }); $.Autocompleter = function (input, options) {
        var KEY = { UP: 38, DOWN: 40, DEL: 46, TAB: 9, RETURN: 13, ESC: 27, COMMA: 188, PAGEUP: 33, PAGEDOWN: 34, BACKSPACE: 8 }; var $input = $(input).attr("autocomplete", "off").addClass(options.inputClass); var timeout; var previousValue = ""; var cache = $.Autocompleter.Cache(options); var hasFocus = 0; var lastKeyPressCode; var config = { mouseDownOnSelect: false }; var select = $.Autocompleter.Select(options, input, selectCurrent, config); var blockSubmit; $.browser.opera && $(input.form).bind("submit.autocomplete", function () { if (blockSubmit) { blockSubmit = false; return false; } }); $input.bind(($.browser.opera ? "keypress" : "keydown") + ".autocomplete", function (event) {
            hasFocus = 1; lastKeyPressCode = event.keyCode; switch (event.keyCode) {
                case KEY.UP: event.preventDefault(); if (select.visible()) { select.prev(); } else { onChange(0, true); }
                    break; case KEY.DOWN: event.preventDefault(); if (select.visible()) { select.next(); } else { onChange(0, true); }
                        break; case KEY.PAGEUP: event.preventDefault(); if (select.visible()) { select.pageUp(); } else { onChange(0, true); }
                            break; case KEY.PAGEDOWN: event.preventDefault(); if (select.visible()) { select.pageDown(); } else { onChange(0, true); }
                                break; case options.multiple && $.trim(options.multipleSeparator) == "," && KEY.COMMA: case KEY.TAB: case KEY.RETURN: if (selectCurrent()) { event.preventDefault(); blockSubmit = true; return false; }
                                    break; case KEY.ESC: select.hide(); break; default: clearTimeout(timeout); timeout = setTimeout(onChange, options.delay); break;
            }
        }).focus(function () { hasFocus++; }).blur(function () { hasFocus = 0; if (!config.mouseDownOnSelect) { hideResults(); } }).click(function () { if (hasFocus++ > 1 && !select.visible()) { onChange(0, true); } }).bind("search", function () {
            var fn = (arguments.length > 1) ? arguments[1] : null; function findValueCallback(q, data) {
                var result; if (data && data.length) { for (var i = 0; i < data.length; i++) { if (data[i].result.toLowerCase() == q.toLowerCase()) { result = data[i]; break; } } }
                if (typeof fn == "function") fn(result); else $input.trigger("result", result && [result.data, result.value]);
            }
            $.each(trimWords($input.val()), function (i, value) {
                request(value, findValueCallback, findValueCallback);
            });
        }).bind("flushCache", function () { cache.flush(); }).bind("setOptions", function () {
            $.extend(options, arguments[1]);
            if ("data" in arguments[1])
                cache.populate();
        }).bind("unautocomplete", function () {
            select.unbind(); $input.unbind();
            $(input.form).unbind(".autocomplete");
        });
        function selectCurrent() {
            var selected = select.selected(); if (!selected)
                return false; var v = selected.result; previousValue = v; if (options.multiple) {
                    var words = trimWords($input.val()); if (words.length > 1) {
                        var seperator = options.multipleSeparator.length; var cursorAt = $(input).selection().start; var wordAt, progress = 0; $.each(words, function (i, word) {
                            progress += word.length; if (cursorAt <= progress) { wordAt = i; return false; }
                            progress += seperator;
                        }); words[wordAt] = v; v = words.join(options.multipleSeparator);
                    }
                    v += options.multipleSeparator;
                }
            $input.val(v); hideResultsNow(); $input.trigger("result", [selected.data, selected.value]); return true;
        }
        function onChange(crap, skipPrevCheck) {
            if (lastKeyPressCode == KEY.DEL) { select.hide(); return; }
            var currentValue = $input.val(); if (!skipPrevCheck && currentValue == previousValue)
                return; previousValue = currentValue; currentValue = lastWord(currentValue); if (currentValue.length >= options.minChars) {
                    $input.addClass(options.loadingClass); if (!options.matchCase)
                        currentValue = currentValue.toLowerCase(); request(currentValue, receiveData, hideResultsNow);
                } else { stopLoading(); select.hide(); }
        }; function trimWords(value) {
            if (!value)
                return [""]; if (!options.multiple)
                    return [$.trim(value)]; return $.map(value.split(options.multipleSeparator), function (word) { return $.trim(value).length ? $.trim(word) : null; });
        }
        function lastWord(value) {
            if (!options.multiple)
                return value; var words = trimWords(value); if (words.length == 1)
                    return words[0]; var cursorAt = $(input).selection().start; if (cursorAt == value.length) { words = trimWords(value) } else { words = trimWords(value.replace(value.substring(cursorAt), "")); }
            return words[words.length - 1];
        }
        function autoFill(q, sValue) { if (options.autoFill && (lastWord($input.val()).toLowerCase() == q.toLowerCase()) && lastKeyPressCode != KEY.BACKSPACE) { $input.val($input.val() + sValue.substring(lastWord(previousValue).length)); $(input).selection(previousValue.length, previousValue.length + sValue.length); } }; function hideResults() { clearTimeout(timeout); timeout = setTimeout(hideResultsNow, 200); }; function hideResultsNow() {
            var wasVisible = select.visible(); select.hide(); clearTimeout(timeout); stopLoading(); if (options.mustMatch) {
                $input.search(function (result) {
                    if (!result) {
                        if (options.multiple) { var words = trimWords($input.val()).slice(0, -1); $input.val(words.join(options.multipleSeparator) + (words.length ? options.multipleSeparator : "")); }
                        else { $input.val(""); $input.trigger("result", null); }
                    }
                });
            }
        }; function receiveData(q, data) { if (data && data.length && hasFocus) { stopLoading(); select.display(data, q); autoFill(q, data[0].value); select.show(); } else { hideResultsNow(); } }; function request(term, success, failure) {
            if (!options.matchCase)
                term = term.toLowerCase(); var data = cache.load(term); if (data && data.length) { success(term, data); } else if ((typeof options.url == "string") && (options.url.length > 0)) { var extraParams = { timestamp: +new Date() }; $.each(options.extraParams, function (key, param) { extraParams[key] = typeof param == "function" ? param() : param; }); $.ajax({ mode: "abort", port: "autocomplete" + input.name, dataType: options.dataType, url: options.url, data: $.extend({ q: lastWord(term), limit: options.max }, extraParams), success: function (data) { var parsed = options.parse && options.parse(data) || parse(data); cache.add(term, parsed); success(term, parsed); } }); } else { select.emptyList(); failure(term); }
        }; function parse(data) {
            var parsed = []; var rows = data.split("\n"); for (var i = 0; i < rows.length; i++) { var row = $.trim(rows[i]); if (row) { row = row.split("|"); parsed[parsed.length] = { data: row, value: row[0], result: options.formatResult && options.formatResult(row, row[0]) || row[0] }; } }
            return parsed;
        }; function stopLoading() { $input.removeClass(options.loadingClass); };
    };
    $.Autocompleter.defaults = {
        inputClass: "ac_input",
        resultsClass: "ac_results",
        loadingClass: "ac_loading",
        minChars: 1,
        delay: 400,
        matchCase: false,
        matchSubset: false,
        matchContains: false,
        cacheLength: 10,
        max: 100,
        mustMatch: false,
        extraParams: {},
        selectFirst: true,
        formatItem: function (row) { return row[0]; },
        formatMatch: null,
        autoFill: false,
        width: 0,
        multiple: false,
        multipleSeparator: ", ",
        highlight: function (value, term) {
            return value.replace(new RegExp("(?![^&;]+;)(?!<[^<>]*)(" + term.replace(/([\^\$\(\)\[\]\{\}\*\.\+\?\|\\])/gi, "\\$1") + ")(?![^<>]*>)(?![^&;]+;)", "gi"), "<strong>$1</strong>");
        }, scroll: true, scrollHeight: 180
    };
    $.Autocompleter.Cache = function (options) {
        var data = {}; var length = 0; function matchSubset(s, sub) {
            alert("sub:" + sub); alert("s:" + s); if (!options.matchCase)
                s = s.toLowerCase(); var i = s.indexOf(sub); if (options.matchContains == "word") { i = s.toLowerCase().search("\\b" + sub.toLowerCase()); }
            if (i == -1) return false; return i == 0 || options.matchContains;
        }; function add(q, value) {
            if (length > options.cacheLength) { flush(); }
            if (!data[q]) { length++; }
            data[q] = value;
        }
        function populate() {
            if (!options.data) return false; var stMatchSets = {}, nullData = 0; if (!options.url) options.cacheLength = 1; stMatchSets[""] = []; for (var i = 0, ol = options.data.length; i < ol; i++) {
                var rawValue = options.data[i]; rawValue = (typeof rawValue == "string") ? [rawValue] : rawValue; var value = options.formatMatch(rawValue, i + 1, options.data.length); if (value === false)
                    continue; var firstChar = value.charAt(0).toLowerCase(); if (!stMatchSets[firstChar])
                        stMatchSets[firstChar] = []; var row = { value: value, data: rawValue, result: options.formatResult && options.formatResult(rawValue) || value }; stMatchSets[firstChar].push(row); if (nullData++ < options.max) { stMatchSets[""].push(row); }
            }; $.each(stMatchSets, function (i, value) { options.cacheLength++; add(i, value); });
        }
        setTimeout(populate, 25); function flush() { data = {}; length = 0; }
        return {
            flush: flush, add: add, populate: populate, load: function (q) {
                if (!options.cacheLength || !length)
                    return null; if (!options.url && options.matchContains) {
                        var csub = []; for (var k in data) { if (k.length > 0) { var c = data[k]; $.each(c, function (i, x) { if (matchSubset(x.value, q)) { csub.push(x); } }); } }
                        return csub;
                    } else
                        if (data[q]) { return data[q]; } else
                            if (options.matchSubset) { for (var i = q.length - 1; i >= options.minChars; i--) { var c = data[q.substr(0, i)]; if (c) { var csub = []; $.each(c, function (i, x) { if (matchSubset(x.value, q)) { csub[csub.length] = x; } }); return csub; } } }
                return null;
            }
        };
    }; $.Autocompleter.Select = function (options, input, select, config) {
        var CLASSES = { ACTIVE: "ac_over" }; var listItems, active = -1, data, term = "", needsInit = true, element, list; function init() {
            if (!needsInit)
                return; element = $("<div/>")
                .hide()
                .addClass(options.resultsClass)
                .css("position", "absolute")
                .appendTo(document.body); list = $("<ul/>").appendTo(element).mouseover(function (event) { if (target(event).nodeName && target(event).nodeName.toUpperCase() == 'LI') { active = $("li", list).removeClass(CLASSES.ACTIVE).index(target(event)); $(target(event)).addClass(CLASSES.ACTIVE); } }).click(function (event) { $(target(event)).addClass(CLASSES.ACTIVE); select(); input.focus(); return false; }).mousedown(function () { config.mouseDownOnSelect = true; }).mouseup(function () { config.mouseDownOnSelect = false; }); if (options.width > 0)
                    element.css("width", options.width); needsInit = false;
        }
        function target(event) {
            var element = event.target; while (element && element.tagName != "LI")
                element = element.parentNode; if (!element)
                    return []; return element;
        }
        function moveSelect(step) { listItems.slice(active, active + 1).removeClass(CLASSES.ACTIVE); movePosition(step); var activeItem = listItems.slice(active, active + 1).addClass(CLASSES.ACTIVE); if (options.scroll) { var offset = 0; listItems.slice(0, active).each(function () { offset += this.offsetHeight; }); if ((offset + activeItem[0].offsetHeight - list.scrollTop()) > list[0].clientHeight) { list.scrollTop(offset + activeItem[0].offsetHeight - list.innerHeight()); } else if (offset < list.scrollTop()) { list.scrollTop(offset); } } }; function movePosition(step) { active += step; if (active < 0) { active = listItems.size() - 1; } else if (active >= listItems.size()) { active = 0; } }
        function limitNumberOfItems(available) {
            return options.max && options.max < available
            ? options.max
            : available;
        }
        function fillList() {
            list.empty(); var max = limitNumberOfItems(data.length); for (var i = 0; i < max; i++) {
                if (!data[i])
                    continue; var formatted = options.formatItem(data[i].data, i + 1, max, data[i].value, term); if (formatted === false)
                        continue; var li = $("<li/>").html(options.highlight(formatted, term)).addClass(i % 2 == 0 ? "ac_even" : "ac_odd").appendTo(list)[0]; $.data(li, "ac_data", data[i]);
            }
            listItems = list.find("li"); if (options.selectFirst) { listItems.slice(0, 1).addClass(CLASSES.ACTIVE); active = 0; }
            if ($.fn.bgiframe)
                list.bgiframe();
        }
        return { display: function (d, q) { init(); data = d; term = q; fillList(); }, next: function () { moveSelect(1); }, prev: function () { moveSelect(-1); }, pageUp: function () { if (active != 0 && active - 8 < 0) { moveSelect(-active); } else { moveSelect(-8); } }, pageDown: function () { if (active != listItems.size() - 1 && active + 8 > listItems.size()) { moveSelect(listItems.size() - 1 - active); } else { moveSelect(8); } }, hide: function () { element && element.hide(); listItems && listItems.removeClass(CLASSES.ACTIVE); active = -1; }, visible: function () { return element && element.is(":visible"); }, current: function () { return this.visible() && (listItems.filter("." + CLASSES.ACTIVE)[0] || options.selectFirst && listItems[0]); }, show: function () { var offset = $(input).offset(); element.css({ width: typeof options.width == "string" || options.width > 0 ? options.width : $(input).width(), top: offset.top + input.offsetHeight, left: offset.left }).show(); if (options.scroll) { list.scrollTop(0); list.css({ maxHeight: options.scrollHeight, overflow: 'auto' }); if ($.browser.msie && typeof document.body.style.maxHeight === "undefined") { var listHeight = 0; listItems.each(function () { listHeight += this.offsetHeight; }); var scrollbarsVisible = listHeight > options.scrollHeight; list.css('height', scrollbarsVisible ? options.scrollHeight : listHeight); if (!scrollbarsVisible) { listItems.width(list.width() - parseInt(listItems.css("padding-left")) - parseInt(listItems.css("padding-right"))); } } } }, selected: function () { var selected = listItems && listItems.filter("." + CLASSES.ACTIVE).removeClass(CLASSES.ACTIVE); return selected && selected.length && $.data(selected[0], "ac_data"); }, emptyList: function () { list && list.empty(); }, unbind: function () { element && element.remove(); } };
    }; $.fn.selection = function (start, end) {
        if (start !== undefined) { return this.each(function () { if (this.createTextRange) { var selRange = this.createTextRange(); if (end === undefined || start == end) { selRange.move("character", start); selRange.select(); } else { selRange.collapse(true); selRange.moveStart("character", start); selRange.moveEnd("character", end); selRange.select(); } } else if (this.setSelectionRange) { this.setSelectionRange(start, end); } else if (this.selectionStart) { this.selectionStart = start; this.selectionEnd = end; } }); }
        var field = this[0]; if (field.createTextRange) { var range = document.selection.createRange(), orig = field.value, teststring = "<->", textLength = range.text.length; range.text = teststring; var caretAt = field.value.indexOf(teststring); field.value = orig; this.selection(caretAt, caretAt + textLength); return { start: caretAt, end: caretAt + textLength } } else if (field.selectionStart !== undefined) { return { start: field.selectionStart, end: field.selectionEnd } }
    };
})(jQuery);

/* superfish.js */
; (function ($) {
    $.fn.superfish = function (op) {
        var sf = $.fn.superfish, c = sf.c, $arrow = $(['<span class="', c.arrowClass, '"> &#187;</span>'].join('')), over = function () { var $$ = $(this), menu = getMenu($$); clearTimeout(menu.sfTimer); $$.showSuperfishUl().siblings().hideSuperfishUl(); }, out = function () { var $$ = $(this), menu = getMenu($$), o = sf.op; clearTimeout(menu.sfTimer); menu.sfTimer = setTimeout(function () { o.retainPath = ($.inArray($$[0], o.$path) > -1); $$.hideSuperfishUl(); if (o.$path.length && $$.parents(['li.', o.hoverClass].join('')).length < 1) { over.call(o.$path); } }, o.delay); }, getMenu = function ($menu) { var menu = $menu.parents(['ul.', c.menuClass, ':first'].join(''))[0]; sf.op = sf.o[menu.serial]; return menu; }, addArrow = function ($a) { $a.addClass(c.anchorClass).append($arrow.clone()); }; return this.each(function () {
            var s = this.serial = sf.o.length; var o = $.extend({}, sf.defaults, op); o.$path = $('li.' + o.pathClass, this).slice(0, o.pathLevels).each(function () {
                $(this).addClass([o.hoverClass, c.bcClass].join(' '))
                .filter('li:has(ul)').removeClass(o.pathClass);
            }); sf.o[s] = sf.op = o; $('li:has(ul)', this)[($.fn.hoverIntent && !o.disableHI) ? 'hoverIntent' : 'hover'](over, out).each(function () { if (o.autoArrows) addArrow($('>a:first-child', this)); })
            .not('.' + c.bcClass)
            .hideSuperfishUl(); var $a = $('a', this); $a.each(function (i) { var $li = $a.eq(i).parents('li'); $a.eq(i).focus(function () { over.call($li); }).blur(function () { out.call($li); }); }); o.onInit.call(this);
        }).each(function () { var menuClasses = [c.menuClass]; if (sf.op.dropShadows && !($.browser.msie && $.browser.version < 7)) menuClasses.push(c.shadowClass); $(this).addClass(menuClasses.join(' ')); });
    }; var sf = $.fn.superfish; sf.o = []; sf.op = {}; sf.IE7fix = function () {
        var o = sf.op; if ($.browser.msie && $.browser.version > 6 && o.dropShadows && o.animation.opacity != undefined)
            this.toggleClass(sf.c.shadowClass + '-off');
    }; sf.c = { bcClass: 'sf-breadcrumb', menuClass: 'sf-js-enabled', anchorClass: 'sf-with-ul', arrowClass: 'sf-sub-indicator', shadowClass: 'sf-shadow' }; sf.defaults = { hoverClass: 'sfHover', pathClass: 'overideThisToUse', pathLevels: 1, delay: 800, animation: { opacity: 'show' }, speed: 'normal', autoArrows: true, dropShadows: true, disableHI: false, onInit: function () { }, onBeforeShow: function () { }, onShow: function () { }, onHide: function () { } }; $.fn.extend({
        hideSuperfishUl: function () {
            var o = sf.op, not = (o.retainPath === true) ? o.$path : ''; o.retainPath = false; var $ul = $(['li.', o.hoverClass].join(''), this).add(this).not(not).removeClass(o.hoverClass)
            .find('>ul').hide().css('visibility', 'hidden'); o.onHide.call($ul); return this;
        }, showSuperfishUl: function () {
            var o = sf.op, sh = sf.c.shadowClass + '-off', $ul = this.addClass(o.hoverClass)
            .find('>ul:hidden').css('visibility', 'visible'); sf.IE7fix.call($ul); o.onBeforeShow.call($ul); $ul.animate(o.animation, o.speed, function () { sf.IE7fix.call($ul); o.onShow.call($ul); }); return this;
        }
    });
})(jQuery);

/* supersubs.js */
; (function ($) {
    $.fn.supersubs = function (options) {
        var opts = $.extend({}, $.fn.supersubs.defaults, options); return this.each(function () {
            var $$ = $(this); var o = $.meta ? $.extend({}, opts, $$.data()) : opts; var fontsize = $('<li id="menu-fontsize">&#8212;</li>').css({ 'padding': 0, 'position': 'absolute', 'top': '-999em', 'width': 'auto' }).appendTo($$).width(); $('#menu-fontsize').remove(); $ULs = $$.find('ul'); $ULs.each(function (i) {
                var $ul = $ULs.eq(i); var $LIs = $ul.children(); var $As = $LIs.children('a'); var liFloat = $LIs.css('white-space', 'nowrap').css('float'); var emWidth = $ul.add($LIs).add($As).css({ 'float': 'none', 'width': 'auto' })
                .end().end()[0].clientWidth / fontsize; emWidth += o.extraWidth; if (emWidth > o.maxWidth) { emWidth = o.maxWidth; }
                else if (emWidth < o.minWidth) { emWidth = o.minWidth; }
                emWidth += 'em'; $ul.css('width', emWidth); $LIs.css({ 'float': liFloat, 'width': '100%', 'white-space': 'normal' })
                .each(function () { var $childUl = $('>ul', this); var offsetDirection = $childUl.css('left') !== undefined ? 'left' : 'right'; $childUl.css(offsetDirection, emWidth); });
            });
        });
    }; $.fn.supersubs.defaults = { minWidth: 9, maxWidth: 25, extraWidth: 0 };
})(jQuery);
//#endregion jQuery

/* hoverIntent.js */
(function ($) {
    $.fn.hoverIntent = function (f, g) {
        var cfg = { sensitivity: 7, interval: 100, timeout: 0 }; cfg = $.extend(cfg, g ? { over: f, out: g } : f); var cX, cY, pX, pY; var track = function (ev) { cX = ev.pageX; cY = ev.pageY; }; var compare = function (ev, ob) { ob.hoverIntent_t = clearTimeout(ob.hoverIntent_t); if ((Math.abs(pX - cX) + Math.abs(pY - cY)) < cfg.sensitivity) { $(ob).unbind("mousemove", track); ob.hoverIntent_s = 1; return cfg.over.apply(ob, [ev]); } else { pX = cX; pY = cY; ob.hoverIntent_t = setTimeout(function () { compare(ev, ob); }, cfg.interval); } }; var delay = function (ev, ob) { ob.hoverIntent_t = clearTimeout(ob.hoverIntent_t); ob.hoverIntent_s = 0; return cfg.out.apply(ob, [ev]); }; var handleHover = function (e) {
            var p = (e.type == "mouseover" ? e.fromElement : e.toElement) || e.relatedTarget; while (p && p != this) { try { p = p.parentNode; } catch (e) { p = this; } }
            if (p == this) { return false; }
            var ev = jQuery.extend({}, e); var ob = this; if (ob.hoverIntent_t) { ob.hoverIntent_t = clearTimeout(ob.hoverIntent_t); }
            if (e.type == "mouseover") { pX = ev.pageX; pY = ev.pageY; $(ob).bind("mousemove", track); if (ob.hoverIntent_s != 1) { ob.hoverIntent_t = setTimeout(function () { compare(ev, ob); }, cfg.interval); } } else { $(ob).unbind("mousemove", track); if (ob.hoverIntent_s == 1) { ob.hoverIntent_t = setTimeout(function () { delay(ev, ob); }, cfg.timeout); } }
        }; return this.mouseover(handleHover).mouseout(handleHover);
    };
})(jQuery);

/* jquery.alerts.js */
(function ($) {
    $.alerts = {
        verticalOffset: -75, horizontalOffset: 0, repositionOnResize: true, overlayOpacity: .01, overlayColor: '#FFF', draggable: true, okButton: '&nbsp;OK&nbsp;', cancelButton: '&nbsp;Cancel&nbsp;', dialogClass: null, alert: function (message, title, callback) { if (title == null) title = 'Alert'; $.alerts._show(title, message, null, 'alert', function (result) { if (callback) callback(result); }); }, confirm: function (message, title, callback) { if (title == null) title = 'Confirm'; $.alerts._show(title, message, null, 'confirm', function (result) { if (callback) callback(result); }); }, prompt: function (message, value, title, callback) { if (title == null) title = 'Prompt'; $.alerts._show(title, message, value, 'prompt', function (result) { if (callback) callback(result); }); }, _show: function (title, msg, value, type, callback) {
            $.alerts._hide(); $.alerts._overlay('show'); $("BODY").append('<div id="popup_container">' +
            '<h1 id="popup_title"></h1>' +
            '<div id="popup_content">' +
            '<div id="popup_message"></div>' +
            '</div>' +
            '</div>'); if ($.alerts.dialogClass) $("#popup_container").addClass($.alerts.dialogClass); var pos = ($.browser.msie && parseInt($.browser.version) <= 6) ? 'absolute' : 'fixed'; $("#popup_container").css({ position: pos, zIndex: 99999, padding: 0, margin: 0 }); $("#popup_title").text(title); $("#popup_content").addClass(type); $("#popup_message").text(msg); $("#popup_message").html($("#popup_message").text().replace(/\n/g, '<br />')); $("#popup_container").css({ minWidth: $("#popup_container").outerWidth(), maxWidth: $("#popup_container").outerWidth() }); $.alerts._reposition(); $.alerts._maintainPosition(true); switch (type) { case 'alert': $("#popup_message").after('<div id="popup_panel"><input type="button" value="' + $.alerts.okButton + '" id="popup_ok" /></div>'); $("#popup_ok").click(function () { $.alerts._hide(); callback(true); }); $("#popup_ok").focus().keypress(function (e) { if (e.keyCode == 13 || e.keyCode == 27) $("#popup_ok").trigger('click'); }); break; case 'confirm': $("#popup_message").after('<div id="popup_panel"><input type="button" value="' + $.alerts.okButton + '" id="popup_ok" /> <input type="button" value="' + $.alerts.cancelButton + '" id="popup_cancel" /></div>'); $("#popup_ok").click(function () { $.alerts._hide(); if (callback) callback(true); }); $("#popup_cancel").click(function () { $.alerts._hide(); if (callback) callback(false); }); $("#popup_ok").focus(); $("#popup_ok, #popup_cancel").keypress(function (e) { if (e.keyCode == 13) $("#popup_ok").trigger('click'); if (e.keyCode == 27) $("#popup_cancel").trigger('click'); }); break; case 'prompt': $("#popup_message").append('<br /><input type="text" size="30" id="popup_prompt" />').after('<div id="popup_panel"><input type="button" value="' + $.alerts.okButton + '" id="popup_ok" /> <input type="button" value="' + $.alerts.cancelButton + '" id="popup_cancel" /></div>'); $("#popup_prompt").width($("#popup_message").width()); $("#popup_ok").click(function () { var val = $("#popup_prompt").val(); $.alerts._hide(); if (callback) callback(val); }); $("#popup_cancel").click(function () { $.alerts._hide(); if (callback) callback(null); }); $("#popup_prompt, #popup_ok, #popup_cancel").keypress(function (e) { if (e.keyCode == 13) $("#popup_ok").trigger('click'); if (e.keyCode == 27) $("#popup_cancel").trigger('click'); }); if (value) $("#popup_prompt").val(value); $("#popup_prompt").focus().select(); break; }
            if ($.alerts.draggable) { try { $("#popup_container").draggable({ handle: $("#popup_title") }); $("#popup_title").css({ cursor: 'move' }); } catch (e) { } }
        }, _hide: function () { $("#popup_container").remove(); $.alerts._overlay('hide'); $.alerts._maintainPosition(false); }, _overlay: function (status) { switch (status) { case 'show': $.alerts._overlay('hide'); $("BODY").append('<div id="popup_overlay"></div>'); $("#popup_overlay").css({ position: 'absolute', zIndex: 99998, top: '0px', left: '0px', width: '100%', height: $(document).height(), background: $.alerts.overlayColor, opacity: $.alerts.overlayOpacity }); break; case 'hide': $("#popup_overlay").remove(); break; } }, _reposition: function () { var top = (($(window).height() / 2) - ($("#popup_container").outerHeight() / 2)) + $.alerts.verticalOffset; var left = (($(window).width() / 2) - ($("#popup_container").outerWidth() / 2)) + $.alerts.horizontalOffset; if (top < 0) top = 0; if (left < 0) left = 0; if ($.browser.msie && parseInt($.browser.version) <= 6) top = top + $(window).scrollTop(); $("#popup_container").css({ top: top + 'px', left: left + 'px' }); $("#popup_overlay").height($(document).height()); }, _maintainPosition: function (status) { if ($.alerts.repositionOnResize) { switch (status) { case true: $(window).bind('resize', $.alerts._reposition); break; case false: $(window).unbind('resize', $.alerts._reposition); break; } } }
    }
    jAlert = function (message, title, callback) { $.alerts.alert(message, title, callback); }
    jConfirm = function (message, title, callback) { $.alerts.confirm(message, title, callback); }; jPrompt = function (message, value, title, callback) { $.alerts.prompt(message, value, title, callback); };
})(jQuery);

/* jquery-asyncUpload-0.1.js */
(function ($) {
    $.fn.makeAsyncUploader = function (options) {
        return this.each(function () {
            var id = $(this).attr("id");
            var container = $("<span class='asyncUploader'/>");
            container.append($("<div class='ProgressBar'> <div>&nbsp;</div> </div>"));
            container.append($("<span id='" + id + "_completedMessage'/>"));
            container.append($("<span id='" + id + "_uploading'>En cours... <input type='button' value='Annuler'/></span>"));
            container.append($("<span id='" + id + "_swf'/>"));
            container.append($("<input type='hidden' name='" + id + "_filename'/>"));
            container.append($("<input type='hidden' name='" + id + "_guid'/>"));
            $(this).before(container).remove();
            $("div.ProgressBar", container).hide();
            $("span[id$=_uploading]", container).hide();
            var swfu;
            var width = 190, height = 60;
            if (options) { width = options.width || width; height = options.height || height; }
            var defaults = {
                flash_url: "swfupload.swf",
                upload_url: "/Home/AsyncUpload",
                file_size_limit: "32 MB",
                file_types: "*.ged",
                file_types_description: "Fichiers Gedcom",
                debug: false,
                button_image_url: "blankButton.png",
                button_width: width,
                button_height: height,
                button_placeholder_id: id + "_swf",
                // button_text: "<font face='Arial' size='13pt'>Choisir fichier</font>",
                button_text_left_padding: (width - 85) / 2, button_text_top_padding: 1, file_queued_handler:
                    function (file) {
                        swfu.startUpload();
                    }, file_queue_error_handler: function (file, code, msg) { alert("DÃ©solÃ©, votre fichier n'a pas Ã©tÃ© tÃ©lÃ©chargÃ©: " + msg); },
                upload_error_handler: function (file, code, msg)
                { alert("DÃ©solÃ©, votre fichier n'a pas Ã©tÃ© tÃ©lÃ©chargÃ©: " + msg); }, upload_start_handler: function () {
                    swfu.setButtonDimensions(0, height); $("input[name$=_filename]", container).val(""); $("input[name$=_guid]", container).val(""); $("div.ProgressBar div", container).css("width", "0px"); $("div.ProgressBar", container).show(); $("span[id$=_uploading]", container).show(); $("span[id$=_completedMessage]", container).html("").hide(); if (options.disableDuringUpload)
                        $(options.disableDuringUpload).attr("disabled", "disabled");
                }, upload_success_handler: function (file, response) {
                    $("input[name$=_filename]", container).val(file.name);
                    $("input[name$=_guid]", container).val(response);
                    $("span[id$=_completedMessage]", container).html("TÃ©lÃ©chargÃ© <b>{0}</b> ({1} KB)"
                    .replace("{0}", ShortName(file.name, 12))
                    .replace("{1}", Math.round(file.size / 1024)));
                }, upload_complete_handler: function () {
                    var clearup = function () { $("div.ProgressBar", container).hide(); $("span[id$=_completedMessage]", container).show(); $("span[id$=_completedMessage]", container).css("display", "block"); $("span[id$=_completedMessage]", container).css("width", "200px"); $("span[id$=_uploading]", container).hide(); swfu.setButtonDimensions(width, height); }; if ($("input[name$=_filename]", container).val() != "")
                        $("div.ProgressBar div", container).animate({ width: "100%" }, { duration: "fast", queue: false, complete: clearup }); else
                        clearup(); if (options.disableDuringUpload)
                            $(options.disableDuringUpload).removeAttr("disabled");
                }, upload_progress_handler: function (file, bytes, total) { var percent = 100 * bytes / total; $("div.ProgressBar div", container).animate({ width: percent + "%" }, { duration: 500, queue: false }); }
            };
            swfu = new SWFUpload($.extend(defaults, options || {}));
            $("span[id$=_uploading] input[type='button']", container).click(function () {
                swfu.cancelUpload(null, false);
            });
            if (options.existingFilename || "" != "") {
                $("span[id$=_completedMessage]", container).html("TÃ©lÃ©chargÃ© <b>{0}</b> ({1} KB)"
                .replace("{0}", options.existingFilename)
                .replace("{1}", options.existingFileSize ? Math.round(options.existingFileSize / 1024) : "?")).show();
                $("input[name$=_filename]", container).val(options.existingFilename);
            }
            if (options.existingGuid || "" != "")
                $("input[name$=_guid]", container).val(options.existingGuid);
        });
    }
})(jQuery); function ShortName(fileName, size) {
    if (fileName.length > size) { return fileName.substring(0, size - 3) + "..."; }
    return fileName;
};

/* tinymce/jscripts/tiny_mce/jquery.tinymce.js */
(function (b) { var e, d, a = [], c = window; b.fn.tinymce = function (j) { var p = this, g, k, h, m, i, l = "", n = ""; if (!p.length) { return p } if (!j) { return tinyMCE.get(p[0].id) } function o() { var r = [], q = 0; if (f) { f(); f = null } p.each(function (t, u) { var s, w = u.id, v = j.oninit; if (!w) { u.id = w = tinymce.DOM.uniqueId() } s = new tinymce.Editor(w, j); r.push(s); if (v) { s.onInit.add(function () { var x, y = v; if (++q == r.length) { if (tinymce.is(y, "string")) { x = (y.indexOf(".") === -1) ? null : tinymce.resolve(y.replace(/\.\w+$/, "")); y = tinymce.resolve(y) } y.apply(x || tinymce, r) } }) } }); b.each(r, function (t, s) { s.render() }) } if (!c.tinymce && !d && (g = j.script_url)) { d = 1; h = g.substring(0, g.lastIndexOf("/")); if (/_(src|dev)\.js/g.test(g)) { n = "_src" } m = g.lastIndexOf("?"); if (m != -1) { l = g.substring(m + 1) } c.tinyMCEPreInit = c.tinyMCEPreInit || { base: h, suffix: n, query: l }; if (g.indexOf("gzip") != -1) { i = j.language || "en"; g = g + (/\?/.test(g) ? "&" : "?") + "js=true&core=true&suffix=" + escape(n) + "&themes=" + escape(j.theme) + "&plugins=" + escape(j.plugins) + "&languages=" + i; if (!c.tinyMCE_GZ) { tinyMCE_GZ = { start: function () { tinymce.suffix = n; function q(r) { tinymce.ScriptLoader.markDone(tinyMCE.baseURI.toAbsolute(r)) } q("langs/" + i + ".js"); q("themes/" + j.theme + "/editor_template" + n + ".js"); q("themes/" + j.theme + "/langs/" + i + ".js"); b.each(j.plugins.split(","), function (s, r) { if (r) { q("plugins/" + r + "/editor_plugin" + n + ".js"); q("plugins/" + r + "/langs/" + i + ".js") } }) }, end: function () { } } } } b.ajax({ type: "GET", url: g, dataType: "script", cache: true, success: function () { tinymce.dom.Event.domLoaded = 1; d = 2; if (j.script_loaded) { j.script_loaded() } o(); b.each(a, function (q, r) { r() }) } }) } else { if (d === 1) { a.push(o) } else { o() } } return p }; b.extend(b.expr[":"], { tinymce: function (g) { return g.id && !!tinyMCE.get(g.id) } }); function f() { function i(l) { if (l === "remove") { this.each(function (n, o) { var m = h(o); if (m) { m.remove() } }) } this.find("span.mceEditor,div.mceEditor").each(function (n, o) { var m = tinyMCE.get(o.id.replace(/_parent$/, "")); if (m) { m.remove() } }) } function k(n) { var m = this, l; if (n !== e) { i.call(m); m.each(function (p, q) { var o; if (o = tinyMCE.get(q.id)) { o.setContent(n) } }) } else { if (m.length > 0) { if (l = tinyMCE.get(m[0].id)) { return l.getContent() } } } } function h(m) { var l = null; (m) && (m.id) && (c.tinymce) && (l = tinyMCE.get(m.id)); return l } function g(l) { return !!((l) && (l.length) && (c.tinymce) && (l.is(":tinymce"))) } var j = {}; b.each(["text", "html", "val"], function (n, l) { var o = j[l] = b.fn[l], m = (l === "text"); b.fn[l] = function (s) { var p = this; if (!g(p)) { return o.apply(p, arguments) } if (s !== e) { k.call(p.filter(":tinymce"), s); o.apply(p.not(":tinymce"), arguments); return p } else { var r = ""; var q = arguments; (m ? p : p.eq(0)).each(function (u, v) { var t = h(v); r += t ? (m ? t.getContent().replace(/<(?:"[^"]*"|'[^']*'|[^'">])*>/g, "") : t.getContent()) : o.apply(b(v), q) }); return r } } }); b.each(["append", "prepend"], function (n, m) { var o = j[m] = b.fn[m], l = (m === "prepend"); b.fn[m] = function (q) { var p = this; if (!g(p)) { return o.apply(p, arguments) } if (q !== e) { p.filter(":tinymce").each(function (s, t) { var r = h(t); r && r.setContent(l ? q + r.getContent() : r.getContent() + q) }); o.apply(p.not(":tinymce"), arguments); return p } } }); b.each(["remove", "replaceWith", "replaceAll", "empty"], function (m, l) { var n = j[l] = b.fn[l]; b.fn[l] = function () { i.call(this, l); return n.apply(this, arguments) } }); j.attr = b.fn.attr; b.fn.attr = function (n, q, o) { var m = this; if ((!n) || (n !== "value") || (!g(m))) { return j.attr.call(m, n, q, o) } if (q !== e) { k.call(m.filter(":tinymce"), q); j.attr.call(m.not(":tinymce"), n, q, o); return m } else { var p = m[0], l = h(p); return l ? l.getContent() : j.attr.call(b(p), n, q, o) } } } })(jQuery);

/* Jquery_UI.js */
//jQuery.ui || (function (c) { var i = c.fn.remove, d = c.browser.mozilla && (parseFloat(c.browser.version) < 1.9); c.ui = { version: "1.7", plugin: { add: function (k, l, n) { var m = c.ui[k].prototype; for (var j in n) { m.plugins[j] = m.plugins[j] || []; m.plugins[j].push([l, n[j]]) } }, call: function (j, l, k) { var n = j.plugins[l]; if (!n || !j.element[0].parentNode) { return } for (var m = 0; m < n.length; m++) { if (j.options[n[m][0]]) { n[m][1].apply(j.element, k) } } } }, contains: function (k, j) { return document.compareDocumentPosition ? k.compareDocumentPosition(j) & 16 : k !== j && k.contains(j) }, hasScroll: function (m, k) { if (c(m).css("overflow") == "hidden") { return false } var j = (k && k == "left") ? "scrollLeft" : "scrollTop", l = false; if (m[j] > 0) { return true } m[j] = 1; l = (m[j] > 0); m[j] = 0; return l }, isOverAxis: function (k, j, l) { return (k > j) && (k < (j + l)) }, isOver: function (o, k, n, m, j, l) { return c.ui.isOverAxis(o, n, j) && c.ui.isOverAxis(k, m, l) }, keyCode: { BACKSPACE: 8, CAPS_LOCK: 20, COMMA: 188, CONTROL: 17, DELETE: 46, DOWN: 40, END: 35, ENTER: 13, ESCAPE: 27, HOME: 36, INSERT: 45, LEFT: 37, NUMPAD_ADD: 107, NUMPAD_DECIMAL: 110, NUMPAD_DIVIDE: 111, NUMPAD_ENTER: 108, NUMPAD_MULTIPLY: 106, NUMPAD_SUBTRACT: 109, PAGE_DOWN: 34, PAGE_UP: 33, PERIOD: 190, RIGHT: 39, SHIFT: 16, SPACE: 32, TAB: 9, UP: 38 } }; if (d) { var f = c.attr, e = c.fn.removeAttr, h = "http://www.w3.org/2005/07/aaa", a = /^aria-/, b = /^wairole:/; c.attr = function (k, j, l) { var m = l !== undefined; return (j == "role" ? (m ? f.call(this, k, j, "wairole:" + l) : (f.apply(this, arguments) || "").replace(b, "")) : (a.test(j) ? (m ? k.setAttributeNS(h, j.replace(a, "aaa:"), l) : f.call(this, k, j.replace(a, "aaa:"))) : f.apply(this, arguments))) }; c.fn.removeAttr = function (j) { return (a.test(j) ? this.each(function () { this.removeAttributeNS(h, j.replace(a, "")) }) : e.call(this, j)) } } c.fn.extend({ remove: function () { c("*", this).add(this).each(function () { c(this).triggerHandler("remove") }); return i.apply(this, arguments) }, enableSelection: function () { return this.attr("unselectable", "off").css("MozUserSelect", "").unbind("selectstart.ui") }, disableSelection: function () { return this.attr("unselectable", "on").css("MozUserSelect", "none").bind("selectstart.ui", function () { return false }) }, scrollParent: function () { var j; if ((c.browser.msie && (/(static|relative)/).test(this.css("position"))) || (/absolute/).test(this.css("position"))) { j = this.parents().filter(function () { return (/(relative|absolute|fixed)/).test(c.curCSS(this, "position", 1)) && (/(auto|scroll)/).test(c.curCSS(this, "overflow", 1) + c.curCSS(this, "overflow-y", 1) + c.curCSS(this, "overflow-x", 1)) }).eq(0) } else { j = this.parents().filter(function () { return (/(auto|scroll)/).test(c.curCSS(this, "overflow", 1) + c.curCSS(this, "overflow-y", 1) + c.curCSS(this, "overflow-x", 1)) }).eq(0) } return (/fixed/).test(this.css("position")) || !j.length ? c(document) : j } }); c.extend(c.expr[":"], { data: function (l, k, j) { return !!c.data(l, j[3]) }, focusable: function (k) { var l = k.nodeName.toLowerCase(), j = c.attr(k, "tabindex"); return (/input|select|textarea|button|object/.test(l) ? !k.disabled : "a" == l || "area" == l ? k.href || !isNaN(j) : !isNaN(j)) && !c(k)["area" == l ? "parents" : "closest"](":hidden").length }, tabbable: function (k) { var j = c.attr(k, "tabindex"); return (isNaN(j) || j >= 0) && c(k).is(":focusable") } }); function g(m, n, o, l) { function k(q) { var p = c[m][n][q] || []; return (typeof p == "string" ? p.split(/,?\s+/) : p) } var j = k("getter"); if (l.length == 1 && typeof l[0] == "string") { j = j.concat(k("getterSetter")) } return (c.inArray(o, j) != -1) } c.widget = function (k, j) { var l = k.split(".")[0]; k = k.split(".")[1]; c.fn[k] = function (p) { var n = (typeof p == "string"), o = Array.prototype.slice.call(arguments, 1); if (n && p.substring(0, 1) == "_") { return this } if (n && g(l, k, p, o)) { var m = c.data(this[0], k); return (m ? m[p].apply(m, o) : undefined) } return this.each(function () { var q = c.data(this, k); (!q && !n && c.data(this, k, new c[l][k](this, p))._init()); (q && n && c.isFunction(q[p]) && q[p].apply(q, o)) }) }; c[l] = c[l] || {}; c[l][k] = function (o, n) { var m = this; this.namespace = l; this.widgetName = k; this.widgetEventPrefix = c[l][k].eventPrefix || k; this.widgetBaseClass = l + "-" + k; this.options = c.extend({}, c.widget.defaults, c[l][k].defaults, c.metadata && c.metadata.get(o)[k], n); this.element = c(o).bind("setData." + k, function (q, p, r) { if (q.target == o) { return m._setData(p, r) } }).bind("getData." + k, function (q, p) { if (q.target == o) { return m._getData(p) } }).bind("remove", function () { return m.destroy() }) }; c[l][k].prototype = c.extend({}, c.widget.prototype, j); c[l][k].getterSetter = "option" }; c.widget.prototype = { _init: function () { }, destroy: function () { this.element.removeData(this.widgetName).removeClass(this.widgetBaseClass + "-disabled " + this.namespace + "-state-disabled").removeAttr("aria-disabled") }, option: function (l, m) { var k = l, j = this; if (typeof l == "string") { if (m === undefined) { return this._getData(l) } k = {}; k[l] = m } c.each(k, function (n, o) { j._setData(n, o) }) }, _getData: function (j) { return this.options[j] }, _setData: function (j, k) { this.options[j] = k; if (j == "disabled") { this.element[k ? "addClass" : "removeClass"](this.widgetBaseClass + "-disabled " + this.namespace + "-state-disabled").attr("aria-disabled", k) } }, enable: function () { this._setData("disabled", false) }, disable: function () { this._setData("disabled", true) }, _trigger: function (l, m, n) { var p = this.options[l], j = (l == this.widgetEventPrefix ? l : this.widgetEventPrefix + l); m = c.Event(m); m.type = j; if (m.originalEvent) { for (var k = c.event.props.length, o; k;) { o = c.event.props[--k]; m[o] = m.originalEvent[o] } } this.element.trigger(m, n); return !(c.isFunction(p) && p.call(this.element[0], m, n) === false || m.isDefaultPrevented()) } }; c.widget.defaults = { disabled: false }; c.ui.mouse = { _mouseInit: function () { var j = this; this.element.bind("mousedown." + this.widgetName, function (k) { return j._mouseDown(k) }).bind("click." + this.widgetName, function (k) { if (j._preventClickEvent) { j._preventClickEvent = false; k.stopImmediatePropagation(); return false } }); if (c.browser.msie) { this._mouseUnselectable = this.element.attr("unselectable"); this.element.attr("unselectable", "on") } this.started = false }, _mouseDestroy: function () { this.element.unbind("." + this.widgetName); (c.browser.msie && this.element.attr("unselectable", this._mouseUnselectable)) }, _mouseDown: function (l) { l.originalEvent = l.originalEvent || {}; if (l.originalEvent.mouseHandled) { return } (this._mouseStarted && this._mouseUp(l)); this._mouseDownEvent = l; var k = this, m = (l.which == 1), j = (typeof this.options.cancel == "string" ? c(l.target).parents().add(l.target).filter(this.options.cancel).length : false); if (!m || j || !this._mouseCapture(l)) { return true } this.mouseDelayMet = !this.options.delay; if (!this.mouseDelayMet) { this._mouseDelayTimer = setTimeout(function () { k.mouseDelayMet = true }, this.options.delay) } if (this._mouseDistanceMet(l) && this._mouseDelayMet(l)) { this._mouseStarted = (this._mouseStart(l) !== false); if (!this._mouseStarted) { l.preventDefault(); return true } } this._mouseMoveDelegate = function (n) { return k._mouseMove(n) }; this._mouseUpDelegate = function (n) { return k._mouseUp(n) }; c(document).bind("mousemove." + this.widgetName, this._mouseMoveDelegate).bind("mouseup." + this.widgetName, this._mouseUpDelegate); (c.browser.safari || l.preventDefault()); l.originalEvent.mouseHandled = true; return true }, _mouseMove: function (j) { if (c.browser.msie && !j.button) { return this._mouseUp(j) } if (this._mouseStarted) { this._mouseDrag(j); return j.preventDefault() } if (this._mouseDistanceMet(j) && this._mouseDelayMet(j)) { this._mouseStarted = (this._mouseStart(this._mouseDownEvent, j) !== false); (this._mouseStarted ? this._mouseDrag(j) : this._mouseUp(j)) } return !this._mouseStarted }, _mouseUp: function (j) { c(document).unbind("mousemove." + this.widgetName, this._mouseMoveDelegate).unbind("mouseup." + this.widgetName, this._mouseUpDelegate); if (this._mouseStarted) { this._mouseStarted = false; this._preventClickEvent = (j.target == this._mouseDownEvent.target); this._mouseStop(j) } return false }, _mouseDistanceMet: function (j) { return (Math.max(Math.abs(this._mouseDownEvent.pageX - j.pageX), Math.abs(this._mouseDownEvent.pageY - j.pageY)) >= this.options.distance) }, _mouseDelayMet: function (j) { return this.mouseDelayMet }, _mouseStart: function (j) { }, _mouseDrag: function (j) { }, _mouseStop: function (j) { }, _mouseCapture: function (j) { return true } }; c.ui.mouse.defaults = { cancel: null, distance: 1, delay: 0 } })(jQuery); (function (a) { a.widget("ui.draggable", a.extend({}, a.ui.mouse, { _init: function () { if (this.options.helper == "original" && !(/^(?:r|a|f)/).test(this.element.css("position"))) { this.element[0].style.position = "relative" } (this.options.addClasses && this.element.addClass("ui-draggable")); (this.options.disabled && this.element.addClass("ui-draggable-disabled")); this._mouseInit() }, destroy: function () { if (!this.element.data("draggable")) { return } this.element.removeData("draggable").unbind(".draggable").removeClass("ui-draggable ui-draggable-dragging ui-draggable-disabled"); this._mouseDestroy() }, _mouseCapture: function (b) { var c = this.options; if (this.helper || c.disabled || a(b.target).is(".ui-resizable-handle")) { return false } this.handle = this._getHandle(b); if (!this.handle) { return false } return true }, _mouseStart: function (b) { var c = this.options; this.helper = this._createHelper(b); this._cacheHelperProportions(); if (a.ui.ddmanager) { a.ui.ddmanager.current = this } this._cacheMargins(); this.cssPosition = this.helper.css("position"); this.scrollParent = this.helper.scrollParent(); this.offset = this.element.offset(); this.offset = { top: this.offset.top - this.margins.top, left: this.offset.left - this.margins.left }; a.extend(this.offset, { click: { left: b.pageX - this.offset.left, top: b.pageY - this.offset.top }, parent: this._getParentOffset(), relative: this._getRelativeOffset() }); this.originalPosition = this._generatePosition(b); this.originalPageX = b.pageX; this.originalPageY = b.pageY; if (c.cursorAt) { this._adjustOffsetFromHelper(c.cursorAt) } if (c.containment) { this._setContainment() } this._trigger("start", b); this._cacheHelperProportions(); if (a.ui.ddmanager && !c.dropBehaviour) { a.ui.ddmanager.prepareOffsets(this, b) } this.helper.addClass("ui-draggable-dragging"); this._mouseDrag(b, true); return true }, _mouseDrag: function (b, d) { this.position = this._generatePosition(b); this.positionAbs = this._convertPositionTo("absolute"); if (!d) { var c = this._uiHash(); this._trigger("drag", b, c); this.position = c.position } if (!this.options.axis || this.options.axis != "y") { this.helper[0].style.left = this.position.left + "px" } if (!this.options.axis || this.options.axis != "x") { this.helper[0].style.top = this.position.top + "px" } if (a.ui.ddmanager) { a.ui.ddmanager.drag(this, b) } return false }, _mouseStop: function (c) { var d = false; if (a.ui.ddmanager && !this.options.dropBehaviour) { d = a.ui.ddmanager.drop(this, c) } if (this.dropped) { d = this.dropped; this.dropped = false } if ((this.options.revert == "invalid" && !d) || (this.options.revert == "valid" && d) || this.options.revert === true || (a.isFunction(this.options.revert) && this.options.revert.call(this.element, d))) { var b = this; a(this.helper).animate(this.originalPosition, parseInt(this.options.revertDuration, 10), function () { b._trigger("stop", c); b._clear() }) } else { this._trigger("stop", c); this._clear() } return false }, _getHandle: function (b) { var c = !this.options.handle || !a(this.options.handle, this.element).length ? true : false; a(this.options.handle, this.element).find("*").andSelf().each(function () { if (this == b.target) { c = true } }); return c }, _createHelper: function (c) { var d = this.options; var b = a.isFunction(d.helper) ? a(d.helper.apply(this.element[0], [c])) : (d.helper == "clone" ? this.element.clone() : this.element); if (!b.parents("body").length) { b.appendTo((d.appendTo == "parent" ? this.element[0].parentNode : d.appendTo)) } if (b[0] != this.element[0] && !(/(fixed|absolute)/).test(b.css("position"))) { b.css("position", "absolute") } return b }, _adjustOffsetFromHelper: function (b) { if (b.left != undefined) { this.offset.click.left = b.left + this.margins.left } if (b.right != undefined) { this.offset.click.left = this.helperProportions.width - b.right + this.margins.left } if (b.top != undefined) { this.offset.click.top = b.top + this.margins.top } if (b.bottom != undefined) { this.offset.click.top = this.helperProportions.height - b.bottom + this.margins.top } }, _getParentOffset: function () { this.offsetParent = this.helper.offsetParent(); var b = this.offsetParent.offset(); if (this.cssPosition == "absolute" && this.scrollParent[0] != document && a.ui.contains(this.scrollParent[0], this.offsetParent[0])) { b.left += this.scrollParent.scrollLeft(); b.top += this.scrollParent.scrollTop() } if ((this.offsetParent[0] == document.body) || (this.offsetParent[0].tagName && this.offsetParent[0].tagName.toLowerCase() == "html" && a.browser.msie)) { b = { top: 0, left: 0 } } return { top: b.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0), left: b.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0) } }, _getRelativeOffset: function () { if (this.cssPosition == "relative") { var b = this.element.position(); return { top: b.top - (parseInt(this.helper.css("top"), 10) || 0) + this.scrollParent.scrollTop(), left: b.left - (parseInt(this.helper.css("left"), 10) || 0) + this.scrollParent.scrollLeft() } } else { return { top: 0, left: 0 } } }, _cacheMargins: function () { this.margins = { left: (parseInt(this.element.css("marginLeft"), 10) || 0), top: (parseInt(this.element.css("marginTop"), 10) || 0) } }, _cacheHelperProportions: function () { this.helperProportions = { width: this.helper.outerWidth(), height: this.helper.outerHeight() } }, _setContainment: function () { var e = this.options; if (e.containment == "parent") { e.containment = this.helper[0].parentNode } if (e.containment == "document" || e.containment == "window") { this.containment = [0 - this.offset.relative.left - this.offset.parent.left, 0 - this.offset.relative.top - this.offset.parent.top, a(e.containment == "document" ? document : window).width() - this.helperProportions.width - this.margins.left, (a(e.containment == "document" ? document : window).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top] } if (!(/^(document|window|parent)$/).test(e.containment) && e.containment.constructor != Array) { var c = a(e.containment)[0]; if (!c) { return } var d = a(e.containment).offset(); var b = (a(c).css("overflow") != "hidden"); this.containment = [d.left + (parseInt(a(c).css("borderLeftWidth"), 10) || 0) + (parseInt(a(c).css("paddingLeft"), 10) || 0) - this.margins.left, d.top + (parseInt(a(c).css("borderTopWidth"), 10) || 0) + (parseInt(a(c).css("paddingTop"), 10) || 0) - this.margins.top, d.left + (b ? Math.max(c.scrollWidth, c.offsetWidth) : c.offsetWidth) - (parseInt(a(c).css("borderLeftWidth"), 10) || 0) - (parseInt(a(c).css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left, d.top + (b ? Math.max(c.scrollHeight, c.offsetHeight) : c.offsetHeight) - (parseInt(a(c).css("borderTopWidth"), 10) || 0) - (parseInt(a(c).css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top] } else { if (e.containment.constructor == Array) { this.containment = e.containment } } }, _convertPositionTo: function (f, h) { if (!h) { h = this.position } var c = f == "absolute" ? 1 : -1; var e = this.options, b = this.cssPosition == "absolute" && !(this.scrollParent[0] != document && a.ui.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent, g = (/(html|body)/i).test(b[0].tagName); return { top: (h.top + this.offset.relative.top * c + this.offset.parent.top * c - (a.browser.safari && this.cssPosition == "fixed" ? 0 : (this.cssPosition == "fixed" ? -this.scrollParent.scrollTop() : (g ? 0 : b.scrollTop())) * c)), left: (h.left + this.offset.relative.left * c + this.offset.parent.left * c - (a.browser.safari && this.cssPosition == "fixed" ? 0 : (this.cssPosition == "fixed" ? -this.scrollParent.scrollLeft() : g ? 0 : b.scrollLeft()) * c)) } }, _generatePosition: function (e) { var h = this.options, b = this.cssPosition == "absolute" && !(this.scrollParent[0] != document && a.ui.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent, i = (/(html|body)/i).test(b[0].tagName); if (this.cssPosition == "relative" && !(this.scrollParent[0] != document && this.scrollParent[0] != this.offsetParent[0])) { this.offset.relative = this._getRelativeOffset() } var d = e.pageX; var c = e.pageY; if (this.originalPosition) { if (this.containment) { if (e.pageX - this.offset.click.left < this.containment[0]) { d = this.containment[0] + this.offset.click.left } if (e.pageY - this.offset.click.top < this.containment[1]) { c = this.containment[1] + this.offset.click.top } if (e.pageX - this.offset.click.left > this.containment[2]) { d = this.containment[2] + this.offset.click.left } if (e.pageY - this.offset.click.top > this.containment[3]) { c = this.containment[3] + this.offset.click.top } } if (h.grid) { var g = this.originalPageY + Math.round((c - this.originalPageY) / h.grid[1]) * h.grid[1]; c = this.containment ? (!(g - this.offset.click.top < this.containment[1] || g - this.offset.click.top > this.containment[3]) ? g : (!(g - this.offset.click.top < this.containment[1]) ? g - h.grid[1] : g + h.grid[1])) : g; var f = this.originalPageX + Math.round((d - this.originalPageX) / h.grid[0]) * h.grid[0]; d = this.containment ? (!(f - this.offset.click.left < this.containment[0] || f - this.offset.click.left > this.containment[2]) ? f : (!(f - this.offset.click.left < this.containment[0]) ? f - h.grid[0] : f + h.grid[0])) : f } } return { top: (c - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + (a.browser.safari && this.cssPosition == "fixed" ? 0 : (this.cssPosition == "fixed" ? -this.scrollParent.scrollTop() : (i ? 0 : b.scrollTop())))), left: (d - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + (a.browser.safari && this.cssPosition == "fixed" ? 0 : (this.cssPosition == "fixed" ? -this.scrollParent.scrollLeft() : i ? 0 : b.scrollLeft()))) } }, _clear: function () { this.helper.removeClass("ui-draggable-dragging"); if (this.helper[0] != this.element[0] && !this.cancelHelperRemoval) { this.helper.remove() } this.helper = null; this.cancelHelperRemoval = false }, _trigger: function (b, c, d) { d = d || this._uiHash(); a.ui.plugin.call(this, b, [c, d]); if (b == "drag") { this.positionAbs = this._convertPositionTo("absolute") } return a.widget.prototype._trigger.call(this, b, c, d) }, plugins: {}, _uiHash: function (b) { return { helper: this.helper, position: this.position, absolutePosition: this.positionAbs, offset: this.positionAbs } } })); a.extend(a.ui.draggable, { version: "1.7", eventPrefix: "drag", defaults: { addClasses: true, appendTo: "parent", axis: false, cancel: ":input,option", connectToSortable: false, containment: false, cursor: "auto", cursorAt: false, delay: 0, distance: 1, grid: false, handle: false, helper: "original", iframeFix: false, opacity: false, refreshPositions: false, revert: false, revertDuration: 500, scope: "default", scroll: true, scrollSensitivity: 20, scrollSpeed: 20, snap: false, snapMode: "both", snapTolerance: 20, stack: false, zIndex: false } }); a.ui.plugin.add("draggable", "connectToSortable", { start: function (c, e) { var d = a(this).data("draggable"), f = d.options, b = a.extend({}, e, { item: d.element }); d.sortables = []; a(f.connectToSortable).each(function () { var g = a.data(this, "sortable"); if (g && !g.options.disabled) { d.sortables.push({ instance: g, shouldRevert: g.options.revert }); g._refreshItems(); g._trigger("activate", c, b) } }) }, stop: function (c, e) { var d = a(this).data("draggable"), b = a.extend({}, e, { item: d.element }); a.each(d.sortables, function () { if (this.instance.isOver) { this.instance.isOver = 0; d.cancelHelperRemoval = true; this.instance.cancelHelperRemoval = false; if (this.shouldRevert) { this.instance.options.revert = true } this.instance._mouseStop(c); this.instance.options.helper = this.instance.options._helper; if (d.options.helper == "original") { this.instance.currentItem.css({ top: "auto", left: "auto" }) } } else { this.instance.cancelHelperRemoval = false; this.instance._trigger("deactivate", c, b) } }) }, drag: function (c, f) { var e = a(this).data("draggable"), b = this; var d = function (i) { var n = this.offset.click.top, m = this.offset.click.left; var g = this.positionAbs.top, k = this.positionAbs.left; var j = i.height, l = i.width; var p = i.top, h = i.left; return a.ui.isOver(g + n, k + m, p, h, j, l) }; a.each(e.sortables, function (g) { this.instance.positionAbs = e.positionAbs; this.instance.helperProportions = e.helperProportions; this.instance.offset.click = e.offset.click; if (this.instance._intersectsWith(this.instance.containerCache)) { if (!this.instance.isOver) { this.instance.isOver = 1; this.instance.currentItem = a(b).clone().appendTo(this.instance.element).data("sortable-item", true); this.instance.options._helper = this.instance.options.helper; this.instance.options.helper = function () { return f.helper[0] }; c.target = this.instance.currentItem[0]; this.instance._mouseCapture(c, true); this.instance._mouseStart(c, true, true); this.instance.offset.click.top = e.offset.click.top; this.instance.offset.click.left = e.offset.click.left; this.instance.offset.parent.left -= e.offset.parent.left - this.instance.offset.parent.left; this.instance.offset.parent.top -= e.offset.parent.top - this.instance.offset.parent.top; e._trigger("toSortable", c); e.dropped = this.instance.element; e.currentItem = e.element; this.instance.fromOutside = e } if (this.instance.currentItem) { this.instance._mouseDrag(c) } } else { if (this.instance.isOver) { this.instance.isOver = 0; this.instance.cancelHelperRemoval = true; this.instance.options.revert = false; this.instance._trigger("out", c, this.instance._uiHash(this.instance)); this.instance._mouseStop(c, true); this.instance.options.helper = this.instance.options._helper; this.instance.currentItem.remove(); if (this.instance.placeholder) { this.instance.placeholder.remove() } e._trigger("fromSortable", c); e.dropped = false } } }) } }); a.ui.plugin.add("draggable", "cursor", { start: function (c, d) { var b = a("body"), e = a(this).data("draggable").options; if (b.css("cursor")) { e._cursor = b.css("cursor") } b.css("cursor", e.cursor) }, stop: function (b, c) { var d = a(this).data("draggable").options; if (d._cursor) { a("body").css("cursor", d._cursor) } } }); a.ui.plugin.add("draggable", "iframeFix", { start: function (b, c) { var d = a(this).data("draggable").options; a(d.iframeFix === true ? "iframe" : d.iframeFix).each(function () { a('<div class="ui-draggable-iframeFix" style="background: #fff;"></div>').css({ width: this.offsetWidth + "px", height: this.offsetHeight + "px", position: "absolute", opacity: "0.001", zIndex: 1000 }).css(a(this).offset()).appendTo("body") }) }, stop: function (b, c) { a("div.ui-draggable-iframeFix").each(function () { this.parentNode.removeChild(this) }) } }); a.ui.plugin.add("draggable", "opacity", { start: function (c, d) { var b = a(d.helper), e = a(this).data("draggable").options; if (b.css("opacity")) { e._opacity = b.css("opacity") } b.css("opacity", e.opacity) }, stop: function (b, c) { var d = a(this).data("draggable").options; if (d._opacity) { a(c.helper).css("opacity", d._opacity) } } }); a.ui.plugin.add("draggable", "scroll", { start: function (c, d) { var b = a(this).data("draggable"); if (b.scrollParent[0] != document && b.scrollParent[0].tagName != "HTML") { b.overflowOffset = b.scrollParent.offset() } }, drag: function (d, e) { var c = a(this).data("draggable"), f = c.options, b = false; if (c.scrollParent[0] != document && c.scrollParent[0].tagName != "HTML") { if (!f.axis || f.axis != "x") { if ((c.overflowOffset.top + c.scrollParent[0].offsetHeight) - d.pageY < f.scrollSensitivity) { c.scrollParent[0].scrollTop = b = c.scrollParent[0].scrollTop + f.scrollSpeed } else { if (d.pageY - c.overflowOffset.top < f.scrollSensitivity) { c.scrollParent[0].scrollTop = b = c.scrollParent[0].scrollTop - f.scrollSpeed } } } if (!f.axis || f.axis != "y") { if ((c.overflowOffset.left + c.scrollParent[0].offsetWidth) - d.pageX < f.scrollSensitivity) { c.scrollParent[0].scrollLeft = b = c.scrollParent[0].scrollLeft + f.scrollSpeed } else { if (d.pageX - c.overflowOffset.left < f.scrollSensitivity) { c.scrollParent[0].scrollLeft = b = c.scrollParent[0].scrollLeft - f.scrollSpeed } } } } else { if (!f.axis || f.axis != "x") { if (d.pageY - a(document).scrollTop() < f.scrollSensitivity) { b = a(document).scrollTop(a(document).scrollTop() - f.scrollSpeed) } else { if (a(window).height() - (d.pageY - a(document).scrollTop()) < f.scrollSensitivity) { b = a(document).scrollTop(a(document).scrollTop() + f.scrollSpeed) } } } if (!f.axis || f.axis != "y") { if (d.pageX - a(document).scrollLeft() < f.scrollSensitivity) { b = a(document).scrollLeft(a(document).scrollLeft() - f.scrollSpeed) } else { if (a(window).width() - (d.pageX - a(document).scrollLeft()) < f.scrollSensitivity) { b = a(document).scrollLeft(a(document).scrollLeft() + f.scrollSpeed) } } } } if (b !== false && a.ui.ddmanager && !f.dropBehaviour) { a.ui.ddmanager.prepareOffsets(c, d) } } }); a.ui.plugin.add("draggable", "snap", { start: function (c, d) { var b = a(this).data("draggable"), e = b.options; b.snapElements = []; a(e.snap.constructor != String ? (e.snap.items || ":data(draggable)") : e.snap).each(function () { var g = a(this); var f = g.offset(); if (this != b.element[0]) { b.snapElements.push({ item: this, width: g.outerWidth(), height: g.outerHeight(), top: f.top, left: f.left }) } }) }, drag: function (u, p) { var g = a(this).data("draggable"), q = g.options; var y = q.snapTolerance; var x = p.offset.left, w = x + g.helperProportions.width, f = p.offset.top, e = f + g.helperProportions.height; for (var v = g.snapElements.length - 1; v >= 0; v--) { var s = g.snapElements[v].left, n = s + g.snapElements[v].width, m = g.snapElements[v].top, A = m + g.snapElements[v].height; if (!((s - y < x && x < n + y && m - y < f && f < A + y) || (s - y < x && x < n + y && m - y < e && e < A + y) || (s - y < w && w < n + y && m - y < f && f < A + y) || (s - y < w && w < n + y && m - y < e && e < A + y))) { if (g.snapElements[v].snapping) { (g.options.snap.release && g.options.snap.release.call(g.element, u, a.extend(g._uiHash(), { snapItem: g.snapElements[v].item }))) } g.snapElements[v].snapping = false; continue } if (q.snapMode != "inner") { var c = Math.abs(m - e) <= y; var z = Math.abs(A - f) <= y; var j = Math.abs(s - w) <= y; var k = Math.abs(n - x) <= y; if (c) { p.position.top = g._convertPositionTo("relative", { top: m - g.helperProportions.height, left: 0 }).top - g.margins.top } if (z) { p.position.top = g._convertPositionTo("relative", { top: A, left: 0 }).top - g.margins.top } if (j) { p.position.left = g._convertPositionTo("relative", { top: 0, left: s - g.helperProportions.width }).left - g.margins.left } if (k) { p.position.left = g._convertPositionTo("relative", { top: 0, left: n }).left - g.margins.left } } var h = (c || z || j || k); if (q.snapMode != "outer") { var c = Math.abs(m - f) <= y; var z = Math.abs(A - e) <= y; var j = Math.abs(s - x) <= y; var k = Math.abs(n - w) <= y; if (c) { p.position.top = g._convertPositionTo("relative", { top: m, left: 0 }).top - g.margins.top } if (z) { p.position.top = g._convertPositionTo("relative", { top: A - g.helperProportions.height, left: 0 }).top - g.margins.top } if (j) { p.position.left = g._convertPositionTo("relative", { top: 0, left: s }).left - g.margins.left } if (k) { p.position.left = g._convertPositionTo("relative", { top: 0, left: n - g.helperProportions.width }).left - g.margins.left } } if (!g.snapElements[v].snapping && (c || z || j || k || h)) { (g.options.snap.snap && g.options.snap.snap.call(g.element, u, a.extend(g._uiHash(), { snapItem: g.snapElements[v].item }))) } g.snapElements[v].snapping = (c || z || j || k || h) } } }); a.ui.plugin.add("draggable", "stack", { start: function (b, c) { var e = a(this).data("draggable").options; var d = a.makeArray(a(e.stack.group)).sort(function (g, f) { return (parseInt(a(g).css("zIndex"), 10) || e.stack.min) - (parseInt(a(f).css("zIndex"), 10) || e.stack.min) }); a(d).each(function (f) { this.style.zIndex = e.stack.min + f }); this[0].style.zIndex = e.stack.min + d.length } }); a.ui.plugin.add("draggable", "zIndex", { start: function (c, d) { var b = a(d.helper), e = a(this).data("draggable").options; if (b.css("zIndex")) { e._zIndex = b.css("zIndex") } b.css("zIndex", e.zIndex) }, stop: function (b, c) { var d = a(this).data("draggable").options; if (d._zIndex) { a(c.helper).css("zIndex", d._zIndex) } } }) })(jQuery); (function (a) { a.widget("ui.droppable", { _init: function () { var c = this.options, b = c.accept; this.isover = 0; this.isout = 1; this.options.accept = this.options.accept && a.isFunction(this.options.accept) ? this.options.accept : function (e) { return e.is(b) }; this.proportions = { width: this.element[0].offsetWidth, height: this.element[0].offsetHeight }; a.ui.ddmanager.droppables[this.options.scope] = a.ui.ddmanager.droppables[this.options.scope] || []; a.ui.ddmanager.droppables[this.options.scope].push(this); (this.options.addClasses && this.element.addClass("ui-droppable")) }, destroy: function () { var b = a.ui.ddmanager.droppables[this.options.scope]; for (var c = 0; c < b.length; c++) { if (b[c] == this) { b.splice(c, 1) } } this.element.removeClass("ui-droppable ui-droppable-disabled").removeData("droppable").unbind(".droppable") }, _setData: function (b, c) { if (b == "accept") { this.options.accept = c && a.isFunction(c) ? c : function (e) { return e.is(accept) } } else { a.widget.prototype._setData.apply(this, arguments) } }, _activate: function (c) { var b = a.ui.ddmanager.current; if (this.options.activeClass) { this.element.addClass(this.options.activeClass) } (b && this._trigger("activate", c, this.ui(b))) }, _deactivate: function (c) { var b = a.ui.ddmanager.current; if (this.options.activeClass) { this.element.removeClass(this.options.activeClass) } (b && this._trigger("deactivate", c, this.ui(b))) }, _over: function (c) { var b = a.ui.ddmanager.current; if (!b || (b.currentItem || b.element)[0] == this.element[0]) { return } if (this.options.accept.call(this.element[0], (b.currentItem || b.element))) { if (this.options.hoverClass) { this.element.addClass(this.options.hoverClass) } this._trigger("over", c, this.ui(b)) } }, _out: function (c) { var b = a.ui.ddmanager.current; if (!b || (b.currentItem || b.element)[0] == this.element[0]) { return } if (this.options.accept.call(this.element[0], (b.currentItem || b.element))) { if (this.options.hoverClass) { this.element.removeClass(this.options.hoverClass) } this._trigger("out", c, this.ui(b)) } }, _drop: function (c, d) { var b = d || a.ui.ddmanager.current; if (!b || (b.currentItem || b.element)[0] == this.element[0]) { return false } var e = false; this.element.find(":data(droppable)").not(".ui-draggable-dragging").each(function () { var f = a.data(this, "droppable"); if (f.options.greedy && a.ui.intersect(b, a.extend(f, { offset: f.element.offset() }), f.options.tolerance)) { e = true; return false } }); if (e) { return false } if (this.options.accept.call(this.element[0], (b.currentItem || b.element))) { if (this.options.activeClass) { this.element.removeClass(this.options.activeClass) } if (this.options.hoverClass) { this.element.removeClass(this.options.hoverClass) } this._trigger("drop", c, this.ui(b)); return this.element } return false }, ui: function (b) { return { draggable: (b.currentItem || b.element), helper: b.helper, position: b.position, absolutePosition: b.positionAbs, offset: b.positionAbs } } }); a.extend(a.ui.droppable, { version: "1.7", eventPrefix: "drop", defaults: { accept: "*", activeClass: false, addClasses: true, greedy: false, hoverClass: false, scope: "default", tolerance: "intersect" } }); a.ui.intersect = function (q, j, o) { if (!j.offset) { return false } var e = (q.positionAbs || q.position.absolute).left, d = e + q.helperProportions.width, n = (q.positionAbs || q.position.absolute).top, m = n + q.helperProportions.height; var g = j.offset.left, c = g + j.proportions.width, p = j.offset.top, k = p + j.proportions.height; switch (o) { case "fit": return (g < e && d < c && p < n && m < k); break; case "intersect": return (g < e + (q.helperProportions.width / 2) && d - (q.helperProportions.width / 2) < c && p < n + (q.helperProportions.height / 2) && m - (q.helperProportions.height / 2) < k); break; case "pointer": var h = ((q.positionAbs || q.position.absolute).left + (q.clickOffset || q.offset.click).left), i = ((q.positionAbs || q.position.absolute).top + (q.clickOffset || q.offset.click).top), f = a.ui.isOver(i, h, p, g, j.proportions.height, j.proportions.width); return f; break; case "touch": return ((n >= p && n <= k) || (m >= p && m <= k) || (n < p && m > k)) && ((e >= g && e <= c) || (d >= g && d <= c) || (e < g && d > c)); break; default: return false; break } }; a.ui.ddmanager = { current: null, droppables: { "default": [] }, prepareOffsets: function (e, g) { var b = a.ui.ddmanager.droppables[e.options.scope]; var f = g ? g.type : null; var h = (e.currentItem || e.element).find(":data(droppable)").andSelf(); droppablesLoop: for (var d = 0; d < b.length; d++) { if (b[d].options.disabled || (e && !b[d].options.accept.call(b[d].element[0], (e.currentItem || e.element)))) { continue } for (var c = 0; c < h.length; c++) { if (h[c] == b[d].element[0]) { b[d].proportions.height = 0; continue droppablesLoop } } b[d].visible = b[d].element.css("display") != "none"; if (!b[d].visible) { continue } b[d].offset = b[d].element.offset(); b[d].proportions = { width: b[d].element[0].offsetWidth, height: b[d].element[0].offsetHeight }; if (f == "mousedown") { b[d]._activate.call(b[d], g) } } }, drop: function (b, c) { var d = false; a.each(a.ui.ddmanager.droppables[b.options.scope], function () { if (!this.options) { return } if (!this.options.disabled && this.visible && a.ui.intersect(b, this, this.options.tolerance)) { d = this._drop.call(this, c) } if (!this.options.disabled && this.visible && this.options.accept.call(this.element[0], (b.currentItem || b.element))) { this.isout = 1; this.isover = 0; this._deactivate.call(this, c) } }); return d }, drag: function (b, c) { if (b.options.refreshPositions) { a.ui.ddmanager.prepareOffsets(b, c) } a.each(a.ui.ddmanager.droppables[b.options.scope], function () { if (this.options.disabled || this.greedyChild || !this.visible) { return } var e = a.ui.intersect(b, this, this.options.tolerance); var g = !e && this.isover == 1 ? "isout" : (e && this.isover == 0 ? "isover" : null); if (!g) { return } var f; if (this.options.greedy) { var d = this.element.parents(":data(droppable):eq(0)"); if (d.length) { f = a.data(d[0], "droppable"); f.greedyChild = (g == "isover" ? 1 : 0) } } if (f && g == "isover") { f.isover = 0; f.isout = 1; f._out.call(f, c) } this[g] = 1; this[g == "isout" ? "isover" : "isout"] = 0; this[g == "isover" ? "_over" : "_out"].call(this, c); if (f && g == "isout") { f.isout = 0; f.isover = 1; f._over.call(f, c) } }) } } })(jQuery); (function (c) { c.widget("ui.resizable", c.extend({}, c.ui.mouse, { _init: function () { var e = this, j = this.options; this.element.addClass("ui-resizable"); c.extend(this, { _aspectRatio: !!(j.aspectRatio), aspectRatio: j.aspectRatio, originalElement: this.element, _proportionallyResizeElements: [], _helper: j.helper || j.ghost || j.animate ? j.helper || "ui-resizable-helper" : null }); if (this.element[0].nodeName.match(/canvas|textarea|input|select|button|img/i)) { if (/relative/.test(this.element.css("position")) && c.browser.opera) { this.element.css({ position: "relative", top: "auto", left: "auto" }) } this.element.wrap(c('<div class="ui-wrapper" style="overflow: hidden;"></div>').css({ position: this.element.css("position"), width: this.element.outerWidth(), height: this.element.outerHeight(), top: this.element.css("top"), left: this.element.css("left") })); this.element = this.element.parent().data("resizable", this.element.data("resizable")); this.elementIsWrapper = true; this.element.css({ marginLeft: this.originalElement.css("marginLeft"), marginTop: this.originalElement.css("marginTop"), marginRight: this.originalElement.css("marginRight"), marginBottom: this.originalElement.css("marginBottom") }); this.originalElement.css({ marginLeft: 0, marginTop: 0, marginRight: 0, marginBottom: 0 }); this.originalResizeStyle = this.originalElement.css("resize"); this.originalElement.css("resize", "none"); this._proportionallyResizeElements.push(this.originalElement.css({ position: "static", zoom: 1, display: "block" })); this.originalElement.css({ margin: this.originalElement.css("margin") }); this._proportionallyResize() } this.handles = j.handles || (!c(".ui-resizable-handle", this.element).length ? "e,s,se" : { n: ".ui-resizable-n", e: ".ui-resizable-e", s: ".ui-resizable-s", w: ".ui-resizable-w", se: ".ui-resizable-se", sw: ".ui-resizable-sw", ne: ".ui-resizable-ne", nw: ".ui-resizable-nw" }); if (this.handles.constructor == String) { if (this.handles == "all") { this.handles = "n,e,s,w,se,sw,ne,nw" } var k = this.handles.split(","); this.handles = {}; for (var f = 0; f < k.length; f++) { var h = c.trim(k[f]), d = "ui-resizable-" + h; var g = c('<div class="ui-resizable-handle ' + d + '"></div>'); if (/sw|se|ne|nw/.test(h)) { g.css({ zIndex: ++j.zIndex }) } if ("se" == h) { g.addClass("ui-icon ui-icon-gripsmall-diagonal-se") } this.handles[h] = ".ui-resizable-" + h; this.element.append(g) } } this._renderAxis = function (p) { p = p || this.element; for (var m in this.handles) { if (this.handles[m].constructor == String) { this.handles[m] = c(this.handles[m], this.element).show() } if (this.elementIsWrapper && this.originalElement[0].nodeName.match(/textarea|input|select|button/i)) { var n = c(this.handles[m], this.element), o = 0; o = /sw|ne|nw|se|n|s/.test(m) ? n.outerHeight() : n.outerWidth(); var l = ["padding", /ne|nw|n/.test(m) ? "Top" : /se|sw|s/.test(m) ? "Bottom" : /^e$/.test(m) ? "Right" : "Left"].join(""); p.css(l, o); this._proportionallyResize() } if (!c(this.handles[m]).length) { continue } } }; this._renderAxis(this.element); this._handles = c(".ui-resizable-handle", this.element).disableSelection(); this._handles.mouseover(function () { if (!e.resizing) { if (this.className) { var i = this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i) } e.axis = i && i[1] ? i[1] : "se" } }); if (j.autoHide) { this._handles.hide(); c(this.element).addClass("ui-resizable-autohide").hover(function () { c(this).removeClass("ui-resizable-autohide"); e._handles.show() }, function () { if (!e.resizing) { c(this).addClass("ui-resizable-autohide"); e._handles.hide() } }) } this._mouseInit() }, destroy: function () { this._mouseDestroy(); var d = function (f) { c(f).removeClass("ui-resizable ui-resizable-disabled ui-resizable-resizing").removeData("resizable").unbind(".resizable").find(".ui-resizable-handle").remove() }; if (this.elementIsWrapper) { d(this.element); var e = this.element; e.parent().append(this.originalElement.css({ position: e.css("position"), width: e.outerWidth(), height: e.outerHeight(), top: e.css("top"), left: e.css("left") })).end().remove() } this.originalElement.css("resize", this.originalResizeStyle); d(this.originalElement) }, _mouseCapture: function (e) { var f = false; for (var d in this.handles) { if (c(this.handles[d])[0] == e.target) { f = true } } return this.options.disabled || !!f }, _mouseStart: function (f) { var i = this.options, e = this.element.position(), d = this.element; this.resizing = true; this.documentScroll = { top: c(document).scrollTop(), left: c(document).scrollLeft() }; if (d.is(".ui-draggable") || (/absolute/).test(d.css("position"))) { d.css({ position: "absolute", top: e.top, left: e.left }) } if (c.browser.opera && (/relative/).test(d.css("position"))) { d.css({ position: "relative", top: "auto", left: "auto" }) } this._renderProxy(); var j = b(this.helper.css("left")), g = b(this.helper.css("top")); if (i.containment) { j += c(i.containment).scrollLeft() || 0; g += c(i.containment).scrollTop() || 0 } this.offset = this.helper.offset(); this.position = { left: j, top: g }; this.size = this._helper ? { width: d.outerWidth(), height: d.outerHeight() } : { width: d.width(), height: d.height() }; this.originalSize = this._helper ? { width: d.outerWidth(), height: d.outerHeight() } : { width: d.width(), height: d.height() }; this.originalPosition = { left: j, top: g }; this.sizeDiff = { width: d.outerWidth() - d.width(), height: d.outerHeight() - d.height() }; this.originalMousePosition = { left: f.pageX, top: f.pageY }; this.aspectRatio = (typeof i.aspectRatio == "number") ? i.aspectRatio : ((this.originalSize.width / this.originalSize.height) || 1); var h = c(".ui-resizable-" + this.axis).css("cursor"); c("body").css("cursor", h == "auto" ? this.axis + "-resize" : h); d.addClass("ui-resizable-resizing"); this._propagate("start", f); return true }, _mouseDrag: function (d) { var g = this.helper, f = this.options, l = {}, p = this, i = this.originalMousePosition, m = this.axis; var q = (d.pageX - i.left) || 0, n = (d.pageY - i.top) || 0; var h = this._change[m]; if (!h) { return false } var k = h.apply(this, [d, q, n]), j = c.browser.msie && c.browser.version < 7, e = this.sizeDiff; if (this._aspectRatio || d.shiftKey) { k = this._updateRatio(k, d) } k = this._respectSize(k, d); this._propagate("resize", d); g.css({ top: this.position.top + "px", left: this.position.left + "px", width: this.size.width + "px", height: this.size.height + "px" }); if (!this._helper && this._proportionallyResizeElements.length) { this._proportionallyResize() } this._updateCache(k); this._trigger("resize", d, this.ui()); return false }, _mouseStop: function (g) { this.resizing = false; var h = this.options, l = this; if (this._helper) { var f = this._proportionallyResizeElements, d = f.length && (/textarea/i).test(f[0].nodeName), e = d && c.ui.hasScroll(f[0], "left") ? 0 : l.sizeDiff.height, j = d ? 0 : l.sizeDiff.width; var m = { width: (l.size.width - j), height: (l.size.height - e) }, i = (parseInt(l.element.css("left"), 10) + (l.position.left - l.originalPosition.left)) || null, k = (parseInt(l.element.css("top"), 10) + (l.position.top - l.originalPosition.top)) || null; if (!h.animate) { this.element.css(c.extend(m, { top: k, left: i })) } l.helper.height(l.size.height); l.helper.width(l.size.width); if (this._helper && !h.animate) { this._proportionallyResize() } } c("body").css("cursor", "auto"); this.element.removeClass("ui-resizable-resizing"); this._propagate("stop", g); if (this._helper) { this.helper.remove() } return false }, _updateCache: function (d) { var e = this.options; this.offset = this.helper.offset(); if (a(d.left)) { this.position.left = d.left } if (a(d.top)) { this.position.top = d.top } if (a(d.height)) { this.size.height = d.height } if (a(d.width)) { this.size.width = d.width } }, _updateRatio: function (g, f) { var h = this.options, i = this.position, e = this.size, d = this.axis; if (g.height) { g.width = (e.height * this.aspectRatio) } else { if (g.width) { g.height = (e.width / this.aspectRatio) } } if (d == "sw") { g.left = i.left + (e.width - g.width); g.top = null } if (d == "nw") { g.top = i.top + (e.height - g.height); g.left = i.left + (e.width - g.width) } return g }, _respectSize: function (k, f) { var i = this.helper, h = this.options, q = this._aspectRatio || f.shiftKey, p = this.axis, s = a(k.width) && h.maxWidth && (h.maxWidth < k.width), l = a(k.height) && h.maxHeight && (h.maxHeight < k.height), g = a(k.width) && h.minWidth && (h.minWidth > k.width), r = a(k.height) && h.minHeight && (h.minHeight > k.height); if (g) { k.width = h.minWidth } if (r) { k.height = h.minHeight } if (s) { k.width = h.maxWidth } if (l) { k.height = h.maxHeight } var e = this.originalPosition.left + this.originalSize.width, n = this.position.top + this.size.height; var j = /sw|nw|w/.test(p), d = /nw|ne|n/.test(p); if (g && j) { k.left = e - h.minWidth } if (s && j) { k.left = e - h.maxWidth } if (r && d) { k.top = n - h.minHeight } if (l && d) { k.top = n - h.maxHeight } var m = !k.width && !k.height; if (m && !k.left && k.top) { k.top = null } else { if (m && !k.top && k.left) { k.left = null } } return k }, _proportionallyResize: function () { var j = this.options; if (!this._proportionallyResizeElements.length) { return } var f = this.helper || this.element; for (var e = 0; e < this._proportionallyResizeElements.length; e++) { var g = this._proportionallyResizeElements[e]; if (!this.borderDif) { var d = [g.css("borderTopWidth"), g.css("borderRightWidth"), g.css("borderBottomWidth"), g.css("borderLeftWidth")], h = [g.css("paddingTop"), g.css("paddingRight"), g.css("paddingBottom"), g.css("paddingLeft")]; this.borderDif = c.map(d, function (k, m) { var l = parseInt(k, 10) || 0, n = parseInt(h[m], 10) || 0; return l + n }) } if (c.browser.msie && !(!(c(f).is(":hidden") || c(f).parents(":hidden").length))) { continue } g.css({ height: (f.height() - this.borderDif[0] - this.borderDif[2]) || 0, width: (f.width() - this.borderDif[1] - this.borderDif[3]) || 0 }) } }, _renderProxy: function () { var e = this.element, h = this.options; this.elementOffset = e.offset(); if (this._helper) { this.helper = this.helper || c('<div style="overflow:hidden;"></div>'); var d = c.browser.msie && c.browser.version < 7, f = (d ? 1 : 0), g = (d ? 2 : -1); this.helper.addClass(this._helper).css({ width: this.element.outerWidth() + g, height: this.element.outerHeight() + g, position: "absolute", left: this.elementOffset.left - f + "px", top: this.elementOffset.top - f + "px", zIndex: ++h.zIndex }); this.helper.appendTo("body").disableSelection() } else { this.helper = this.element } }, _change: { e: function (f, e, d) { return { width: this.originalSize.width + e } }, w: function (g, e, d) { var i = this.options, f = this.originalSize, h = this.originalPosition; return { left: h.left + e, width: f.width - e } }, n: function (g, e, d) { var i = this.options, f = this.originalSize, h = this.originalPosition; return { top: h.top + d, height: f.height - d } }, s: function (f, e, d) { return { height: this.originalSize.height + d } }, se: function (f, e, d) { return c.extend(this._change.s.apply(this, arguments), this._change.e.apply(this, [f, e, d])) }, sw: function (f, e, d) { return c.extend(this._change.s.apply(this, arguments), this._change.w.apply(this, [f, e, d])) }, ne: function (f, e, d) { return c.extend(this._change.n.apply(this, arguments), this._change.e.apply(this, [f, e, d])) }, nw: function (f, e, d) { return c.extend(this._change.n.apply(this, arguments), this._change.w.apply(this, [f, e, d])) } }, _propagate: function (e, d) { c.ui.plugin.call(this, e, [d, this.ui()]); (e != "resize" && this._trigger(e, d, this.ui())) }, plugins: {}, ui: function () { return { originalElement: this.originalElement, element: this.element, helper: this.helper, position: this.position, size: this.size, originalSize: this.originalSize, originalPosition: this.originalPosition } } })); c.extend(c.ui.resizable, { version: "1.7", eventPrefix: "resize", defaults: { alsoResize: false, animate: false, animateDuration: "slow", animateEasing: "swing", aspectRatio: false, autoHide: false, cancel: ":input,option", containment: false, delay: 0, distance: 1, ghost: false, grid: false, handles: "e,s,se", helper: false, maxHeight: null, maxWidth: null, minHeight: 10, minWidth: 10, zIndex: 1000 } }); c.ui.plugin.add("resizable", "alsoResize", { start: function (e, f) { var d = c(this).data("resizable"), g = d.options; _store = function (h) { c(h).each(function () { c(this).data("resizable-alsoresize", { width: parseInt(c(this).width(), 10), height: parseInt(c(this).height(), 10), left: parseInt(c(this).css("left"), 10), top: parseInt(c(this).css("top"), 10) }) }) }; if (typeof (g.alsoResize) == "object" && !g.alsoResize.parentNode) { if (g.alsoResize.length) { g.alsoResize = g.alsoResize[0]; _store(g.alsoResize) } else { c.each(g.alsoResize, function (h, i) { _store(h) }) } } else { _store(g.alsoResize) } }, resize: function (f, h) { var e = c(this).data("resizable"), i = e.options, g = e.originalSize, k = e.originalPosition; var j = { height: (e.size.height - g.height) || 0, width: (e.size.width - g.width) || 0, top: (e.position.top - k.top) || 0, left: (e.position.left - k.left) || 0 }, d = function (l, m) { c(l).each(function () { var p = c(this), q = c(this).data("resizable-alsoresize"), o = {}, n = m && m.length ? m : ["width", "height", "top", "left"]; c.each(n || ["width", "height", "top", "left"], function (r, u) { var s = (q[u] || 0) + (j[u] || 0); if (s && s >= 0) { o[u] = s || null } }); if (/relative/.test(p.css("position")) && c.browser.opera) { e._revertToRelativePosition = true; p.css({ position: "absolute", top: "auto", left: "auto" }) } p.css(o) }) }; if (typeof (i.alsoResize) == "object" && !i.alsoResize.nodeType) { c.each(i.alsoResize, function (l, m) { d(l, m) }) } else { d(i.alsoResize) } }, stop: function (e, f) { var d = c(this).data("resizable"); if (d._revertToRelativePosition && c.browser.opera) { d._revertToRelativePosition = false; el.css({ position: "relative" }) } c(this).removeData("resizable-alsoresize-start") } }); c.ui.plugin.add("resizable", "animate", { stop: function (h, m) { var n = c(this).data("resizable"), i = n.options; var g = n._proportionallyResizeElements, d = g.length && (/textarea/i).test(g[0].nodeName), e = d && c.ui.hasScroll(g[0], "left") ? 0 : n.sizeDiff.height, k = d ? 0 : n.sizeDiff.width; var f = { width: (n.size.width - k), height: (n.size.height - e) }, j = (parseInt(n.element.css("left"), 10) + (n.position.left - n.originalPosition.left)) || null, l = (parseInt(n.element.css("top"), 10) + (n.position.top - n.originalPosition.top)) || null; n.element.animate(c.extend(f, l && j ? { top: l, left: j } : {}), { duration: i.animateDuration, easing: i.animateEasing, step: function () { var o = { width: parseInt(n.element.css("width"), 10), height: parseInt(n.element.css("height"), 10), top: parseInt(n.element.css("top"), 10), left: parseInt(n.element.css("left"), 10) }; if (g && g.length) { c(g[0]).css({ width: o.width, height: o.height }) } n._updateCache(o); n._propagate("resize", h) } }) } }); c.ui.plugin.add("resizable", "containment", { start: function (e, q) { var s = c(this).data("resizable"), i = s.options, k = s.element; var f = i.containment, j = (f instanceof c) ? f.get(0) : (/parent/.test(f)) ? k.parent().get(0) : f; if (!j) { return } s.containerElement = c(j); if (/document/.test(f) || f == document) { s.containerOffset = { left: 0, top: 0 }; s.containerPosition = { left: 0, top: 0 }; s.parentData = { element: c(document), left: 0, top: 0, width: c(document).width(), height: c(document).height() || document.body.parentNode.scrollHeight } } else { var m = c(j), h = []; c(["Top", "Right", "Left", "Bottom"]).each(function (p, o) { h[p] = b(m.css("padding" + o)) }); s.containerOffset = m.offset(); s.containerPosition = m.position(); s.containerSize = { height: (m.innerHeight() - h[3]), width: (m.innerWidth() - h[1]) }; var n = s.containerOffset, d = s.containerSize.height, l = s.containerSize.width, g = (c.ui.hasScroll(j, "left") ? j.scrollWidth : l), r = (c.ui.hasScroll(j) ? j.scrollHeight : d); s.parentData = { element: j, left: n.left, top: n.top, width: g, height: r } } }, resize: function (f, p) { var s = c(this).data("resizable"), h = s.options, e = s.containerSize, n = s.containerOffset, l = s.size, m = s.position, q = h._aspectRatio || f.shiftKey, d = { top: 0, left: 0 }, g = s.containerElement; if (g[0] != document && (/static/).test(g.css("position"))) { d = n } if (m.left < (s._helper ? n.left : 0)) { s.size.width = s.size.width + (s._helper ? (s.position.left - n.left) : (s.position.left - d.left)); if (q) { s.size.height = s.size.width / h.aspectRatio } s.position.left = h.helper ? n.left : 0 } if (m.top < (s._helper ? n.top : 0)) { s.size.height = s.size.height + (s._helper ? (s.position.top - n.top) : s.position.top); if (q) { s.size.width = s.size.height * h.aspectRatio } s.position.top = s._helper ? n.top : 0 } s.offset.left = s.parentData.left + s.position.left; s.offset.top = s.parentData.top + s.position.top; var k = Math.abs((s._helper ? s.offset.left - d.left : (s.offset.left - d.left)) + s.sizeDiff.width), r = Math.abs((s._helper ? s.offset.top - d.top : (s.offset.top - n.top)) + s.sizeDiff.height); var j = s.containerElement.get(0) == s.element.parent().get(0), i = /relative|absolute/.test(s.containerElement.css("position")); if (j && i) { k -= s.parentData.left } if (k + s.size.width >= s.parentData.width) { s.size.width = s.parentData.width - k; if (q) { s.size.height = s.size.width / h.aspectRatio } } if (r + s.size.height >= s.parentData.height) { s.size.height = s.parentData.height - r; if (q) { s.size.width = s.size.height * h.aspectRatio } } }, stop: function (e, m) { var p = c(this).data("resizable"), f = p.options, k = p.position, l = p.containerOffset, d = p.containerPosition, g = p.containerElement; var i = c(p.helper), q = i.offset(), n = i.outerWidth() - p.sizeDiff.width, j = i.outerHeight() - p.sizeDiff.height; if (p._helper && !f.animate && (/relative/).test(g.css("position"))) { c(this).css({ left: q.left - d.left - l.left, width: n, height: j }) } if (p._helper && !f.animate && (/static/).test(g.css("position"))) { c(this).css({ left: q.left - d.left - l.left, width: n, height: j }) } } }); c.ui.plugin.add("resizable", "ghost", { start: function (f, g) { var d = c(this).data("resizable"), h = d.options, e = d.size; d.ghost = d.originalElement.clone(); d.ghost.css({ opacity: 0.25, display: "block", position: "relative", height: e.height, width: e.width, margin: 0, left: 0, top: 0 }).addClass("ui-resizable-ghost").addClass(typeof h.ghost == "string" ? h.ghost : ""); d.ghost.appendTo(d.helper) }, resize: function (e, f) { var d = c(this).data("resizable"), g = d.options; if (d.ghost) { d.ghost.css({ position: "relative", height: d.size.height, width: d.size.width }) } }, stop: function (e, f) { var d = c(this).data("resizable"), g = d.options; if (d.ghost && d.helper) { d.helper.get(0).removeChild(d.ghost.get(0)) } } }); c.ui.plugin.add("resizable", "grid", { resize: function (d, l) { var n = c(this).data("resizable"), g = n.options, j = n.size, h = n.originalSize, i = n.originalPosition, m = n.axis, k = g._aspectRatio || d.shiftKey; g.grid = typeof g.grid == "number" ? [g.grid, g.grid] : g.grid; var f = Math.round((j.width - h.width) / (g.grid[0] || 1)) * (g.grid[0] || 1), e = Math.round((j.height - h.height) / (g.grid[1] || 1)) * (g.grid[1] || 1); if (/^(se|s|e)$/.test(m)) { n.size.width = h.width + f; n.size.height = h.height + e } else { if (/^(ne)$/.test(m)) { n.size.width = h.width + f; n.size.height = h.height + e; n.position.top = i.top - e } else { if (/^(sw)$/.test(m)) { n.size.width = h.width + f; n.size.height = h.height + e; n.position.left = i.left - f } else { n.size.width = h.width + f; n.size.height = h.height + e; n.position.top = i.top - e; n.position.left = i.left - f } } } } }); var b = function (d) { return parseInt(d, 10) || 0 }; var a = function (d) { return !isNaN(parseInt(d, 10)) } })(jQuery); (function (a) { a.widget("ui.selectable", a.extend({}, a.ui.mouse, { _init: function () { var b = this; this.element.addClass("ui-selectable"); this.dragged = false; var c; this.refresh = function () { c = a(b.options.filter, b.element[0]); c.each(function () { var d = a(this); var e = d.offset(); a.data(this, "selectable-item", { element: this, $element: d, left: e.left, top: e.top, right: e.left + d.outerWidth(), bottom: e.top + d.outerHeight(), startselected: false, selected: d.hasClass("ui-selected"), selecting: d.hasClass("ui-selecting"), unselecting: d.hasClass("ui-unselecting") }) }) }; this.refresh(); this.selectees = c.addClass("ui-selectee"); this._mouseInit(); this.helper = a(document.createElement("div")).css({ border: "1px dotted black" }).addClass("ui-selectable-helper") }, destroy: function () { this.element.removeClass("ui-selectable ui-selectable-disabled").removeData("selectable").unbind(".selectable"); this._mouseDestroy() }, _mouseStart: function (d) { var b = this; this.opos = [d.pageX, d.pageY]; if (this.options.disabled) { return } var c = this.options; this.selectees = a(c.filter, this.element[0]); this._trigger("start", d); a("body").append(this.helper); this.helper.css({ "z-index": 100, position: "absolute", left: d.clientX, top: d.clientY, width: 0, height: 0 }); if (c.autoRefresh) { this.refresh() } this.selectees.filter(".ui-selected").each(function () { var e = a.data(this, "selectable-item"); e.startselected = true; if (!d.metaKey) { e.$element.removeClass("ui-selected"); e.selected = false; e.$element.addClass("ui-unselecting"); e.unselecting = true; b._trigger("unselecting", d, { unselecting: e.element }) } }); a(d.target).parents().andSelf().each(function () { var e = a.data(this, "selectable-item"); if (e) { e.$element.removeClass("ui-unselecting").addClass("ui-selecting"); e.unselecting = false; e.selecting = true; e.selected = true; b._trigger("selecting", d, { selecting: e.element }); return false } }) }, _mouseDrag: function (i) { var c = this; this.dragged = true; if (this.options.disabled) { return } var e = this.options; var d = this.opos[0], h = this.opos[1], b = i.pageX, g = i.pageY; if (d > b) { var f = b; b = d; d = f } if (h > g) { var f = g; g = h; h = f } this.helper.css({ left: d, top: h, width: b - d, height: g - h }); this.selectees.each(function () { var j = a.data(this, "selectable-item"); if (!j || j.element == c.element[0]) { return } var k = false; if (e.tolerance == "touch") { k = (!(j.left > b || j.right < d || j.top > g || j.bottom < h)) } else { if (e.tolerance == "fit") { k = (j.left > d && j.right < b && j.top > h && j.bottom < g) } } if (k) { if (j.selected) { j.$element.removeClass("ui-selected"); j.selected = false } if (j.unselecting) { j.$element.removeClass("ui-unselecting"); j.unselecting = false } if (!j.selecting) { j.$element.addClass("ui-selecting"); j.selecting = true; c._trigger("selecting", i, { selecting: j.element }) } } else { if (j.selecting) { if (i.metaKey && j.startselected) { j.$element.removeClass("ui-selecting"); j.selecting = false; j.$element.addClass("ui-selected"); j.selected = true } else { j.$element.removeClass("ui-selecting"); j.selecting = false; if (j.startselected) { j.$element.addClass("ui-unselecting"); j.unselecting = true } c._trigger("unselecting", i, { unselecting: j.element }) } } if (j.selected) { if (!i.metaKey && !j.startselected) { j.$element.removeClass("ui-selected"); j.selected = false; j.$element.addClass("ui-unselecting"); j.unselecting = true; c._trigger("unselecting", i, { unselecting: j.element }) } } } }); return false }, _mouseStop: function (d) { var b = this; this.dragged = false; var c = this.options; a(".ui-unselecting", this.element[0]).each(function () { var e = a.data(this, "selectable-item"); e.$element.removeClass("ui-unselecting"); e.unselecting = false; e.startselected = false; b._trigger("unselected", d, { unselected: e.element }) }); a(".ui-selecting", this.element[0]).each(function () { var e = a.data(this, "selectable-item"); e.$element.removeClass("ui-selecting").addClass("ui-selected"); e.selecting = false; e.selected = true; e.startselected = true; b._trigger("selected", d, { selected: e.element }) }); this._trigger("stop", d); this.helper.remove(); return false } })); a.extend(a.ui.selectable, { version: "1.7", defaults: { appendTo: "body", autoRefresh: true, cancel: ":input,option", delay: 0, distance: 0, filter: "*", tolerance: "touch" } }) })(jQuery); (function (a) { a.widget("ui.sortable", a.extend({}, a.ui.mouse, { _init: function () { var b = this.options; this.containerCache = {}; this.element.addClass("ui-sortable"); this.refresh(); this.floating = this.items.length ? (/left|right/).test(this.items[0].item.css("float")) : false; this.offset = this.element.offset(); this._mouseInit() }, destroy: function () { this.element.removeClass("ui-sortable ui-sortable-disabled").removeData("sortable").unbind(".sortable"); this._mouseDestroy(); for (var b = this.items.length - 1; b >= 0; b--) { this.items[b].item.removeData("sortable-item") } }, _mouseCapture: function (e, f) { if (this.reverting) { return false } if (this.options.disabled || this.options.type == "static") { return false } this._refreshItems(e); var d = null, c = this, b = a(e.target).parents().each(function () { if (a.data(this, "sortable-item") == c) { d = a(this); return false } }); if (a.data(e.target, "sortable-item") == c) { d = a(e.target) } if (!d) { return false } if (this.options.handle && !f) { var g = false; a(this.options.handle, d).find("*").andSelf().each(function () { if (this == e.target) { g = true } }); if (!g) { return false } } this.currentItem = d; this._removeCurrentsFromItems(); return true }, _mouseStart: function (e, f, b) { var g = this.options, c = this; this.currentContainer = this; this.refreshPositions(); this.helper = this._createHelper(e); this._cacheHelperProportions(); this._cacheMargins(); this.scrollParent = this.helper.scrollParent(); this.offset = this.currentItem.offset(); this.offset = { top: this.offset.top - this.margins.top, left: this.offset.left - this.margins.left }; this.helper.css("position", "absolute"); this.cssPosition = this.helper.css("position"); a.extend(this.offset, { click: { left: e.pageX - this.offset.left, top: e.pageY - this.offset.top }, parent: this._getParentOffset(), relative: this._getRelativeOffset() }); this.originalPosition = this._generatePosition(e); this.originalPageX = e.pageX; this.originalPageY = e.pageY; if (g.cursorAt) { this._adjustOffsetFromHelper(g.cursorAt) } this.domPosition = { prev: this.currentItem.prev()[0], parent: this.currentItem.parent()[0] }; if (this.helper[0] != this.currentItem[0]) { this.currentItem.hide() } this._createPlaceholder(); if (g.containment) { this._setContainment() } if (g.cursor) { if (a("body").css("cursor")) { this._storedCursor = a("body").css("cursor") } a("body").css("cursor", g.cursor) } if (g.opacity) { if (this.helper.css("opacity")) { this._storedOpacity = this.helper.css("opacity") } this.helper.css("opacity", g.opacity) } if (g.zIndex) { if (this.helper.css("zIndex")) { this._storedZIndex = this.helper.css("zIndex") } this.helper.css("zIndex", g.zIndex) } if (this.scrollParent[0] != document && this.scrollParent[0].tagName != "HTML") { this.overflowOffset = this.scrollParent.offset() } this._trigger("start", e, this._uiHash()); if (!this._preserveHelperProportions) { this._cacheHelperProportions() } if (!b) { for (var d = this.containers.length - 1; d >= 0; d--) { this.containers[d]._trigger("activate", e, c._uiHash(this)) } } if (a.ui.ddmanager) { a.ui.ddmanager.current = this } if (a.ui.ddmanager && !g.dropBehaviour) { a.ui.ddmanager.prepareOffsets(this, e) } this.dragging = true; this.helper.addClass("ui-sortable-helper"); this._mouseDrag(e); return true }, _mouseDrag: function (f) { this.position = this._generatePosition(f); this.positionAbs = this._convertPositionTo("absolute"); if (!this.lastPositionAbs) { this.lastPositionAbs = this.positionAbs } if (this.options.scroll) { var g = this.options, b = false; if (this.scrollParent[0] != document && this.scrollParent[0].tagName != "HTML") { if ((this.overflowOffset.top + this.scrollParent[0].offsetHeight) - f.pageY < g.scrollSensitivity) { this.scrollParent[0].scrollTop = b = this.scrollParent[0].scrollTop + g.scrollSpeed } else { if (f.pageY - this.overflowOffset.top < g.scrollSensitivity) { this.scrollParent[0].scrollTop = b = this.scrollParent[0].scrollTop - g.scrollSpeed } } if ((this.overflowOffset.left + this.scrollParent[0].offsetWidth) - f.pageX < g.scrollSensitivity) { this.scrollParent[0].scrollLeft = b = this.scrollParent[0].scrollLeft + g.scrollSpeed } else { if (f.pageX - this.overflowOffset.left < g.scrollSensitivity) { this.scrollParent[0].scrollLeft = b = this.scrollParent[0].scrollLeft - g.scrollSpeed } } } else { if (f.pageY - a(document).scrollTop() < g.scrollSensitivity) { b = a(document).scrollTop(a(document).scrollTop() - g.scrollSpeed) } else { if (a(window).height() - (f.pageY - a(document).scrollTop()) < g.scrollSensitivity) { b = a(document).scrollTop(a(document).scrollTop() + g.scrollSpeed) } } if (f.pageX - a(document).scrollLeft() < g.scrollSensitivity) { b = a(document).scrollLeft(a(document).scrollLeft() - g.scrollSpeed) } else { if (a(window).width() - (f.pageX - a(document).scrollLeft()) < g.scrollSensitivity) { b = a(document).scrollLeft(a(document).scrollLeft() + g.scrollSpeed) } } } if (b !== false && a.ui.ddmanager && !g.dropBehaviour) { a.ui.ddmanager.prepareOffsets(this, f) } } this.positionAbs = this._convertPositionTo("absolute"); if (!this.options.axis || this.options.axis != "y") { this.helper[0].style.left = this.position.left + "px" } if (!this.options.axis || this.options.axis != "x") { this.helper[0].style.top = this.position.top + "px" } for (var d = this.items.length - 1; d >= 0; d--) { var e = this.items[d], c = e.item[0], h = this._intersectsWithPointer(e); if (!h) { continue } if (c != this.currentItem[0] && this.placeholder[h == 1 ? "next" : "prev"]()[0] != c && !a.ui.contains(this.placeholder[0], c) && (this.options.type == "semi-dynamic" ? !a.ui.contains(this.element[0], c) : true)) { this.direction = h == 1 ? "down" : "up"; if (this.options.tolerance == "pointer" || this._intersectsWithSides(e)) { this._rearrange(f, e) } else { break } this._trigger("change", f, this._uiHash()); break } } this._contactContainers(f); if (a.ui.ddmanager) { a.ui.ddmanager.drag(this, f) } this._trigger("sort", f, this._uiHash()); this.lastPositionAbs = this.positionAbs; return false }, _mouseStop: function (c, d) { if (!c) { return } if (a.ui.ddmanager && !this.options.dropBehaviour) { a.ui.ddmanager.drop(this, c) } if (this.options.revert) { var b = this; var e = b.placeholder.offset(); b.reverting = true; a(this.helper).animate({ left: e.left - this.offset.parent.left - b.margins.left + (this.offsetParent[0] == document.body ? 0 : this.offsetParent[0].scrollLeft), top: e.top - this.offset.parent.top - b.margins.top + (this.offsetParent[0] == document.body ? 0 : this.offsetParent[0].scrollTop) }, parseInt(this.options.revert, 10) || 500, function () { b._clear(c) }) } else { this._clear(c, d) } return false }, cancel: function () { var b = this; if (this.dragging) { this._mouseUp(); if (this.options.helper == "original") { this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper") } else { this.currentItem.show() } for (var c = this.containers.length - 1; c >= 0; c--) { this.containers[c]._trigger("deactivate", null, b._uiHash(this)); if (this.containers[c].containerCache.over) { this.containers[c]._trigger("out", null, b._uiHash(this)); this.containers[c].containerCache.over = 0 } } } if (this.placeholder[0].parentNode) { this.placeholder[0].parentNode.removeChild(this.placeholder[0]) } if (this.options.helper != "original" && this.helper && this.helper[0].parentNode) { this.helper.remove() } a.extend(this, { helper: null, dragging: false, reverting: false, _noFinalSort: null }); if (this.domPosition.prev) { a(this.domPosition.prev).after(this.currentItem) } else { a(this.domPosition.parent).prepend(this.currentItem) } return true }, serialize: function (d) { var b = this._getItemsAsjQuery(d && d.connected); var c = []; d = d || {}; a(b).each(function () { var e = (a(d.item || this).attr(d.attribute || "id") || "").match(d.expression || (/(.+)[-=_](.+)/)); if (e) { c.push((d.key || e[1] + "[]") + "=" + (d.key && d.expression ? e[1] : e[2])) } }); return c.join("&") }, toArray: function (d) { var b = this._getItemsAsjQuery(d && d.connected); var c = []; d = d || {}; b.each(function () { c.push(a(d.item || this).attr(d.attribute || "id") || "") }); return c }, _intersectsWith: function (m) { var e = this.positionAbs.left, d = e + this.helperProportions.width, k = this.positionAbs.top, j = k + this.helperProportions.height; var f = m.left, c = f + m.width, n = m.top, i = n + m.height; var o = this.offset.click.top, h = this.offset.click.left; var g = (k + o) > n && (k + o) < i && (e + h) > f && (e + h) < c; if (this.options.tolerance == "pointer" || this.options.forcePointerForContainers || (this.options.tolerance != "pointer" && this.helperProportions[this.floating ? "width" : "height"] > m[this.floating ? "width" : "height"])) { return g } else { return (f < e + (this.helperProportions.width / 2) && d - (this.helperProportions.width / 2) < c && n < k + (this.helperProportions.height / 2) && j - (this.helperProportions.height / 2) < i) } }, _intersectsWithPointer: function (d) { var e = a.ui.isOverAxis(this.positionAbs.top + this.offset.click.top, d.top, d.height), c = a.ui.isOverAxis(this.positionAbs.left + this.offset.click.left, d.left, d.width), g = e && c, b = this._getDragVerticalDirection(), f = this._getDragHorizontalDirection(); if (!g) { return false } return this.floating ? (((f && f == "right") || b == "down") ? 2 : 1) : (b && (b == "down" ? 2 : 1)) }, _intersectsWithSides: function (e) { var c = a.ui.isOverAxis(this.positionAbs.top + this.offset.click.top, e.top + (e.height / 2), e.height), d = a.ui.isOverAxis(this.positionAbs.left + this.offset.click.left, e.left + (e.width / 2), e.width), b = this._getDragVerticalDirection(), f = this._getDragHorizontalDirection(); if (this.floating && f) { return ((f == "right" && d) || (f == "left" && !d)) } else { return b && ((b == "down" && c) || (b == "up" && !c)) } }, _getDragVerticalDirection: function () { var b = this.positionAbs.top - this.lastPositionAbs.top; return b != 0 && (b > 0 ? "down" : "up") }, _getDragHorizontalDirection: function () { var b = this.positionAbs.left - this.lastPositionAbs.left; return b != 0 && (b > 0 ? "right" : "left") }, refresh: function (b) { this._refreshItems(b); this.refreshPositions() }, _connectWith: function () { var b = this.options; return b.connectWith.constructor == String ? [b.connectWith] : b.connectWith }, _getItemsAsjQuery: function (b) { var l = this; var g = []; var e = []; var h = this._connectWith(); if (h && b) { for (var d = h.length - 1; d >= 0; d--) { var k = a(h[d]); for (var c = k.length - 1; c >= 0; c--) { var f = a.data(k[c], "sortable"); if (f && f != this && !f.options.disabled) { e.push([a.isFunction(f.options.items) ? f.options.items.call(f.element) : a(f.options.items, f.element).not(".ui-sortable-helper"), f]) } } } } e.push([a.isFunction(this.options.items) ? this.options.items.call(this.element, null, { options: this.options, item: this.currentItem }) : a(this.options.items, this.element).not(".ui-sortable-helper"), this]); for (var d = e.length - 1; d >= 0; d--) { e[d][0].each(function () { g.push(this) }) } return a(g) }, _removeCurrentsFromItems: function () { var d = this.currentItem.find(":data(sortable-item)"); for (var c = 0; c < this.items.length; c++) { for (var b = 0; b < d.length; b++) { if (d[b] == this.items[c].item[0]) { this.items.splice(c, 1) } } } }, _refreshItems: function (b) { this.items = []; this.containers = [this]; var h = this.items; var p = this; var f = [[a.isFunction(this.options.items) ? this.options.items.call(this.element[0], b, { item: this.currentItem }) : a(this.options.items, this.element), this]]; var l = this._connectWith(); if (l) { for (var e = l.length - 1; e >= 0; e--) { var m = a(l[e]); for (var d = m.length - 1; d >= 0; d--) { var g = a.data(m[d], "sortable"); if (g && g != this && !g.options.disabled) { f.push([a.isFunction(g.options.items) ? g.options.items.call(g.element[0], b, { item: this.currentItem }) : a(g.options.items, g.element), g]); this.containers.push(g) } } } } for (var e = f.length - 1; e >= 0; e--) { var k = f[e][1]; var c = f[e][0]; for (var d = 0, n = c.length; d < n; d++) { var o = a(c[d]); o.data("sortable-item", k); h.push({ item: o, instance: k, width: 0, height: 0, left: 0, top: 0 }) } } }, refreshPositions: function (b) { if (this.offsetParent && this.helper) { this.offset.parent = this._getParentOffset() } for (var d = this.items.length - 1; d >= 0; d--) { var e = this.items[d]; if (e.instance != this.currentContainer && this.currentContainer && e.item[0] != this.currentItem[0]) { continue } var c = this.options.toleranceElement ? a(this.options.toleranceElement, e.item) : e.item; if (!b) { e.width = c.outerWidth(); e.height = c.outerHeight() } var f = c.offset(); e.left = f.left; e.top = f.top } if (this.options.custom && this.options.custom.refreshContainers) { this.options.custom.refreshContainers.call(this) } else { for (var d = this.containers.length - 1; d >= 0; d--) { var f = this.containers[d].element.offset(); this.containers[d].containerCache.left = f.left; this.containers[d].containerCache.top = f.top; this.containers[d].containerCache.width = this.containers[d].element.outerWidth(); this.containers[d].containerCache.height = this.containers[d].element.outerHeight() } } }, _createPlaceholder: function (d) { var b = d || this, e = b.options; if (!e.placeholder || e.placeholder.constructor == String) { var c = e.placeholder; e.placeholder = { element: function () { var f = a(document.createElement(b.currentItem[0].nodeName)).addClass(c || b.currentItem[0].className + " ui-sortable-placeholder").removeClass("ui-sortable-helper")[0]; if (!c) { f.style.visibility = "hidden" } return f }, update: function (f, g) { if (c && !e.forcePlaceholderSize) { return } if (!g.height()) { g.height(b.currentItem.innerHeight() - parseInt(b.currentItem.css("paddingTop") || 0, 10) - parseInt(b.currentItem.css("paddingBottom") || 0, 10)) } if (!g.width()) { g.width(b.currentItem.innerWidth() - parseInt(b.currentItem.css("paddingLeft") || 0, 10) - parseInt(b.currentItem.css("paddingRight") || 0, 10)) } } } } b.placeholder = a(e.placeholder.element.call(b.element, b.currentItem)); b.currentItem.after(b.placeholder); e.placeholder.update(b, b.placeholder) }, _contactContainers: function (d) { for (var c = this.containers.length - 1; c >= 0; c--) { if (this._intersectsWith(this.containers[c].containerCache)) { if (!this.containers[c].containerCache.over) { if (this.currentContainer != this.containers[c]) { var h = 10000; var g = null; var e = this.positionAbs[this.containers[c].floating ? "left" : "top"]; for (var b = this.items.length - 1; b >= 0; b--) { if (!a.ui.contains(this.containers[c].element[0], this.items[b].item[0])) { continue } var f = this.items[b][this.containers[c].floating ? "left" : "top"]; if (Math.abs(f - e) < h) { h = Math.abs(f - e); g = this.items[b] } } if (!g && !this.options.dropOnEmpty) { continue } this.currentContainer = this.containers[c]; g ? this._rearrange(d, g, null, true) : this._rearrange(d, null, this.containers[c].element, true); this._trigger("change", d, this._uiHash()); this.containers[c]._trigger("change", d, this._uiHash(this)); this.options.placeholder.update(this.currentContainer, this.placeholder) } this.containers[c]._trigger("over", d, this._uiHash(this)); this.containers[c].containerCache.over = 1 } } else { if (this.containers[c].containerCache.over) { this.containers[c]._trigger("out", d, this._uiHash(this)); this.containers[c].containerCache.over = 0 } } } }, _createHelper: function (c) { var d = this.options; var b = a.isFunction(d.helper) ? a(d.helper.apply(this.element[0], [c, this.currentItem])) : (d.helper == "clone" ? this.currentItem.clone() : this.currentItem); if (!b.parents("body").length) { a(d.appendTo != "parent" ? d.appendTo : this.currentItem[0].parentNode)[0].appendChild(b[0]) } if (b[0] == this.currentItem[0]) { this._storedCSS = { width: this.currentItem[0].style.width, height: this.currentItem[0].style.height, position: this.currentItem.css("position"), top: this.currentItem.css("top"), left: this.currentItem.css("left") } } if (b[0].style.width == "" || d.forceHelperSize) { b.width(this.currentItem.width()) } if (b[0].style.height == "" || d.forceHelperSize) { b.height(this.currentItem.height()) } return b }, _adjustOffsetFromHelper: function (b) { if (b.left != undefined) { this.offset.click.left = b.left + this.margins.left } if (b.right != undefined) { this.offset.click.left = this.helperProportions.width - b.right + this.margins.left } if (b.top != undefined) { this.offset.click.top = b.top + this.margins.top } if (b.bottom != undefined) { this.offset.click.top = this.helperProportions.height - b.bottom + this.margins.top } }, _getParentOffset: function () { this.offsetParent = this.helper.offsetParent(); var b = this.offsetParent.offset(); if (this.cssPosition == "absolute" && this.scrollParent[0] != document && a.ui.contains(this.scrollParent[0], this.offsetParent[0])) { b.left += this.scrollParent.scrollLeft(); b.top += this.scrollParent.scrollTop() } if ((this.offsetParent[0] == document.body) || (this.offsetParent[0].tagName && this.offsetParent[0].tagName.toLowerCase() == "html" && a.browser.msie)) { b = { top: 0, left: 0 } } return { top: b.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0), left: b.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0) } }, _getRelativeOffset: function () { if (this.cssPosition == "relative") { var b = this.currentItem.position(); return { top: b.top - (parseInt(this.helper.css("top"), 10) || 0) + this.scrollParent.scrollTop(), left: b.left - (parseInt(this.helper.css("left"), 10) || 0) + this.scrollParent.scrollLeft() } } else { return { top: 0, left: 0 } } }, _cacheMargins: function () { this.margins = { left: (parseInt(this.currentItem.css("marginLeft"), 10) || 0), top: (parseInt(this.currentItem.css("marginTop"), 10) || 0) } }, _cacheHelperProportions: function () { this.helperProportions = { width: this.helper.outerWidth(), height: this.helper.outerHeight() } }, _setContainment: function () { var e = this.options; if (e.containment == "parent") { e.containment = this.helper[0].parentNode } if (e.containment == "document" || e.containment == "window") { this.containment = [0 - this.offset.relative.left - this.offset.parent.left, 0 - this.offset.relative.top - this.offset.parent.top, a(e.containment == "document" ? document : window).width() - this.helperProportions.width - this.margins.left, (a(e.containment == "document" ? document : window).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top] } if (!(/^(document|window|parent)$/).test(e.containment)) { var c = a(e.containment)[0]; var d = a(e.containment).offset(); var b = (a(c).css("overflow") != "hidden"); this.containment = [d.left + (parseInt(a(c).css("borderLeftWidth"), 10) || 0) + (parseInt(a(c).css("paddingLeft"), 10) || 0) - this.margins.left, d.top + (parseInt(a(c).css("borderTopWidth"), 10) || 0) + (parseInt(a(c).css("paddingTop"), 10) || 0) - this.margins.top, d.left + (b ? Math.max(c.scrollWidth, c.offsetWidth) : c.offsetWidth) - (parseInt(a(c).css("borderLeftWidth"), 10) || 0) - (parseInt(a(c).css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left, d.top + (b ? Math.max(c.scrollHeight, c.offsetHeight) : c.offsetHeight) - (parseInt(a(c).css("borderTopWidth"), 10) || 0) - (parseInt(a(c).css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top] } }, _convertPositionTo: function (f, h) { if (!h) { h = this.position } var c = f == "absolute" ? 1 : -1; var e = this.options, b = this.cssPosition == "absolute" && !(this.scrollParent[0] != document && a.ui.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent, g = (/(html|body)/i).test(b[0].tagName); return { top: (h.top + this.offset.relative.top * c + this.offset.parent.top * c - (a.browser.safari && this.cssPosition == "fixed" ? 0 : (this.cssPosition == "fixed" ? -this.scrollParent.scrollTop() : (g ? 0 : b.scrollTop())) * c)), left: (h.left + this.offset.relative.left * c + this.offset.parent.left * c - (a.browser.safari && this.cssPosition == "fixed" ? 0 : (this.cssPosition == "fixed" ? -this.scrollParent.scrollLeft() : g ? 0 : b.scrollLeft()) * c)) } }, _generatePosition: function (e) { var h = this.options, b = this.cssPosition == "absolute" && !(this.scrollParent[0] != document && a.ui.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent, i = (/(html|body)/i).test(b[0].tagName); if (this.cssPosition == "relative" && !(this.scrollParent[0] != document && this.scrollParent[0] != this.offsetParent[0])) { this.offset.relative = this._getRelativeOffset() } var d = e.pageX; var c = e.pageY; if (this.originalPosition) { if (this.containment) { if (e.pageX - this.offset.click.left < this.containment[0]) { d = this.containment[0] + this.offset.click.left } if (e.pageY - this.offset.click.top < this.containment[1]) { c = this.containment[1] + this.offset.click.top } if (e.pageX - this.offset.click.left > this.containment[2]) { d = this.containment[2] + this.offset.click.left } if (e.pageY - this.offset.click.top > this.containment[3]) { c = this.containment[3] + this.offset.click.top } } if (h.grid) { var g = this.originalPageY + Math.round((c - this.originalPageY) / h.grid[1]) * h.grid[1]; c = this.containment ? (!(g - this.offset.click.top < this.containment[1] || g - this.offset.click.top > this.containment[3]) ? g : (!(g - this.offset.click.top < this.containment[1]) ? g - h.grid[1] : g + h.grid[1])) : g; var f = this.originalPageX + Math.round((d - this.originalPageX) / h.grid[0]) * h.grid[0]; d = this.containment ? (!(f - this.offset.click.left < this.containment[0] || f - this.offset.click.left > this.containment[2]) ? f : (!(f - this.offset.click.left < this.containment[0]) ? f - h.grid[0] : f + h.grid[0])) : f } } return { top: (c - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + (a.browser.safari && this.cssPosition == "fixed" ? 0 : (this.cssPosition == "fixed" ? -this.scrollParent.scrollTop() : (i ? 0 : b.scrollTop())))), left: (d - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + (a.browser.safari && this.cssPosition == "fixed" ? 0 : (this.cssPosition == "fixed" ? -this.scrollParent.scrollLeft() : i ? 0 : b.scrollLeft()))) } }, _rearrange: function (g, f, c, e) { c ? c[0].appendChild(this.placeholder[0]) : f.item[0].parentNode.insertBefore(this.placeholder[0], (this.direction == "down" ? f.item[0] : f.item[0].nextSibling)); this.counter = this.counter ? ++this.counter : 1; var d = this, b = this.counter; window.setTimeout(function () { if (b == d.counter) { d.refreshPositions(!e) } }, 0) }, _clear: function (d, e) { this.reverting = false; var f = [], b = this; if (!this._noFinalSort && this.currentItem[0].parentNode) { this.placeholder.before(this.currentItem) } this._noFinalSort = null; if (this.helper[0] == this.currentItem[0]) { for (var c in this._storedCSS) { if (this._storedCSS[c] == "auto" || this._storedCSS[c] == "static") { this._storedCSS[c] = "" } } this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper") } else { this.currentItem.show() } if (this.fromOutside && !e) { f.push(function (g) { this._trigger("receive", g, this._uiHash(this.fromOutside)) }) } if ((this.fromOutside || this.domPosition.prev != this.currentItem.prev().not(".ui-sortable-helper")[0] || this.domPosition.parent != this.currentItem.parent()[0]) && !e) { f.push(function (g) { this._trigger("update", g, this._uiHash()) }) } if (!a.ui.contains(this.element[0], this.currentItem[0])) { if (!e) { f.push(function (g) { this._trigger("remove", g, this._uiHash()) }) } for (var c = this.containers.length - 1; c >= 0; c--) { if (a.ui.contains(this.containers[c].element[0], this.currentItem[0]) && !e) { f.push((function (g) { return function (h) { g._trigger("receive", h, this._uiHash(this)) } }).call(this, this.containers[c])); f.push((function (g) { return function (h) { g._trigger("update", h, this._uiHash(this)) } }).call(this, this.containers[c])) } } } for (var c = this.containers.length - 1; c >= 0; c--) { if (!e) { f.push((function (g) { return function (h) { g._trigger("deactivate", h, this._uiHash(this)) } }).call(this, this.containers[c])) } if (this.containers[c].containerCache.over) { f.push((function (g) { return function (h) { g._trigger("out", h, this._uiHash(this)) } }).call(this, this.containers[c])); this.containers[c].containerCache.over = 0 } } if (this._storedCursor) { a("body").css("cursor", this._storedCursor) } if (this._storedOpacity) { this.helper.css("opacity", this._storedOpacity) } if (this._storedZIndex) { this.helper.css("zIndex", this._storedZIndex == "auto" ? "" : this._storedZIndex) } this.dragging = false; if (this.cancelHelperRemoval) { if (!e) { this._trigger("beforeStop", d, this._uiHash()); for (var c = 0; c < f.length; c++) { f[c].call(this, d) } this._trigger("stop", d, this._uiHash()) } return false } if (!e) { this._trigger("beforeStop", d, this._uiHash()) } this.placeholder[0].parentNode.removeChild(this.placeholder[0]); if (this.helper[0] != this.currentItem[0]) { this.helper.remove() } this.helper = null; if (!e) { for (var c = 0; c < f.length; c++) { f[c].call(this, d) } this._trigger("stop", d, this._uiHash()) } this.fromOutside = false; return true }, _trigger: function () { if (a.widget.prototype._trigger.apply(this, arguments) === false) { this.cancel() } }, _uiHash: function (c) { var b = c || this; return { helper: b.helper, placeholder: b.placeholder || a([]), position: b.position, absolutePosition: b.positionAbs, offset: b.positionAbs, item: b.currentItem, sender: c ? c.element : null } } })); a.extend(a.ui.sortable, { getter: "serialize toArray", version: "1.7", eventPrefix: "sort", defaults: { appendTo: "parent", axis: false, cancel: ":input,option", connectWith: false, containment: false, cursor: "auto", cursorAt: false, delay: 0, distance: 1, dropOnEmpty: true, forcePlaceholderSize: false, forceHelperSize: false, grid: false, handle: false, helper: "original", items: "> *", opacity: false, placeholder: false, revert: false, scroll: true, scrollSensitivity: 20, scrollSpeed: 20, scope: "default", tolerance: "intersect", zIndex: 1000 } }) })(jQuery); jQuery.effects || (function (d) { d.effects = { version: "1.7", save: function (g, h) { for (var f = 0; f < h.length; f++) { if (h[f] !== null) { g.data("ec.storage." + h[f], g[0].style[h[f]]) } } }, restore: function (g, h) { for (var f = 0; f < h.length; f++) { if (h[f] !== null) { g.css(h[f], g.data("ec.storage." + h[f])) } } }, setMode: function (f, g) { if (g == "toggle") { g = f.is(":hidden") ? "show" : "hide" } return g }, getBaseline: function (g, h) { var i, f; switch (g[0]) { case "top": i = 0; break; case "middle": i = 0.5; break; case "bottom": i = 1; break; default: i = g[0] / h.height } switch (g[1]) { case "left": f = 0; break; case "center": f = 0.5; break; case "right": f = 1; break; default: f = g[1] / h.width } return { x: f, y: i } }, createWrapper: function (f) { if (f.parent().is(".ui-effects-wrapper")) { return f.parent() } var g = { width: f.outerWidth(true), height: f.outerHeight(true), "float": f.css("float") }; f.wrap('<div class="ui-effects-wrapper" style="font-size:100%;background:transparent;border:none;margin:0;padding:0"></div>'); var j = f.parent(); if (f.css("position") == "static") { j.css({ position: "relative" }); f.css({ position: "relative" }) } else { var i = f.css("top"); if (isNaN(parseInt(i, 10))) { i = "auto" } var h = f.css("left"); if (isNaN(parseInt(h, 10))) { h = "auto" } j.css({ position: f.css("position"), top: i, left: h, zIndex: f.css("z-index") }).show(); f.css({ position: "relative", top: 0, left: 0 }) } j.css(g); return j }, removeWrapper: function (f) { if (f.parent().is(".ui-effects-wrapper")) { return f.parent().replaceWith(f) } return f }, setTransition: function (g, i, f, h) { h = h || {}; d.each(i, function (k, j) { unit = g.cssUnit(j); if (unit[0] > 0) { h[j] = unit[0] * f + unit[1] } }); return h }, animateClass: function (h, i, k, j) { var f = (typeof k == "function" ? k : (j ? j : null)); var g = (typeof k == "string" ? k : null); return this.each(function () { var q = {}; var o = d(this); var p = o.attr("style") || ""; if (typeof p == "object") { p = p.cssText } if (h.toggle) { o.hasClass(h.toggle) ? h.remove = h.toggle : h.add = h.toggle } var l = d.extend({}, (document.defaultView ? document.defaultView.getComputedStyle(this, null) : this.currentStyle)); if (h.add) { o.addClass(h.add) } if (h.remove) { o.removeClass(h.remove) } var m = d.extend({}, (document.defaultView ? document.defaultView.getComputedStyle(this, null) : this.currentStyle)); if (h.add) { o.removeClass(h.add) } if (h.remove) { o.addClass(h.remove) } for (var r in m) { if (typeof m[r] != "function" && m[r] && r.indexOf("Moz") == -1 && r.indexOf("length") == -1 && m[r] != l[r] && (r.match(/color/i) || (!r.match(/color/i) && !isNaN(parseInt(m[r], 10)))) && (l.position != "static" || (l.position == "static" && !r.match(/left|top|bottom|right/)))) { q[r] = m[r] } } o.animate(q, i, g, function () { if (typeof d(this).attr("style") == "object") { d(this).attr("style")["cssText"] = ""; d(this).attr("style")["cssText"] = p } else { d(this).attr("style", p) } if (h.add) { d(this).addClass(h.add) } if (h.remove) { d(this).removeClass(h.remove) } if (f) { f.apply(this, arguments) } }) }) } }; function c(g, f) { var i = g[1] && g[1].constructor == Object ? g[1] : {}; if (f) { i.mode = f } var h = g[1] && g[1].constructor != Object ? g[1] : (i.duration ? i.duration : g[2]); h = d.fx.off ? 0 : typeof h === "number" ? h : d.fx.speeds[h] || d.fx.speeds._default; var j = i.callback || (d.isFunction(g[1]) && g[1]) || (d.isFunction(g[2]) && g[2]) || (d.isFunction(g[3]) && g[3]); return [g[0], i, h, j] } d.fn.extend({ _show: d.fn.show, _hide: d.fn.hide, __toggle: d.fn.toggle, _addClass: d.fn.addClass, _removeClass: d.fn.removeClass, _toggleClass: d.fn.toggleClass, effect: function (g, f, h, i) { return d.effects[g] ? d.effects[g].call(this, { method: g, options: f || {}, duration: h, callback: i }) : null }, show: function () { if (!arguments[0] || (arguments[0].constructor == Number || (/(slow|normal|fast)/).test(arguments[0]))) { return this._show.apply(this, arguments) } else { return this.effect.apply(this, c(arguments, "show")) } }, hide: function () { if (!arguments[0] || (arguments[0].constructor == Number || (/(slow|normal|fast)/).test(arguments[0]))) { return this._hide.apply(this, arguments) } else { return this.effect.apply(this, c(arguments, "hide")) } }, toggle: function () { if (!arguments[0] || (arguments[0].constructor == Number || (/(slow|normal|fast)/).test(arguments[0])) || (arguments[0].constructor == Function)) { return this.__toggle.apply(this, arguments) } else { return this.effect.apply(this, c(arguments, "toggle")) } }, addClass: function (g, f, i, h) { return f ? d.effects.animateClass.apply(this, [{ add: g }, f, i, h]) : this._addClass(g) }, removeClass: function (g, f, i, h) { return f ? d.effects.animateClass.apply(this, [{ remove: g }, f, i, h]) : this._removeClass(g) }, toggleClass: function (g, f, i, h) { return ((typeof f !== "boolean") && f) ? d.effects.animateClass.apply(this, [{ toggle: g }, f, i, h]) : this._toggleClass(g, f) }, morph: function (f, h, g, j, i) { return d.effects.animateClass.apply(this, [{ add: h, remove: f }, g, j, i]) }, switchClass: function () { return this.morph.apply(this, arguments) }, cssUnit: function (f) { var g = this.css(f), h = []; d.each(["em", "px", "%", "pt"], function (j, k) { if (g.indexOf(k) > 0) { h = [parseFloat(g), k] } }); return h } }); d.each(["backgroundColor", "borderBottomColor", "borderLeftColor", "borderRightColor", "borderTopColor", "color", "outlineColor"], function (g, f) { d.fx.step[f] = function (h) { if (h.state == 0) { h.start = e(h.elem, f); h.end = b(h.end) } h.elem.style[f] = "rgb(" + [Math.max(Math.min(parseInt((h.pos * (h.end[0] - h.start[0])) + h.start[0], 10), 255), 0), Math.max(Math.min(parseInt((h.pos * (h.end[1] - h.start[1])) + h.start[1], 10), 255), 0), Math.max(Math.min(parseInt((h.pos * (h.end[2] - h.start[2])) + h.start[2], 10), 255), 0)].join(",") + ")" } }); function b(g) { var f; if (g && g.constructor == Array && g.length == 3) { return g } if (f = /rgb\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*\)/.exec(g)) { return [parseInt(f[1], 10), parseInt(f[2], 10), parseInt(f[3], 10)] } if (f = /rgb\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*\)/.exec(g)) { return [parseFloat(f[1]) * 2.55, parseFloat(f[2]) * 2.55, parseFloat(f[3]) * 2.55] } if (f = /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec(g)) { return [parseInt(f[1], 16), parseInt(f[2], 16), parseInt(f[3], 16)] } if (f = /#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/.exec(g)) { return [parseInt(f[1] + f[1], 16), parseInt(f[2] + f[2], 16), parseInt(f[3] + f[3], 16)] } if (f = /rgba\(0, 0, 0, 0\)/.exec(g)) { return a.transparent } return a[d.trim(g).toLowerCase()] } function e(h, f) { var g; do { g = d.curCSS(h, f); if (g != "" && g != "transparent" || d.nodeName(h, "body")) { break } f = "backgroundColor" } while (h = h.parentNode); return b(g) } var a = { aqua: [0, 255, 255], azure: [240, 255, 255], beige: [245, 245, 220], black: [0, 0, 0], blue: [0, 0, 255], brown: [165, 42, 42], cyan: [0, 255, 255], darkblue: [0, 0, 139], darkcyan: [0, 139, 139], darkgrey: [169, 169, 169], darkgreen: [0, 100, 0], darkkhaki: [189, 183, 107], darkmagenta: [139, 0, 139], darkolivegreen: [85, 107, 47], darkorange: [255, 140, 0], darkorchid: [153, 50, 204], darkred: [139, 0, 0], darksalmon: [233, 150, 122], darkviolet: [148, 0, 211], fuchsia: [255, 0, 255], gold: [255, 215, 0], green: [0, 128, 0], indigo: [75, 0, 130], khaki: [240, 230, 140], lightblue: [173, 216, 230], lightcyan: [224, 255, 255], lightgreen: [144, 238, 144], lightgrey: [211, 211, 211], lightpink: [255, 182, 193], lightyellow: [255, 255, 224], lime: [0, 255, 0], magenta: [255, 0, 255], maroon: [128, 0, 0], navy: [0, 0, 128], olive: [128, 128, 0], orange: [255, 165, 0], pink: [255, 192, 203], purple: [128, 0, 128], violet: [128, 0, 128], red: [255, 0, 0], silver: [192, 192, 192], white: [255, 255, 255], yellow: [255, 255, 0], transparent: [255, 255, 255] }; d.easing.jswing = d.easing.swing; d.extend(d.easing, { def: "easeOutQuad", swing: function (g, h, f, j, i) { return d.easing[d.easing.def](g, h, f, j, i) }, easeInQuad: function (g, h, f, j, i) { return j * (h /= i) * h + f }, easeOutQuad: function (g, h, f, j, i) { return -j * (h /= i) * (h - 2) + f }, easeInOutQuad: function (g, h, f, j, i) { if ((h /= i / 2) < 1) { return j / 2 * h * h + f } return -j / 2 * ((--h) * (h - 2) - 1) + f }, easeInCubic: function (g, h, f, j, i) { return j * (h /= i) * h * h + f }, easeOutCubic: function (g, h, f, j, i) { return j * ((h = h / i - 1) * h * h + 1) + f }, easeInOutCubic: function (g, h, f, j, i) { if ((h /= i / 2) < 1) { return j / 2 * h * h * h + f } return j / 2 * ((h -= 2) * h * h + 2) + f }, easeInQuart: function (g, h, f, j, i) { return j * (h /= i) * h * h * h + f }, easeOutQuart: function (g, h, f, j, i) { return -j * ((h = h / i - 1) * h * h * h - 1) + f }, easeInOutQuart: function (g, h, f, j, i) { if ((h /= i / 2) < 1) { return j / 2 * h * h * h * h + f } return -j / 2 * ((h -= 2) * h * h * h - 2) + f }, easeInQuint: function (g, h, f, j, i) { return j * (h /= i) * h * h * h * h + f }, easeOutQuint: function (g, h, f, j, i) { return j * ((h = h / i - 1) * h * h * h * h + 1) + f }, easeInOutQuint: function (g, h, f, j, i) { if ((h /= i / 2) < 1) { return j / 2 * h * h * h * h * h + f } return j / 2 * ((h -= 2) * h * h * h * h + 2) + f }, easeInSine: function (g, h, f, j, i) { return -j * Math.cos(h / i * (Math.PI / 2)) + j + f }, easeOutSine: function (g, h, f, j, i) { return j * Math.sin(h / i * (Math.PI / 2)) + f }, easeInOutSine: function (g, h, f, j, i) { return -j / 2 * (Math.cos(Math.PI * h / i) - 1) + f }, easeInExpo: function (g, h, f, j, i) { return (h == 0) ? f : j * Math.pow(2, 10 * (h / i - 1)) + f }, easeOutExpo: function (g, h, f, j, i) { return (h == i) ? f + j : j * (-Math.pow(2, -10 * h / i) + 1) + f }, easeInOutExpo: function (g, h, f, j, i) { if (h == 0) { return f } if (h == i) { return f + j } if ((h /= i / 2) < 1) { return j / 2 * Math.pow(2, 10 * (h - 1)) + f } return j / 2 * (-Math.pow(2, -10 * --h) + 2) + f }, easeInCirc: function (g, h, f, j, i) { return -j * (Math.sqrt(1 - (h /= i) * h) - 1) + f }, easeOutCirc: function (g, h, f, j, i) { return j * Math.sqrt(1 - (h = h / i - 1) * h) + f }, easeInOutCirc: function (g, h, f, j, i) { if ((h /= i / 2) < 1) { return -j / 2 * (Math.sqrt(1 - h * h) - 1) + f } return j / 2 * (Math.sqrt(1 - (h -= 2) * h) + 1) + f }, easeInElastic: function (g, i, f, m, l) { var j = 1.70158; var k = 0; var h = m; if (i == 0) { return f } if ((i /= l) == 1) { return f + m } if (!k) { k = l * 0.3 } if (h < Math.abs(m)) { h = m; var j = k / 4 } else { var j = k / (2 * Math.PI) * Math.asin(m / h) } return -(h * Math.pow(2, 10 * (i -= 1)) * Math.sin((i * l - j) * (2 * Math.PI) / k)) + f }, easeOutElastic: function (g, i, f, m, l) { var j = 1.70158; var k = 0; var h = m; if (i == 0) { return f } if ((i /= l) == 1) { return f + m } if (!k) { k = l * 0.3 } if (h < Math.abs(m)) { h = m; var j = k / 4 } else { var j = k / (2 * Math.PI) * Math.asin(m / h) } return h * Math.pow(2, -10 * i) * Math.sin((i * l - j) * (2 * Math.PI) / k) + m + f }, easeInOutElastic: function (g, i, f, m, l) { var j = 1.70158; var k = 0; var h = m; if (i == 0) { return f } if ((i /= l / 2) == 2) { return f + m } if (!k) { k = l * (0.3 * 1.5) } if (h < Math.abs(m)) { h = m; var j = k / 4 } else { var j = k / (2 * Math.PI) * Math.asin(m / h) } if (i < 1) { return -0.5 * (h * Math.pow(2, 10 * (i -= 1)) * Math.sin((i * l - j) * (2 * Math.PI) / k)) + f } return h * Math.pow(2, -10 * (i -= 1)) * Math.sin((i * l - j) * (2 * Math.PI) / k) * 0.5 + m + f }, easeInBack: function (g, h, f, k, j, i) { if (i == undefined) { i = 1.70158 } return k * (h /= j) * h * ((i + 1) * h - i) + f }, easeOutBack: function (g, h, f, k, j, i) { if (i == undefined) { i = 1.70158 } return k * ((h = h / j - 1) * h * ((i + 1) * h + i) + 1) + f }, easeInOutBack: function (g, h, f, k, j, i) { if (i == undefined) { i = 1.70158 } if ((h /= j / 2) < 1) { return k / 2 * (h * h * (((i *= (1.525)) + 1) * h - i)) + f } return k / 2 * ((h -= 2) * h * (((i *= (1.525)) + 1) * h + i) + 2) + f }, easeInBounce: function (g, h, f, j, i) { return j - d.easing.easeOutBounce(g, i - h, 0, j, i) + f }, easeOutBounce: function (g, h, f, j, i) { if ((h /= i) < (1 / 2.75)) { return j * (7.5625 * h * h) + f } else { if (h < (2 / 2.75)) { return j * (7.5625 * (h -= (1.5 / 2.75)) * h + 0.75) + f } else { if (h < (2.5 / 2.75)) { return j * (7.5625 * (h -= (2.25 / 2.75)) * h + 0.9375) + f } else { return j * (7.5625 * (h -= (2.625 / 2.75)) * h + 0.984375) + f } } } }, easeInOutBounce: function (g, h, f, j, i) { if (h < i / 2) { return d.easing.easeInBounce(g, h * 2, 0, j, i) * 0.5 + f } return d.easing.easeOutBounce(g, h * 2 - i, 0, j, i) * 0.5 + j * 0.5 + f } }) })(jQuery); (function (a) { a.effects.blind = function (b) { return this.queue(function () { var d = a(this), c = ["position", "top", "left"]; var h = a.effects.setMode(d, b.options.mode || "hide"); var g = b.options.direction || "vertical"; a.effects.save(d, c); d.show(); var j = a.effects.createWrapper(d).css({ overflow: "hidden" }); var e = (g == "vertical") ? "height" : "width"; var i = (g == "vertical") ? j.height() : j.width(); if (h == "show") { j.css(e, 0) } var f = {}; f[e] = h == "show" ? i : 0; j.animate(f, b.duration, b.options.easing, function () { if (h == "hide") { d.hide() } a.effects.restore(d, c); a.effects.removeWrapper(d); if (b.callback) { b.callback.apply(d[0], arguments) } d.dequeue() }) }) } })(jQuery); (function (a) { a.effects.bounce = function (b) { return this.queue(function () { var e = a(this), l = ["position", "top", "left"]; var k = a.effects.setMode(e, b.options.mode || "effect"); var n = b.options.direction || "up"; var c = b.options.distance || 20; var d = b.options.times || 5; var g = b.duration || 250; if (/show|hide/.test(k)) { l.push("opacity") } a.effects.save(e, l); e.show(); a.effects.createWrapper(e); var f = (n == "up" || n == "down") ? "top" : "left"; var p = (n == "up" || n == "left") ? "pos" : "neg"; var c = b.options.distance || (f == "top" ? e.outerHeight({ margin: true }) / 3 : e.outerWidth({ margin: true }) / 3); if (k == "show") { e.css("opacity", 0).css(f, p == "pos" ? -c : c) } if (k == "hide") { c = c / (d * 2) } if (k != "hide") { d-- } if (k == "show") { var h = { opacity: 1 }; h[f] = (p == "pos" ? "+=" : "-=") + c; e.animate(h, g / 2, b.options.easing); c = c / 2; d-- } for (var j = 0; j < d; j++) { var o = {}, m = {}; o[f] = (p == "pos" ? "-=" : "+=") + c; m[f] = (p == "pos" ? "+=" : "-=") + c; e.animate(o, g / 2, b.options.easing).animate(m, g / 2, b.options.easing); c = (k == "hide") ? c * 2 : c / 2 } if (k == "hide") { var h = { opacity: 0 }; h[f] = (p == "pos" ? "-=" : "+=") + c; e.animate(h, g / 2, b.options.easing, function () { e.hide(); a.effects.restore(e, l); a.effects.removeWrapper(e); if (b.callback) { b.callback.apply(this, arguments) } }) } else { var o = {}, m = {}; o[f] = (p == "pos" ? "-=" : "+=") + c; m[f] = (p == "pos" ? "+=" : "-=") + c; e.animate(o, g / 2, b.options.easing).animate(m, g / 2, b.options.easing, function () { a.effects.restore(e, l); a.effects.removeWrapper(e); if (b.callback) { b.callback.apply(this, arguments) } }) } e.queue("fx", function () { e.dequeue() }); e.dequeue() }) } })(jQuery); (function (a) { a.effects.clip = function (b) { return this.queue(function () { var f = a(this), j = ["position", "top", "left", "height", "width"]; var i = a.effects.setMode(f, b.options.mode || "hide"); var k = b.options.direction || "vertical"; a.effects.save(f, j); f.show(); var c = a.effects.createWrapper(f).css({ overflow: "hidden" }); var e = f[0].tagName == "IMG" ? c : f; var g = { size: (k == "vertical") ? "height" : "width", position: (k == "vertical") ? "top" : "left" }; var d = (k == "vertical") ? e.height() : e.width(); if (i == "show") { e.css(g.size, 0); e.css(g.position, d / 2) } var h = {}; h[g.size] = i == "show" ? d : 0; h[g.position] = i == "show" ? 0 : d / 2; e.animate(h, { queue: false, duration: b.duration, easing: b.options.easing, complete: function () { if (i == "hide") { f.hide() } a.effects.restore(f, j); a.effects.removeWrapper(f); if (b.callback) { b.callback.apply(f[0], arguments) } f.dequeue() } }) }) } })(jQuery); (function (a) { a.effects.drop = function (b) { return this.queue(function () { var e = a(this), d = ["position", "top", "left", "opacity"]; var i = a.effects.setMode(e, b.options.mode || "hide"); var h = b.options.direction || "left"; a.effects.save(e, d); e.show(); a.effects.createWrapper(e); var f = (h == "up" || h == "down") ? "top" : "left"; var c = (h == "up" || h == "left") ? "pos" : "neg"; var j = b.options.distance || (f == "top" ? e.outerHeight({ margin: true }) / 2 : e.outerWidth({ margin: true }) / 2); if (i == "show") { e.css("opacity", 0).css(f, c == "pos" ? -j : j) } var g = { opacity: i == "show" ? 1 : 0 }; g[f] = (i == "show" ? (c == "pos" ? "+=" : "-=") : (c == "pos" ? "-=" : "+=")) + j; e.animate(g, { queue: false, duration: b.duration, easing: b.options.easing, complete: function () { if (i == "hide") { e.hide() } a.effects.restore(e, d); a.effects.removeWrapper(e); if (b.callback) { b.callback.apply(this, arguments) } e.dequeue() } }) }) } })(jQuery); (function (a) { a.effects.explode = function (b) { return this.queue(function () { var k = b.options.pieces ? Math.round(Math.sqrt(b.options.pieces)) : 3; var e = b.options.pieces ? Math.round(Math.sqrt(b.options.pieces)) : 3; b.options.mode = b.options.mode == "toggle" ? (a(this).is(":visible") ? "hide" : "show") : b.options.mode; var h = a(this).show().css("visibility", "hidden"); var l = h.offset(); l.top -= parseInt(h.css("marginTop"), 10) || 0; l.left -= parseInt(h.css("marginLeft"), 10) || 0; var g = h.outerWidth(true); var c = h.outerHeight(true); for (var f = 0; f < k; f++) { for (var d = 0; d < e; d++) { h.clone().appendTo("body").wrap("<div></div>").css({ position: "absolute", visibility: "visible", left: -d * (g / e), top: -f * (c / k) }).parent().addClass("ui-effects-explode").css({ position: "absolute", overflow: "hidden", width: g / e, height: c / k, left: l.left + d * (g / e) + (b.options.mode == "show" ? (d - Math.floor(e / 2)) * (g / e) : 0), top: l.top + f * (c / k) + (b.options.mode == "show" ? (f - Math.floor(k / 2)) * (c / k) : 0), opacity: b.options.mode == "show" ? 0 : 1 }).animate({ left: l.left + d * (g / e) + (b.options.mode == "show" ? 0 : (d - Math.floor(e / 2)) * (g / e)), top: l.top + f * (c / k) + (b.options.mode == "show" ? 0 : (f - Math.floor(k / 2)) * (c / k)), opacity: b.options.mode == "show" ? 1 : 0 }, b.duration || 500) } } setTimeout(function () { b.options.mode == "show" ? h.css({ visibility: "visible" }) : h.css({ visibility: "visible" }).hide(); if (b.callback) { b.callback.apply(h[0]) } h.dequeue(); a("div.ui-effects-explode").remove() }, b.duration || 500) }) } })(jQuery); (function (a) { a.effects.fold = function (b) { return this.queue(function () { var e = a(this), k = ["position", "top", "left"]; var h = a.effects.setMode(e, b.options.mode || "hide"); var o = b.options.size || 15; var n = !(!b.options.horizFirst); var g = b.duration ? b.duration / 2 : a.fx.speeds._default / 2; a.effects.save(e, k); e.show(); var d = a.effects.createWrapper(e).css({ overflow: "hidden" }); var i = ((h == "show") != n); var f = i ? ["width", "height"] : ["height", "width"]; var c = i ? [d.width(), d.height()] : [d.height(), d.width()]; var j = /([0-9]+)%/.exec(o); if (j) { o = parseInt(j[1], 10) / 100 * c[h == "hide" ? 0 : 1] } if (h == "show") { d.css(n ? { height: 0, width: o } : { height: o, width: 0 }) } var m = {}, l = {}; m[f[0]] = h == "show" ? c[0] : o; l[f[1]] = h == "show" ? c[1] : 0; d.animate(m, g, b.options.easing).animate(l, g, b.options.easing, function () { if (h == "hide") { e.hide() } a.effects.restore(e, k); a.effects.removeWrapper(e); if (b.callback) { b.callback.apply(e[0], arguments) } e.dequeue() }) }) } })(jQuery); (function (a) { a.effects.highlight = function (b) { return this.queue(function () { var e = a(this), d = ["backgroundImage", "backgroundColor", "opacity"]; var h = a.effects.setMode(e, b.options.mode || "show"); var c = b.options.color || "#ffff99"; var g = e.css("backgroundColor"); a.effects.save(e, d); e.show(); e.css({ backgroundImage: "none", backgroundColor: c }); var f = { backgroundColor: g }; if (h == "hide") { f.opacity = 0 } e.animate(f, { queue: false, duration: b.duration, easing: b.options.easing, complete: function () { if (h == "hide") { e.hide() } a.effects.restore(e, d); if (h == "show" && a.browser.msie) { this.style.removeAttribute("filter") } if (b.callback) { b.callback.apply(this, arguments) } e.dequeue() } }) }) } })(jQuery); (function (a) { a.effects.pulsate = function (b) { return this.queue(function () { var d = a(this); var g = a.effects.setMode(d, b.options.mode || "show"); var f = b.options.times || 5; var e = b.duration ? b.duration / 2 : a.fx.speeds._default / 2; if (g == "hide") { f-- } if (d.is(":hidden")) { d.css("opacity", 0); d.show(); d.animate({ opacity: 1 }, e, b.options.easing); f = f - 2 } for (var c = 0; c < f; c++) { d.animate({ opacity: 0 }, e, b.options.easing).animate({ opacity: 1 }, e, b.options.easing) } if (g == "hide") { d.animate({ opacity: 0 }, e, b.options.easing, function () { d.hide(); if (b.callback) { b.callback.apply(this, arguments) } }) } else { d.animate({ opacity: 0 }, e, b.options.easing).animate({ opacity: 1 }, e, b.options.easing, function () { if (b.callback) { b.callback.apply(this, arguments) } }) } d.queue("fx", function () { d.dequeue() }); d.dequeue() }) } })(jQuery); (function (a) { a.effects.puff = function (b) { return this.queue(function () { var f = a(this); var c = a.extend(true, {}, b.options); var h = a.effects.setMode(f, b.options.mode || "hide"); var g = parseInt(b.options.percent, 10) || 150; c.fade = true; var e = { height: f.height(), width: f.width() }; var d = g / 100; f.from = (h == "hide") ? e : { height: e.height * d, width: e.width * d }; c.from = f.from; c.percent = (h == "hide") ? g : 100; c.mode = h; f.effect("scale", c, b.duration, b.callback); f.dequeue() }) }; a.effects.scale = function (b) { return this.queue(function () { var g = a(this); var d = a.extend(true, {}, b.options); var j = a.effects.setMode(g, b.options.mode || "effect"); var h = parseInt(b.options.percent, 10) || (parseInt(b.options.percent, 10) == 0 ? 0 : (j == "hide" ? 0 : 100)); var i = b.options.direction || "both"; var c = b.options.origin; if (j != "effect") { d.origin = c || ["middle", "center"]; d.restore = true } var f = { height: g.height(), width: g.width() }; g.from = b.options.from || (j == "show" ? { height: 0, width: 0 } : f); var e = { y: i != "horizontal" ? (h / 100) : 1, x: i != "vertical" ? (h / 100) : 1 }; g.to = { height: f.height * e.y, width: f.width * e.x }; if (b.options.fade) { if (j == "show") { g.from.opacity = 0; g.to.opacity = 1 } if (j == "hide") { g.from.opacity = 1; g.to.opacity = 0 } } d.from = g.from; d.to = g.to; d.mode = j; g.effect("size", d, b.duration, b.callback); g.dequeue() }) }; a.effects.size = function (b) { return this.queue(function () { var c = a(this), n = ["position", "top", "left", "width", "height", "overflow", "opacity"]; var m = ["position", "top", "left", "overflow", "opacity"]; var j = ["width", "height", "overflow"]; var p = ["fontSize"]; var k = ["borderTopWidth", "borderBottomWidth", "paddingTop", "paddingBottom"]; var f = ["borderLeftWidth", "borderRightWidth", "paddingLeft", "paddingRight"]; var g = a.effects.setMode(c, b.options.mode || "effect"); var i = b.options.restore || false; var e = b.options.scale || "both"; var o = b.options.origin; var d = { height: c.height(), width: c.width() }; c.from = b.options.from || d; c.to = b.options.to || d; if (o) { var h = a.effects.getBaseline(o, d); c.from.top = (d.height - c.from.height) * h.y; c.from.left = (d.width - c.from.width) * h.x; c.to.top = (d.height - c.to.height) * h.y; c.to.left = (d.width - c.to.width) * h.x } var l = { from: { y: c.from.height / d.height, x: c.from.width / d.width }, to: { y: c.to.height / d.height, x: c.to.width / d.width } }; if (e == "box" || e == "both") { if (l.from.y != l.to.y) { n = n.concat(k); c.from = a.effects.setTransition(c, k, l.from.y, c.from); c.to = a.effects.setTransition(c, k, l.to.y, c.to) } if (l.from.x != l.to.x) { n = n.concat(f); c.from = a.effects.setTransition(c, f, l.from.x, c.from); c.to = a.effects.setTransition(c, f, l.to.x, c.to) } } if (e == "content" || e == "both") { if (l.from.y != l.to.y) { n = n.concat(p); c.from = a.effects.setTransition(c, p, l.from.y, c.from); c.to = a.effects.setTransition(c, p, l.to.y, c.to) } } a.effects.save(c, i ? n : m); c.show(); a.effects.createWrapper(c); c.css("overflow", "hidden").css(c.from); if (e == "content" || e == "both") { k = k.concat(["marginTop", "marginBottom"]).concat(p); f = f.concat(["marginLeft", "marginRight"]); j = n.concat(k).concat(f); c.find("*[width]").each(function () { child = a(this); if (i) { a.effects.save(child, j) } var q = { height: child.height(), width: child.width() }; child.from = { height: q.height * l.from.y, width: q.width * l.from.x }; child.to = { height: q.height * l.to.y, width: q.width * l.to.x }; if (l.from.y != l.to.y) { child.from = a.effects.setTransition(child, k, l.from.y, child.from); child.to = a.effects.setTransition(child, k, l.to.y, child.to) } if (l.from.x != l.to.x) { child.from = a.effects.setTransition(child, f, l.from.x, child.from); child.to = a.effects.setTransition(child, f, l.to.x, child.to) } child.css(child.from); child.animate(child.to, b.duration, b.options.easing, function () { if (i) { a.effects.restore(child, j) } }) }) } c.animate(c.to, { queue: false, duration: b.duration, easing: b.options.easing, complete: function () { if (g == "hide") { c.hide() } a.effects.restore(c, i ? n : m); a.effects.removeWrapper(c); if (b.callback) { b.callback.apply(this, arguments) } c.dequeue() } }) }) } })(jQuery); (function (a) { a.effects.shake = function (b) { return this.queue(function () { var e = a(this), l = ["position", "top", "left"]; var k = a.effects.setMode(e, b.options.mode || "effect"); var n = b.options.direction || "left"; var c = b.options.distance || 20; var d = b.options.times || 3; var g = b.duration || b.options.duration || 140; a.effects.save(e, l); e.show(); a.effects.createWrapper(e); var f = (n == "up" || n == "down") ? "top" : "left"; var p = (n == "up" || n == "left") ? "pos" : "neg"; var h = {}, o = {}, m = {}; h[f] = (p == "pos" ? "-=" : "+=") + c; o[f] = (p == "pos" ? "+=" : "-=") + c * 2; m[f] = (p == "pos" ? "-=" : "+=") + c * 2; e.animate(h, g, b.options.easing); for (var j = 1; j < d; j++) { e.animate(o, g, b.options.easing).animate(m, g, b.options.easing) } e.animate(o, g, b.options.easing).animate(h, g / 2, b.options.easing, function () { a.effects.restore(e, l); a.effects.removeWrapper(e); if (b.callback) { b.callback.apply(this, arguments) } }); e.queue("fx", function () { e.dequeue() }); e.dequeue() }) } })(jQuery); (function (a) { a.effects.slide = function (b) { return this.queue(function () { var e = a(this), d = ["position", "top", "left"]; var i = a.effects.setMode(e, b.options.mode || "show"); var h = b.options.direction || "left"; a.effects.save(e, d); e.show(); a.effects.createWrapper(e).css({ overflow: "hidden" }); var f = (h == "up" || h == "down") ? "top" : "left"; var c = (h == "up" || h == "left") ? "pos" : "neg"; var j = b.options.distance || (f == "top" ? e.outerHeight({ margin: true }) : e.outerWidth({ margin: true })); if (i == "show") { e.css(f, c == "pos" ? -j : j) } var g = {}; g[f] = (i == "show" ? (c == "pos" ? "+=" : "-=") : (c == "pos" ? "-=" : "+=")) + j; e.animate(g, { queue: false, duration: b.duration, easing: b.options.easing, complete: function () { if (i == "hide") { e.hide() } a.effects.restore(e, d); a.effects.removeWrapper(e); if (b.callback) { b.callback.apply(this, arguments) } e.dequeue() } }) }) } })(jQuery); (function (a) { a.effects.transfer = function (b) { return this.queue(function () { var f = a(this), h = a(b.options.to), e = h.offset(), g = { top: e.top, left: e.left, height: h.innerHeight(), width: h.innerWidth() }, d = f.offset(), c = a('<div class="ui-effects-transfer"></div>').appendTo(document.body).addClass(b.options.className).css({ top: d.top, left: d.left, height: f.innerHeight(), width: f.innerWidth(), position: "absolute" }).animate(g, b.duration, b.options.easing, function () { c.remove(); (b.callback && b.callback.apply(f[0], arguments)); f.dequeue() }) }) } })(jQuery); (function (a) { a.widget("ui.accordion", { _init: function () { var d = this.options, b = this; this.running = 0; if (d.collapsible == a.ui.accordion.defaults.collapsible && d.alwaysOpen != a.ui.accordion.defaults.alwaysOpen) { d.collapsible = !d.alwaysOpen } if (d.navigation) { var c = this.element.find("a").filter(d.navigationFilter); if (c.length) { if (c.filter(d.header).length) { this.active = c } else { this.active = c.parent().parent().prev(); c.addClass("ui-accordion-content-active") } } } this.element.addClass("ui-accordion ui-widget ui-helper-reset"); if (this.element[0].nodeName == "UL") { this.element.children("li").addClass("ui-accordion-li-fix") } this.headers = this.element.find(d.header).addClass("ui-accordion-header ui-helper-reset ui-state-default ui-corner-all").bind("mouseenter.accordion", function () { a(this).addClass("ui-state-hover") }).bind("mouseleave.accordion", function () { a(this).removeClass("ui-state-hover") }).bind("focus.accordion", function () { a(this).addClass("ui-state-focus") }).bind("blur.accordion", function () { a(this).removeClass("ui-state-focus") }); this.headers.next().addClass("ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom"); this.active = this._findActive(this.active || d.active).toggleClass("ui-state-default").toggleClass("ui-state-active").toggleClass("ui-corner-all").toggleClass("ui-corner-top"); this.active.next().addClass("ui-accordion-content-active"); a("<span/>").addClass("ui-icon " + d.icons.header).prependTo(this.headers); this.active.find(".ui-icon").toggleClass(d.icons.header).toggleClass(d.icons.headerSelected); if (a.browser.msie) { this.element.find("a").css("zoom", "1") } this.resize(); this.element.attr("role", "tablist"); this.headers.attr("role", "tab").bind("keydown", function (e) { return b._keydown(e) }).next().attr("role", "tabpanel"); this.headers.not(this.active || "").attr("aria-expanded", "false").attr("tabIndex", "-1").next().hide(); if (!this.active.length) { this.headers.eq(0).attr("tabIndex", "0") } else { this.active.attr("aria-expanded", "true").attr("tabIndex", "0") } if (!a.browser.safari) { this.headers.find("a").attr("tabIndex", "-1") } if (d.event) { this.headers.bind((d.event) + ".accordion", function (e) { return b._clickHandler.call(b, e, this) }) } }, destroy: function () { var c = this.options; this.element.removeClass("ui-accordion ui-widget ui-helper-reset").removeAttr("role").unbind(".accordion").removeData("accordion"); this.headers.unbind(".accordion").removeClass("ui-accordion-header ui-helper-reset ui-state-default ui-corner-all ui-state-active ui-corner-top").removeAttr("role").removeAttr("aria-expanded").removeAttr("tabindex"); this.headers.find("a").removeAttr("tabindex"); this.headers.children(".ui-icon").remove(); var b = this.headers.next().css("display", "").removeAttr("role").removeClass("ui-helper-reset ui-widget-content ui-corner-bottom ui-accordion-content ui-accordion-content-active"); if (c.autoHeight || c.fillHeight) { b.css("height", "") } }, _setData: function (b, c) { if (b == "alwaysOpen") { b = "collapsible"; c = !c } a.widget.prototype._setData.apply(this, arguments) }, _keydown: function (e) { var g = this.options, f = a.ui.keyCode; if (g.disabled || e.altKey || e.ctrlKey) { return } var d = this.headers.length; var b = this.headers.index(e.target); var c = false; switch (e.keyCode) { case f.RIGHT: case f.DOWN: c = this.headers[(b + 1) % d]; break; case f.LEFT: case f.UP: c = this.headers[(b - 1 + d) % d]; break; case f.SPACE: case f.ENTER: return this._clickHandler({ target: e.target }, e.target) } if (c) { a(e.target).attr("tabIndex", "-1"); a(c).attr("tabIndex", "0"); c.focus(); return false } return true }, resize: function () { var e = this.options, d; if (e.fillSpace) { if (a.browser.msie) { var b = this.element.parent().css("overflow"); this.element.parent().css("overflow", "hidden") } d = this.element.parent().height(); if (a.browser.msie) { this.element.parent().css("overflow", b) } this.headers.each(function () { d -= a(this).outerHeight() }); var c = 0; this.headers.next().each(function () { c = Math.max(c, a(this).innerHeight() - a(this).height()) }).height(Math.max(0, d - c)).css("overflow", "auto") } else { if (e.autoHeight) { d = 0; this.headers.next().each(function () { d = Math.max(d, a(this).outerHeight()) }).height(d) } } }, activate: function (b) { var c = this._findActive(b)[0]; this._clickHandler({ target: c }, c) }, _findActive: function (b) { return b ? typeof b == "number" ? this.headers.filter(":eq(" + b + ")") : this.headers.not(this.headers.not(b)) : b === false ? a([]) : this.headers.filter(":eq(0)") }, _clickHandler: function (b, f) { var d = this.options; if (d.disabled) { return false } if (!b.target && d.collapsible) { this.active.removeClass("ui-state-active ui-corner-top").addClass("ui-state-default ui-corner-all").find(".ui-icon").removeClass(d.icons.headerSelected).addClass(d.icons.header); this.active.next().addClass("ui-accordion-content-active"); var h = this.active.next(), e = { options: d, newHeader: a([]), oldHeader: d.active, newContent: a([]), oldContent: h }, c = (this.active = a([])); this._toggle(c, h, e); return false } var g = a(b.currentTarget || f); var i = g[0] == this.active[0]; if (this.running || (!d.collapsible && i)) { return false } this.active.removeClass("ui-state-active ui-corner-top").addClass("ui-state-default ui-corner-all").find(".ui-icon").removeClass(d.icons.headerSelected).addClass(d.icons.header); this.active.next().addClass("ui-accordion-content-active"); if (!i) { g.removeClass("ui-state-default ui-corner-all").addClass("ui-state-active ui-corner-top").find(".ui-icon").removeClass(d.icons.header).addClass(d.icons.headerSelected); g.next().addClass("ui-accordion-content-active") } var c = g.next(), h = this.active.next(), e = { options: d, newHeader: i && d.collapsible ? a([]) : g, oldHeader: this.active, newContent: i && d.collapsible ? a([]) : c.find("> *"), oldContent: h.find("> *") }, j = this.headers.index(this.active[0]) > this.headers.index(g[0]); this.active = i ? a([]) : g; this._toggle(c, h, e, i, j); return false }, _toggle: function (b, i, g, j, k) { var d = this.options, m = this; this.toShow = b; this.toHide = i; this.data = g; var c = function () { if (!m) { return } return m._completed.apply(m, arguments) }; this._trigger("changestart", null, this.data); this.running = i.size() === 0 ? b.size() : i.size(); if (d.animated) { var f = {}; if (d.collapsible && j) { f = { toShow: a([]), toHide: i, complete: c, down: k, autoHeight: d.autoHeight || d.fillSpace } } else { f = { toShow: b, toHide: i, complete: c, down: k, autoHeight: d.autoHeight || d.fillSpace } } if (!d.proxied) { d.proxied = d.animated } if (!d.proxiedDuration) { d.proxiedDuration = d.duration } d.animated = a.isFunction(d.proxied) ? d.proxied(f) : d.proxied; d.duration = a.isFunction(d.proxiedDuration) ? d.proxiedDuration(f) : d.proxiedDuration; var l = a.ui.accordion.animations, e = d.duration, h = d.animated; if (!l[h]) { l[h] = function (n) { this.slide(n, { easing: h, duration: e || 700 }) } } l[h](f) } else { if (d.collapsible && j) { b.toggle() } else { i.hide(); b.show() } c(true) } i.prev().attr("aria-expanded", "false").attr("tabIndex", "-1").blur(); b.prev().attr("aria-expanded", "true").attr("tabIndex", "0").focus() }, _completed: function (b) { var c = this.options; this.running = b ? 0 : --this.running; if (this.running) { return } if (c.clearStyle) { this.toShow.add(this.toHide).css({ height: "", overflow: "" }) } this._trigger("change", null, this.data) } }); a.extend(a.ui.accordion, { version: "1.7", defaults: { active: null, alwaysOpen: true, animated: "slide", autoHeight: true, clearStyle: false, collapsible: false, event: "click", fillSpace: false, header: "> li > :first-child,> :not(li):even", icons: { header: "ui-icon-triangle-1-e", headerSelected: "ui-icon-triangle-1-s" }, navigation: false, navigationFilter: function () { return this.href.toLowerCase() == location.href.toLowerCase() } }, animations: { slide: function (j, h) { j = a.extend({ easing: "swing", duration: 300 }, j, h); if (!j.toHide.size()) { j.toShow.animate({ height: "show" }, j); return } if (!j.toShow.size()) { j.toHide.animate({ height: "hide" }, j); return } var c = j.toShow.css("overflow"), g, d = {}, f = {}, e = ["height", "paddingTop", "paddingBottom"], b; var i = j.toShow; b = i[0].style.width; i.width(parseInt(i.parent().width(), 10) - parseInt(i.css("paddingLeft"), 10) - parseInt(i.css("paddingRight"), 10) - parseInt(i.css("borderLeftWidth"), 10) - parseInt(i.css("borderRightWidth"), 10)); a.each(e, function (k, m) { f[m] = "hide"; var l = ("" + a.css(j.toShow[0], m)).match(/^([\d+-.]+)(.*)$/); d[m] = { value: l[1], unit: l[2] || "px" } }); j.toShow.css({ height: 0, overflow: "hidden" }).show(); j.toHide.filter(":hidden").each(j.complete).end().filter(":visible").animate(f, { step: function (k, l) { if (l.prop == "height") { g = (l.now - l.start) / (l.end - l.start) } j.toShow[0].style[l.prop] = (g * d[l.prop].value) + d[l.prop].unit }, duration: j.duration, easing: j.easing, complete: function () { if (!j.autoHeight) { j.toShow.css("height", "") } j.toShow.css("width", b); j.toShow.css({ overflow: c }); j.complete() } }) }, bounceslide: function (b) { this.slide(b, { easing: b.down ? "easeOutBounce" : "swing", duration: b.down ? 1000 : 200 }) }, easeslide: function (b) { this.slide(b, { easing: "easeinout", duration: 700 }) } } }) })(jQuery); (function ($) { $.extend($.ui, { datepicker: { version: "1.7" } }); var PROP_NAME = "datepicker"; function Datepicker() { this.debug = false; this._curInst = null; this._keyEvent = false; this._disabledInputs = []; this._datepickerShowing = false; this._inDialog = false; this._mainDivId = "ui-datepicker-div"; this._inlineClass = "ui-datepicker-inline"; this._appendClass = "ui-datepicker-append"; this._triggerClass = "ui-datepicker-trigger"; this._dialogClass = "ui-datepicker-dialog"; this._disableClass = "ui-datepicker-disabled"; this._unselectableClass = "ui-datepicker-unselectable"; this._currentClass = "ui-datepicker-current-day"; this._dayOverClass = "ui-datepicker-days-cell-over"; this.regional = []; this.regional[""] = { closeText: "Done", prevText: "Prev", nextText: "Next", currentText: "Today", monthNames: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], monthNamesShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], dayNames: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], dayNamesShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], dayNamesMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"], dateFormat: "mm/dd/yy", firstDay: 0, isRTL: false }; this._defaults = { showOn: "focus", showAnim: "show", showOptions: {}, defaultDate: null, appendText: "", buttonText: "...", buttonImage: "", buttonImageOnly: false, hideIfNoPrevNext: false, navigationAsDateFormat: false, gotoCurrent: false, changeMonth: false, changeYear: false, showMonthAfterYear: false, yearRange: "-10:+10", showOtherMonths: false, calculateWeek: this.iso8601Week, shortYearCutoff: "+10", minDate: null, maxDate: null, duration: "normal", beforeShowDay: null, beforeShow: null, onSelect: null, onChangeMonthYear: null, onClose: null, numberOfMonths: 1, showCurrentAtPos: 0, stepMonths: 1, stepBigMonths: 12, altField: "", altFormat: "", constrainInput: true, showButtonPanel: false }; $.extend(this._defaults, this.regional[""]); this.dpDiv = $('<div id="' + this._mainDivId + '" class="ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all ui-helper-hidden-accessible"></div>') } $.extend(Datepicker.prototype, { markerClassName: "hasDatepicker", log: function () { if (this.debug) { console.log.apply("", arguments) } }, setDefaults: function (settings) { extendRemove(this._defaults, settings || {}); return this }, _attachDatepicker: function (target, settings) { var inlineSettings = null; for (var attrName in this._defaults) { var attrValue = target.getAttribute("date:" + attrName); if (attrValue) { inlineSettings = inlineSettings || {}; try { inlineSettings[attrName] = eval(attrValue) } catch (err) { inlineSettings[attrName] = attrValue } } } var nodeName = target.nodeName.toLowerCase(); var inline = (nodeName == "div" || nodeName == "span"); if (!target.id) { target.id = "dp" + (++this.uuid) } var inst = this._newInst($(target), inline); inst.settings = $.extend({}, settings || {}, inlineSettings || {}); if (nodeName == "input") { this._connectDatepicker(target, inst) } else { if (inline) { this._inlineDatepicker(target, inst) } } }, _newInst: function (target, inline) { var id = target[0].id.replace(/([:\[\]\.])/g, "\\\\$1"); return { id: id, input: target, selectedDay: 0, selectedMonth: 0, selectedYear: 0, drawMonth: 0, drawYear: 0, inline: inline, dpDiv: (!inline ? this.dpDiv : $('<div class="' + this._inlineClass + ' ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>')) } }, _connectDatepicker: function (target, inst) { var input = $(target); if (input.hasClass(this.markerClassName)) { return } var appendText = this._get(inst, "appendText"); var isRTL = this._get(inst, "isRTL"); if (appendText) { input[isRTL ? "before" : "after"]('<span class="' + this._appendClass + '">' + appendText + "</span>") } var showOn = this._get(inst, "showOn"); if (showOn == "focus" || showOn == "both") { input.focus(this._showDatepicker) } if (showOn == "button" || showOn == "both") { var buttonText = this._get(inst, "buttonText"); var buttonImage = this._get(inst, "buttonImage"); var trigger = $(this._get(inst, "buttonImageOnly") ? $("<img/>").addClass(this._triggerClass).attr({ src: buttonImage, alt: buttonText, title: buttonText }) : $('<button type="button"></button>').addClass(this._triggerClass).html(buttonImage == "" ? buttonText : $("<img/>").attr({ src: buttonImage, alt: buttonText, title: buttonText }))); input[isRTL ? "before" : "after"](trigger); trigger.click(function () { if ($.datepicker._datepickerShowing && $.datepicker._lastInput == target) { $.datepicker._hideDatepicker() } else { $.datepicker._showDatepicker(target) } return false }) } input.addClass(this.markerClassName).keydown(this._doKeyDown).keypress(this._doKeyPress).bind("setData.datepicker", function (event, key, value) { inst.settings[key] = value }).bind("getData.datepicker", function (event, key) { return this._get(inst, key) }); $.data(target, PROP_NAME, inst) }, _inlineDatepicker: function (target, inst) { var divSpan = $(target); if (divSpan.hasClass(this.markerClassName)) { return } divSpan.addClass(this.markerClassName).append(inst.dpDiv).bind("setData.datepicker", function (event, key, value) { inst.settings[key] = value }).bind("getData.datepicker", function (event, key) { return this._get(inst, key) }); $.data(target, PROP_NAME, inst); this._setDate(inst, this._getDefaultDate(inst)); this._updateDatepicker(inst); this._updateAlternate(inst) }, _dialogDatepicker: function (input, dateText, onSelect, settings, pos) { var inst = this._dialogInst; if (!inst) { var id = "dp" + (++this.uuid); this._dialogInput = $('<input type="text" id="' + id + '" size="1" style="position: absolute; top: -100px;"/>'); this._dialogInput.keydown(this._doKeyDown); $("body").append(this._dialogInput); inst = this._dialogInst = this._newInst(this._dialogInput, false); inst.settings = {}; $.data(this._dialogInput[0], PROP_NAME, inst) } extendRemove(inst.settings, settings || {}); this._dialogInput.val(dateText); this._pos = (pos ? (pos.length ? pos : [pos.pageX, pos.pageY]) : null); if (!this._pos) { var browserWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth; var browserHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight; var scrollX = document.documentElement.scrollLeft || document.body.scrollLeft; var scrollY = document.documentElement.scrollTop || document.body.scrollTop; this._pos = [(browserWidth / 2) - 100 + scrollX, (browserHeight / 2) - 150 + scrollY] } this._dialogInput.css("left", this._pos[0] + "px").css("top", this._pos[1] + "px"); inst.settings.onSelect = onSelect; this._inDialog = true; this.dpDiv.addClass(this._dialogClass); this._showDatepicker(this._dialogInput[0]); if ($.blockUI) { $.blockUI(this.dpDiv) } $.data(this._dialogInput[0], PROP_NAME, inst); return this }, _destroyDatepicker: function (target) { var $target = $(target); if (!$target.hasClass(this.markerClassName)) { return } var nodeName = target.nodeName.toLowerCase(); $.removeData(target, PROP_NAME); if (nodeName == "input") { $target.siblings("." + this._appendClass).remove().end().siblings("." + this._triggerClass).remove().end().removeClass(this.markerClassName).unbind("focus", this._showDatepicker).unbind("keydown", this._doKeyDown).unbind("keypress", this._doKeyPress) } else { if (nodeName == "div" || nodeName == "span") { $target.removeClass(this.markerClassName).empty() } } }, _enableDatepicker: function (target) { var $target = $(target); if (!$target.hasClass(this.markerClassName)) { return } var nodeName = target.nodeName.toLowerCase(); if (nodeName == "input") { target.disabled = false; $target.siblings("button." + this._triggerClass).each(function () { this.disabled = false }).end().siblings("img." + this._triggerClass).css({ opacity: "1.0", cursor: "" }) } else { if (nodeName == "div" || nodeName == "span") { var inline = $target.children("." + this._inlineClass); inline.children().removeClass("ui-state-disabled") } } this._disabledInputs = $.map(this._disabledInputs, function (value) { return (value == target ? null : value) }) }, _disableDatepicker: function (target) { var $target = $(target); if (!$target.hasClass(this.markerClassName)) { return } var nodeName = target.nodeName.toLowerCase(); if (nodeName == "input") { target.disabled = true; $target.siblings("button." + this._triggerClass).each(function () { this.disabled = true }).end().siblings("img." + this._triggerClass).css({ opacity: "0.5", cursor: "default" }) } else { if (nodeName == "div" || nodeName == "span") { var inline = $target.children("." + this._inlineClass); inline.children().addClass("ui-state-disabled") } } this._disabledInputs = $.map(this._disabledInputs, function (value) { return (value == target ? null : value) }); this._disabledInputs[this._disabledInputs.length] = target }, _isDisabledDatepicker: function (target) { if (!target) { return false } for (var i = 0; i < this._disabledInputs.length; i++) { if (this._disabledInputs[i] == target) { return true } } return false }, _getInst: function (target) { try { return $.data(target, PROP_NAME) } catch (err) { throw "Missing instance data for this datepicker" } }, _optionDatepicker: function (target, name, value) { var settings = name || {}; if (typeof name == "string") { settings = {}; settings[name] = value } var inst = this._getInst(target); if (inst) { if (this._curInst == inst) { this._hideDatepicker(null) } extendRemove(inst.settings, settings); var date = new Date(); extendRemove(inst, { rangeStart: null, endDay: null, endMonth: null, endYear: null, selectedDay: date.getDate(), selectedMonth: date.getMonth(), selectedYear: date.getFullYear(), currentDay: date.getDate(), currentMonth: date.getMonth(), currentYear: date.getFullYear(), drawMonth: date.getMonth(), drawYear: date.getFullYear() }); this._updateDatepicker(inst) } }, _changeDatepicker: function (target, name, value) { this._optionDatepicker(target, name, value) }, _refreshDatepicker: function (target) { var inst = this._getInst(target); if (inst) { this._updateDatepicker(inst) } }, _setDateDatepicker: function (target, date, endDate) { var inst = this._getInst(target); if (inst) { this._setDate(inst, date, endDate); this._updateDatepicker(inst); this._updateAlternate(inst) } }, _getDateDatepicker: function (target) { var inst = this._getInst(target); if (inst && !inst.inline) { this._setDateFromField(inst) } return (inst ? this._getDate(inst) : null) }, _doKeyDown: function (event) { var inst = $.datepicker._getInst(event.target); var handled = true; var isRTL = inst.dpDiv.is(".ui-datepicker-rtl"); inst._keyEvent = true; if ($.datepicker._datepickerShowing) { switch (event.keyCode) { case 9: $.datepicker._hideDatepicker(null, ""); break; case 13: var sel = $("td." + $.datepicker._dayOverClass + ", td." + $.datepicker._currentClass, inst.dpDiv); if (sel[0]) { $.datepicker._selectDay(event.target, inst.selectedMonth, inst.selectedYear, sel[0]) } else { $.datepicker._hideDatepicker(null, $.datepicker._get(inst, "duration")) } return false; break; case 27: $.datepicker._hideDatepicker(null, $.datepicker._get(inst, "duration")); break; case 33: $.datepicker._adjustDate(event.target, (event.ctrlKey ? -$.datepicker._get(inst, "stepBigMonths") : -$.datepicker._get(inst, "stepMonths")), "M"); break; case 34: $.datepicker._adjustDate(event.target, (event.ctrlKey ? +$.datepicker._get(inst, "stepBigMonths") : +$.datepicker._get(inst, "stepMonths")), "M"); break; case 35: if (event.ctrlKey || event.metaKey) { $.datepicker._clearDate(event.target) } handled = event.ctrlKey || event.metaKey; break; case 36: if (event.ctrlKey || event.metaKey) { $.datepicker._gotoToday(event.target) } handled = event.ctrlKey || event.metaKey; break; case 37: if (event.ctrlKey || event.metaKey) { $.datepicker._adjustDate(event.target, (isRTL ? +1 : -1), "D") } handled = event.ctrlKey || event.metaKey; if (event.originalEvent.altKey) { $.datepicker._adjustDate(event.target, (event.ctrlKey ? -$.datepicker._get(inst, "stepBigMonths") : -$.datepicker._get(inst, "stepMonths")), "M") } break; case 38: if (event.ctrlKey || event.metaKey) { $.datepicker._adjustDate(event.target, -7, "D") } handled = event.ctrlKey || event.metaKey; break; case 39: if (event.ctrlKey || event.metaKey) { $.datepicker._adjustDate(event.target, (isRTL ? -1 : +1), "D") } handled = event.ctrlKey || event.metaKey; if (event.originalEvent.altKey) { $.datepicker._adjustDate(event.target, (event.ctrlKey ? +$.datepicker._get(inst, "stepBigMonths") : +$.datepicker._get(inst, "stepMonths")), "M") } break; case 40: if (event.ctrlKey || event.metaKey) { $.datepicker._adjustDate(event.target, +7, "D") } handled = event.ctrlKey || event.metaKey; break; default: handled = false } } else { if (event.keyCode == 36 && event.ctrlKey) { $.datepicker._showDatepicker(this) } else { handled = false } } if (handled) { event.preventDefault(); event.stopPropagation() } }, _doKeyPress: function (event) { var inst = $.datepicker._getInst(event.target); if ($.datepicker._get(inst, "constrainInput")) { var chars = $.datepicker._possibleChars($.datepicker._get(inst, "dateFormat")); var chr = String.fromCharCode(event.charCode == undefined ? event.keyCode : event.charCode); return event.ctrlKey || (chr < " " || !chars || chars.indexOf(chr) > -1) } }, _showDatepicker: function (input) { input = input.target || input; if (input.nodeName.toLowerCase() != "input") { input = $("input", input.parentNode)[0] } if ($.datepicker._isDisabledDatepicker(input) || $.datepicker._lastInput == input) { return } var inst = $.datepicker._getInst(input); var beforeShow = $.datepicker._get(inst, "beforeShow"); extendRemove(inst.settings, (beforeShow ? beforeShow.apply(input, [input, inst]) : {})); $.datepicker._hideDatepicker(null, ""); $.datepicker._lastInput = input; $.datepicker._setDateFromField(inst); if ($.datepicker._inDialog) { input.value = "" } if (!$.datepicker._pos) { $.datepicker._pos = $.datepicker._findPos(input); $.datepicker._pos[1] += input.offsetHeight } var isFixed = false; $(input).parents().each(function () { isFixed |= $(this).css("position") == "fixed"; return !isFixed }); if (isFixed && $.browser.opera) { $.datepicker._pos[0] -= document.documentElement.scrollLeft; $.datepicker._pos[1] -= document.documentElement.scrollTop } var offset = { left: $.datepicker._pos[0], top: $.datepicker._pos[1] }; $.datepicker._pos = null; inst.rangeStart = null; inst.dpDiv.css({ position: "absolute", display: "block", top: "-1000px" }); $.datepicker._updateDatepicker(inst); offset = $.datepicker._checkOffset(inst, offset, isFixed); inst.dpDiv.css({ position: ($.datepicker._inDialog && $.blockUI ? "static" : (isFixed ? "fixed" : "absolute")), display: "none", left: offset.left + "px", top: offset.top + "px" }); if (!inst.inline) { var showAnim = $.datepicker._get(inst, "showAnim") || "show"; var duration = $.datepicker._get(inst, "duration"); var postProcess = function () { $.datepicker._datepickerShowing = true; if ($.browser.msie && parseInt($.browser.version, 10) < 7) { $("iframe.ui-datepicker-cover").css({ width: inst.dpDiv.width() + 4, height: inst.dpDiv.height() + 4 }) } }; if ($.effects && $.effects[showAnim]) { inst.dpDiv.show(showAnim, $.datepicker._get(inst, "showOptions"), duration, postProcess) } else { inst.dpDiv[showAnim](duration, postProcess) } if (duration == "") { postProcess() } if (inst.input[0].type != "hidden") { inst.input[0].focus() } $.datepicker._curInst = inst } }, _updateDatepicker: function (inst) { var dims = { width: inst.dpDiv.width() + 4, height: inst.dpDiv.height() + 4 }; var self = this; inst.dpDiv.empty().append(this._generateHTML(inst)).find("iframe.ui-datepicker-cover").css({ width: dims.width, height: dims.height }).end().find("button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a").bind("mouseout", function () { $(this).removeClass("ui-state-hover"); if (this.className.indexOf("ui-datepicker-prev") != -1) { $(this).removeClass("ui-datepicker-prev-hover") } if (this.className.indexOf("ui-datepicker-next") != -1) { $(this).removeClass("ui-datepicker-next-hover") } }).bind("mouseover", function () { if (!self._isDisabledDatepicker(inst.inline ? inst.dpDiv.parent()[0] : inst.input[0])) { $(this).parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover"); $(this).addClass("ui-state-hover"); if (this.className.indexOf("ui-datepicker-prev") != -1) { $(this).addClass("ui-datepicker-prev-hover") } if (this.className.indexOf("ui-datepicker-next") != -1) { $(this).addClass("ui-datepicker-next-hover") } } }).end().find("." + this._dayOverClass + " a").trigger("mouseover").end(); var numMonths = this._getNumberOfMonths(inst); var cols = numMonths[1]; var width = 17; if (cols > 1) { inst.dpDiv.addClass("ui-datepicker-multi-" + cols).css("width", (width * cols) + "em") } else { inst.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width("") } inst.dpDiv[(numMonths[0] != 1 || numMonths[1] != 1 ? "add" : "remove") + "Class"]("ui-datepicker-multi"); inst.dpDiv[(this._get(inst, "isRTL") ? "add" : "remove") + "Class"]("ui-datepicker-rtl"); if (inst.input && inst.input[0].type != "hidden" && inst == $.datepicker._curInst) { $(inst.input[0]).focus() } }, _checkOffset: function (inst, offset, isFixed) { var dpWidth = inst.dpDiv.outerWidth(); var dpHeight = inst.dpDiv.outerHeight(); var inputWidth = inst.input ? inst.input.outerWidth() : 0; var inputHeight = inst.input ? inst.input.outerHeight() : 0; var viewWidth = (window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth) + $(document).scrollLeft(); var viewHeight = (window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight) + $(document).scrollTop(); offset.left -= (this._get(inst, "isRTL") ? (dpWidth - inputWidth) : 0); offset.left -= (isFixed && offset.left == inst.input.offset().left) ? $(document).scrollLeft() : 0; offset.top -= (isFixed && offset.top == (inst.input.offset().top + inputHeight)) ? $(document).scrollTop() : 0; offset.left -= (offset.left + dpWidth > viewWidth && viewWidth > dpWidth) ? Math.abs(offset.left + dpWidth - viewWidth) : 0; offset.top -= (offset.top + dpHeight > viewHeight && viewHeight > dpHeight) ? Math.abs(offset.top + dpHeight + inputHeight * 2 - viewHeight) : 0; return offset }, _findPos: function (obj) { while (obj && (obj.type == "hidden" || obj.nodeType != 1)) { obj = obj.nextSibling } var position = $(obj).offset(); return [position.left, position.top] }, _hideDatepicker: function (input, duration) { var inst = this._curInst; if (!inst || (input && inst != $.data(input, PROP_NAME))) { return } if (inst.stayOpen) { this._selectDate("#" + inst.id, this._formatDate(inst, inst.currentDay, inst.currentMonth, inst.currentYear)) } inst.stayOpen = false; if (this._datepickerShowing) { duration = (duration != null ? duration : this._get(inst, "duration")); var showAnim = this._get(inst, "showAnim"); var postProcess = function () { $.datepicker._tidyDialog(inst) }; if (duration != "" && $.effects && $.effects[showAnim]) { inst.dpDiv.hide(showAnim, $.datepicker._get(inst, "showOptions"), duration, postProcess) } else { inst.dpDiv[(duration == "" ? "hide" : (showAnim == "slideDown" ? "slideUp" : (showAnim == "fadeIn" ? "fadeOut" : "hide")))](duration, postProcess) } if (duration == "") { this._tidyDialog(inst) } var onClose = this._get(inst, "onClose"); if (onClose) { onClose.apply((inst.input ? inst.input[0] : null), [(inst.input ? inst.input.val() : ""), inst]) } this._datepickerShowing = false; this._lastInput = null; if (this._inDialog) { this._dialogInput.css({ position: "absolute", left: "0", top: "-100px" }); if ($.blockUI) { $.unblockUI(); $("body").append(this.dpDiv) } } this._inDialog = false } this._curInst = null }, _tidyDialog: function (inst) { inst.dpDiv.removeClass(this._dialogClass).unbind(".ui-datepicker-calendar") }, _checkExternalClick: function (event) { if (!$.datepicker._curInst) { return } var $target = $(event.target); if (($target.parents("#" + $.datepicker._mainDivId).length == 0) && !$target.hasClass($.datepicker.markerClassName) && !$target.hasClass($.datepicker._triggerClass) && $.datepicker._datepickerShowing && !($.datepicker._inDialog && $.blockUI)) { $.datepicker._hideDatepicker(null, "") } }, _adjustDate: function (id, offset, period) { var target = $(id); var inst = this._getInst(target[0]); if (this._isDisabledDatepicker(target[0])) { return } this._adjustInstDate(inst, offset + (period == "M" ? this._get(inst, "showCurrentAtPos") : 0), period); this._updateDatepicker(inst) }, _gotoToday: function (id) { var target = $(id); var inst = this._getInst(target[0]); if (this._get(inst, "gotoCurrent") && inst.currentDay) { inst.selectedDay = inst.currentDay; inst.drawMonth = inst.selectedMonth = inst.currentMonth; inst.drawYear = inst.selectedYear = inst.currentYear } else { var date = new Date(); inst.selectedDay = date.getDate(); inst.drawMonth = inst.selectedMonth = date.getMonth(); inst.drawYear = inst.selectedYear = date.getFullYear() } this._notifyChange(inst); this._adjustDate(target) }, _selectMonthYear: function (id, select, period) { var target = $(id); var inst = this._getInst(target[0]); inst._selectingMonthYear = false; inst["selected" + (period == "M" ? "Month" : "Year")] = inst["draw" + (period == "M" ? "Month" : "Year")] = parseInt(select.options[select.selectedIndex].value, 10); this._notifyChange(inst); this._adjustDate(target) }, _clickMonthYear: function (id) { var target = $(id); var inst = this._getInst(target[0]); if (inst.input && inst._selectingMonthYear && !$.browser.msie) { inst.input[0].focus() } inst._selectingMonthYear = !inst._selectingMonthYear }, _selectDay: function (id, month, year, td) { var target = $(id); if ($(td).hasClass(this._unselectableClass) || this._isDisabledDatepicker(target[0])) { return } var inst = this._getInst(target[0]); inst.selectedDay = inst.currentDay = $("a", td).html(); inst.selectedMonth = inst.currentMonth = month; inst.selectedYear = inst.currentYear = year; if (inst.stayOpen) { inst.endDay = inst.endMonth = inst.endYear = null } this._selectDate(id, this._formatDate(inst, inst.currentDay, inst.currentMonth, inst.currentYear)); if (inst.stayOpen) { inst.rangeStart = this._daylightSavingAdjust(new Date(inst.currentYear, inst.currentMonth, inst.currentDay)); this._updateDatepicker(inst) } }, _clearDate: function (id) { var target = $(id); var inst = this._getInst(target[0]); inst.stayOpen = false; inst.endDay = inst.endMonth = inst.endYear = inst.rangeStart = null; this._selectDate(target, "") }, _selectDate: function (id, dateStr) { var target = $(id); var inst = this._getInst(target[0]); dateStr = (dateStr != null ? dateStr : this._formatDate(inst)); if (inst.input) { inst.input.val(dateStr) } this._updateAlternate(inst); var onSelect = this._get(inst, "onSelect"); if (onSelect) { onSelect.apply((inst.input ? inst.input[0] : null), [dateStr, inst]) } else { if (inst.input) { inst.input.trigger("change") } } if (inst.inline) { this._updateDatepicker(inst) } else { if (!inst.stayOpen) { this._hideDatepicker(null, this._get(inst, "duration")); this._lastInput = inst.input[0]; if (typeof (inst.input[0]) != "object") { inst.input[0].focus() } this._lastInput = null } } }, _updateAlternate: function (inst) { var altField = this._get(inst, "altField"); if (altField) { var altFormat = this._get(inst, "altFormat") || this._get(inst, "dateFormat"); var date = this._getDate(inst); dateStr = this.formatDate(altFormat, date, this._getFormatConfig(inst)); $(altField).each(function () { $(this).val(dateStr) }) } }, noWeekends: function (date) { var day = date.getDay(); return [(day > 0 && day < 6), ""] }, iso8601Week: function (date) { var checkDate = new Date(date.getFullYear(), date.getMonth(), date.getDate()); var firstMon = new Date(checkDate.getFullYear(), 1 - 1, 4); var firstDay = firstMon.getDay() || 7; firstMon.setDate(firstMon.getDate() + 1 - firstDay); if (firstDay < 4 && checkDate < firstMon) { checkDate.setDate(checkDate.getDate() - 3); return $.datepicker.iso8601Week(checkDate) } else { if (checkDate > new Date(checkDate.getFullYear(), 12 - 1, 28)) { firstDay = new Date(checkDate.getFullYear() + 1, 1 - 1, 4).getDay() || 7; if (firstDay > 4 && (checkDate.getDay() || 7) < firstDay - 3) { return 1 } } } return Math.floor(((checkDate - firstMon) / 86400000) / 7) + 1 }, parseDate: function (format, value, settings) { if (format == null || value == null) { throw "Invalid arguments" } value = (typeof value == "object" ? value.toString() : value + ""); if (value == "") { return null } var shortYearCutoff = (settings ? settings.shortYearCutoff : null) || this._defaults.shortYearCutoff; var dayNamesShort = (settings ? settings.dayNamesShort : null) || this._defaults.dayNamesShort; var dayNames = (settings ? settings.dayNames : null) || this._defaults.dayNames; var monthNamesShort = (settings ? settings.monthNamesShort : null) || this._defaults.monthNamesShort; var monthNames = (settings ? settings.monthNames : null) || this._defaults.monthNames; var year = -1; var month = -1; var day = -1; var doy = -1; var literal = false; var lookAhead = function (match) { var matches = (iFormat + 1 < format.length && format.charAt(iFormat + 1) == match); if (matches) { iFormat++ } return matches }; var getNumber = function (match) { lookAhead(match); var origSize = (match == "@" ? 14 : (match == "y" ? 4 : (match == "o" ? 3 : 2))); var size = origSize; var num = 0; while (size > 0 && iValue < value.length && value.charAt(iValue) >= "0" && value.charAt(iValue) <= "9") { num = num * 10 + parseInt(value.charAt(iValue++), 10); size-- } if (size == origSize) { throw "Missing number at position " + iValue } return num }; var getName = function (match, shortNames, longNames) { var names = (lookAhead(match) ? longNames : shortNames); var size = 0; for (var j = 0; j < names.length; j++) { size = Math.max(size, names[j].length) } var name = ""; var iInit = iValue; while (size > 0 && iValue < value.length) { name += value.charAt(iValue++); for (var i = 0; i < names.length; i++) { if (name == names[i]) { return i + 1 } } size-- } throw "Unknown name at position " + iInit }; var checkLiteral = function () { if (value.charAt(iValue) != format.charAt(iFormat)) { throw "Unexpected literal at position " + iValue } iValue++ }; var iValue = 0; for (var iFormat = 0; iFormat < format.length; iFormat++) { if (literal) { if (format.charAt(iFormat) == "'" && !lookAhead("'")) { literal = false } else { checkLiteral() } } else { switch (format.charAt(iFormat)) { case "d": day = getNumber("d"); break; case "D": getName("D", dayNamesShort, dayNames); break; case "o": doy = getNumber("o"); break; case "m": month = getNumber("m"); break; case "M": month = getName("M", monthNamesShort, monthNames); break; case "y": year = getNumber("y"); break; case "@": var date = new Date(getNumber("@")); year = date.getFullYear(); month = date.getMonth() + 1; day = date.getDate(); break; case "'": if (lookAhead("'")) { checkLiteral() } else { literal = true } break; default: checkLiteral() } } } if (year == -1) { year = new Date().getFullYear() } else { if (year < 100) { year += new Date().getFullYear() - new Date().getFullYear() % 100 + (year <= shortYearCutoff ? 0 : -100) } } if (doy > -1) { month = 1; day = doy; do { var dim = this._getDaysInMonth(year, month - 1); if (day <= dim) { break } month++; day -= dim } while (true) } var date = this._daylightSavingAdjust(new Date(year, month - 1, day)); if (date.getFullYear() != year || date.getMonth() + 1 != month || date.getDate() != day) { throw "Invalid date" } return date }, ATOM: "yy-mm-dd", COOKIE: "D, dd M yy", ISO_8601: "yy-mm-dd", RFC_822: "D, d M y", RFC_850: "DD, dd-M-y", RFC_1036: "D, d M y", RFC_1123: "D, d M yy", RFC_2822: "D, d M yy", RSS: "D, d M y", TIMESTAMP: "@", W3C: "yy-mm-dd", formatDate: function (format, date, settings) { if (!date) { return "" } var dayNamesShort = (settings ? settings.dayNamesShort : null) || this._defaults.dayNamesShort; var dayNames = (settings ? settings.dayNames : null) || this._defaults.dayNames; var monthNamesShort = (settings ? settings.monthNamesShort : null) || this._defaults.monthNamesShort; var monthNames = (settings ? settings.monthNames : null) || this._defaults.monthNames; var lookAhead = function (match) { var matches = (iFormat + 1 < format.length && format.charAt(iFormat + 1) == match); if (matches) { iFormat++ } return matches }; var formatNumber = function (match, value, len) { var num = "" + value; if (lookAhead(match)) { while (num.length < len) { num = "0" + num } } return num }; var formatName = function (match, value, shortNames, longNames) { return (lookAhead(match) ? longNames[value] : shortNames[value]) }; var output = ""; var literal = false; if (date) { for (var iFormat = 0; iFormat < format.length; iFormat++) { if (literal) { if (format.charAt(iFormat) == "'" && !lookAhead("'")) { literal = false } else { output += format.charAt(iFormat) } } else { switch (format.charAt(iFormat)) { case "d": output += formatNumber("d", date.getDate(), 2); break; case "D": output += formatName("D", date.getDay(), dayNamesShort, dayNames); break; case "o": var doy = date.getDate(); for (var m = date.getMonth() - 1; m >= 0; m--) { doy += this._getDaysInMonth(date.getFullYear(), m) } output += formatNumber("o", doy, 3); break; case "m": output += formatNumber("m", date.getMonth() + 1, 2); break; case "M": output += formatName("M", date.getMonth(), monthNamesShort, monthNames); break; case "y": output += (lookAhead("y") ? date.getFullYear() : (date.getYear() % 100 < 10 ? "0" : "") + date.getYear() % 100); break; case "@": output += date.getTime(); break; case "'": if (lookAhead("'")) { output += "'" } else { literal = true } break; default: output += format.charAt(iFormat) } } } } return output }, _possibleChars: function (format) { var chars = ""; var literal = false; for (var iFormat = 0; iFormat < format.length; iFormat++) { if (literal) { if (format.charAt(iFormat) == "'" && !lookAhead("'")) { literal = false } else { chars += format.charAt(iFormat) } } else { switch (format.charAt(iFormat)) { case "d": case "m": case "y": case "@": chars += "0123456789"; break; case "D": case "M": return null; case "'": if (lookAhead("'")) { chars += "'" } else { literal = true } break; default: chars += format.charAt(iFormat) } } } return chars }, _get: function (inst, name) { return inst.settings[name] !== undefined ? inst.settings[name] : this._defaults[name] }, _setDateFromField: function (inst) { var dateFormat = this._get(inst, "dateFormat"); var dates = inst.input ? inst.input.val() : null; inst.endDay = inst.endMonth = inst.endYear = null; var date = defaultDate = this._getDefaultDate(inst); var settings = this._getFormatConfig(inst); try { date = this.parseDate(dateFormat, dates, settings) || defaultDate } catch (event) { this.log(event); date = defaultDate } inst.selectedDay = date.getDate(); inst.drawMonth = inst.selectedMonth = date.getMonth(); inst.drawYear = inst.selectedYear = date.getFullYear(); inst.currentDay = (dates ? date.getDate() : 0); inst.currentMonth = (dates ? date.getMonth() : 0); inst.currentYear = (dates ? date.getFullYear() : 0); this._adjustInstDate(inst) }, _getDefaultDate: function (inst) { var date = this._determineDate(this._get(inst, "defaultDate"), new Date()); var minDate = this._getMinMaxDate(inst, "min", true); var maxDate = this._getMinMaxDate(inst, "max"); date = (minDate && date < minDate ? minDate : date); date = (maxDate && date > maxDate ? maxDate : date); return date }, _determineDate: function (date, defaultDate) { var offsetNumeric = function (offset) { var date = new Date(); date.setDate(date.getDate() + offset); return date }; var offsetString = function (offset, getDaysInMonth) { var date = new Date(); var year = date.getFullYear(); var month = date.getMonth(); var day = date.getDate(); var pattern = /([+-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g; var matches = pattern.exec(offset); while (matches) { switch (matches[2] || "d") { case "d": case "D": day += parseInt(matches[1], 10); break; case "w": case "W": day += parseInt(matches[1], 10) * 7; break; case "m": case "M": month += parseInt(matches[1], 10); day = Math.min(day, getDaysInMonth(year, month)); break; case "y": case "Y": year += parseInt(matches[1], 10); day = Math.min(day, getDaysInMonth(year, month)); break } matches = pattern.exec(offset) } return new Date(year, month, day) }; date = (date == null ? defaultDate : (typeof date == "string" ? offsetString(date, this._getDaysInMonth) : (typeof date == "number" ? (isNaN(date) ? defaultDate : offsetNumeric(date)) : date))); date = (date && date.toString() == "Invalid Date" ? defaultDate : date); if (date) { date.setHours(0); date.setMinutes(0); date.setSeconds(0); date.setMilliseconds(0) } return this._daylightSavingAdjust(date) }, _daylightSavingAdjust: function (date) { if (!date) { return null } date.setHours(date.getHours() > 12 ? date.getHours() + 2 : 0); return date }, _setDate: function (inst, date, endDate) { var clear = !(date); var origMonth = inst.selectedMonth; var origYear = inst.selectedYear; date = this._determineDate(date, new Date()); inst.selectedDay = inst.currentDay = date.getDate(); inst.drawMonth = inst.selectedMonth = inst.currentMonth = date.getMonth(); inst.drawYear = inst.selectedYear = inst.currentYear = date.getFullYear(); if (origMonth != inst.selectedMonth || origYear != inst.selectedYear) { this._notifyChange(inst) } this._adjustInstDate(inst); if (inst.input) { inst.input.val(clear ? "" : this._formatDate(inst)) } }, _getDate: function (inst) { var startDate = (!inst.currentYear || (inst.input && inst.input.val() == "") ? null : this._daylightSavingAdjust(new Date(inst.currentYear, inst.currentMonth, inst.currentDay))); return startDate }, _generateHTML: function (inst) { var today = new Date(); today = this._daylightSavingAdjust(new Date(today.getFullYear(), today.getMonth(), today.getDate())); var isRTL = this._get(inst, "isRTL"); var showButtonPanel = this._get(inst, "showButtonPanel"); var hideIfNoPrevNext = this._get(inst, "hideIfNoPrevNext"); var navigationAsDateFormat = this._get(inst, "navigationAsDateFormat"); var numMonths = this._getNumberOfMonths(inst); var showCurrentAtPos = this._get(inst, "showCurrentAtPos"); var stepMonths = this._get(inst, "stepMonths"); var stepBigMonths = this._get(inst, "stepBigMonths"); var isMultiMonth = (numMonths[0] != 1 || numMonths[1] != 1); var currentDate = this._daylightSavingAdjust((!inst.currentDay ? new Date(9999, 9, 9) : new Date(inst.currentYear, inst.currentMonth, inst.currentDay))); var minDate = this._getMinMaxDate(inst, "min", true); var maxDate = this._getMinMaxDate(inst, "max"); var drawMonth = inst.drawMonth - showCurrentAtPos; var drawYear = inst.drawYear; if (drawMonth < 0) { drawMonth += 12; drawYear-- } if (maxDate) { var maxDraw = this._daylightSavingAdjust(new Date(maxDate.getFullYear(), maxDate.getMonth() - numMonths[1] + 1, maxDate.getDate())); maxDraw = (minDate && maxDraw < minDate ? minDate : maxDraw); while (this._daylightSavingAdjust(new Date(drawYear, drawMonth, 1)) > maxDraw) { drawMonth--; if (drawMonth < 0) { drawMonth = 11; drawYear-- } } } inst.drawMonth = drawMonth; inst.drawYear = drawYear; var prevText = this._get(inst, "prevText"); prevText = (!navigationAsDateFormat ? prevText : this.formatDate(prevText, this._daylightSavingAdjust(new Date(drawYear, drawMonth - stepMonths, 1)), this._getFormatConfig(inst))); var prev = (this._canAdjustMonth(inst, -1, drawYear, drawMonth) ? '<a class="ui-datepicker-prev ui-corner-all" onclick="DP_jQuery.datepicker._adjustDate(\'#' + inst.id + "', -" + stepMonths + ", 'M');\" title=\"" + prevText + '"><span class="ui-icon ui-icon-circle-triangle-' + (isRTL ? "e" : "w") + '">' + prevText + "</span></a>" : (hideIfNoPrevNext ? "" : '<a class="ui-datepicker-prev ui-corner-all ui-state-disabled" title="' + prevText + '"><span class="ui-icon ui-icon-circle-triangle-' + (isRTL ? "e" : "w") + '">' + prevText + "</span></a>")); var nextText = this._get(inst, "nextText"); nextText = (!navigationAsDateFormat ? nextText : this.formatDate(nextText, this._daylightSavingAdjust(new Date(drawYear, drawMonth + stepMonths, 1)), this._getFormatConfig(inst))); var next = (this._canAdjustMonth(inst, +1, drawYear, drawMonth) ? '<a class="ui-datepicker-next ui-corner-all" onclick="DP_jQuery.datepicker._adjustDate(\'#' + inst.id + "', +" + stepMonths + ", 'M');\" title=\"" + nextText + '"><span class="ui-icon ui-icon-circle-triangle-' + (isRTL ? "w" : "e") + '">' + nextText + "</span></a>" : (hideIfNoPrevNext ? "" : '<a class="ui-datepicker-next ui-corner-all ui-state-disabled" title="' + nextText + '"><span class="ui-icon ui-icon-circle-triangle-' + (isRTL ? "w" : "e") + '">' + nextText + "</span></a>")); var currentText = this._get(inst, "currentText"); var gotoDate = (this._get(inst, "gotoCurrent") && inst.currentDay ? currentDate : today); currentText = (!navigationAsDateFormat ? currentText : this.formatDate(currentText, gotoDate, this._getFormatConfig(inst))); var controls = (!inst.inline ? '<button type="button" class="ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all" onclick="DP_jQuery.datepicker._hideDatepicker();">' + this._get(inst, "closeText") + "</button>" : ""); var buttonPanel = (showButtonPanel) ? '<div class="ui-datepicker-buttonpane ui-widget-content">' + (isRTL ? controls : "") + (this._isInRange(inst, gotoDate) ? '<button type="button" class="ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all" onclick="DP_jQuery.datepicker._gotoToday(\'#' + inst.id + "');\">" + currentText + "</button>" : "") + (isRTL ? "" : controls) + "</div>" : ""; var firstDay = parseInt(this._get(inst, "firstDay"), 10); firstDay = (isNaN(firstDay) ? 0 : firstDay); var dayNames = this._get(inst, "dayNames"); var dayNamesShort = this._get(inst, "dayNamesShort"); var dayNamesMin = this._get(inst, "dayNamesMin"); var monthNames = this._get(inst, "monthNames"); var monthNamesShort = this._get(inst, "monthNamesShort"); var beforeShowDay = this._get(inst, "beforeShowDay"); var showOtherMonths = this._get(inst, "showOtherMonths"); var calculateWeek = this._get(inst, "calculateWeek") || this.iso8601Week; var endDate = inst.endDay ? this._daylightSavingAdjust(new Date(inst.endYear, inst.endMonth, inst.endDay)) : currentDate; var defaultDate = this._getDefaultDate(inst); var html = ""; for (var row = 0; row < numMonths[0]; row++) { var group = ""; for (var col = 0; col < numMonths[1]; col++) { var selectedDate = this._daylightSavingAdjust(new Date(drawYear, drawMonth, inst.selectedDay)); var cornerClass = " ui-corner-all"; var calender = ""; if (isMultiMonth) { calender += '<div class="ui-datepicker-group ui-datepicker-group-'; switch (col) { case 0: calender += "first"; cornerClass = " ui-corner-" + (isRTL ? "right" : "left"); break; case numMonths[1] - 1: calender += "last"; cornerClass = " ui-corner-" + (isRTL ? "left" : "right"); break; default: calender += "middle"; cornerClass = ""; break } calender += '">' } calender += '<div class="ui-datepicker-header ui-widget-header ui-helper-clearfix' + cornerClass + '">' + (/all|left/.test(cornerClass) && row == 0 ? (isRTL ? next : prev) : "") + (/all|right/.test(cornerClass) && row == 0 ? (isRTL ? prev : next) : "") + this._generateMonthYearHeader(inst, drawMonth, drawYear, minDate, maxDate, selectedDate, row > 0 || col > 0, monthNames, monthNamesShort) + '</div><table class="ui-datepicker-calendar"><thead><tr>'; var thead = ""; for (var dow = 0; dow < 7; dow++) { var day = (dow + firstDay) % 7; thead += "<th" + ((dow + firstDay + 6) % 7 >= 5 ? ' class="ui-datepicker-week-end"' : "") + '><span title="' + dayNames[day] + '">' + dayNamesMin[day] + "</span></th>" } calender += thead + "</tr></thead><tbody>"; var daysInMonth = this._getDaysInMonth(drawYear, drawMonth); if (drawYear == inst.selectedYear && drawMonth == inst.selectedMonth) { inst.selectedDay = Math.min(inst.selectedDay, daysInMonth) } var leadDays = (this._getFirstDayOfMonth(drawYear, drawMonth) - firstDay + 7) % 7; var numRows = (isMultiMonth ? 6 : Math.ceil((leadDays + daysInMonth) / 7)); var printDate = this._daylightSavingAdjust(new Date(drawYear, drawMonth, 1 - leadDays)); for (var dRow = 0; dRow < numRows; dRow++) { calender += "<tr>"; var tbody = ""; for (var dow = 0; dow < 7; dow++) { var daySettings = (beforeShowDay ? beforeShowDay.apply((inst.input ? inst.input[0] : null), [printDate]) : [true, ""]); var otherMonth = (printDate.getMonth() != drawMonth); var unselectable = otherMonth || !daySettings[0] || (minDate && printDate < minDate) || (maxDate && printDate > maxDate); tbody += '<td class="' + ((dow + firstDay + 6) % 7 >= 5 ? " ui-datepicker-week-end" : "") + (otherMonth ? " ui-datepicker-other-month" : "") + ((printDate.getTime() == selectedDate.getTime() && drawMonth == inst.selectedMonth && inst._keyEvent) || (defaultDate.getTime() == printDate.getTime() && defaultDate.getTime() == selectedDate.getTime()) ? " " + this._dayOverClass : "") + (unselectable ? " " + this._unselectableClass + " ui-state-disabled" : "") + (otherMonth && !showOtherMonths ? "" : " " + daySettings[1] + (printDate.getTime() >= currentDate.getTime() && printDate.getTime() <= endDate.getTime() ? " " + this._currentClass : "") + (printDate.getTime() == today.getTime() ? " ui-datepicker-today" : "")) + '"' + ((!otherMonth || showOtherMonths) && daySettings[2] ? ' title="' + daySettings[2] + '"' : "") + (unselectable ? "" : " onclick=\"DP_jQuery.datepicker._selectDay('#" + inst.id + "'," + drawMonth + "," + drawYear + ', this);return false;"') + ">" + (otherMonth ? (showOtherMonths ? printDate.getDate() : "&#xa0;") : (unselectable ? '<span class="ui-state-default">' + printDate.getDate() + "</span>" : '<a class="ui-state-default' + (printDate.getTime() == today.getTime() ? " ui-state-highlight" : "") + (printDate.getTime() >= currentDate.getTime() && printDate.getTime() <= endDate.getTime() ? " ui-state-active" : "") + '" href="#">' + printDate.getDate() + "</a>")) + "</td>"; printDate.setDate(printDate.getDate() + 1); printDate = this._daylightSavingAdjust(printDate) } calender += tbody + "</tr>" } drawMonth++; if (drawMonth > 11) { drawMonth = 0; drawYear++ } calender += "</tbody></table>" + (isMultiMonth ? "</div>" + ((numMonths[0] > 0 && col == numMonths[1] - 1) ? '<div class="ui-datepicker-row-break"></div>' : "") : ""); group += calender } html += group } html += buttonPanel + ($.browser.msie && parseInt($.browser.version, 10) < 7 && !inst.inline ? '<iframe src="javascript:false;" class="ui-datepicker-cover" frameborder="0"></iframe>' : ""); inst._keyEvent = false; return html }, _generateMonthYearHeader: function (inst, drawMonth, drawYear, minDate, maxDate, selectedDate, secondary, monthNames, monthNamesShort) { minDate = (inst.rangeStart && minDate && selectedDate < minDate ? selectedDate : minDate); var changeMonth = this._get(inst, "changeMonth"); var changeYear = this._get(inst, "changeYear"); var showMonthAfterYear = this._get(inst, "showMonthAfterYear"); var html = '<div class="ui-datepicker-title">'; var monthHtml = ""; if (secondary || !changeMonth) { monthHtml += '<span class="ui-datepicker-month">' + monthNames[drawMonth] + "</span> " } else { var inMinYear = (minDate && minDate.getFullYear() == drawYear); var inMaxYear = (maxDate && maxDate.getFullYear() == drawYear); monthHtml += '<select class="ui-datepicker-month" onchange="DP_jQuery.datepicker._selectMonthYear(\'#' + inst.id + "', this, 'M');\" onclick=\"DP_jQuery.datepicker._clickMonthYear('#" + inst.id + "');\">"; for (var month = 0; month < 12; month++) { if ((!inMinYear || month >= minDate.getMonth()) && (!inMaxYear || month <= maxDate.getMonth())) { monthHtml += '<option value="' + month + '"' + (month == drawMonth ? ' selected="selected"' : "") + ">" + monthNamesShort[month] + "</option>" } } monthHtml += "</select>" } if (!showMonthAfterYear) { html += monthHtml + ((secondary || changeMonth || changeYear) && (!(changeMonth && changeYear)) ? "&#xa0;" : "") } if (secondary || !changeYear) { html += '<span class="ui-datepicker-year">' + drawYear + "</span>" } else { var years = this._get(inst, "yearRange").split(":"); var year = 0; var endYear = 0; if (years.length != 2) { year = drawYear - 10; endYear = drawYear + 10 } else { if (years[0].charAt(0) == "+" || years[0].charAt(0) == "-") { year = drawYear + parseInt(years[0], 10); endYear = drawYear + parseInt(years[1], 10) } else { year = parseInt(years[0], 10); endYear = parseInt(years[1], 10) } } year = (minDate ? Math.max(year, minDate.getFullYear()) : year); endYear = (maxDate ? Math.min(endYear, maxDate.getFullYear()) : endYear); html += '<select class="ui-datepicker-year" onchange="DP_jQuery.datepicker._selectMonthYear(\'#' + inst.id + "', this, 'Y');\" onclick=\"DP_jQuery.datepicker._clickMonthYear('#" + inst.id + "');\">"; for (; year <= endYear; year++) { html += '<option value="' + year + '"' + (year == drawYear ? ' selected="selected"' : "") + ">" + year + "</option>" } html += "</select>" } if (showMonthAfterYear) { html += (secondary || changeMonth || changeYear ? "&#xa0;" : "") + monthHtml } html += "</div>"; return html }, _adjustInstDate: function (inst, offset, period) { var year = inst.drawYear + (period == "Y" ? offset : 0); var month = inst.drawMonth + (period == "M" ? offset : 0); var day = Math.min(inst.selectedDay, this._getDaysInMonth(year, month)) + (period == "D" ? offset : 0); var date = this._daylightSavingAdjust(new Date(year, month, day)); var minDate = this._getMinMaxDate(inst, "min", true); var maxDate = this._getMinMaxDate(inst, "max"); date = (minDate && date < minDate ? minDate : date); date = (maxDate && date > maxDate ? maxDate : date); inst.selectedDay = date.getDate(); inst.drawMonth = inst.selectedMonth = date.getMonth(); inst.drawYear = inst.selectedYear = date.getFullYear(); if (period == "M" || period == "Y") { this._notifyChange(inst) } }, _notifyChange: function (inst) { var onChange = this._get(inst, "onChangeMonthYear"); if (onChange) { onChange.apply((inst.input ? inst.input[0] : null), [inst.selectedYear, inst.selectedMonth + 1, inst]) } }, _getNumberOfMonths: function (inst) { var numMonths = this._get(inst, "numberOfMonths"); return (numMonths == null ? [1, 1] : (typeof numMonths == "number" ? [1, numMonths] : numMonths)) }, _getMinMaxDate: function (inst, minMax, checkRange) { var date = this._determineDate(this._get(inst, minMax + "Date"), null); return (!checkRange || !inst.rangeStart ? date : (!date || inst.rangeStart > date ? inst.rangeStart : date)) }, _getDaysInMonth: function (year, month) { return 32 - new Date(year, month, 32).getDate() }, _getFirstDayOfMonth: function (year, month) { return new Date(year, month, 1).getDay() }, _canAdjustMonth: function (inst, offset, curYear, curMonth) { var numMonths = this._getNumberOfMonths(inst); var date = this._daylightSavingAdjust(new Date(curYear, curMonth + (offset < 0 ? offset : numMonths[1]), 1)); if (offset < 0) { date.setDate(this._getDaysInMonth(date.getFullYear(), date.getMonth())) } return this._isInRange(inst, date) }, _isInRange: function (inst, date) { var newMinDate = (!inst.rangeStart ? null : this._daylightSavingAdjust(new Date(inst.selectedYear, inst.selectedMonth, inst.selectedDay))); newMinDate = (newMinDate && inst.rangeStart < newMinDate ? inst.rangeStart : newMinDate); var minDate = newMinDate || this._getMinMaxDate(inst, "min"); var maxDate = this._getMinMaxDate(inst, "max"); return ((!minDate || date >= minDate) && (!maxDate || date <= maxDate)) }, _getFormatConfig: function (inst) { var shortYearCutoff = this._get(inst, "shortYearCutoff"); shortYearCutoff = (typeof shortYearCutoff != "string" ? shortYearCutoff : new Date().getFullYear() % 100 + parseInt(shortYearCutoff, 10)); return { shortYearCutoff: shortYearCutoff, dayNamesShort: this._get(inst, "dayNamesShort"), dayNames: this._get(inst, "dayNames"), monthNamesShort: this._get(inst, "monthNamesShort"), monthNames: this._get(inst, "monthNames") } }, _formatDate: function (inst, day, month, year) { if (!day) { inst.currentDay = inst.selectedDay; inst.currentMonth = inst.selectedMonth; inst.currentYear = inst.selectedYear } var date = (day ? (typeof day == "object" ? day : this._daylightSavingAdjust(new Date(year, month, day))) : this._daylightSavingAdjust(new Date(inst.currentYear, inst.currentMonth, inst.currentDay))); return this.formatDate(this._get(inst, "dateFormat"), date, this._getFormatConfig(inst)) } }); function extendRemove(target, props) { $.extend(target, props); for (var name in props) { if (props[name] == null || props[name] == undefined) { target[name] = props[name] } } return target } function isArray(a) { return (a && (($.browser.safari && typeof a == "object" && a.length) || (a.constructor && a.constructor.toString().match(/\Array\(\)/)))) } $.fn.datepicker = function (options) { if (!$.datepicker.initialized) { $(document).mousedown($.datepicker._checkExternalClick).find("body").append($.datepicker.dpDiv); $.datepicker.initialized = true } var otherArgs = Array.prototype.slice.call(arguments, 1); if (typeof options == "string" && (options == "isDisabled" || options == "getDate")) { return $.datepicker["_" + options + "Datepicker"].apply($.datepicker, [this[0]].concat(otherArgs)) } return this.each(function () { typeof options == "string" ? $.datepicker["_" + options + "Datepicker"].apply($.datepicker, [this].concat(otherArgs)) : $.datepicker._attachDatepicker(this, options) }) }; $.datepicker = new Datepicker(); $.datepicker.initialized = false; $.datepicker.uuid = new Date().getTime(); $.datepicker.version = "1.7"; window.DP_jQuery = $ })(jQuery); (function (c) { var b = { dragStart: "start.draggable", drag: "drag.draggable", dragStop: "stop.draggable", maxHeight: "maxHeight.resizable", minHeight: "minHeight.resizable", maxWidth: "maxWidth.resizable", minWidth: "minWidth.resizable", resizeStart: "start.resizable", resize: "drag.resizable", resizeStop: "stop.resizable" }, a = "ui-dialog ui-widget ui-widget-content ui-corner-all "; c.widget("ui.dialog", { _init: function () { this.originalTitle = this.element.attr("title"); var l = this, m = this.options, j = m.title || this.originalTitle || "&nbsp;", e = c.ui.dialog.getTitleId(this.element), k = (this.uiDialog = c("<div/>")).appendTo(document.body).hide().addClass(a + m.dialogClass).css({ position: "absolute", overflow: "hidden", zIndex: m.zIndex }).attr("tabIndex", -1).css("outline", 0).keydown(function (n) { (m.closeOnEscape && n.keyCode && n.keyCode == c.ui.keyCode.ESCAPE && l.close(n)) }).attr({ role: "dialog", "aria-labelledby": e }).mousedown(function (n) { l.moveToTop(false, n) }), g = this.element.show().removeAttr("title").addClass("ui-dialog-content ui-widget-content").appendTo(k), f = (this.uiDialogTitlebar = c("<div></div>")).addClass("ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix").prependTo(k), i = c('<a href="#"/>').addClass("ui-dialog-titlebar-close ui-corner-all").attr("role", "button").hover(function () { i.addClass("ui-state-hover") }, function () { i.removeClass("ui-state-hover") }).focus(function () { i.addClass("ui-state-focus") }).blur(function () { i.removeClass("ui-state-focus") }).mousedown(function (n) { n.stopPropagation() }).click(function (n) { l.close(n); return false }).appendTo(f), h = (this.uiDialogTitlebarCloseText = c("<span/>")).addClass("ui-icon ui-icon-closethick").text(m.closeText).appendTo(i), d = c("<span/>").addClass("ui-dialog-title").attr("id", e).html(j).prependTo(f); f.find("*").add(f).disableSelection(); (m.draggable && c.fn.draggable && this._makeDraggable()); (m.resizable && c.fn.resizable && this._makeResizable()); this._createButtons(m.buttons); this._isOpen = false; (m.bgiframe && c.fn.bgiframe && k.bgiframe()); (m.autoOpen && this.open()) }, destroy: function () { (this.overlay && this.overlay.destroy()); this.uiDialog.hide(); this.element.unbind(".dialog").removeData("dialog").removeClass("ui-dialog-content ui-widget-content").hide().appendTo("body"); this.uiDialog.remove(); (this.originalTitle && this.element.attr("title", this.originalTitle)) }, close: function (e) { var d = this; if (false === d._trigger("beforeclose", e)) { return } (d.overlay && d.overlay.destroy()); d.uiDialog.unbind("keypress.ui-dialog"); (d.options.hide ? d.uiDialog.hide(d.options.hide, function () { d._trigger("close", e) }) : d.uiDialog.hide() && d._trigger("close", e)); c.ui.dialog.overlay.resize(); d._isOpen = false }, isOpen: function () { return this._isOpen }, moveToTop: function (f, e) { if ((this.options.modal && !f) || (!this.options.stack && !this.options.modal)) { return this._trigger("focus", e) } if (this.options.zIndex > c.ui.dialog.maxZ) { c.ui.dialog.maxZ = this.options.zIndex } (this.overlay && this.overlay.$el.css("z-index", c.ui.dialog.overlay.maxZ = ++c.ui.dialog.maxZ)); var d = { scrollTop: this.element.attr("scrollTop"), scrollLeft: this.element.attr("scrollLeft") }; this.uiDialog.css("z-index", ++c.ui.dialog.maxZ); this.element.attr(d); this._trigger("focus", e) }, open: function () { if (this._isOpen) { return } var e = this.options, d = this.uiDialog; this.overlay = e.modal ? new c.ui.dialog.overlay(this) : null; (d.next().length && d.appendTo("body")); this._size(); this._position(e.position); d.show(e.show); this.moveToTop(true); (e.modal && d.bind("keypress.ui-dialog", function (h) { if (h.keyCode != c.ui.keyCode.TAB) { return } var g = c(":tabbable", this), i = g.filter(":first")[0], f = g.filter(":last")[0]; if (h.target == f && !h.shiftKey) { setTimeout(function () { i.focus() }, 1) } else { if (h.target == i && h.shiftKey) { setTimeout(function () { f.focus() }, 1) } } })); c([]).add(d.find(".ui-dialog-content :tabbable:first")).add(d.find(".ui-dialog-buttonpane :tabbable:first")).add(d).filter(":first").focus(); this._trigger("open"); this._isOpen = true }, _createButtons: function (g) { var f = this, d = false, e = c("<div></div>").addClass("ui-dialog-buttonpane ui-widget-content ui-helper-clearfix"); this.uiDialog.find(".ui-dialog-buttonpane").remove(); (typeof g == "object" && g !== null && c.each(g, function () { return !(d = true) })); if (d) { c.each(g, function (h, i) { c('<button type="button"></button>').addClass("ui-state-default ui-corner-all").text(h).click(function () { i.apply(f.element[0], arguments) }).hover(function () { c(this).addClass("ui-state-hover") }, function () { c(this).removeClass("ui-state-hover") }).focus(function () { c(this).addClass("ui-state-focus") }).blur(function () { c(this).removeClass("ui-state-focus") }).appendTo(e) }); e.appendTo(this.uiDialog) } }, _makeDraggable: function () { var d = this, f = this.options, e; this.uiDialog.draggable({ cancel: ".ui-dialog-content", handle: ".ui-dialog-titlebar", containment: "document", start: function () { e = f.height; c(this).height(c(this).height()).addClass("ui-dialog-dragging"); (f.dragStart && f.dragStart.apply(d.element[0], arguments)) }, drag: function () { (f.drag && f.drag.apply(d.element[0], arguments)) }, stop: function () { c(this).removeClass("ui-dialog-dragging").height(e); (f.dragStop && f.dragStop.apply(d.element[0], arguments)); c.ui.dialog.overlay.resize() } }) }, _makeResizable: function (g) { g = (g === undefined ? this.options.resizable : g); var d = this, f = this.options, e = typeof g == "string" ? g : "n,e,s,w,se,sw,ne,nw"; this.uiDialog.resizable({ cancel: ".ui-dialog-content", alsoResize: this.element, maxWidth: f.maxWidth, maxHeight: f.maxHeight, minWidth: f.minWidth, minHeight: f.minHeight, start: function () { c(this).addClass("ui-dialog-resizing"); (f.resizeStart && f.resizeStart.apply(d.element[0], arguments)) }, resize: function () { (f.resize && f.resize.apply(d.element[0], arguments)) }, handles: e, stop: function () { c(this).removeClass("ui-dialog-resizing"); f.height = c(this).height(); f.width = c(this).width(); (f.resizeStop && f.resizeStop.apply(d.element[0], arguments)); c.ui.dialog.overlay.resize() } }).find(".ui-resizable-se").addClass("ui-icon ui-icon-grip-diagonal-se") }, _position: function (i) { var e = c(window), f = c(document), g = f.scrollTop(), d = f.scrollLeft(), h = g; if (c.inArray(i, ["center", "top", "right", "bottom", "left"]) >= 0) { i = [i == "right" || i == "left" ? i : "center", i == "top" || i == "bottom" ? i : "middle"] } if (i.constructor != Array) { i = ["center", "middle"] } if (i[0].constructor == Number) { d += i[0] } else { switch (i[0]) { case "left": d += 0; break; case "right": d += e.width() - this.uiDialog.outerWidth(); break; default: case "center": d += (e.width() - this.uiDialog.outerWidth()) / 2 } } if (i[1].constructor == Number) { g += i[1] } else { switch (i[1]) { case "top": g += 0; break; case "bottom": g += e.height() - this.uiDialog.outerHeight(); break; default: case "middle": g += (e.height() - this.uiDialog.outerHeight()) / 2 } } g = Math.max(g, h); this.uiDialog.css({ top: g, left: d }) }, _setData: function (e, f) { (b[e] && this.uiDialog.data(b[e], f)); switch (e) { case "buttons": this._createButtons(f); break; case "closeText": this.uiDialogTitlebarCloseText.text(f); break; case "dialogClass": this.uiDialog.removeClass(this.options.dialogClass).addClass(a + f); break; case "draggable": (f ? this._makeDraggable() : this.uiDialog.draggable("destroy")); break; case "height": this.uiDialog.height(f); break; case "position": this._position(f); break; case "resizable": var d = this.uiDialog, g = this.uiDialog.is(":data(resizable)"); (g && !f && d.resizable("destroy")); (g && typeof f == "string" && d.resizable("option", "handles", f)); (g || this._makeResizable(f)); break; case "title": c(".ui-dialog-title", this.uiDialogTitlebar).html(f || "&nbsp;"); break; case "width": this.uiDialog.width(f); break } c.widget.prototype._setData.apply(this, arguments) }, _size: function () { var e = this.options; this.element.css({ height: 0, minHeight: 0, width: "auto" }); var d = this.uiDialog.css({ height: "auto", width: e.width }).height(); this.element.css({ minHeight: Math.max(e.minHeight - d, 0), height: e.height == "auto" ? "auto" : Math.max(e.height - d, 0) }) } }); c.extend(c.ui.dialog, { version: "1.7", defaults: { autoOpen: true, bgiframe: false, buttons: {}, closeOnEscape: true, closeText: "close", dialogClass: "", draggable: true, hide: null, height: "auto", maxHeight: false, maxWidth: false, minHeight: 150, minWidth: 150, modal: false, position: "center", resizable: true, show: null, stack: true, title: "", width: 300, zIndex: 1000 }, getter: "isOpen", uuid: 0, maxZ: 0, getTitleId: function (d) { return "ui-dialog-title-" + (d.attr("id") || ++this.uuid) }, overlay: function (d) { this.$el = c.ui.dialog.overlay.create(d) } }); c.extend(c.ui.dialog.overlay, { instances: [], maxZ: 0, events: c.map("focus,mousedown,mouseup,keydown,keypress,click".split(","), function (d) { return d + ".dialog-overlay" }).join(" "), create: function (e) { if (this.instances.length === 0) { setTimeout(function () { c(document).bind(c.ui.dialog.overlay.events, function (f) { var g = c(f.target).parents(".ui-dialog").css("zIndex") || 0; return (g > c.ui.dialog.overlay.maxZ) }) }, 1); c(document).bind("keydown.dialog-overlay", function (f) { (e.options.closeOnEscape && f.keyCode && f.keyCode == c.ui.keyCode.ESCAPE && e.close(f)) }); c(window).bind("resize.dialog-overlay", c.ui.dialog.overlay.resize) } var d = c("<div></div>").appendTo(document.body).addClass("ui-widget-overlay").css({ width: this.width(), height: this.height() }); (e.options.bgiframe && c.fn.bgiframe && d.bgiframe()); this.instances.push(d); return d }, destroy: function (d) { this.instances.splice(c.inArray(this.instances, d), 1); if (this.instances.length === 0) { c([document, window]).unbind(".dialog-overlay") } d.remove() }, height: function () { if (c.browser.msie && c.browser.version < 7) { var e = Math.max(document.documentElement.scrollHeight, document.body.scrollHeight); var d = Math.max(document.documentElement.offsetHeight, document.body.offsetHeight); if (e < d) { return c(window).height() + "px" } else { return e + "px" } } else { return c(document).height() + "px" } }, width: function () { if (c.browser.msie && c.browser.version < 7) { var d = Math.max(document.documentElement.scrollWidth, document.body.scrollWidth); var e = Math.max(document.documentElement.offsetWidth, document.body.offsetWidth); if (d < e) { return c(window).width() + "px" } else { return d + "px" } } else { return c(document).width() + "px" } }, resize: function () { var d = c([]); c.each(c.ui.dialog.overlay.instances, function () { d = d.add(this) }); d.css({ width: 0, height: 0 }).css({ width: c.ui.dialog.overlay.width(), height: c.ui.dialog.overlay.height() }) } }); c.extend(c.ui.dialog.overlay.prototype, { destroy: function () { c.ui.dialog.overlay.destroy(this.$el) } }) })(jQuery); (function (a) { a.widget("ui.progressbar", { _init: function () { this.element.addClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").attr({ role: "progressbar", "aria-valuemin": this._valueMin(), "aria-valuemax": this._valueMax(), "aria-valuenow": this._value() }); this.valueDiv = a('<div class="ui-progressbar-value ui-widget-header ui-corner-left"></div>').appendTo(this.element); this._refreshValue() }, destroy: function () { this.element.removeClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").removeAttr("role").removeAttr("aria-valuemin").removeAttr("aria-valuemax").removeAttr("aria-valuenow").removeData("progressbar").unbind(".progressbar"); this.valueDiv.remove(); a.widget.prototype.destroy.apply(this, arguments) }, value: function (b) { arguments.length && this._setData("value", b); return this._value() }, _setData: function (b, c) { switch (b) { case "value": this.options.value = c; this._refreshValue(); this._trigger("change", null, {}); break } a.widget.prototype._setData.apply(this, arguments) }, _value: function () { var b = this.options.value; if (b < this._valueMin()) { b = this._valueMin() } if (b > this._valueMax()) { b = this._valueMax() } return b }, _valueMin: function () { var b = 0; return b }, _valueMax: function () { var b = 100; return b }, _refreshValue: function () { var b = this.value(); this.valueDiv[b == this._valueMax() ? "addClass" : "removeClass"]("ui-corner-right"); this.valueDiv.width(b + "%"); this.element.attr("aria-valuenow", b) } }); a.extend(a.ui.progressbar, { version: "1.7", defaults: { value: 0 } }) })(jQuery); (function (a) { a.widget("ui.slider", a.extend({}, a.ui.mouse, { _init: function () { var b = this, c = this.options; this._keySliding = false; this._handleIndex = null; this._detectOrientation(); this._mouseInit(); this.element.addClass("ui-slider ui-slider-" + this.orientation + " ui-widget ui-widget-content ui-corner-all"); this.range = a([]); if (c.range) { if (c.range === true) { this.range = a("<div></div>"); if (!c.values) { c.values = [this._valueMin(), this._valueMin()] } if (c.values.length && c.values.length != 2) { c.values = [c.values[0], c.values[0]] } } else { this.range = a("<div></div>") } this.range.appendTo(this.element).addClass("ui-slider-range"); if (c.range == "min" || c.range == "max") { this.range.addClass("ui-slider-range-" + c.range) } this.range.addClass("ui-widget-header") } if (a(".ui-slider-handle", this.element).length == 0) { a('<a href="#"></a>').appendTo(this.element).addClass("ui-slider-handle") } if (c.values && c.values.length) { while (a(".ui-slider-handle", this.element).length < c.values.length) { a('<a href="#"></a>').appendTo(this.element).addClass("ui-slider-handle") } } this.handles = a(".ui-slider-handle", this.element).addClass("ui-state-default ui-corner-all"); this.handle = this.handles.eq(0); this.handles.add(this.range).filter("a").click(function (d) { d.preventDefault() }).hover(function () { a(this).addClass("ui-state-hover") }, function () { a(this).removeClass("ui-state-hover") }).focus(function () { a(".ui-slider .ui-state-focus").removeClass("ui-state-focus"); a(this).addClass("ui-state-focus") }).blur(function () { a(this).removeClass("ui-state-focus") }); this.handles.each(function (d) { a(this).data("index.ui-slider-handle", d) }); this.handles.keydown(function (i) { var f = true; var e = a(this).data("index.ui-slider-handle"); if (b.options.disabled) { return } switch (i.keyCode) { case a.ui.keyCode.HOME: case a.ui.keyCode.END: case a.ui.keyCode.UP: case a.ui.keyCode.RIGHT: case a.ui.keyCode.DOWN: case a.ui.keyCode.LEFT: f = false; if (!b._keySliding) { b._keySliding = true; a(this).addClass("ui-state-active"); b._start(i, e) } break } var g, d, h = b._step(); if (b.options.values && b.options.values.length) { g = d = b.values(e) } else { g = d = b.value() } switch (i.keyCode) { case a.ui.keyCode.HOME: d = b._valueMin(); break; case a.ui.keyCode.END: d = b._valueMax(); break; case a.ui.keyCode.UP: case a.ui.keyCode.RIGHT: if (g == b._valueMax()) { return } d = g + h; break; case a.ui.keyCode.DOWN: case a.ui.keyCode.LEFT: if (g == b._valueMin()) { return } d = g - h; break } b._slide(i, e, d); return f }).keyup(function (e) { var d = a(this).data("index.ui-slider-handle"); if (b._keySliding) { b._stop(e, d); b._change(e, d); b._keySliding = false; a(this).removeClass("ui-state-active") } }); this._refreshValue() }, destroy: function () { this.handles.remove(); this.element.removeClass("ui-slider ui-slider-horizontal ui-slider-vertical ui-slider-disabled ui-widget ui-widget-content ui-corner-all").removeData("slider").unbind(".slider"); this._mouseDestroy() }, _mouseCapture: function (d) { var e = this.options; if (e.disabled) { return false } this.elementSize = { width: this.element.outerWidth(), height: this.element.outerHeight() }; this.elementOffset = this.element.offset(); var h = { x: d.pageX, y: d.pageY }; var j = this._normValueFromMouse(h); var c = this._valueMax() + 1, f; var k = this, i; this.handles.each(function (l) { var m = Math.abs(j - k.values(l)); if (c > m) { c = m; f = a(this); i = l } }); if (e.range == true && this.values(1) == e.min) { f = a(this.handles[++i]) } this._start(d, i); k._handleIndex = i; f.addClass("ui-state-active").focus(); var g = f.offset(); var b = !a(d.target).parents().andSelf().is(".ui-slider-handle"); this._clickOffset = b ? { left: 0, top: 0 } : { left: d.pageX - g.left - (f.width() / 2), top: d.pageY - g.top - (f.height() / 2) - (parseInt(f.css("borderTopWidth"), 10) || 0) - (parseInt(f.css("borderBottomWidth"), 10) || 0) + (parseInt(f.css("marginTop"), 10) || 0) }; j = this._normValueFromMouse(h); this._slide(d, i, j); return true }, _mouseStart: function (b) { return true }, _mouseDrag: function (d) { var b = { x: d.pageX, y: d.pageY }; var c = this._normValueFromMouse(b); this._slide(d, this._handleIndex, c); return false }, _mouseStop: function (b) { this.handles.removeClass("ui-state-active"); this._stop(b, this._handleIndex); this._change(b, this._handleIndex); this._handleIndex = null; this._clickOffset = null; return false }, _detectOrientation: function () { this.orientation = this.options.orientation == "vertical" ? "vertical" : "horizontal" }, _normValueFromMouse: function (d) { var c, h; if ("horizontal" == this.orientation) { c = this.elementSize.width; h = d.x - this.elementOffset.left - (this._clickOffset ? this._clickOffset.left : 0) } else { c = this.elementSize.height; h = d.y - this.elementOffset.top - (this._clickOffset ? this._clickOffset.top : 0) } var f = (h / c); if (f > 1) { f = 1 } if (f < 0) { f = 0 } if ("vertical" == this.orientation) { f = 1 - f } var e = this._valueMax() - this._valueMin(), i = f * e, b = i % this.options.step, g = this._valueMin() + i - b; if (b > (this.options.step / 2)) { g += this.options.step } return parseFloat(g.toFixed(5)) }, _start: function (c, b) { this._trigger("start", c, this._uiHash(b)) }, _slide: function (f, e, d) { var g = this.handles[e]; if (this.options.values && this.options.values.length) { var b = this.values(e ? 0 : 1); if ((e == 0 && d >= b) || (e == 1 && d <= b)) { d = b } if (d != this.values(e)) { var c = this.values(); c[e] = d; var h = this._trigger("slide", f, this._uiHash(e, d, c)); var b = this.values(e ? 0 : 1); if (h !== false) { this.values(e, d, (f.type == "mousedown" && this.options.animate), true) } } } else { if (d != this.value()) { var h = this._trigger("slide", f, this._uiHash(e, d)); if (h !== false) { this._setData("value", d, (f.type == "mousedown" && this.options.animate)) } } } }, _stop: function (c, b) { this._trigger("stop", c, this._uiHash(b)) }, _change: function (c, b) { this._trigger("change", c, this._uiHash(b)) }, value: function (b) { if (arguments.length) { this._setData("value", b); this._change(null, 0) } return this._value() }, values: function (b, e, c, d) { if (arguments.length > 1) { this.options.values[b] = e; this._refreshValue(c); if (!d) { this._change(null, b) } } if (arguments.length) { if (this.options.values && this.options.values.length) { return this._values(b) } else { return this.value() } } else { return this._values() } }, _setData: function (b, d, c) { a.widget.prototype._setData.apply(this, arguments); switch (b) { case "orientation": this._detectOrientation(); this.element.removeClass("ui-slider-horizontal ui-slider-vertical").addClass("ui-slider-" + this.orientation); this._refreshValue(c); break; case "value": this._refreshValue(c); break } }, _step: function () { var b = this.options.step; return b }, _value: function () { var b = this.options.value; if (b < this._valueMin()) { b = this._valueMin() } if (b > this._valueMax()) { b = this._valueMax() } return b }, _values: function (b) { if (arguments.length) { var c = this.options.values[b]; if (c < this._valueMin()) { c = this._valueMin() } if (c > this._valueMax()) { c = this._valueMax() } return c } else { return this.options.values } }, _valueMin: function () { var b = this.options.min; return b }, _valueMax: function () { var b = this.options.max; return b }, _refreshValue: function (c) { var f = this.options.range, d = this.options, l = this; if (this.options.values && this.options.values.length) { var i, h; this.handles.each(function (p, n) { var o = (l.values(p) - l._valueMin()) / (l._valueMax() - l._valueMin()) * 100; var m = {}; m[l.orientation == "horizontal" ? "left" : "bottom"] = o + "%"; a(this).stop(1, 1)[c ? "animate" : "css"](m, d.animate); if (l.options.range === true) { if (l.orientation == "horizontal") { (p == 0) && l.range.stop(1, 1)[c ? "animate" : "css"]({ left: o + "%" }, d.animate); (p == 1) && l.range[c ? "animate" : "css"]({ width: (o - lastValPercent) + "%" }, { queue: false, duration: d.animate }) } else { (p == 0) && l.range.stop(1, 1)[c ? "animate" : "css"]({ bottom: (o) + "%" }, d.animate); (p == 1) && l.range[c ? "animate" : "css"]({ height: (o - lastValPercent) + "%" }, { queue: false, duration: d.animate }) } } lastValPercent = o }) } else { var j = this.value(), g = this._valueMin(), k = this._valueMax(), e = k != g ? (j - g) / (k - g) * 100 : 0; var b = {}; b[l.orientation == "horizontal" ? "left" : "bottom"] = e + "%"; this.handle.stop(1, 1)[c ? "animate" : "css"](b, d.animate); (f == "min") && (this.orientation == "horizontal") && this.range.stop(1, 1)[c ? "animate" : "css"]({ width: e + "%" }, d.animate); (f == "max") && (this.orientation == "horizontal") && this.range[c ? "animate" : "css"]({ width: (100 - e) + "%" }, { queue: false, duration: d.animate }); (f == "min") && (this.orientation == "vertical") && this.range.stop(1, 1)[c ? "animate" : "css"]({ height: e + "%" }, d.animate); (f == "max") && (this.orientation == "vertical") && this.range[c ? "animate" : "css"]({ height: (100 - e) + "%" }, { queue: false, duration: d.animate }) } }, _uiHash: function (d, e, c) { var b = this.options.values && this.options.values.length; return { handle: this.handles[d], value: e || (b ? this.values(d) : this.value()), values: c || (b && this.values()) } } })); a.extend(a.ui.slider, { getter: "value values", version: "1.7", eventPrefix: "slide", defaults: { animate: false, delay: 0, distance: 0, max: 100, min: 0, orientation: "horizontal", range: false, step: 1, value: 0, values: null } }) })(jQuery); (function (a) { a.widget("ui.tabs", { _init: function () { if (this.options.deselectable !== undefined) { this.options.collapsible = this.options.deselectable } this._tabify(true) }, _setData: function (b, c) { if (b == "selected") { if (this.options.collapsible && c == this.options.selected) { return } this.select(c) } else { this.options[b] = c; if (b == "deselectable") { this.options.collapsible = c } this._tabify() } }, _tabId: function (b) { return b.title && b.title.replace(/\s/g, "_").replace(/[^A-Za-z0-9\-_:\.]/g, "") || this.options.idPrefix + a.data(b) }, _sanitizeSelector: function (b) { return b.replace(/:/g, "\\:") }, _cookie: function () { var b = this.cookie || (this.cookie = this.options.cookie.name || "ui-tabs-" + a.data(this.list[0])); return a.cookie.apply(null, [b].concat(a.makeArray(arguments))) }, _ui: function (c, b) { return { tab: c, panel: b, index: this.anchors.index(c) } }, _cleanup: function () { this.lis.filter(".ui-state-processing").removeClass("ui-state-processing").find("span:data(label.tabs)").each(function () { var b = a(this); b.html(b.data("label.tabs")).removeData("label.tabs") }) }, _tabify: function (n) { this.list = this.element.children("ul:first"); this.lis = a("li:has(a[href])", this.list); this.anchors = this.lis.map(function () { return a("a", this)[0] }); this.panels = a([]); var p = this, d = this.options; var c = /^#.+/; this.anchors.each(function (r, o) { var q = a(o).attr("href"); var s = q.split("#")[0], u; if (s && (s === location.toString().split("#")[0] || (u = a("base")[0]) && s === u.href)) { q = o.hash; o.href = q } if (c.test(q)) { p.panels = p.panels.add(p._sanitizeSelector(q)) } else { if (q != "#") { a.data(o, "href.tabs", q); a.data(o, "load.tabs", q.replace(/#.*$/, "")); var w = p._tabId(o); o.href = "#" + w; var v = a("#" + w); if (!v.length) { v = a(d.panelTemplate).attr("id", w).addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").insertAfter(p.panels[r - 1] || p.list); v.data("destroy.tabs", true) } p.panels = p.panels.add(v) } else { d.disabled.push(r) } } }); if (n) { this.element.addClass("ui-tabs ui-widget ui-widget-content ui-corner-all"); this.list.addClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all"); this.lis.addClass("ui-state-default ui-corner-top"); this.panels.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom"); if (d.selected === undefined) { if (location.hash) { this.anchors.each(function (q, o) { if (o.hash == location.hash) { d.selected = q; return false } }) } if (typeof d.selected != "number" && d.cookie) { d.selected = parseInt(p._cookie(), 10) } if (typeof d.selected != "number" && this.lis.filter(".ui-tabs-selected").length) { d.selected = this.lis.index(this.lis.filter(".ui-tabs-selected")) } d.selected = d.selected || 0 } else { if (d.selected === null) { d.selected = -1 } } d.selected = ((d.selected >= 0 && this.anchors[d.selected]) || d.selected < 0) ? d.selected : 0; d.disabled = a.unique(d.disabled.concat(a.map(this.lis.filter(".ui-state-disabled"), function (q, o) { return p.lis.index(q) }))).sort(); if (a.inArray(d.selected, d.disabled) != -1) { d.disabled.splice(a.inArray(d.selected, d.disabled), 1) } this.panels.addClass("ui-tabs-hide"); this.lis.removeClass("ui-tabs-selected ui-state-active"); if (d.selected >= 0 && this.anchors.length) { this.panels.eq(d.selected).removeClass("ui-tabs-hide"); this.lis.eq(d.selected).addClass("ui-tabs-selected ui-state-active"); p.element.queue("tabs", function () { p._trigger("show", null, p._ui(p.anchors[d.selected], p.panels[d.selected])) }); this.load(d.selected) } a(window).bind("unload", function () { p.lis.add(p.anchors).unbind(".tabs"); p.lis = p.anchors = p.panels = null }) } else { d.selected = this.lis.index(this.lis.filter(".ui-tabs-selected")) } this.element[d.collapsible ? "addClass" : "removeClass"]("ui-tabs-collapsible"); if (d.cookie) { this._cookie(d.selected, d.cookie) } for (var g = 0, m; (m = this.lis[g]) ; g++) { a(m)[a.inArray(g, d.disabled) != -1 && !a(m).hasClass("ui-tabs-selected") ? "addClass" : "removeClass"]("ui-state-disabled") } if (d.cache === false) { this.anchors.removeData("cache.tabs") } this.lis.add(this.anchors).unbind(".tabs"); if (d.event != "mouseover") { var f = function (o, i) { if (i.is(":not(.ui-state-disabled)")) { i.addClass("ui-state-" + o) } }; var j = function (o, i) { i.removeClass("ui-state-" + o) }; this.lis.bind("mouseover.tabs", function () { f("hover", a(this)) }); this.lis.bind("mouseout.tabs", function () { j("hover", a(this)) }); this.anchors.bind("focus.tabs", function () { f("focus", a(this).closest("li")) }); this.anchors.bind("blur.tabs", function () { j("focus", a(this).closest("li")) }) } var b, h; if (d.fx) { if (a.isArray(d.fx)) { b = d.fx[0]; h = d.fx[1] } else { b = h = d.fx } } function e(i, o) { i.css({ display: "" }); if (a.browser.msie && o.opacity) { i[0].style.removeAttribute("filter") } } var k = h ? function (i, o) { a(i).closest("li").removeClass("ui-state-default").addClass("ui-tabs-selected ui-state-active"); o.hide().removeClass("ui-tabs-hide").animate(h, h.duration || "normal", function () { e(o, h); p._trigger("show", null, p._ui(i, o[0])) }) } : function (i, o) { a(i).closest("li").removeClass("ui-state-default").addClass("ui-tabs-selected ui-state-active"); o.removeClass("ui-tabs-hide"); p._trigger("show", null, p._ui(i, o[0])) }; var l = b ? function (o, i) { i.animate(b, b.duration || "normal", function () { p.lis.removeClass("ui-tabs-selected ui-state-active").addClass("ui-state-default"); i.addClass("ui-tabs-hide"); e(i, b); p.element.dequeue("tabs") }) } : function (o, i, q) { p.lis.removeClass("ui-tabs-selected ui-state-active").addClass("ui-state-default"); i.addClass("ui-tabs-hide"); p.element.dequeue("tabs") }; this.anchors.bind(d.event + ".tabs", function () { var o = this, r = a(this).closest("li"), i = p.panels.filter(":not(.ui-tabs-hide)"), q = a(p._sanitizeSelector(this.hash)); if ((r.hasClass("ui-tabs-selected") && !d.collapsible) || r.hasClass("ui-state-disabled") || r.hasClass("ui-state-processing") || p._trigger("select", null, p._ui(this, q[0])) === false) { this.blur(); return false } d.selected = p.anchors.index(this); p.abort(); if (d.collapsible) { if (r.hasClass("ui-tabs-selected")) { d.selected = -1; if (d.cookie) { p._cookie(d.selected, d.cookie) } p.element.queue("tabs", function () { l(o, i) }).dequeue("tabs"); this.blur(); return false } else { if (!i.length) { if (d.cookie) { p._cookie(d.selected, d.cookie) } p.element.queue("tabs", function () { k(o, q) }); p.load(p.anchors.index(this)); this.blur(); return false } } } if (d.cookie) { p._cookie(d.selected, d.cookie) } if (q.length) { if (i.length) { p.element.queue("tabs", function () { l(o, i) }) } p.element.queue("tabs", function () { k(o, q) }); p.load(p.anchors.index(this)) } else { throw "jQuery UI Tabs: Mismatching fragment identifier." } if (a.browser.msie) { this.blur() } }); this.anchors.bind("click.tabs", function () { return false }) }, destroy: function () { var b = this.options; this.abort(); this.element.unbind(".tabs").removeClass("ui-tabs ui-widget ui-widget-content ui-corner-all ui-tabs-collapsible").removeData("tabs"); this.list.removeClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all"); this.anchors.each(function () { var c = a.data(this, "href.tabs"); if (c) { this.href = c } var d = a(this).unbind(".tabs"); a.each(["href", "load", "cache"], function (e, f) { d.removeData(f + ".tabs") }) }); this.lis.unbind(".tabs").add(this.panels).each(function () { if (a.data(this, "destroy.tabs")) { a(this).remove() } else { a(this).removeClass(["ui-state-default", "ui-corner-top", "ui-tabs-selected", "ui-state-active", "ui-state-hover", "ui-state-focus", "ui-state-disabled", "ui-tabs-panel", "ui-widget-content", "ui-corner-bottom", "ui-tabs-hide"].join(" ")) } }); if (b.cookie) { this._cookie(null, b.cookie) } }, add: function (e, d, c) { if (c === undefined) { c = this.anchors.length } var b = this, g = this.options, i = a(g.tabTemplate.replace(/#\{href\}/g, e).replace(/#\{label\}/g, d)), h = !e.indexOf("#") ? e.replace("#", "") : this._tabId(a("a", i)[0]); i.addClass("ui-state-default ui-corner-top").data("destroy.tabs", true); var f = a("#" + h); if (!f.length) { f = a(g.panelTemplate).attr("id", h).data("destroy.tabs", true) } f.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom ui-tabs-hide"); if (c >= this.lis.length) { i.appendTo(this.list); f.appendTo(this.list[0].parentNode) } else { i.insertBefore(this.lis[c]); f.insertBefore(this.panels[c]) } g.disabled = a.map(g.disabled, function (k, j) { return k >= c ? ++k : k }); this._tabify(); if (this.anchors.length == 1) { i.addClass("ui-tabs-selected ui-state-active"); f.removeClass("ui-tabs-hide"); this.element.queue("tabs", function () { b._trigger("show", null, b._ui(b.anchors[0], b.panels[0])) }); this.load(0) } this._trigger("add", null, this._ui(this.anchors[c], this.panels[c])) }, remove: function (b) { var d = this.options, e = this.lis.eq(b).remove(), c = this.panels.eq(b).remove(); if (e.hasClass("ui-tabs-selected") && this.anchors.length > 1) { this.select(b + (b + 1 < this.anchors.length ? 1 : -1)) } d.disabled = a.map(a.grep(d.disabled, function (g, f) { return g != b }), function (g, f) { return g >= b ? --g : g }); this._tabify(); this._trigger("remove", null, this._ui(e.find("a")[0], c[0])) }, enable: function (b) { var c = this.options; if (a.inArray(b, c.disabled) == -1) { return } this.lis.eq(b).removeClass("ui-state-disabled"); c.disabled = a.grep(c.disabled, function (e, d) { return e != b }); this._trigger("enable", null, this._ui(this.anchors[b], this.panels[b])) }, disable: function (c) { var b = this, d = this.options; if (c != d.selected) { this.lis.eq(c).addClass("ui-state-disabled"); d.disabled.push(c); d.disabled.sort(); this._trigger("disable", null, this._ui(this.anchors[c], this.panels[c])) } }, select: function (b) { if (typeof b == "string") { b = this.anchors.index(this.anchors.filter("[href$=" + b + "]")) } else { if (b === null) { b = -1 } } if (b == -1 && this.options.collapsible) { b = this.options.selected } this.anchors.eq(b).trigger(this.options.event + ".tabs") }, load: function (e) { var c = this, g = this.options, b = this.anchors.eq(e)[0], d = a.data(b, "load.tabs"); this.abort(); if (!d || this.element.queue("tabs").length !== 0 && a.data(b, "cache.tabs")) { this.element.dequeue("tabs"); return } this.lis.eq(e).addClass("ui-state-processing"); if (g.spinner) { var f = a("span", b); f.data("label.tabs", f.html()).html(g.spinner) } this.xhr = a.ajax(a.extend({}, g.ajaxOptions, { url: d, success: function (i, h) { a(c._sanitizeSelector(b.hash)).html(i); c._cleanup(); if (g.cache) { a.data(b, "cache.tabs", true) } c._trigger("load", null, c._ui(c.anchors[e], c.panels[e])); try { g.ajaxOptions.success(i, h) } catch (j) { } c.element.dequeue("tabs") } })) }, abort: function () { this.element.queue([]); this.panels.stop(false, true); if (this.xhr) { this.xhr.abort(); delete this.xhr } this._cleanup() }, url: function (c, b) { this.anchors.eq(c).removeData("cache.tabs").data("load.tabs", b) }, length: function () { return this.anchors.length } }); a.extend(a.ui.tabs, { version: "1.7", getter: "length", defaults: { ajaxOptions: null, cache: false, cookie: null, collapsible: false, disabled: [], event: "click", fx: null, idPrefix: "ui-tabs-", panelTemplate: "<div></div>", spinner: "<em>Loading&#8230;</em>", tabTemplate: '<li><a href="#{href}"><span>#{label}</span></a></li>' } }); a.extend(a.ui.tabs.prototype, { rotation: null, rotate: function (d, f) { var b = this, g = this.options; var c = b._rotate || (b._rotate = function (h) { clearTimeout(b.rotation); b.rotation = setTimeout(function () { var i = g.selected; b.select(++i < b.anchors.length ? i : 0) }, d); if (h) { h.stopPropagation() } }); var e = b._unrotate || (b._unrotate = !f ? function (h) { if (h.clientX) { b.rotate(null) } } : function (h) { t = g.selected; c() }); if (d) { this.element.bind("tabsshow", c); this.anchors.bind(g.event + ".tabs", e); c() } else { clearTimeout(b.rotation); this.element.unbind("tabsshow", c); this.anchors.unbind(g.event + ".tabs", e); delete this._rotate; delete this._unrotate } } }) })(jQuery);

//#region MicrosoftAjax.debug.js
/* MicrosoftAjax.debug.js */
Function.__typeName = 'Function'; Function.__class = true; Function.createCallback = function Function$createCallback(method, context) {
    var e = Function._validateParams(arguments, [{ name: "method", type: Function }, { name: "context", mayBeNull: true }]); if (e) throw e; return function () {
        var l = arguments.length; if (l > 0) {
            var args = []; for (var i = 0; i < l; i++) { args[i] = arguments[i]; }
            args[l] = context; return method.apply(this, args);
        }
        return method.call(this, context);
    }
}
Function.createDelegate = function Function$createDelegate(instance, method) { var e = Function._validateParams(arguments, [{ name: "instance", mayBeNull: true }, { name: "method", type: Function }]); if (e) throw e; return function () { return method.apply(instance, arguments); } }
Function.emptyFunction = Function.emptyMethod = function Function$emptyMethod() { if (arguments.length !== 0) throw Error.parameterCount(); }
Function._validateParams = function Function$_validateParams(params, expectedParams) {
    var e; e = Function._validateParameterCount(params, expectedParams); if (e) { e.popStackFrame(); return e; }
    for (var i = 0; i < params.length; i++) {
        var expectedParam = expectedParams[Math.min(i, expectedParams.length - 1)]; var paramName = expectedParam.name; if (expectedParam.parameterArray) { paramName += "[" + (i - expectedParams.length + 1) + "]"; }
        e = Function._validateParameter(params[i], expectedParam, paramName); if (e) { e.popStackFrame(); return e; }
    }
    return null;
}
Function._validateParameterCount = function Function$_validateParameterCount(params, expectedParams) {
    var maxParams = expectedParams.length; var minParams = 0; for (var i = 0; i < expectedParams.length; i++) {
        if (expectedParams[i].parameterArray) { maxParams = Number.MAX_VALUE; }
        else if (!expectedParams[i].optional) { minParams++; }
    }
    if (params.length < minParams || params.length > maxParams) { var e = Error.parameterCount(); e.popStackFrame(); return e; }
    return null;
}
Function._validateParameter = function Function$_validateParameter(param, expectedParam, paramName) {
    var e; var expectedType = expectedParam.type; var expectedInteger = !!expectedParam.integer; var expectedDomElement = !!expectedParam.domElement; var mayBeNull = !!expectedParam.mayBeNull; e = Function._validateParameterType(param, expectedType, expectedInteger, expectedDomElement, mayBeNull, paramName); if (e) { e.popStackFrame(); return e; }
    var expectedElementType = expectedParam.elementType; var elementMayBeNull = !!expectedParam.elementMayBeNull; if (expectedType === Array && typeof (param) !== "undefined" && param !== null && (expectedElementType || !elementMayBeNull)) { var expectedElementInteger = !!expectedParam.elementInteger; var expectedElementDomElement = !!expectedParam.elementDomElement; for (var i = 0; i < param.length; i++) { var elem = param[i]; e = Function._validateParameterType(elem, expectedElementType, expectedElementInteger, expectedElementDomElement, elementMayBeNull, paramName + "[" + i + "]"); if (e) { e.popStackFrame(); return e; } } }
    return null;
}
Function._validateParameterType = function Function$_validateParameterType(param, expectedType, expectedInteger, expectedDomElement, mayBeNull, paramName) {
    var e; if (typeof (param) === "undefined") {
        if (mayBeNull) { return null; }
        else { e = Error.argumentUndefined(paramName); e.popStackFrame(); return e; }
    }
    if (param === null) {
        if (mayBeNull) { return null; }
        else { e = Error.argumentNull(paramName); e.popStackFrame(); return e; }
    }
    if (expectedType && expectedType.__enum) {
        if (typeof (param) !== 'number') { e = Error.argumentType(paramName, Object.getType(param), expectedType); e.popStackFrame(); return e; }
        if ((param % 1) === 0) {
            var values = expectedType.prototype; if (!expectedType.__flags || (param === 0)) { for (var i in values) { if (values[i] === param) return null; } }
            else {
                var v = param; for (var i in values) {
                    var vali = values[i]; if (vali === 0) continue; if ((vali & param) === vali) { v -= vali; }
                    if (v === 0) return null;
                }
            }
        }
        e = Error.argumentOutOfRange(paramName, param, String.format(Sys.Res.enumInvalidValue, param, expectedType.getName())); e.popStackFrame(); return e;
    }
    if (expectedDomElement) {
        var val; if (typeof (param.nodeType) !== 'number') {
            var doc = param.ownerDocument || param.document || param; if (doc != param) { var w = doc.defaultView || doc.parentWindow; val = (w != param) && !(w.document && param.document && (w.document === param.document)); }
            else { val = (typeof (doc.body) === 'undefined'); }
        }
        else { val = (param.nodeType === 3); }
        if (val) { e = Error.argument(paramName, Sys.Res.argumentDomElement); e.popStackFrame(); return e; }
    }
    if (expectedType && !expectedType.isInstanceOfType(param)) { e = Error.argumentType(paramName, Object.getType(param), expectedType); e.popStackFrame(); return e; }
    if (expectedType === Number && expectedInteger) { if ((param % 1) !== 0) { e = Error.argumentOutOfRange(paramName, param, Sys.Res.argumentInteger); e.popStackFrame(); return e; } }
    return null;
}
Error.__typeName = 'Error'; Error.__class = true; Error.create = function Error$create(message, errorInfo) {
    var e = Function._validateParams(arguments, [{ name: "message", type: String, mayBeNull: true, optional: true }, { name: "errorInfo", mayBeNull: true, optional: true }]); if (e) throw e; var e = new Error(message); e.message = message; if (errorInfo) { for (var v in errorInfo) { e[v] = errorInfo[v]; } }
    e.popStackFrame(); return e;
}
Error.argument = function Error$argument(paramName, message) {
    var e = Function._validateParams(arguments, [{ name: "paramName", type: String, mayBeNull: true, optional: true }, { name: "message", type: String, mayBeNull: true, optional: true }]); if (e) throw e; var displayMessage = "Sys.ArgumentException: " + (message ? message : Sys.Res.argument); if (paramName) { displayMessage += "\n" + String.format(Sys.Res.paramName, paramName); }
    var e = Error.create(displayMessage, { name: "Sys.ArgumentException", paramName: paramName }); e.popStackFrame(); return e;
}
Error.argumentNull = function Error$argumentNull(paramName, message) {
    var e = Function._validateParams(arguments, [{ name: "paramName", type: String, mayBeNull: true, optional: true }, { name: "message", type: String, mayBeNull: true, optional: true }]); if (e) throw e; var displayMessage = "Sys.ArgumentNullException: " + (message ? message : Sys.Res.argumentNull); if (paramName) { displayMessage += "\n" + String.format(Sys.Res.paramName, paramName); }
    var e = Error.create(displayMessage, { name: "Sys.ArgumentNullException", paramName: paramName }); e.popStackFrame(); return e;
}
Error.argumentOutOfRange = function Error$argumentOutOfRange(paramName, actualValue, message) {
    var e = Function._validateParams(arguments, [{ name: "paramName", type: String, mayBeNull: true, optional: true }, { name: "actualValue", mayBeNull: true, optional: true }, { name: "message", type: String, mayBeNull: true, optional: true }]); if (e) throw e; var displayMessage = "Sys.ArgumentOutOfRangeException: " + (message ? message : Sys.Res.argumentOutOfRange); if (paramName) { displayMessage += "\n" + String.format(Sys.Res.paramName, paramName); }
    if (typeof (actualValue) !== "undefined" && actualValue !== null) { displayMessage += "\n" + String.format(Sys.Res.actualValue, actualValue); }
    var e = Error.create(displayMessage, { name: "Sys.ArgumentOutOfRangeException", paramName: paramName, actualValue: actualValue }); e.popStackFrame(); return e;
}
Error.argumentType = function Error$argumentType(paramName, actualType, expectedType, message) {
    var e = Function._validateParams(arguments, [{ name: "paramName", type: String, mayBeNull: true, optional: true }, { name: "actualType", type: Type, mayBeNull: true, optional: true }, { name: "expectedType", type: Type, mayBeNull: true, optional: true }, { name: "message", type: String, mayBeNull: true, optional: true }]); if (e) throw e; var displayMessage = "Sys.ArgumentTypeException: "; if (message) { displayMessage += message; }
    else if (actualType && expectedType) { displayMessage += String.format(Sys.Res.argumentTypeWithTypes, actualType.getName(), expectedType.getName()); }
    else { displayMessage += Sys.Res.argumentType; }
    if (paramName) { displayMessage += "\n" + String.format(Sys.Res.paramName, paramName); }
    var e = Error.create(displayMessage, { name: "Sys.ArgumentTypeException", paramName: paramName, actualType: actualType, expectedType: expectedType }); e.popStackFrame(); return e;
}
Error.argumentUndefined = function Error$argumentUndefined(paramName, message) {
    var e = Function._validateParams(arguments, [{ name: "paramName", type: String, mayBeNull: true, optional: true }, { name: "message", type: String, mayBeNull: true, optional: true }]); if (e) throw e; var displayMessage = "Sys.ArgumentUndefinedException: " + (message ? message : Sys.Res.argumentUndefined); if (paramName) { displayMessage += "\n" + String.format(Sys.Res.paramName, paramName); }
    var e = Error.create(displayMessage, { name: "Sys.ArgumentUndefinedException", paramName: paramName }); e.popStackFrame(); return e;
}
Error.format = function Error$format(message) { var e = Function._validateParams(arguments, [{ name: "message", type: String, mayBeNull: true, optional: true }]); if (e) throw e; var displayMessage = "Sys.FormatException: " + (message ? message : Sys.Res.format); var e = Error.create(displayMessage, { name: 'Sys.FormatException' }); e.popStackFrame(); return e; }
Error.invalidOperation = function Error$invalidOperation(message) { var e = Function._validateParams(arguments, [{ name: "message", type: String, mayBeNull: true, optional: true }]); if (e) throw e; var displayMessage = "Sys.InvalidOperationException: " + (message ? message : Sys.Res.invalidOperation); var e = Error.create(displayMessage, { name: 'Sys.InvalidOperationException' }); e.popStackFrame(); return e; }
Error.notImplemented = function Error$notImplemented(message) { var e = Function._validateParams(arguments, [{ name: "message", type: String, mayBeNull: true, optional: true }]); if (e) throw e; var displayMessage = "Sys.NotImplementedException: " + (message ? message : Sys.Res.notImplemented); var e = Error.create(displayMessage, { name: 'Sys.NotImplementedException' }); e.popStackFrame(); return e; }
Error.parameterCount = function Error$parameterCount(message) { var e = Function._validateParams(arguments, [{ name: "message", type: String, mayBeNull: true, optional: true }]); if (e) throw e; var displayMessage = "Sys.ParameterCountException: " + (message ? message : Sys.Res.parameterCount); var e = Error.create(displayMessage, { name: 'Sys.ParameterCountException' }); e.popStackFrame(); return e; }
Error.prototype.popStackFrame = function Error$popStackFrame() {
    if (arguments.length !== 0) throw Error.parameterCount(); if (typeof (this.stack) === "undefined" || this.stack === null || typeof (this.fileName) === "undefined" || this.fileName === null || typeof (this.lineNumber) === "undefined" || this.lineNumber === null) { return; }
    var stackFrames = this.stack.split("\n"); var currentFrame = stackFrames[0]; var pattern = this.fileName + ":" + this.lineNumber; while (typeof (currentFrame) !== "undefined" && currentFrame !== null && currentFrame.indexOf(pattern) === -1) { stackFrames.shift(); currentFrame = stackFrames[0]; }
    var nextFrame = stackFrames[1]; if (typeof (nextFrame) === "undefined" || nextFrame === null) { return; }
    var nextFrameParts = nextFrame.match(/@(.*):(\d+)$/); if (typeof (nextFrameParts) === "undefined" || nextFrameParts === null) { return; }
    this.fileName = nextFrameParts[1]; this.lineNumber = parseInt(nextFrameParts[2]); stackFrames.shift(); this.stack = stackFrames.join("\n");
}
Object.__typeName = 'Object'; Object.__class = true; Object.getType = function Object$getType(instance) {
    var e = Function._validateParams(arguments, [{ name: "instance" }]); if (e) throw e; var ctor = instance.constructor; if (!ctor || (typeof (ctor) !== "function") || !ctor.__typeName || (ctor.__typeName === 'Object')) { return Object; }
    return ctor;
}
Object.getTypeName = function Object$getTypeName(instance) { var e = Function._validateParams(arguments, [{ name: "instance" }]); if (e) throw e; return Object.getType(instance).getName(); }
String.__typeName = 'String'; String.__class = true; String.prototype.endsWith = function String$endsWith(suffix) { var e = Function._validateParams(arguments, [{ name: "suffix", type: String }]); if (e) throw e; return (this.substr(this.length - suffix.length) === suffix); }
String.prototype.startsWith = function String$startsWith(prefix) { var e = Function._validateParams(arguments, [{ name: "prefix", type: String }]); if (e) throw e; return (this.substr(0, prefix.length) === prefix); }
String.prototype.trim = function String$trim() { if (arguments.length !== 0) throw Error.parameterCount(); return this.replace(/^\s+|\s+$/g, ''); }
String.prototype.trimEnd = function String$trimEnd() { if (arguments.length !== 0) throw Error.parameterCount(); return this.replace(/\s+$/, ''); }
String.prototype.trimStart = function String$trimStart() { if (arguments.length !== 0) throw Error.parameterCount(); return this.replace(/^\s+/, ''); }
String.format = function String$format(format, args) { var e = Function._validateParams(arguments, [{ name: "format", type: String }, { name: "args", mayBeNull: true, parameterArray: true }]); if (e) throw e; return String._toFormattedString(false, arguments); }
String.localeFormat = function String$localeFormat(format, args) { var e = Function._validateParams(arguments, [{ name: "format", type: String }, { name: "args", mayBeNull: true, parameterArray: true }]); if (e) throw e; return String._toFormattedString(true, arguments); }
String._toFormattedString = function String$_toFormattedString(useLocale, args) {
    var result = ''; var format = args[0]; for (var i = 0; ;) {
        var open = format.indexOf('{', i); var close = format.indexOf('}', i); if ((open < 0) && (close < 0)) { result += format.slice(i); break; }
        if ((close > 0) && ((close < open) || (open < 0))) {
            if (format.charAt(close + 1) !== '}') { throw Error.argument('format', Sys.Res.stringFormatBraceMismatch); }
            result += format.slice(i, close + 1); i = close + 2; continue;
        }
        result += format.slice(i, open); i = open + 1; if (format.charAt(i) === '{') { result += '{'; i++; continue; }
        if (close < 0) throw Error.argument('format', Sys.Res.stringFormatBraceMismatch); var brace = format.substring(i, close); var colonIndex = brace.indexOf(':'); var argNumber = parseInt((colonIndex < 0) ? brace : brace.substring(0, colonIndex), 10) + 1; if (isNaN(argNumber)) throw Error.argument('format', Sys.Res.stringFormatInvalid); var argFormat = (colonIndex < 0) ? '' : brace.substring(colonIndex + 1); var arg = args[argNumber]; if (typeof (arg) === "undefined" || arg === null) { arg = ''; }
        if (arg.toFormattedString) { result += arg.toFormattedString(argFormat); }
        else if (useLocale && arg.localeFormat) { result += arg.localeFormat(argFormat); }
        else if (arg.format) { result += arg.format(argFormat); }
        else
            result += arg.toString(); i = close + 1;
    }
    return result;
}
Boolean.__typeName = 'Boolean'; Boolean.__class = true; Boolean.parse = function Boolean$parse(value) { var e = Function._validateParams(arguments, [{ name: "value", type: String }]); if (e) throw e; var v = value.trim().toLowerCase(); if (v === 'false') return false; if (v === 'true') return true; throw Error.argumentOutOfRange('value', value, Sys.Res.boolTrueOrFalse); }
Date.__typeName = 'Date'; Date.__class = true; Date._appendPreOrPostMatch = function Date$_appendPreOrPostMatch(preMatch, strBuilder) {
    var quoteCount = 0; var escaped = false; for (var i = 0, il = preMatch.length; i < il; i++) { var c = preMatch.charAt(i); switch (c) { case '\'': if (escaped) strBuilder.append("'"); else quoteCount++; escaped = false; break; case '\\': if (escaped) strBuilder.append("\\"); escaped = !escaped; break; default: strBuilder.append(c); escaped = false; break; } }
    return quoteCount;
}
Date._expandFormat = function Date$_expandFormat(dtf, format) {
    if (!format) { format = "F"; }
    if (format.length === 1) { switch (format) { case "d": return dtf.ShortDatePattern; case "D": return dtf.LongDatePattern; case "t": return dtf.ShortTimePattern; case "T": return dtf.LongTimePattern; case "F": return dtf.FullDateTimePattern; case "M": case "m": return dtf.MonthDayPattern; case "s": return dtf.SortableDateTimePattern; case "Y": case "y": return dtf.YearMonthPattern; default: throw Error.format(Sys.Res.formatInvalidString); } }
    return format;
}
Date._expandYear = function Date$_expandYear(dtf, year) {
    if (year < 100) { var curr = new Date().getFullYear(); year += curr - (curr % 100); if (year > dtf.Calendar.TwoDigitYearMax) { return year - 100; } }
    return year;
}
Date._getParseRegExp = function Date$_getParseRegExp(dtf, format) {
    if (!dtf._parseRegExp) { dtf._parseRegExp = {}; }
    else if (dtf._parseRegExp[format]) { return dtf._parseRegExp[format]; }
    var expFormat = Date._expandFormat(dtf, format); expFormat = expFormat.replace(/([\^\$\.\*\+\?\|\[\]\(\)\{\}])/g, "\\\\$1"); var regexp = new Sys.StringBuilder("^"); var groups = []; var index = 0; var quoteCount = 0; var tokenRegExp = Date._getTokenRegExp(); var match; while ((match = tokenRegExp.exec(expFormat)) !== null) {
        var preMatch = expFormat.slice(index, match.index); index = tokenRegExp.lastIndex; quoteCount += Date._appendPreOrPostMatch(preMatch, regexp); if ((quoteCount % 2) === 1) { regexp.append(match[0]); continue; }
        switch (match[0]) { case 'dddd': case 'ddd': case 'MMMM': case 'MMM': regexp.append("(\\D+)"); break; case 'tt': case 't': regexp.append("(\\D*)"); break; case 'yyyy': regexp.append("(\\d{4})"); break; case 'fff': regexp.append("(\\d{3})"); break; case 'ff': regexp.append("(\\d{2})"); break; case 'f': regexp.append("(\\d)"); break; case 'dd': case 'd': case 'MM': case 'M': case 'yy': case 'y': case 'HH': case 'H': case 'hh': case 'h': case 'mm': case 'm': case 'ss': case 's': regexp.append("(\\d\\d?)"); break; case 'zzz': regexp.append("([+-]?\\d\\d?:\\d{2})"); break; case 'zz': case 'z': regexp.append("([+-]?\\d\\d?)"); break; }
        Array.add(groups, match[0]);
    }
    Date._appendPreOrPostMatch(expFormat.slice(index), regexp); regexp.append("$"); var regexpStr = regexp.toString().replace(/\s+/g, "\\s+"); var parseRegExp = { 'regExp': regexpStr, 'groups': groups }; dtf._parseRegExp[format] = parseRegExp; return parseRegExp;
}
Date._getTokenRegExp = function Date$_getTokenRegExp() { return /dddd|ddd|dd|d|MMMM|MMM|MM|M|yyyy|yy|y|hh|h|HH|H|mm|m|ss|s|tt|t|fff|ff|f|zzz|zz|z/g; }
Date.parseLocale = function Date$parseLocale(value, formats) { var e = Function._validateParams(arguments, [{ name: "value", type: String }, { name: "formats", mayBeNull: true, optional: true, parameterArray: true }]); if (e) throw e; return Date._parse(value, Sys.CultureInfo.CurrentCulture, arguments); }
Date.parseInvariant = function Date$parseInvariant(value, formats) { var e = Function._validateParams(arguments, [{ name: "value", type: String }, { name: "formats", mayBeNull: true, optional: true, parameterArray: true }]); if (e) throw e; return Date._parse(value, Sys.CultureInfo.InvariantCulture, arguments); }
Date._parse = function Date$_parse(value, cultureInfo, args) {
    var custom = false; for (var i = 1, il = args.length; i < il; i++) { var format = args[i]; if (format) { custom = true; var date = Date._parseExact(value, format, cultureInfo); if (date) return date; } }
    if (!custom) { var formats = cultureInfo._getDateTimeFormats(); for (var i = 0, il = formats.length; i < il; i++) { var date = Date._parseExact(value, formats[i], cultureInfo); if (date) return date; } }
    return null;
}
Date._parseExact = function Date$_parseExact(value, format, cultureInfo) {
    value = value.trim(); var dtf = cultureInfo.dateTimeFormat; var parseInfo = Date._getParseRegExp(dtf, format); var match = new RegExp(parseInfo.regExp).exec(value); if (match === null) return null; var groups = parseInfo.groups; var year = null, month = null, date = null, weekDay = null; var hour = 0, min = 0, sec = 0, msec = 0, tzMinOffset = null; var pmHour = false; for (var j = 0, jl = groups.length; j < jl; j++) { var matchGroup = match[j + 1]; if (matchGroup) { switch (groups[j]) { case 'dd': case 'd': date = parseInt(matchGroup, 10); if ((date < 1) || (date > 31)) return null; break; case 'MMMM': month = cultureInfo._getMonthIndex(matchGroup); if ((month < 0) || (month > 11)) return null; break; case 'MMM': month = cultureInfo._getAbbrMonthIndex(matchGroup); if ((month < 0) || (month > 11)) return null; break; case 'M': case 'MM': var month = parseInt(matchGroup, 10) - 1; if ((month < 0) || (month > 11)) return null; break; case 'y': case 'yy': year = Date._expandYear(dtf, parseInt(matchGroup, 10)); if ((year < 0) || (year > 9999)) return null; break; case 'yyyy': year = parseInt(matchGroup, 10); if ((year < 0) || (year > 9999)) return null; break; case 'h': case 'hh': hour = parseInt(matchGroup, 10); if (hour === 12) hour = 0; if ((hour < 0) || (hour > 11)) return null; break; case 'H': case 'HH': hour = parseInt(matchGroup, 10); if ((hour < 0) || (hour > 23)) return null; break; case 'm': case 'mm': min = parseInt(matchGroup, 10); if ((min < 0) || (min > 59)) return null; break; case 's': case 'ss': sec = parseInt(matchGroup, 10); if ((sec < 0) || (sec > 59)) return null; break; case 'tt': case 't': var upperToken = matchGroup.toUpperCase(); pmHour = (upperToken === dtf.PMDesignator.toUpperCase()); if (!pmHour && (upperToken !== dtf.AMDesignator.toUpperCase())) return null; break; case 'f': msec = parseInt(matchGroup, 10) * 100; if ((msec < 0) || (msec > 999)) return null; break; case 'ff': msec = parseInt(matchGroup, 10) * 10; if ((msec < 0) || (msec > 999)) return null; break; case 'fff': msec = parseInt(matchGroup, 10); if ((msec < 0) || (msec > 999)) return null; break; case 'dddd': weekDay = cultureInfo._getDayIndex(matchGroup); if ((weekDay < 0) || (weekDay > 6)) return null; break; case 'ddd': weekDay = cultureInfo._getAbbrDayIndex(matchGroup); if ((weekDay < 0) || (weekDay > 6)) return null; break; case 'zzz': var offsets = matchGroup.split(/:/); if (offsets.length !== 2) return null; var hourOffset = parseInt(offsets[0], 10); if ((hourOffset < -12) || (hourOffset > 13)) return null; var minOffset = parseInt(offsets[1], 10); if ((minOffset < 0) || (minOffset > 59)) return null; tzMinOffset = (hourOffset * 60) + (matchGroup.startsWith('-') ? -minOffset : minOffset); break; case 'z': case 'zz': var hourOffset = parseInt(matchGroup, 10); if ((hourOffset < -12) || (hourOffset > 13)) return null; tzMinOffset = hourOffset * 60; break; } } }
    var result = new Date(); if (year === null) { year = result.getFullYear(); }
    if (month === null) { month = result.getMonth(); }
    if (date === null) { date = result.getDate(); }
    result.setFullYear(year, month, date); if (result.getDate() !== date) return null; if ((weekDay !== null) && (result.getDay() !== weekDay)) { return null; }
    if (pmHour && (hour < 12)) { hour += 12; }
    result.setHours(hour, min, sec, msec); if (tzMinOffset !== null) { var adjustedMin = result.getMinutes() - (tzMinOffset + result.getTimezoneOffset()); result.setHours(result.getHours() + parseInt(adjustedMin / 60, 10), adjustedMin % 60); }
    return result;
}
Date.prototype.format = function Date$format(format) { var e = Function._validateParams(arguments, [{ name: "format", type: String }]); if (e) throw e; return this._toFormattedString(format, Sys.CultureInfo.InvariantCulture); }
Date.prototype.localeFormat = function Date$localeFormat(format) { var e = Function._validateParams(arguments, [{ name: "format", type: String }]); if (e) throw e; return this._toFormattedString(format, Sys.CultureInfo.CurrentCulture); }
Date.prototype._toFormattedString = function Date$_toFormattedString(format, cultureInfo) {
    if (!format || (format.length === 0) || (format === 'i')) {
        if (cultureInfo && (cultureInfo.name.length > 0)) { return this.toLocaleString(); }
        else { return this.toString(); }
    }
    var dtf = cultureInfo.dateTimeFormat; format = Date._expandFormat(dtf, format); var ret = new Sys.StringBuilder(); var hour; function addLeadingZero(num) {
        if (num < 10) { return '0' + num; }
        return num.toString();
    }
    function addLeadingZeros(num) {
        if (num < 10) { return '00' + num; }
        if (num < 100) { return '0' + num; }
        return num.toString();
    }
    var quoteCount = 0; var tokenRegExp = Date._getTokenRegExp(); for (; ;) {
        var index = tokenRegExp.lastIndex; var ar = tokenRegExp.exec(format); var preMatch = format.slice(index, ar ? ar.index : format.length); quoteCount += Date._appendPreOrPostMatch(preMatch, ret); if (!ar) break; if ((quoteCount % 2) === 1) { ret.append(ar[0]); continue; }
        switch (ar[0]) {
            case "dddd": ret.append(dtf.DayNames[this.getDay()]); break; case "ddd": ret.append(dtf.AbbreviatedDayNames[this.getDay()]); break; case "dd": ret.append(addLeadingZero(this.getDate())); break; case "d": ret.append(this.getDate()); break; case "MMMM": ret.append(dtf.MonthNames[this.getMonth()]); break; case "MMM": ret.append(dtf.AbbreviatedMonthNames[this.getMonth()]); break; case "MM": ret.append(addLeadingZero(this.getMonth() + 1)); break; case "M": ret.append(this.getMonth() + 1); break; case "yyyy": ret.append(this.getFullYear()); break; case "yy": ret.append(addLeadingZero(this.getFullYear() % 100)); break; case "y": ret.append(this.getFullYear() % 100); break; case "hh": hour = this.getHours() % 12; if (hour === 0) hour = 12; ret.append(addLeadingZero(hour)); break; case "h": hour = this.getHours() % 12; if (hour === 0) hour = 12; ret.append(hour); break; case "HH": ret.append(addLeadingZero(this.getHours())); break; case "H": ret.append(this.getHours()); break; case "mm": ret.append(addLeadingZero(this.getMinutes())); break; case "m": ret.append(this.getMinutes()); break; case "ss": ret.append(addLeadingZero(this.getSeconds())); break; case "s": ret.append(this.getSeconds()); break; case "tt": ret.append((this.getHours() < 12) ? dtf.AMDesignator : dtf.PMDesignator); break; case "t": ret.append(((this.getHours() < 12) ? dtf.AMDesignator : dtf.PMDesignator).charAt(0)); break; case "f": ret.append(addLeadingZeros(this.getMilliseconds()).charAt(0)); break; case "ff": ret.append(addLeadingZeros(this.getMilliseconds()).substr(0, 2)); break; case "fff": ret.append(addLeadingZeros(this.getMilliseconds())); break; case "z": hour = this.getTimezoneOffset() / 60; ret.append(((hour <= 0) ? '+' : '-') + Math.floor(Math.abs(hour))); break; case "zz": hour = this.getTimezoneOffset() / 60; ret.append(((hour <= 0) ? '+' : '-') + addLeadingZero(Math.floor(Math.abs(hour)))); break; case "zzz": hour = this.getTimezoneOffset() / 60; ret.append(((hour <= 0) ? '+' : '-') + addLeadingZero(Math.floor(Math.abs(hour))) +
            dtf.TimeSeparator + addLeadingZero(Math.abs(this.getTimezoneOffset() % 60))); break;
        }
    }
    return ret.toString();
}
Number.__typeName = 'Number'; Number.__class = true; Number.parseLocale = function Number$parseLocale(value) { var e = Function._validateParams(arguments, [{ name: "value", type: String }]); if (e) throw e; return Number._parse(value, Sys.CultureInfo.CurrentCulture); }
Number.parseInvariant = function Number$parseInvariant(value) { var e = Function._validateParams(arguments, [{ name: "value", type: String }]); if (e) throw e; return Number._parse(value, Sys.CultureInfo.InvariantCulture); }
Number._parse = function Number$_parse(value, cultureInfo) {
    value = value.trim(); if (value.match(/^[+-]?infinity$/i)) { return parseFloat(value); }
    if (value.match(/^0x[a-f0-9]+$/i)) { return parseInt(value); }
    var numFormat = cultureInfo.numberFormat; var signInfo = Number._parseNumberNegativePattern(value, numFormat, numFormat.NumberNegativePattern); var sign = signInfo[0]; var num = signInfo[1]; if ((sign === '') && (numFormat.NumberNegativePattern !== 1)) { signInfo = Number._parseNumberNegativePattern(value, numFormat, 1); sign = signInfo[0]; num = signInfo[1]; }
    if (sign === '') sign = '+'; var exponent; var intAndFraction; var exponentPos = num.indexOf('e'); if (exponentPos < 0) exponentPos = num.indexOf('E'); if (exponentPos < 0) { intAndFraction = num; exponent = null; }
    else { intAndFraction = num.substr(0, exponentPos); exponent = num.substr(exponentPos + 1); }
    var integer; var fraction; var decimalPos = intAndFraction.indexOf(numFormat.NumberDecimalSeparator); if (decimalPos < 0) { integer = intAndFraction; fraction = null; }
    else { integer = intAndFraction.substr(0, decimalPos); fraction = intAndFraction.substr(decimalPos + numFormat.NumberDecimalSeparator.length); }
    integer = integer.split(numFormat.NumberGroupSeparator).join(''); var altNumGroupSeparator = numFormat.NumberGroupSeparator.replace(/\u00A0/g, " "); if (numFormat.NumberGroupSeparator !== altNumGroupSeparator) { integer = integer.split(altNumGroupSeparator).join(''); }
    var p = sign + integer; if (fraction !== null) { p += '.' + fraction; }
    if (exponent !== null) {
        var expSignInfo = Number._parseNumberNegativePattern(exponent, numFormat, 1); if (expSignInfo[0] === '') { expSignInfo[0] = '+'; }
        p += 'e' + expSignInfo[0] + expSignInfo[1];
    }
    if (p.match(/^[+-]?\d*\.?\d*(e[+-]?\d+)?$/)) { return parseFloat(p); }
    return Number.NaN;
}
Number._parseNumberNegativePattern = function Number$_parseNumberNegativePattern(value, numFormat, numberNegativePattern) {
    var neg = numFormat.NegativeSign; var pos = numFormat.PositiveSign; switch (numberNegativePattern) {
        case 4: neg = ' ' + neg; pos = ' ' + pos; case 3: if (value.endsWith(neg)) { return ['-', value.substr(0, value.length - neg.length)]; }
        else if (value.endsWith(pos)) { return ['+', value.substr(0, value.length - pos.length)]; }
            break; case 2: neg += ' '; pos += ' '; case 1: if (value.startsWith(neg)) { return ['-', value.substr(neg.length)]; }
            else if (value.startsWith(pos)) { return ['+', value.substr(pos.length)]; }
                break; case 0: if (value.startsWith('(') && value.endsWith(')')) { return ['-', value.substr(1, value.length - 2)]; }
                    break;
    }
    return ['', value];
}
Number.prototype.format = function Number$format(format) { var e = Function._validateParams(arguments, [{ name: "format", type: String }]); if (e) throw e; return this._toFormattedString(format, Sys.CultureInfo.InvariantCulture); }
Number.prototype.localeFormat = function Number$localeFormat(format) { var e = Function._validateParams(arguments, [{ name: "format", type: String }]); if (e) throw e; return this._toFormattedString(format, Sys.CultureInfo.CurrentCulture); }
Number.prototype._toFormattedString = function Number$_toFormattedString(format, cultureInfo) {
    if (!format || (format.length === 0) || (format === 'i')) {
        if (cultureInfo && (cultureInfo.name.length > 0)) { return this.toLocaleString(); }
        else { return this.toString(); }
    }
    var _percentPositivePattern = ["n %", "n%", "%n"]; var _percentNegativePattern = ["-n %", "-n%", "-%n"]; var _numberNegativePattern = ["(n)", "-n", "- n", "n-", "n -"]; var _currencyPositivePattern = ["$n", "n$", "$ n", "n $"]; var _currencyNegativePattern = ["($n)", "-$n", "$-n", "$n-", "(n$)", "-n$", "n-$", "n$-", "-n $", "-$ n", "n $-", "$ n-", "$ -n", "n- $", "($ n)", "(n $)"]; function zeroPad(str, count, left) {
        for (var l = str.length; l < count; l++) { str = (left ? ('0' + str) : (str + '0')); }
        return str;
    }
    function expandNumber(number, precision, groupSizes, sep, decimalChar) {
        var curSize = groupSizes[0]; var curGroupIndex = 1; var factor = Math.pow(10, precision); var rounded = (Math.round(number * factor) / factor); if (!isFinite(rounded)) { rounded = number; }
        number = rounded; var numberString = number.toString(); var right = ""; var exponent; var split = numberString.split(/e/i); numberString = split[0]; exponent = (split.length > 1 ? parseInt(split[1]) : 0); split = numberString.split('.'); numberString = split[0]; right = split.length > 1 ? split[1] : ""; var l; if (exponent > 0) { right = zeroPad(right, exponent, false); numberString += right.slice(0, exponent); right = right.substr(exponent); }
        else if (exponent < 0) { exponent = -exponent; numberString = zeroPad(numberString, exponent + 1, true); right = numberString.slice(-exponent, numberString.length) + right; numberString = numberString.slice(0, -exponent); }
        if (precision > 0) {
            if (right.length > precision) { right = right.slice(0, precision); }
            else { right = zeroPad(right, precision, false); }
            right = decimalChar + right;
        }
        else { right = ""; }
        var stringIndex = numberString.length - 1; var ret = ""; while (stringIndex >= 0) {
            if (curSize === 0 || curSize > stringIndex) {
                if (ret.length > 0)
                    return numberString.slice(0, stringIndex + 1) + sep + ret + right; else
                    return numberString.slice(0, stringIndex + 1) + right;
            }
            if (ret.length > 0)
                ret = numberString.slice(stringIndex - curSize + 1, stringIndex + 1) + sep + ret; else
                ret = numberString.slice(stringIndex - curSize + 1, stringIndex + 1); stringIndex -= curSize; if (curGroupIndex < groupSizes.length) { curSize = groupSizes[curGroupIndex]; curGroupIndex++; }
        }
        return numberString.slice(0, stringIndex + 1) + sep + ret + right;
    }
    var nf = cultureInfo.numberFormat; var number = Math.abs(this); if (!format)
        format = "D"; var precision = -1; if (format.length > 1) precision = parseInt(format.slice(1), 10); var pattern; switch (format.charAt(0)) {
            case "d": case "D": pattern = 'n'; if (precision !== -1) { number = zeroPad("" + number, precision, true); }
                if (this < 0) number = -number; break; case "c": case "C": if (this < 0) pattern = _currencyNegativePattern[nf.CurrencyNegativePattern]; else pattern = _currencyPositivePattern[nf.CurrencyPositivePattern]; if (precision === -1) precision = nf.CurrencyDecimalDigits; number = expandNumber(Math.abs(this), precision, nf.CurrencyGroupSizes, nf.CurrencyGroupSeparator, nf.CurrencyDecimalSeparator); break; case "n": case "N": if (this < 0) pattern = _numberNegativePattern[nf.NumberNegativePattern]; else pattern = 'n'; if (precision === -1) precision = nf.NumberDecimalDigits; number = expandNumber(Math.abs(this), precision, nf.NumberGroupSizes, nf.NumberGroupSeparator, nf.NumberDecimalSeparator); break; case "p": case "P": if (this < 0) pattern = _percentNegativePattern[nf.PercentNegativePattern]; else pattern = _percentPositivePattern[nf.PercentPositivePattern]; if (precision === -1) precision = nf.PercentDecimalDigits; number = expandNumber(Math.abs(this) * 100, precision, nf.PercentGroupSizes, nf.PercentGroupSeparator, nf.PercentDecimalSeparator); break; default: throw Error.format(Sys.Res.formatBadFormatSpecifier);
        }
    var regex = /n|\$|-|%/g; var ret = ""; for (; ;) {
        var index = regex.lastIndex; var ar = regex.exec(pattern); ret += pattern.slice(index, ar ? ar.index : pattern.length); if (!ar)
            break; switch (ar[0]) { case "n": ret += number; break; case "$": ret += nf.CurrencySymbol; break; case "-": ret += nf.NegativeSign; break; case "%": ret += nf.PercentSymbol; break; }
    }
    return ret;
}
RegExp.__typeName = 'RegExp'; RegExp.__class = true; Array.__typeName = 'Array'; Array.__class = true; Array.add = Array.enqueue = function Array$enqueue(array, item) { var e = Function._validateParams(arguments, [{ name: "array", type: Array, elementMayBeNull: true }, { name: "item", mayBeNull: true }]); if (e) throw e; array[array.length] = item; }
Array.addRange = function Array$addRange(array, items) { var e = Function._validateParams(arguments, [{ name: "array", type: Array, elementMayBeNull: true }, { name: "items", type: Array, elementMayBeNull: true }]); if (e) throw e; array.push.apply(array, items); }
Array.clear = function Array$clear(array) { var e = Function._validateParams(arguments, [{ name: "array", type: Array, elementMayBeNull: true }]); if (e) throw e; array.length = 0; }
Array.clone = function Array$clone(array) {
    var e = Function._validateParams(arguments, [{ name: "array", type: Array, elementMayBeNull: true }]); if (e) throw e; if (array.length === 1) { return [array[0]]; }
    else { return Array.apply(null, array); }
}
//#endregion MicrosoftAjax.debug.js

//#endregion BibliothÃ©ques externes


/***********************************************************
 *                                                         *
 *      Search                                             *
 *                                                         *
 ***********************************************************/

//#region Search

function CivilRecordsSearch_ValidateYearsRedirect(year1, year2) {
    var y1 = 0; var y2 = 0; if (year1) { y1 = parseInt(year1); }
    if (year2) { y2 = parseInt(year2); }
    if (y1) {
        if (y2) {
            if (y2 < 0) { CivilRecordsSearch_ShowErrorMessage(2); }
            else {
                if (y2 < y1) { CivilRecordsSearch_ShowErrorMessage(3); }
                else {
                    if (y1.toString().length == 2 && y2.toString().length == 2) { y1 = parseInt("19" + y1.toString()); y2 = parseInt("19" + y2.toString()); $("#txtPeriod1").val(y1); $("#txtPeriod2").val(y2); }
                    CivilRecordsSearch_RedirectSearch();
                }
            }
        }
        else {
            if (y2 == 0) { CivilRecordsSearch_RedirectSearch(); }
            else { CivilRecordsSearch_ShowErrorMessage(2); }
        }
    }
    else {
        if ((y1 == 0 && (y2 && y2 < 0) || (!y2 && y2 != 0)) || (y1 != 0)) { CivilRecordsSearch_ShowErrorMessage(2); }
        else { CivilRecordsSearch_RedirectSearch(); }
    }
}
function CivilRecordsSearch_ShowErrorMessage(errorType) { jQuery(document).ready(function ($) { jQuery.facebox({ ajax: 'Search.mvc/SearchErrorMessage?errorType=' + errorType }) }) }
function CivilRecordsWithImageSearch_ValidateYearsRedirect(year1, year2) { var y1 = 0; var y2 = 0; if (year1) { y1 = parseInt(year1); } if (year2) { y2 = parseInt(year2); } if (y1) { if (y2) { if (y2 < 0) { CivilRecordsSearch_ShowErrorMessage(2); } else { if (y2 < y1) { CivilRecordsSearch_ShowErrorMessage(3); } else { if (y1.toString().length == 2 && y2.toString().length == 2) { y1 = parseInt("19" + y1.toString()); y2 = parseInt("19" + y2.toString()); $("#txtPeriod1").val(y1); $("#txtPeriod2").val(y2); } CivilRecordsWithImageSearch_RedirectSearch(); } } } else { if (y2 == 0) { CivilRecordsWithImageSearch_RedirectSearch(); } else { CivilRecordsSearch_ShowErrorMessage(2); } } } else { if ((y1 == 0 && (y2 && y2 < 0) || (!y2 && y2 != 0)) || (y1 != 0)) { CivilRecordsSearch_ShowErrorMessage(2); } else { CivilRecordsWithImageSearch_RedirectSearch(); } } } function CivilRecordsSearch_RedirectSearch() {
    var name = $("#txtName").val(); var stringRedirect = "?name=" + name; var firstName = $("#txtFirstName").val(); if (firstName) { stringRedirect += "&firstName=" + firstName; }
    var period1 = $("#txtPeriod1").val(); if (period1) { stringRedirect += "&period1=" + period1; }
    var period2 = $("#txtPeriod2").val(); if (period2) { stringRedirect += "&period2=" + period2; }
    stringRedirect += "&countryId=" + document.getElementById("ddlCountry").value; stringRedirect += "&departmentId=" + document.getElementById("departement").value; var checked = $("#checkEnlarge").is(':checked'); stringRedirect += "&expended=" + checked; var nameFather = $("#nameFather").val(); if (nameFather) { stringRedirect += "&nameFather=" + nameFather; }
    var firstNameFather = $("#firstNameFather").val(); if (firstNameFather) { stringRedirect += "&firstNameFather=" + firstNameFather; }
    var nameMother = $("#nameMother").val(); if (nameMother) { stringRedirect += "&nameMother=" + nameMother; }
    var firstNameMother = $("#firstNameMother").val(); if (firstNameMother) { stringRedirect += "&firstNameMother=" + firstNameMother; }
    var nameUnion = $("#nameUnion").val(); if (nameUnion) { stringRedirect += "&nameUnion=" + nameUnion; }
    var firstNameUnion = $("#firstNameUnion").val(); if (firstNameUnion) { stringRedirect += "&firstNameUnion=" + firstNameUnion; }
    var alertchecked = $("#checkAlert").is(':checked'); stringRedirect += "&withAlert=" + alertchecked; var advancedSearch = "false"; if ($("#AdvancedSearch").css("display") == "block") { advancedSearch = "true"; }
    stringRedirect += "&page=1&firstPageInPagination=1&sortField=1&advanced=" + advancedSearch; stringRedirect += "&categoryId1=1&searchType=2"; stringRedirect += "&acteType=" + document.getElementById("acteType").value; window.location = appPath + "/Search.mvc/SearchResult" + stringRedirect;
}
function CivilRecordsSearch_Change() {
    var code = document.getElementById("ddlCountry").value; SetEtatCivilBlazon(code); if (code == "0") { code = "FR"; }
    if (code == "FR") { $.post(appPath + "/Search.mvc/GetDepartmentsByCountry", { countryCode: code }, function (msg) { var listItems = '<select name="departement" id="departement" class="generalSearchTextBoxRound halfwidth1" onchange = "CivilRecordsSearch_Enlarge();CivilRecordsSearch_ChangeCountry(this.val);">'; listItems += '<option value="0">Tous les dÃ©partements</option>'; if (msg.length > 0) { for (var i in msg) { listItems += '<option value="' + msg[i].Admin2Code + '">' + msg[i].Name + '</option>'; } } listItems += '</select>'; $("#divDepartments").html(listItems); }); }
    else { var listItems = '<select name="departement" id="departement" class="generalSearchTextBoxRound halfwidth1" disabled="disabled"><option value="0">Tous les dÃ©partements</option></select>'; $("#divDepartments").html(listItems); }
    CivilRecordsSearch_Enlarge(); CivilRecordsSearch_ShowDisplayDepartments();
}
function CivilRecordsSearch_ChangeCountry(idDepartment) { if (document.getElementById("ddlCountry").value == "0") { $("#ddlCountry").val("FR"); } }
function SetEtatCivilBlazon(code) { $.post(appPath + "/Search.mvc/GetEtatCivilBlazons", { countryCode: code }, function (msg) { $("#etatCivilBlazon").attr("src", "Content/Etat-Civil-Blasons/" + msg); }); }
function CivilRecordsSearch_Enlarge() {
    var code = document.getElementById("departement").value; var ctry = document.getElementById("ddlCountry").value; var chk = document.getElementById("checkEnlarge"); if (code != "0" && ctry == "FR") { $("#divEnlarge").css("display", "block"); SetEtatCivilBlazon(code); }
    else { chk.checked = false; $("#divEnlarge").css("display", "none"); if (ctry == "FR") { SetEtatCivilBlazon(ctry); } }
}
function CivilRecordsSearch_ShowDisplayDepartments() { $("#divLabelDepartments").css("display", "block"); $("#divDepartments").css("display", "block"); }
function Search_ValidateYearsRedirect(year1, year2) { var y1 = 0; var y2 = 0; if (year1) { y1 = parseInt(year1); } if (year2) { y2 = parseInt(year2); } if (y1) { if (y2) { if (y2 < 0) { Search_ShowErrorMessage(2); } else { if (y2 < y1) { Search_ShowErrorMessage(3); } else { if (y1.toString().length == 2 && y2.toString().length == 2) { y1 = parseInt("19" + y1.toString()); y2 = parseInt("19" + y2.toString()); $("#txtPeriod1").val(y1); $("#txtPeriod2").val(y2); } Search_RedirectSearch(); } } } else { if (y2 == 0) { Search_RedirectSearch(); } else { Search_ShowErrorMessage(2); } } } else { if ((y1 == 0 && (y2 && y2 < 0) || (!y2 && y2 != 0)) || (y1 != 0)) { Search_ShowErrorMessage(2); } else { Search_RedirectSearch(); } } }
function Search_RedirectSearch() { var name = $("#txtName").val(); var stringRedirect = "?name=" + name; var firstName = $("#txtFirstName").val(); if (firstName) { stringRedirect += "&firstName=" + firstName; } var period1 = $("#txtPeriod1").val(); if (period1) { stringRedirect += "&period1=" + period1; } var period2 = $("#txtPeriod2").val(); if (period2) { stringRedirect += "&period2=" + period2; } stringRedirect += "&countryId=" + document.getElementById("ddlCountry").value; stringRedirect += "&departmentId=" + document.getElementById("departement").value; var checked = $("#checkEnlarge").is(':checked'); stringRedirect += "&expended=" + checked; var nameFather = $("#nameFather").val(); if (nameFather) { stringRedirect += "&nameFather=" + nameFather; } var firstNameFather = $("#firstNameFather").val(); if (firstNameFather) { stringRedirect += "&firstNameFather=" + firstNameFather; } var nameMother = $("#nameMother").val(); if (nameMother) { stringRedirect += "&nameMother=" + nameMother; } var firstNameMother = $("#firstNameMother").val(); if (firstNameMother) { stringRedirect += "&firstNameMother=" + firstNameMother; } var nameUnion = $("#nameUnion").val(); if (nameUnion) { stringRedirect += "&nameUnion=" + nameUnion; } var firstNameUnion = $("#firstNameUnion").val(); if (firstNameUnion) { stringRedirect += "&firstNameUnion=" + firstNameUnion; } var alertchecked = $("#checkAlert").is(':checked'); stringRedirect += "&withAlert=" + alertchecked; var advancedSearch = "false"; if ($("#AdvancedSearch").css("display") == "block") { advancedSearch = "true"; } stringRedirect += "&page=1&firstPageInPagination=1&sortField=1&advanced=" + advancedSearch; var categ = document.getElementById("category").value; if (categ && categ > 0) { stringRedirect += "&categoryId1=" + document.getElementById("category").value; } window.location = appPath + "/Search.mvc/SearchResult" + stringRedirect; }
function Search_Change() { var code = document.getElementById("ddlCountry").value; if (code == "0") { code = "FR"; } if (code == "FR") { $.post(appPath + "/Search.mvc/GetDepartmentsByCountry", { countryCode: code }, function (msg) { var listItems = '<select name="departement" id="departement" class="generalSearchTextBoxRound" onchange = "Search_Enlarge();Search_ChangeCountry(this.value);">'; listItems += '<option value="0">Tous les dÃ©partements</option>'; if (msg.length > 0) { for (var i in msg) { listItems += '<option value="' + msg[i].Admin2Code + '">' + msg[i].Name + '</option>'; } } listItems += '</select>'; $("#divDepartments").html(listItems); }); } else { var listItems = '<select name="departement" id="departement"  class="generalSearchTextBoxRoundDisabled" disabled="disabled"><option value="0">Tous les dÃ©partements</option></select>'; $("#divDepartments").html(listItems); } Search_Enlarge(); }
function Search_ChangeCountry(idDepartment) { if (document.getElementById("ddlCountry").value == "0") { $("#ddlCountry").val("FR"); } }
function Search_Enlarge() { var code = document.getElementById("departement").value; var ctry = document.getElementById("ddlCountry").value; var chk = document.getElementById("checkEnlarge"); if (code != "0" && ctry == "FR") { $("#divEnlarge").css("display", "block"); } else { chk.checked = false; $("#divEnlarge").css("display", "none"); } Search_ShowDisplayDepartments(); }
function Search_ShowDisplayDepartments() { var code = document.getElementById("ddlCountry").value; $("#divShowDepartments").css("display", "block"); }
function SetTitle() { var categIndex = document.getElementById("category").selectedIndex; var title = 'GÃ©nÃ©alogiques'; if (categIndex > 0) { title = document.getElementById("category").options[categIndex].text; } $("#searchGeneralTitle").html("&nbsp;" + title); }
function Redirect() { window.location = CreateUrl(true); }
function NewSearch() { Search(false); FilterCategories(0, 0, 0, 0); EmptySearchFilters(); $("#colonneRight").hide(); $("#searchExcludeNoIndividPrincipal").val(""); $("#ExcludeNoIndividPrincipal").val(""); $("#collectionsDiv").hide(); document.getElementById("departement").value = "0"; $("#SearchFields").css("display", "block"); $("#SearchDetails").css("display", "none"); $("#2_searchModify").val("0"); $('input:text').hint(); $("#searchAreaField").val("0"); $("#SearchFieldArray").val("0"); $("#SelectedObjectIds").val(""); }
function EmptySearchFilters() { $("#ActeType").val(""); $("#ExcludeIndivids").val(""); $("#ExcludeOrphans").val(""); $("#OnlyPublicTree").val(""); $("#ExcludeWithoutPhoto").val(""); $("#ExcludeWithoutParent").val(""); $("#Name").val(""); $("#CountryId").val("0"); $("#DepartmentKey").val("0"); $("#FirstNameInitial").val(""); $("#Period1").val(""); $("#Period2").val(""); $("#SortField").val("1"); $("#TownId").val(""); $("#TownName").val(""); $("#SearchLastAddedDays").val(""); $("#ExcludeFromTree").val(""); $("#SelectedObjectIds").val(""); $("#SelectedObjectIdsString").val(""); $("#PageNumber").val("1"); $("#PageSize").val("10"); $("#searchActeType").val(""); $("#searchExcludeIndivids").val(""); $("#searchExcludeOrphans").val(""); $("#searchOnlyPublicTree").val(""); $("#searchExcludeWithoutPhoto").val(""); $("#searchExcludeWithoutParent").val(""); $("#searchName").val(""); $("#searchCountry").val("0"); $("#searchDepartement").val("0"); $("#searchFirstNameInitial").val(""); $("#searchPeriod1").val(""); $("#searchPeriod2").val(""); $("#searchSortField").val("1"); $("#searchTownId").val(""); $("#searchTownName").val(""); $("#lastAddedDays").val(""); $("#excludeFromTree").val(""); $("#selectedObjectIds").val(""); $("#selectedObjectIdsString").val(""); $("#searchPageNumber").val("1"); $("#searchPageSize").val("10"); }
function ModifySearch() { Search(true); $("#SearchFields").css("display", "block"); $("#SearchDetails").css("display", "none"); $("#2_searchModify").val("1"); EnlargeDisabled(); }
function Search(modify) { if (modify) { FillFields(); } else { EmptyFields("0"); } }
function EmptyFields(country) { $("#txtName").val(""); $("#txtFirstName").val(""); $("#txtPeriod1").val(""); $("#txtPeriod2").val(""); $("#departement").value = 0; document.getElementById("ddlCountry").value = country; $("#txtNameFather").val(""); $("#txtFirstNameFather").val(""); $("#txtNameMother").val(""); $("#txtFirstNameMother").val(""); $("#txtNameUnion").val(""); $("#txtFirstNameUnion").val(""); $("#txtNameFatherHidden").val(""); $("#txtFirstNameFatherHidden").val(""); $("#txtNameMotherHidden").val(""); $("#txtFirstNameMotherHidden").val(""); $("#txtNameUnionHidden").val(""); $("#txtFirstNameUnionHidden").val(""); }
function FillFields() {
    EmptyFields($("#searchCountry").val()); $("#txtName").val($("#searchName").val()); $("#txtFirstName").val($("#searchFirstName").val()); $("#txtPeriod1").val($("#searchPeriod1").val()); $("#txtPeriod2").val($("#searchPeriod2").val()); if (($("#searchCountry").val() == "0") && ($("#searchDepartement").val() != "0")) { $("#ddlCountry").val("FR"); } else { $("#ddlCountry").val($("#searchCountry").val()); }
    if ($("#searchNameFather").val()) { $("#txtNameFather").val($("#searchNameFather").val()); $("#txtNameFather").removeClass("blur"); }
    $("#txtNameFatherHidden").val($("#searchNameFather").val()); if ($("#searchFirstNameFather").val()) { $("#txtFirstNameFather").val($("#searchFirstNameFather").val()); $("#txtFirstNameFather").removeClass("blur"); }
    $("#txtFirstNameFatherHidden").val($("#searchFirstNameFather").val()); if ($("#searchNameMother").val()) { $("#txtNameMother").val($("#searchNameMother").val()); $("#txtNameMother").removeClass("blur"); }
    $("#txtNameMotherHidden").val($("#searchNameMother").val()); if ($("#searchFirstNameMother").val()) { $("#txtFirstNameMother").val($("#searchFirstNameMother").val()); $("#txtFirstNameMother").removeClass("blur"); }
    $("#txtFirstNameMotherHidden").val($("#searchFirstNameMother").val()); if ($("#searchNameUnion").val()) { $("#txtNameUnion").val($("#searchNameUnion").val()); $("#txtNameUnion").removeClass("blur"); }
    $("#txtNameUnionHidden").val($("#searchNameUnion").val()); if ($("#searchFirstNameUnion").val()) { $("#txtFirstNameUnion").val($("#searchFirstNameUnion").val()); $("#txtFirstNameUnion").removeClass("blur"); }
    $("#txtFirstNameUnionHidden").val($("#searchFirstNameUnion").val()); $("#SearchFieldArray").val($("#ArraySearch").val()); EnlargeDisabled();
}
function SearchDetails_ValidateYearsRedirect(e, t) { var n = 0; var r = 0; if (e) { n = parseInt(e) } if (t) { r = parseInt(t) } if (n) { if (r) { if (r < 0) { SearchDetails_ShowErrorMessage(2) } else { if (r < n) { SearchDetails_ShowErrorMessage(3) } else { if (n.toString().length == 2 && r.toString().length == 2) { n = parseInt("19" + n.toString()); r = parseInt("19" + r.toString()); $("#txtPeriod1").val(n); $("#txtPeriod2").val(r) } SetSearchFields() } } } else { if (r == 0) { SetSearchFields() } else { SearchDetails_ShowErrorMessage(2) } } } else { if (n == 0 && r && r < 0 || !r && r != 0 || n != 0) { SearchDetails_ShowErrorMessage(2) } else { SetSearchFields() } } }
function SearchDetails_ShowErrorMessage(errorType) { closeLoading(); jQuery(document).ready(function ($) { jQuery.facebox({ ajax: 'Search.mvc/SearchErrorMessage?errorType=' + errorType }) }) }
function FilterCategories(categId1, categId2, categId3, typeSearch) {
    if (categId1) { $("#categoryId1").val(categId1); $("#CategoryId1").val(categId1); $("#SearchType").val(typeSearch); $("#searchSearchType").val(typeSearch); $("#divExcludeFromTree").hide(); $("#excludeFromTree").val("false"); $("#ExcludeFromTree").val("false"); }
    else { $("#categoryId1").val(''); $("#CategoryId1").val(''); $("#SearchType").val(''); $("#searchSearchType").val(''); $("#divExcludeFromTree").show(); $("#excludeFromTree").val("false"); $("#ExcludeFromTree").val("false"); }
    if (categId2) { $("#categoryId2").val(categId2); $("#CategoryId2").val(categId2); }
    else { $("#categoryId2").val(''); $("#CategoryId2").val(''); }
    if (categId3) { $("#categoryId3").val(categId3); $("#CategoryId3").val(categId3); }
    else { $("#categoryId3").val(''); $("#CategoryId3").val(''); }
    $("#SearchDetail").val(1);
}
function RemoveTown() { $("#searchTownId").val(""); $("#TownId").val(""); $("#searchTownName").val(""); $("#TownName").val(""); $("#communes").val(""); $("#communesId").val(0); $("#searchAreaField").val("0"); $("#SearchFieldArray").val("0"); SearchSubmit(); }
function SearchDetails_Change(value) {
    var code = document.getElementById("ddlCountry").value; if (code == "0") { code = "FR"; }
    if (code == "FR") {
        $.post(appPath + "/Search.mvc/GetDepartmentsByCountry", { countryCode: code }, function (msg) {
            var listItems = '<select name="departement" id="departement" class="TextBoxNewSearchLargeInput" onchange = "DepartmentChanged();ChangeDepartmentSearch(this.Value)">'; listItems += '<option value="0">Tous les dÃ©partements</option>'; if (msg.length > 0) {
                for (var i in msg) {
                    var selected = ""; if (value == msg[i].Admin2Code) { selected = "selected"; }
                    listItems += '<option value="' + msg[i].Admin2Code + '" ' + selected + '>' + msg[i].Name + '</option>';
                }
            }
            listItems += '</select>'; $("#divDepartments").html(listItems);
        });
    }
    else { var listItems = '<select name="departement" id="departement" class="TextBoxNewSearchLargeInput" disabled="disabled"><option value="0">Tous les dÃ©partements</option></select>'; $("#divDepartments").html(listItems); }
    EnlargeDisabled();
}
function EnlargeDisabled() {
    var code = document.getElementById("departement").value; var ctry = document.getElementById("ddlCountry").value; var chk = document.getElementById("SearchChkExpended"); if (code != "0") { $("#divEnlarge").css("display", "block"); }
    else { $("#divEnlarge").css("display", "none"); }
}
function ChangeDepartmentSearch(idDepartment) { if (document.getElementById("ddlCountry").value == "0") { $("#ddlCountry").val("FR"); } }
function DepartmentChanged() {
    var code = document.getElementById("departement").value; var ctry = document.getElementById("ddlCountry").value; var chk = document.getElementById("SearchChkExpended"); $("#ArraySearch").disable = false; chk.checked = false; $("#searchExpended").val("false"); if (code != "0") { $("#divEnlarge").css("display", "block"); }
    else { $("#divEnlarge").css("display", "none"); }
}
function SearchDetails_ChangeCountry() { $("#searchExpended").val("false"); document.getElementById("SearchChkExpended").checked = false; SearchDetails_Change(); ShowDisplayDepartments(); }
function ChangeNameFather() { $("#txtNameFatherHidden").val($("#txtNameFather").val()); }
function ChangeFirstNameFather() { $("#txtFirstNameFatherHidden").val($("#txtFirstNameFather").val()); }
function ChangeNameMother() { $("#txtNameMotherHidden").val($("#txtNameMother").val()); }
function ChangeFirstNameMother() { $("#txtFirstNameMotherHidden").val($("#txtFirstNameMother").val()); }
function ChangeNameUnion() { $("#txtNameUnionHidden").val($("#txtNameUnion").val()); }
function ChangeFirstNameUnion() { $("#txtFirstNameUnionHidden").val($("#txtFirstNameUnion").val()); }
function ShowDisplayDepartments() { var code = document.getElementById("ddlCountry").value; $("#divLabelDepartments").css("display", "block"); $("#divDepartments").css("display", "block"); }
function SearchDisplayCategories_SetActiveMenus() { $("div[class^='titleDisplayCategL1 flip']").click(function () { $(this).toggleClass("active").next().next().slideToggle("slow"); }); $("div[class^='titleDisplayCategL2 flip']").click(function () { $(this).toggleClass("active").next().next().slideToggle("slow"); }); $("div[class^='labelCategoryName']").click(function () { $("div[class^='titleDisplayCategories']").removeClass('activeLabel'); $("div[class^='labelCategoryName']").removeClass('activeLabel'); $("div[class^='titleDisplayCategL3']").removeClass('activeLabel'); $(this).addClass("activeLabel"); SearchDisplayCategories_SetCategoryName($(this).html()); }); $("div[class^='titleDisplayCategories']").click(function () { $("div[class^='labelCategoryName']").removeClass('activeLabel'); $("div[class^='titleDisplayCategL3']").removeClass('activeLabel'); $(this).addClass("activeLabel"); SearchDisplayCategories_SetCategoryName(""); }); $("div[class^='titleDisplayCategL3']").click(function () { $("div[class^='labelCategoryName']").removeClass('activeLabel'); $("div[class^='titleDisplayCategL3']").removeClass('activeLabel'); $(this).addClass("activeLabel"); SearchDisplayCategories_SetCategoryName($(this).attr("title")); }); SearchDisplayCategories_GetActiveElement(); }
function SearchDisplayCategories_GetActiveElement() {
    var classCateg = $('div[class~="activeLabel"]').first().attr("class"); if (classCateg.indexOf("titleDisplayCategL3") >= 0) { SearchDisplayCategories_SetCategoryName($('div[class~="activeLabel"]').first().attr("title")); }
    else if (classCateg.indexOf("titleDisplayCategories") >= 0) { SearchDisplayCategories_SetCategoryName(""); }
    else { SearchDisplayCategories_SetCategoryName($('div[class~="activeLabel"]').first().html()); }
}
function SearchDisplayCategories_RedirectDisplay() { $("#searchPageNumber").val(1); $("#PageNumber").val(1); $("#searchFirstPageInPagination").val(1); $("#FirstPageInPagination").val(1); SearchSubmit(); }
function SearchDisplayCategories_FormatNumber(numberToFormat) {
    var returnFormat = numberToFormat + ''; if (numberToFormat > 999999) { returnFormat = returnFormat.substr(0, returnFormat.length - 6) + ' ' + returnFormat.substr(returnFormat.length - 6, 3) + ' ' + returnFormat.substr(returnFormat.length - 3, 3); }
    else { if (numberToFormat > 999) { returnFormat = returnFormat.substr(0, returnFormat.length - 3) + ' ' + returnFormat.substr(returnFormat.length - 3); } }
    return returnFormat;
}
function SearchDisplayCategories_SetCategoryName(name) { $("#selectedCategoryName").val(name.replace(/\<\/div\>/gi, '').replace(/\<div\>/gi, '')); }
function SearchDisplayCategories_ExpandAll() {
    $("#expandAll").hide();
    $("#expandNone").show();
    $("div[class^='titleDisplayCategL1 flip']").addClass("active").next().next().slideDown("slow");
    $("div[class^='titleDisplayCategL2 flip']").addClass("active").next().next().slideDown("slow");
}
function SearchDisplayCategories_ExpandNone() { $("#expandNone").hide(); $("#expandAll").show(); $("div[class^='titleDisplayCategL1 flip']").removeClass("active").next().next().slideUp("slow"); $("div[class^='titleDisplayCategL2 flip']").removeClass("active").next().next().slideUp("slow"); }


function GetPage(page) {
    $("#searchPageNumber").val(page); $("#PageNumber").val(page); var total = parseInt($("#valueNumberSearchTree").val()); var pageSize = parseInt($("#searchPageSize").val()); var pageSize = parseInt($("#PageSize").val()); var lastPage = Math.ceil(total / pageSize) - 2; if (page > 2) {
        if (lastPage > 3) {
            if (lastPage < page) { $("#searchFirstPageInPagination").val(lastPage - 2); $("#FirstPageInPagination").val(lastPage - 2); }
            else { $("#searchFirstPageInPagination").val(page - 2); $("#FirstPageInPagination").val(page - 2); }
        }
        else { $("#searchFirstPageInPagination").val(1); $("#FirstPageInPagination").val(1); }
    }
    else { $("#searchFirstPageInPagination").val(1); $("#FirstPageInPagination").val(1); }
    var orphans = $("#checkOrphans").is(':checked'); if (orphans) { $("#searchExcludeOrphans").val(orphans); $("#ExcludeOrphans").val(orphans); }
    else { $("#searchExcludeOrphans").val('False'); $("#ExcludeOrphans").val('False'); }
    var publicTree = $("#checkOnlyPublicTree").is(':checked'); if (publicTree) { $("#searchOnlyPublicTree").val(publicTree); $("#OnlyPublicTree").val(publicTree); }
    else { $("#searchOnlyPublicTree").val('False'); $("#OnlyPublicTree").val('False'); }
    var individs = $("#checkExcludeIndivids").is(':checked'); if (individs) { $("#searchExcludeIndivids").val(individs); $("#ExcludeIndivids").val(individs); }
    else { $("#searchExcludeIndivids").val('False'); $("#ExcludeIndivids").val('False'); }
    SearchSubmit();
}
function NextPage(firstPage) {
    var page = parseInt($("#searchPageNumber").val()); var firstPage = parseInt($("#searchFirstPageInPagination").val()); if (page - firstPage == 4) { $("#searchFirstPageInPagination").val(firstPage + 1); $("#FirstPageInPagination").val(firstPage + 1); GetPage(page + 1); }
    else { GetPage(page + 1); }
}
function PreviousPage(firstPage) {
    var page = parseInt($("#searchPageNumber").val()); var firstPage = parseInt($("#searchFirstPageInPagination").val()); if (page - firstPage == 0) { $("#searchFirstPageInPagination").val(firstPage - 1); $("#FirstPageInPagination").val(firstPage - 1); GetPage(page - 1); }
    else { GetPage(page - 1) }
}
function ChangeOrderBy(sortValue, filter) {
    $("#searchFilterValue").val(""); if (sortValue == "1") { $("#searchSortField").val(sortValue); $("#SortField").val(sortValue); }
    if (sortValue == "2") { $("#searchSortField").val(sortValue); $("#SortField").val(sortValue); }
    if (sortValue == "3") { $("#searchSortField").val(sortValue); $("#SortField").val(sortValue); }
    if (sortValue == "4") { refreshAnalytics('/recherches/resultats/' + $("#selectedCategoryName").val() + '/filtre-initiale'); $("#searchFirstNameInitial").val(filter); $("#FirstNameInitial").val(filter); }
    if (sortValue == "5") { refreshAnalytics('/recherches/resultats/' + $("#selectedCategoryName").val() + '/filtre-commune'); $("#searchTownId").val(filter); $("#TownId").val(filter); $("#searchTownName").val($("#communes").val()); $("#TownName").val($("#communes").val()); }
    if (sortValue == "8") { refreshAnalytics('/recherches/resultats/' + $("#selectedCategoryName").val() + '/filtre-type-acte'); $("#searchActeType").val(filter); $("#ActeType").val(filter); }
    if (sortValue == "10") { $("#searchSortField").val(sortValue); $("#SortField").val(sortValue); }
    if (sortValue == "11") { $("#searchSortField").val(sortValue); $("#SortField").val(sortValue); }
    $("#PageNumber").val(1); $("#searchPageNumber").val(1); $("#searchFirstPageInPagination").val(1); $("#FirstPageInPagination").val(1); SearchSubmit();
}
function ExcludeOrphansChanged() {
    if ($("#checkOrphans").is(':checked')) { refreshAnalytics('/recherches/resultats/' + $("#selectedCategoryName").val() + '/filtre-orphelin'); }
    $("#PageNumber").val(1); $("#searchPageNumber").val(1); $("#searchFirstPageInPagination").val(1); $("#FirstPageInPagination").val(1); $("#searchExcludeOrphans").val($("#checkOrphans").is(':checked')); $("#ExcludeOrphans").val($("#checkOrphans").is(':checked')); SearchSubmit();
}
function OnlyPublicTreeChanged() {
    $("#PageNumber").val(1); $("#searchPageNumber").val(1);
    $("#searchFirstPageInPagination").val(1); $("#FirstPageInPagination").val(1);
    $("#searchOnlyPublicTree").val($("#checkOnlyPublicTree").is(':checked'));
    $("#OnlyPublicTree").val($("#checkOnlyPublicTree").is(':checked'));
    SearchSubmit();
}
function ExcludeIndividsChanged() {
    if ($("#checkExcludeIndivids").is(':checked')) { refreshAnalytics('/recherches/resultats/' + $("#selectedCategoryName").val() + '/filtre-masquer-individu-mon-arbre'); }
    $("#PageNumber").val(1); $("#searchPageNumber").val(1); $("#searchFirstPageInPagination").val(1); $("#FirstPageInPagination").val(1); $("#searchExcludeIndivids").val($("#checkExcludeIndivids").is(':checked')); $("#ExcludeIndivids").val($("#checkExcludeIndivids").is(':checked')); SearchSubmit();
}
function ExcludeWithoutPhotoChanged() {
    if ($("#checkExcludeNoPhoto").is(':checked')) { refreshAnalytics('/recherches/resultats/' + $("#selectedCategoryName").val() + '/filtre-photo'); }
    $("#PageNumber").val(1); $("#searchPageNumber").val(1); $("#searchFirstPageInPagination").val(1); $("#FirstPageInPagination").val(1); $("#searchExcludeWithoutPhoto").val($("#checkExcludeNoPhoto").is(':checked')); $("#ExcludeWithoutPhoto").val($("#checkExcludeNoPhoto").is(':checked')); SearchSubmit();
}
function ExcludeWithoutParentChanged() { $("#PageNumber").val(1); $("#searchPageNumber").val(1); $("#searchFirstPageInPagination").val(1); $("#FirstPageInPagination").val(1); $("#searchExcludeWithoutParent").val($("#checkExcludeNoParent").is(':checked')); $("#ExcludeWithoutParent").val($("#checkExcludeNoParent").is(':checked')); SearchSubmit(); }
function ExcludeFromTreeChanged() {
    if ($("#checkExcludeFromTree").is(':checked')) { refreshAnalytics('/recherches/resultats/' + $("#selectedCategoryName").val() + '/filtre-exclure-arbres'); }
    $("#PageNumber").val(1); $("#searchPageNumber").val(1); $("#searchFirstPageInPagination").val(1); $("#FirstPageInPagination").val(1); $("#excludeFromTree").val($("#checkExcludeFromTree").is(':checked')); $("#ExcludeFromTree").val($("#checkExcludeFromTree").is(':checked')); SearchSubmit();
}
function SearchRight_ChangePageSize(number) { $("#PageNumber").val(1); $("#searchPageNumber").val(1); $("#searchFirstPageInPagination").val(1); $("#FirstPageInPagination").val(1); var valNumber = document.getElementById("itemsNumber" + number.toString()).value; $("#PageSize").val(valNumber); $("#searchPageSize").val(valNumber); SearchSubmit(); }
function GetGedcomType(idPerson, isPayingUser, index, isPublic) {
    $.post(appPath + "/Search.mvc/GetGedcomType", { idPerson: idPerson }, function (msg) {
        var treeState = msg; if (treeState.GedcomState == 0) { EnableNotAvailablePersonPopup(index); }
        if (treeState.IsUserGedcom == false) {
            if (isPayingUser) {
                if (treeState.GedcomState == 1) { RedirectAccessRights(idPerson, isPublic); }
                if (treeState.GedcomState == 2) { if (treeState.PrivilegeRequested) { if ((!treeState.PrivilegeAnswered) || (treeState.PrivilegeAnswered && !treeState.PrivilegeAccepted)) { EnableDemandeAccess(treeState.GedcomId, treeState.Name, treeState.PseudoName, index, idPerson, treeState.PersonName); } } else { EnableDemandeAccess(treeState.GedcomId, treeState.Name, treeState.PseudoName, index, idPerson, treeState.PersonName); } }
            } else {
                if (treeState.GedcomState == 1) { EnableNotPayingUserPublicPopup(index); }
                if (treeState.GedcomState == 2) { EnableNotPayingUserSemipublicPopup(index); }
            }
        } else { RedirectAccessRights(idPerson, 1); }
    });
}
function SearchRight_EnableRegisterPopup(index) { $.blockUI({ message: $('#registerMessage' + index).html(), css: { width: '417px', height: '150px' } }); }
function SearchRight_EnableRegisterModal(name, acteType, date, source, iamgePath, treeView, redirect, documentTypeId, individId, alIdActe, ecIdActe, actionType, gedcomId, gedcomIdIndividu) {
    if (firstRequestHasEnded) {
        firstRequestHasEnded = false;
        $.post(appPath + "/Inscription.mvc/ModalSubscription",
            {
                searchedLastName: $("#txtName").val(),
                searchedFirstName: $("#txtFirstName").val(),
                name: name,
                acteType: acteType,
                date: date,
                source: source,
                iamgePath: iamgePath,
                treeView: treeView,
                redirect: redirect,
                documentTypeId: documentTypeId,
                individId: individId,
                alIdActe: alIdActe,
                ecIdActe: ecIdActe,
                actionType: actionType,
                gedcomId: gedcomId,
                gedcomIdIndividu: gedcomIdIndividu
            }, function (data) {
                $("#modalSubscription").html(data);
            }).always(function () {
                firstRequestHasEnded = true;
            });
    }
    return;
}
function SearchRight_EnableRegisterPopupFreeAccess(index) { $.blockUI({ message: $('#registerMessageFreeAccess' + index).html(), css: { width: '417px', height: '150px' } }); }
function SearchRight_ClosePopup() { $.unblockUI(); }
function SetLastAddedDays(numberDays) { refreshAnalytics('/recherches/resultats/' + $("#selectedCategoryName").val() + '/filtre-date-ajout'); $("#SearchLastAddedDays").val(numberDays); $("#lastAddedDays").val(numberDays); SearchSubmit(); }
function SetRange(number) { refreshAnalytics('/recherches/resultats/' + $("#selectedCategoryName").val() + '/filtre-date-ajout'); $("#searchAreaField").val(number); $("#SearchFieldArray").val(number); SearchSubmit(); }
function SaveContext() { SetCookie("SearchResultCookie", CreateUrl(true), '/'); SetCookie("PageType", "search", '/'); return false; }
function changeVal() { $("#communesId").val(0); $("#searchTownId").val(""); $("#TownId").val(""); $("#searchTownId").val(""); $("#searchTownName").val($("#communes").val()); $("#TownName").val($("#communes").val()); }

//#endregion Search



/***********************************************************
 *                                                         *
 *      Fonctions de classe                                *
 *                                                         *
 ***********************************************************/

//#region Array
Array.contains = function Array$contains(array, item) { var e = Function._validateParams(arguments, [{ name: "array", type: Array, elementMayBeNull: true }, { name: "item", mayBeNull: true }]); if (e) throw e; return (Array.indexOf(array, item) >= 0); }
Array.dequeue = function Array$dequeue(array) { var e = Function._validateParams(arguments, [{ name: "array", type: Array, elementMayBeNull: true }]); if (e) throw e; return array.shift(); }
Array.forEach = function Array$forEach(array, method, instance) { var e = Function._validateParams(arguments, [{ name: "array", type: Array, elementMayBeNull: true }, { name: "method", type: Function }, { name: "instance", mayBeNull: true, optional: true }]); if (e) throw e; for (var i = 0, l = array.length; i < l; i++) { var elt = array[i]; if (typeof (elt) !== 'undefined') method.call(instance, elt, i, array); } }
Array.indexOf = function Array$indexOf(array, item, start) {
    var e = Function._validateParams(arguments, [{ name: "array", type: Array, elementMayBeNull: true }, { name: "item", mayBeNull: true, optional: true }, { name: "start", mayBeNull: true, optional: true }]); if (e) throw e; if (typeof (item) === "undefined") return -1; var length = array.length; if (length !== 0) {
        start = start - 0; if (isNaN(start)) { start = 0; }
        else {
            if (isFinite(start)) { start = start - (start % 1); }
            if (start < 0) { start = Math.max(0, length + start); }
        }
        for (var i = start; i < length; i++) { if ((typeof (array[i]) !== "undefined") && (array[i] === item)) { return i; } }
    }
    return -1;
}
Array.insert = function Array$insert(array, index, item) { var e = Function._validateParams(arguments, [{ name: "array", type: Array, elementMayBeNull: true }, { name: "index", mayBeNull: true }, { name: "item", mayBeNull: true }]); if (e) throw e; array.splice(index, 0, item); }
Array.parse = function Array$parse(value) { var e = Function._validateParams(arguments, [{ name: "value", type: String, mayBeNull: true }]); if (e) throw e; if (!value) return []; var v = eval(value); if (!Array.isInstanceOfType(v)) throw Error.argument('value', Sys.Res.arrayParseBadFormat); return v; }
Array.remove = function Array$remove(array, item) {
    var e = Function._validateParams(arguments, [{ name: "array", type: Array, elementMayBeNull: true }, { name: "item", mayBeNull: true }]); if (e) throw e; var index = Array.indexOf(array, item); if (index >= 0) { array.splice(index, 1); }
    return (index >= 0);
}
Array.removeAt = function Array$removeAt(array, index) { var e = Function._validateParams(arguments, [{ name: "array", type: Array, elementMayBeNull: true }, { name: "index", mayBeNull: true }]); if (e) throw e; array.splice(index, 1); }
//#endregion Array

//#region Type
if (!window) this.window = this; window.Type = Function; Type.__fullyQualifiedIdentifierRegExp = new RegExp("^[^.0-9 \\s|,;:&*=+\\-()\\[\\]{}^%#@!~\\n\\r\\t\\f\\\\]([^ \\s|,;:&*=+\\-()\\[\\]{}^%#@!~\\n\\r\\t\\f\\\\]*[^. \\s|,;:&*=+\\-()\\[\\]{}^%#@!~\\n\\r\\t\\f\\\\])?$", "i"); Type.__identifierRegExp = new RegExp("^[^.0-9 \\s|,;:&*=+\\-()\\[\\]{}^%#@!~\\n\\r\\t\\f\\\\][^. \\s|,;:&*=+\\-()\\[\\]{}^%#@!~\\n\\r\\t\\f\\\\]*$", "i"); Type.prototype.callBaseMethod = function Type$callBaseMethod(instance, name, baseArguments) {
    var e = Function._validateParams(arguments, [{ name: "instance" }, { name: "name", type: String }, { name: "baseArguments", type: Array, mayBeNull: true, optional: true, elementMayBeNull: true }]); if (e) throw e; var baseMethod = this.getBaseMethod(instance, name); if (!baseMethod) throw Error.invalidOperation(String.format(Sys.Res.methodNotFound, name)); if (!baseArguments) { return baseMethod.apply(instance); }
    else { return baseMethod.apply(instance, baseArguments); }
}
Type.prototype.getBaseMethod = function Type$getBaseMethod(instance, name) {
    var e = Function._validateParams(arguments, [{ name: "instance" }, { name: "name", type: String }]); if (e) throw e; if (!this.isInstanceOfType(instance)) throw Error.argumentType('instance', Object.getType(instance), this); var baseType = this.getBaseType(); if (baseType) { var baseMethod = baseType.prototype[name]; return (baseMethod instanceof Function) ? baseMethod : null; }
    return null;
}
Type.prototype.getBaseType = function Type$getBaseType() { if (arguments.length !== 0) throw Error.parameterCount(); return (typeof (this.__baseType) === "undefined") ? null : this.__baseType; }
Type.prototype.getInterfaces = function Type$getInterfaces() {
    if (arguments.length !== 0) throw Error.parameterCount(); var result = []; var type = this; while (type) {
        var interfaces = type.__interfaces; if (interfaces) { for (var i = 0, l = interfaces.length; i < l; i++) { var interfaceType = interfaces[i]; if (!Array.contains(result, interfaceType)) { result[result.length] = interfaceType; } } }
        type = type.__baseType;
    }
    return result;
}
Type.prototype.getName = function Type$getName() { if (arguments.length !== 0) throw Error.parameterCount(); return (typeof (this.__typeName) === "undefined") ? "" : this.__typeName; }
Type.prototype.implementsInterface = function Type$implementsInterface(interfaceType) {
    var e = Function._validateParams(arguments, [{ name: "interfaceType", type: Type }]); if (e) throw e; this.resolveInheritance(); var interfaceName = interfaceType.getName(); var cache = this.__interfaceCache; if (cache) { var cacheEntry = cache[interfaceName]; if (typeof (cacheEntry) !== 'undefined') return cacheEntry; }
    else { cache = this.__interfaceCache = {}; }
    var baseType = this; while (baseType) {
        var interfaces = baseType.__interfaces; if (interfaces) { if (Array.indexOf(interfaces, interfaceType) !== -1) { return cache[interfaceName] = true; } }
        baseType = baseType.__baseType;
    }
    return cache[interfaceName] = false;
}
Type.prototype.inheritsFrom = function Type$inheritsFrom(parentType) {
    var e = Function._validateParams(arguments, [{ name: "parentType", type: Type }]); if (e) throw e; this.resolveInheritance(); var baseType = this.__baseType; while (baseType) {
        if (baseType === parentType) { return true; }
        baseType = baseType.__baseType;
    }
    return false;
}
Type.prototype.initializeBase = function Type$initializeBase(instance, baseArguments) {
    var e = Function._validateParams(arguments, [{ name: "instance" }, { name: "baseArguments", type: Array, mayBeNull: true, optional: true, elementMayBeNull: true }]); if (e) throw e; if (!this.isInstanceOfType(instance)) throw Error.argumentType('instance', Object.getType(instance), this); this.resolveInheritance(); if (this.__baseType) {
        if (!baseArguments) { this.__baseType.apply(instance); }
        else { this.__baseType.apply(instance, baseArguments); }
    }
    return instance;
}
Type.prototype.isImplementedBy = function Type$isImplementedBy(instance) { var e = Function._validateParams(arguments, [{ name: "instance", mayBeNull: true }]); if (e) throw e; if (typeof (instance) === "undefined" || instance === null) return false; var instanceType = Object.getType(instance); return !!(instanceType.implementsInterface && instanceType.implementsInterface(this)); }
Type.prototype.isInstanceOfType = function Type$isInstanceOfType(instance) { var e = Function._validateParams(arguments, [{ name: "instance", mayBeNull: true }]); if (e) throw e; if (typeof (instance) === "undefined" || instance === null) return false; if (instance instanceof this) return true; var instanceType = Object.getType(instance); return !!(instanceType === this) || (instanceType.inheritsFrom && instanceType.inheritsFrom(this)) || (instanceType.implementsInterface && instanceType.implementsInterface(this)); }
Type.prototype.registerClass = function Type$registerClass(typeName, baseType, interfaceTypes) {
    var e = Function._validateParams(arguments, [{ name: "typeName", type: String }, { name: "baseType", type: Type, mayBeNull: true, optional: true }, { name: "interfaceTypes", type: Type, parameterArray: true }]); if (e) throw e; if (!Type.__fullyQualifiedIdentifierRegExp.test(typeName)) throw Error.argument('typeName', Sys.Res.notATypeName); var parsedName; try { parsedName = eval(typeName); }
    catch (e) { throw Error.argument('typeName', Sys.Res.argumentTypeName); }
    if (parsedName !== this) throw Error.argument('typeName', Sys.Res.badTypeName); if (Sys.__registeredTypes[typeName]) throw Error.invalidOperation(String.format(Sys.Res.typeRegisteredTwice, typeName)); if ((arguments.length > 1) && (typeof (baseType) === 'undefined')) throw Error.argumentUndefined('baseType'); if (baseType && !baseType.__class) throw Error.argument('baseType', Sys.Res.baseNotAClass); this.prototype.constructor = this; this.__typeName = typeName; this.__class = true; if (baseType) { this.__baseType = baseType; this.__basePrototypePending = true; }
    Sys.__upperCaseTypes[typeName.toUpperCase()] = this; if (interfaceTypes) {
        this.__interfaces = []; this.resolveInheritance(); for (var i = 2, l = arguments.length; i < l; i++) {
            var interfaceType = arguments[i]; if (!interfaceType.__interface) throw Error.argument('interfaceTypes[' + (i - 2) + ']', Sys.Res.notAnInterface); for (var methodName in interfaceType.prototype) { var method = interfaceType.prototype[methodName]; if (!this.prototype[methodName]) { this.prototype[methodName] = method; } }
            this.__interfaces.push(interfaceType);
        }
    }
    Sys.__registeredTypes[typeName] = true; return this;
}
Type.prototype.registerInterface = function Type$registerInterface(typeName) {
    var e = Function._validateParams(arguments, [{ name: "typeName", type: String }]); if (e) throw e; if (!Type.__fullyQualifiedIdentifierRegExp.test(typeName)) throw Error.argument('typeName', Sys.Res.notATypeName); var parsedName; try { parsedName = eval(typeName); }
    catch (e) { throw Error.argument('typeName', Sys.Res.argumentTypeName); }
    if (parsedName !== this) throw Error.argument('typeName', Sys.Res.badTypeName); if (Sys.__registeredTypes[typeName]) throw Error.invalidOperation(String.format(Sys.Res.typeRegisteredTwice, typeName)); Sys.__upperCaseTypes[typeName.toUpperCase()] = this; this.prototype.constructor = this; this.__typeName = typeName; this.__interface = true; Sys.__registeredTypes[typeName] = true; return this;
}
Type.prototype.resolveInheritance = function Type$resolveInheritance() {
    if (arguments.length !== 0) throw Error.parameterCount(); if (this.__basePrototypePending) {
        var baseType = this.__baseType; baseType.resolveInheritance(); for (var memberName in baseType.prototype) { var memberValue = baseType.prototype[memberName]; if (!this.prototype[memberName]) { this.prototype[memberName] = memberValue; } }
        delete this.__basePrototypePending;
    }
}
Type.getRootNamespaces = function Type$getRootNamespaces() { if (arguments.length !== 0) throw Error.parameterCount(); return Array.clone(Sys.__rootNamespaces); }
Type.isClass = function Type$isClass(type) { var e = Function._validateParams(arguments, [{ name: "type", mayBeNull: true }]); if (e) throw e; if ((typeof (type) === 'undefined') || (type === null)) return false; return !!type.__class; }
Type.isInterface = function Type$isInterface(type) { var e = Function._validateParams(arguments, [{ name: "type", mayBeNull: true }]); if (e) throw e; if ((typeof (type) === 'undefined') || (type === null)) return false; return !!type.__interface; }
Type.isNamespace = function Type$isNamespace(object) { var e = Function._validateParams(arguments, [{ name: "object", mayBeNull: true }]); if (e) throw e; if ((typeof (object) === 'undefined') || (object === null)) return false; return !!object.__namespace; }
Type.parse = function Type$parse(typeName, ns) {
    var e = Function._validateParams(arguments, [{ name: "typeName", type: String, mayBeNull: true }, { name: "ns", mayBeNull: true, optional: true }]); if (e) throw e; var fn; if (ns) { fn = Sys.__upperCaseTypes[ns.getName().toUpperCase() + '.' + typeName.toUpperCase()]; return fn || null; }
    if (!typeName) return null; if (!Type.__htClasses) { Type.__htClasses = {}; }
    fn = Type.__htClasses[typeName]; if (!fn) { fn = eval(typeName); if (typeof (fn) !== 'function') throw Error.argument('typeName', Sys.Res.notATypeName); Type.__htClasses[typeName] = fn; }
    return fn;
}
Type.registerNamespace = function Type$registerNamespace(namespacePath) {
    var e = Function._validateParams(arguments, [{ name: "namespacePath", type: String }]); if (e) throw e; if (!Type.__fullyQualifiedIdentifierRegExp.test(namespacePath)) throw Error.argument('namespacePath', Sys.Res.invalidNameSpace); var rootObject = window; var namespaceParts = namespacePath.split('.'); for (var i = 0; i < namespaceParts.length; i++) {
        var currentPart = namespaceParts[i]; var ns = rootObject[currentPart]; if (ns && !ns.__namespace) { throw Error.invalidOperation(String.format(Sys.Res.namespaceContainsObject, namespaceParts.splice(0, i + 1).join('.'))); }
        if (!ns) {
            ns = rootObject[currentPart] = { __namespace: true, __typeName: namespaceParts.slice(0, i + 1).join('.') }; if (i === 0) { Sys.__rootNamespaces[Sys.__rootNamespaces.length] = ns; }
            var parsedName; try { parsedName = eval(ns.__typeName); }
            catch (e) { parsedName = null; }
            if (parsedName !== ns) { delete rootObject[currentPart]; throw Error.argument('namespacePath', Sys.Res.invalidNameSpace); }
            ns.getName = function ns$getName() { return this.__typeName; }
        }
        rootObject = ns;
    }
}
//#endregion Type

//#region SystÃ¨me
window.Sys = { __namespace: true, __typeName: "Sys", getName: function () { return "Sys"; }, __upperCaseTypes: {} }; Sys.__rootNamespaces = [Sys]; Sys.__registeredTypes = {}; Sys.IDisposable = function Sys$IDisposable() { throw Error.notImplemented(); }
function Sys$IDisposable$dispose() { throw Error.notImplemented(); }
Sys.IDisposable.prototype = { dispose: Sys$IDisposable$dispose }
Sys.IDisposable.registerInterface('Sys.IDisposable'); Sys.StringBuilder = function Sys$StringBuilder(initialText) { var e = Function._validateParams(arguments, [{ name: "initialText", mayBeNull: true, optional: true }]); if (e) throw e; this._parts = (typeof (initialText) !== 'undefined' && initialText !== null && initialText !== '') ? [initialText.toString()] : []; this._value = {}; this._len = 0; }
function Sys$StringBuilder$append(text) { var e = Function._validateParams(arguments, [{ name: "text", mayBeNull: true }]); if (e) throw e; this._parts[this._parts.length] = text; }
function Sys$StringBuilder$appendLine(text) { var e = Function._validateParams(arguments, [{ name: "text", mayBeNull: true, optional: true }]); if (e) throw e; this._parts[this._parts.length] = ((typeof (text) === 'undefined') || (text === null) || (text === '')) ? '\r\n' : text + '\r\n'; }
function Sys$StringBuilder$clear() { if (arguments.length !== 0) throw Error.parameterCount(); this._parts = []; this._value = {}; this._len = 0; }
function Sys$StringBuilder$isEmpty() { if (arguments.length !== 0) throw Error.parameterCount(); if (this._parts.length === 0) return true; return this.toString() === ''; }
function Sys$StringBuilder$toString(separator) {
    var e = Function._validateParams(arguments, [{ name: "separator", type: String, mayBeNull: true, optional: true }]); if (e) throw e; separator = separator || ''; var parts = this._parts; if (this._len !== parts.length) { this._value = {}; this._len = parts.length; }
    var val = this._value; if (typeof (val[separator]) === 'undefined') {
        if (separator !== '') {
            for (var i = 0; i < parts.length;) {
                if ((typeof (parts[i]) === 'undefined') || (parts[i] === '') || (parts[i] === null)) { parts.splice(i, 1); }
                else { i++; }
            }
        }
        val[separator] = this._parts.join(separator);
    }
    return val[separator];
}
Sys.StringBuilder.prototype = { append: Sys$StringBuilder$append, appendLine: Sys$StringBuilder$appendLine, clear: Sys$StringBuilder$clear, isEmpty: Sys$StringBuilder$isEmpty, toString: Sys$StringBuilder$toString }
Sys.StringBuilder.registerClass('Sys.StringBuilder'); if (!window.XMLHttpRequest) {
    window.XMLHttpRequest = function window$XMLHttpRequest() {
        var progIDs = ['Msxml2.XMLHTTP.3.0', 'Msxml2.XMLHTTP']; for (var i = 0, l = progIDs.length; i < l; i++) {
            try { return new ActiveXObject(progIDs[i]); }
            catch (ex) { }
        }
        return null;
    }
}
Sys.Browser = {}; Sys.Browser.InternetExplorer = {}; Sys.Browser.Firefox = {}; Sys.Browser.Safari = {}; Sys.Browser.Opera = {}; Sys.Browser.agent = null; Sys.Browser.hasDebuggerStatement = false; Sys.Browser.name = navigator.appName; Sys.Browser.version = parseFloat(navigator.appVersion); Sys.Browser.documentMode = 0; if (navigator.userAgent.indexOf(' MSIE ') > -1) {
    Sys.Browser.agent = Sys.Browser.InternetExplorer; Sys.Browser.version = parseFloat(navigator.userAgent.match(/MSIE (\d+\.\d+)/)[1]); if (Sys.Browser.version >= 8) { if (document.documentMode >= 7) { Sys.Browser.documentMode = document.documentMode; } }
    Sys.Browser.hasDebuggerStatement = true;
}
else if (navigator.userAgent.indexOf(' Firefox/') > -1) { Sys.Browser.agent = Sys.Browser.Firefox; Sys.Browser.version = parseFloat(navigator.userAgent.match(/ Firefox\/(\d+\.\d+)/)[1]); Sys.Browser.name = 'Firefox'; Sys.Browser.hasDebuggerStatement = true; }
else if (navigator.userAgent.indexOf(' AppleWebKit/') > -1) { Sys.Browser.agent = Sys.Browser.Safari; Sys.Browser.version = parseFloat(navigator.userAgent.match(/ AppleWebKit\/(\d+(\.\d+)?)/)[1]); Sys.Browser.name = 'Safari'; }
else if (navigator.userAgent.indexOf('Opera/') > -1) { Sys.Browser.agent = Sys.Browser.Opera; }
Type.registerNamespace('Sys.UI'); Sys._Debug = function Sys$_Debug() { if (arguments.length !== 0) throw Error.parameterCount(); }
function Sys$_Debug$_appendConsole(text) {
    if ((typeof (Debug) !== 'undefined') && Debug.writeln) { Debug.writeln(text); }
    if (window.console && window.console.log) { window.console.log(text); }
    if (window.opera) { window.opera.postError(text); }
    if (window.debugService) { window.debugService.trace(text); }
}
function Sys$_Debug$_appendTrace(text) { var traceElement = document.getElementById('TraceConsole'); if (traceElement && (traceElement.tagName.toUpperCase() === 'TEXTAREA')) { traceElement.value += text + '\n'; } }
function Sys$_Debug$assert(condition, message, displayCaller) { var e = Function._validateParams(arguments, [{ name: "condition", type: Boolean }, { name: "message", type: String, mayBeNull: true, optional: true }, { name: "displayCaller", type: Boolean, optional: true }]); if (e) throw e; if (!condition) { message = (displayCaller && this.assert.caller) ? String.format(Sys.Res.assertFailedCaller, message, this.assert.caller) : String.format(Sys.Res.assertFailed, message); if (confirm(String.format(Sys.Res.breakIntoDebugger, message))) { this.fail(message); } } }
function Sys$_Debug$clearTrace() { if (arguments.length !== 0) throw Error.parameterCount(); var traceElement = document.getElementById('TraceConsole'); if (traceElement && (traceElement.tagName.toUpperCase() === 'TEXTAREA')) { traceElement.value = ''; } }
function Sys$_Debug$fail(message) { var e = Function._validateParams(arguments, [{ name: "message", type: String, mayBeNull: true }]); if (e) throw e; this._appendConsole(message); if (Sys.Browser.hasDebuggerStatement) { eval('debugger'); } }
function Sys$_Debug$trace(text) { var e = Function._validateParams(arguments, [{ name: "text" }]); if (e) throw e; this._appendConsole(text); this._appendTrace(text); }
function Sys$_Debug$traceDump(object, name) { var e = Function._validateParams(arguments, [{ name: "object", mayBeNull: true }, { name: "name", type: String, mayBeNull: true, optional: true }]); if (e) throw e; var text = this._traceDump(object, name, true); }
function Sys$_Debug$_traceDump(object, name, recursive, indentationPadding, loopArray) {
    name = name ? name : 'traceDump'; indentationPadding = indentationPadding ? indentationPadding : ''; if (object === null) { this.trace(indentationPadding + name + ': null'); return; }
    switch (typeof (object)) {
        case 'undefined': this.trace(indentationPadding + name + ': Undefined'); break; case 'number': case 'string': case 'boolean': this.trace(indentationPadding + name + ': ' + object); break; default: if (Date.isInstanceOfType(object) || RegExp.isInstanceOfType(object)) { this.trace(indentationPadding + name + ': ' + object.toString()); break; }
            if (!loopArray) { loopArray = []; }
            else if (Array.contains(loopArray, object)) { this.trace(indentationPadding + name + ': ...'); return; }
            Array.add(loopArray, object); if ((object == window) || (object === document) || (window.HTMLElement && (object instanceof HTMLElement)) || (typeof (object.nodeName) === 'string')) {
                var tag = object.tagName ? object.tagName : 'DomElement'; if (object.id) { tag += ' - ' + object.id; }
                this.trace(indentationPadding + name + ' {' + tag + '}');
            }
            else {
                var typeName = Object.getTypeName(object); this.trace(indentationPadding + name + (typeof (typeName) === 'string' ? ' {' + typeName + '}' : '')); if ((indentationPadding === '') || recursive) {
                    indentationPadding += "    "; var i, length, properties, p, v; if (Array.isInstanceOfType(object)) { length = object.length; for (i = 0; i < length; i++) { this._traceDump(object[i], '[' + i + ']', recursive, indentationPadding, loopArray); } }
                    else { for (p in object) { v = object[p]; if (!Function.isInstanceOfType(v)) { this._traceDump(v, p, recursive, indentationPadding, loopArray); } } }
                }
            }
            Array.remove(loopArray, object);
    }
}
Sys._Debug.prototype = { _appendConsole: Sys$_Debug$_appendConsole, _appendTrace: Sys$_Debug$_appendTrace, assert: Sys$_Debug$assert, clearTrace: Sys$_Debug$clearTrace, fail: Sys$_Debug$fail, trace: Sys$_Debug$trace, traceDump: Sys$_Debug$traceDump, _traceDump: Sys$_Debug$_traceDump }
Sys._Debug.registerClass('Sys._Debug'); Sys.Debug = new Sys._Debug(); Sys.Debug.isDebug = true; function Sys$Enum$parse(value, ignoreCase) {
    var e = Function._validateParams(arguments, [{ name: "value", type: String }, { name: "ignoreCase", type: Boolean, optional: true }]); if (e) throw e; var values, parsed, val; if (ignoreCase) { values = this.__lowerCaseValues; if (!values) { this.__lowerCaseValues = values = {}; var prototype = this.prototype; for (var name in prototype) { values[name.toLowerCase()] = prototype[name]; } } }
    else { values = this.prototype; }
    if (!this.__flags) { val = (ignoreCase ? value.toLowerCase() : value); parsed = values[val.trim()]; if (typeof (parsed) !== 'number') throw Error.argument('value', String.format(Sys.Res.enumInvalidValue, value, this.__typeName)); return parsed; }
    else {
        var parts = (ignoreCase ? value.toLowerCase() : value).split(','); var v = 0; for (var i = parts.length - 1; i >= 0; i--) { var part = parts[i].trim(); parsed = values[part]; if (typeof (parsed) !== 'number') throw Error.argument('value', String.format(Sys.Res.enumInvalidValue, value.split(',')[i].trim(), this.__typeName)); v |= parsed; }
        return v;
    }
}
function Sys$Enum$toString(value) {
    var e = Function._validateParams(arguments, [{ name: "value", mayBeNull: true, optional: true }]); if (e) throw e; if ((typeof (value) === 'undefined') || (value === null)) return this.__string; if ((typeof (value) != 'number') || ((value % 1) !== 0)) throw Error.argumentType('value', Object.getType(value), this); var values = this.prototype; var i; if (!this.__flags || (value === 0)) { for (i in values) { if (values[i] === value) { return i; } } }
    else {
        var sorted = this.__sortedValues; if (!sorted) {
            sorted = []; for (i in values) { sorted[sorted.length] = { key: i, value: values[i] }; }
            sorted.sort(function (a, b) { return a.value - b.value; }); this.__sortedValues = sorted;
        }
        var parts = []; var v = value; for (i = sorted.length - 1; i >= 0; i--) { var kvp = sorted[i]; var vali = kvp.value; if (vali === 0) continue; if ((vali & value) === vali) { parts[parts.length] = kvp.key; v -= vali; if (v === 0) break; } }
        if (parts.length && v === 0) return parts.reverse().join(', ');
    }
    throw Error.argumentOutOfRange('value', value, String.format(Sys.Res.enumInvalidValue, value, this.__typeName));
}
Type.prototype.registerEnum = function Type$registerEnum(name, flags) {
    var e = Function._validateParams(arguments, [{ name: "name", type: String }, { name: "flags", type: Boolean, optional: true }]); if (e) throw e; if (!Type.__fullyQualifiedIdentifierRegExp.test(name)) throw Error.argument('name', Sys.Res.notATypeName); var parsedName; try { parsedName = eval(name); }
    catch (e) { throw Error.argument('name', Sys.Res.argumentTypeName); }
    if (parsedName !== this) throw Error.argument('name', Sys.Res.badTypeName); if (Sys.__registeredTypes[name]) throw Error.invalidOperation(String.format(Sys.Res.typeRegisteredTwice, name)); for (var i in this.prototype) { var val = this.prototype[i]; if (!Type.__identifierRegExp.test(i)) throw Error.invalidOperation(String.format(Sys.Res.enumInvalidValueName, i)); if (typeof (val) !== 'number' || (val % 1) !== 0) throw Error.invalidOperation(Sys.Res.enumValueNotInteger); if (typeof (this[i]) !== 'undefined') throw Error.invalidOperation(String.format(Sys.Res.enumReservedName, i)); }
    Sys.__upperCaseTypes[name.toUpperCase()] = this; for (var i in this.prototype) { this[i] = this.prototype[i]; }
    this.__typeName = name; this.parse = Sys$Enum$parse; this.__string = this.toString(); this.toString = Sys$Enum$toString; this.__flags = flags; this.__enum = true; Sys.__registeredTypes[name] = true;
}
Type.isEnum = function Type$isEnum(type) { var e = Function._validateParams(arguments, [{ name: "type", mayBeNull: true }]); if (e) throw e; if ((typeof (type) === 'undefined') || (type === null)) return false; return !!type.__enum; }
Type.isFlags = function Type$isFlags(type) { var e = Function._validateParams(arguments, [{ name: "type", mayBeNull: true }]); if (e) throw e; if ((typeof (type) === 'undefined') || (type === null)) return false; return !!type.__flags; }
Sys.EventHandlerList = function Sys$EventHandlerList() { if (arguments.length !== 0) throw Error.parameterCount(); this._list = {}; }
function Sys$EventHandlerList$addHandler(id, handler) { var e = Function._validateParams(arguments, [{ name: "id", type: String }, { name: "handler", type: Function }]); if (e) throw e; Array.add(this._getEvent(id, true), handler); }
function Sys$EventHandlerList$removeHandler(id, handler) { var e = Function._validateParams(arguments, [{ name: "id", type: String }, { name: "handler", type: Function }]); if (e) throw e; var evt = this._getEvent(id); if (!evt) return; Array.remove(evt, handler); }
function Sys$EventHandlerList$getHandler(id) { var e = Function._validateParams(arguments, [{ name: "id", type: String }]); if (e) throw e; var evt = this._getEvent(id); if (!evt || (evt.length === 0)) return null; evt = Array.clone(evt); return function (source, args) { for (var i = 0, l = evt.length; i < l; i++) { evt[i](source, args); } }; }
function Sys$EventHandlerList$_getEvent(id, create) {
    if (!this._list[id]) { if (!create) return null; this._list[id] = []; }
    return this._list[id];
}
Sys.EventHandlerList.prototype = { addHandler: Sys$EventHandlerList$addHandler, removeHandler: Sys$EventHandlerList$removeHandler, getHandler: Sys$EventHandlerList$getHandler, _getEvent: Sys$EventHandlerList$_getEvent }
Sys.EventHandlerList.registerClass('Sys.EventHandlerList'); Sys.EventArgs = function Sys$EventArgs() { if (arguments.length !== 0) throw Error.parameterCount(); }
Sys.EventArgs.registerClass('Sys.EventArgs'); Sys.EventArgs.Empty = new Sys.EventArgs(); Sys.CancelEventArgs = function Sys$CancelEventArgs() { if (arguments.length !== 0) throw Error.parameterCount(); Sys.CancelEventArgs.initializeBase(this); this._cancel = false; }
function Sys$CancelEventArgs$get_cancel() { if (arguments.length !== 0) throw Error.parameterCount(); return this._cancel; }
function Sys$CancelEventArgs$set_cancel(value) { var e = Function._validateParams(arguments, [{ name: "value", type: Boolean }]); if (e) throw e; this._cancel = value; }
Sys.CancelEventArgs.prototype = { get_cancel: Sys$CancelEventArgs$get_cancel, set_cancel: Sys$CancelEventArgs$set_cancel }
Sys.CancelEventArgs.registerClass('Sys.CancelEventArgs', Sys.EventArgs); Sys.INotifyPropertyChange = function Sys$INotifyPropertyChange() { if (arguments.length !== 0) throw Error.parameterCount(); throw Error.notImplemented(); }
function Sys$INotifyPropertyChange$add_propertyChanged(handler) { var e = Function._validateParams(arguments, [{ name: "handler", type: Function }]); if (e) throw e; throw Error.notImplemented(); }
function Sys$INotifyPropertyChange$remove_propertyChanged(handler) { var e = Function._validateParams(arguments, [{ name: "handler", type: Function }]); if (e) throw e; throw Error.notImplemented(); }
Sys.INotifyPropertyChange.prototype = { add_propertyChanged: Sys$INotifyPropertyChange$add_propertyChanged, remove_propertyChanged: Sys$INotifyPropertyChange$remove_propertyChanged }
Sys.INotifyPropertyChange.registerInterface('Sys.INotifyPropertyChange'); Sys.PropertyChangedEventArgs = function Sys$PropertyChangedEventArgs(propertyName) { var e = Function._validateParams(arguments, [{ name: "propertyName", type: String }]); if (e) throw e; Sys.PropertyChangedEventArgs.initializeBase(this); this._propertyName = propertyName; }
function Sys$PropertyChangedEventArgs$get_propertyName() { if (arguments.length !== 0) throw Error.parameterCount(); return this._propertyName; }
Sys.PropertyChangedEventArgs.prototype = { get_propertyName: Sys$PropertyChangedEventArgs$get_propertyName }
Sys.PropertyChangedEventArgs.registerClass('Sys.PropertyChangedEventArgs', Sys.EventArgs); Sys.INotifyDisposing = function Sys$INotifyDisposing() { if (arguments.length !== 0) throw Error.parameterCount(); throw Error.notImplemented(); }
function Sys$INotifyDisposing$add_disposing(handler) { var e = Function._validateParams(arguments, [{ name: "handler", type: Function }]); if (e) throw e; throw Error.notImplemented(); }
function Sys$INotifyDisposing$remove_disposing(handler) { var e = Function._validateParams(arguments, [{ name: "handler", type: Function }]); if (e) throw e; throw Error.notImplemented(); }
Sys.INotifyDisposing.prototype = { add_disposing: Sys$INotifyDisposing$add_disposing, remove_disposing: Sys$INotifyDisposing$remove_disposing }
Sys.INotifyDisposing.registerInterface("Sys.INotifyDisposing"); Sys.Component = function Sys$Component() { if (arguments.length !== 0) throw Error.parameterCount(); if (Sys.Application) Sys.Application.registerDisposableObject(this); }
function Sys$Component$get_events() {
    if (arguments.length !== 0) throw Error.parameterCount(); if (!this._events) { this._events = new Sys.EventHandlerList(); }
    return this._events;
}
function Sys$Component$get_id() { if (arguments.length !== 0) throw Error.parameterCount(); return this._id; }
function Sys$Component$set_id(value) { var e = Function._validateParams(arguments, [{ name: "value", type: String }]); if (e) throw e; if (this._idSet) throw Error.invalidOperation(Sys.Res.componentCantSetIdTwice); this._idSet = true; var oldId = this.get_id(); if (oldId && Sys.Application.findComponent(oldId)) throw Error.invalidOperation(Sys.Res.componentCantSetIdAfterAddedToApp); this._id = value; }
function Sys$Component$get_isInitialized() { if (arguments.length !== 0) throw Error.parameterCount(); return this._initialized; }
function Sys$Component$get_isUpdating() { if (arguments.length !== 0) throw Error.parameterCount(); return this._updating; }
function Sys$Component$add_disposing(handler) { var e = Function._validateParams(arguments, [{ name: "handler", type: Function }]); if (e) throw e; this.get_events().addHandler("disposing", handler); }
function Sys$Component$remove_disposing(handler) { var e = Function._validateParams(arguments, [{ name: "handler", type: Function }]); if (e) throw e; this.get_events().removeHandler("disposing", handler); }
function Sys$Component$add_propertyChanged(handler) { var e = Function._validateParams(arguments, [{ name: "handler", type: Function }]); if (e) throw e; this.get_events().addHandler("propertyChanged", handler); }
function Sys$Component$remove_propertyChanged(handler) { var e = Function._validateParams(arguments, [{ name: "handler", type: Function }]); if (e) throw e; this.get_events().removeHandler("propertyChanged", handler); }
function Sys$Component$beginUpdate() { this._updating = true; }
function Sys$Component$dispose() {
    if (this._events) { var handler = this._events.getHandler("disposing"); if (handler) { handler(this, Sys.EventArgs.Empty); } }
    delete this._events; Sys.Application.unregisterDisposableObject(this); Sys.Application.removeComponent(this);
}
function Sys$Component$endUpdate() { this._updating = false; if (!this._initialized) this.initialize(); this.updated(); }
function Sys$Component$initialize() { this._initialized = true; }
function Sys$Component$raisePropertyChanged(propertyName) { var e = Function._validateParams(arguments, [{ name: "propertyName", type: String }]); if (e) throw e; if (!this._events) return; var handler = this._events.getHandler("propertyChanged"); if (handler) { handler(this, new Sys.PropertyChangedEventArgs(propertyName)); } }
function Sys$Component$updated() { }
Sys.Component.prototype = { _id: null, _idSet: false, _initialized: false, _updating: false, get_events: Sys$Component$get_events, get_id: Sys$Component$get_id, set_id: Sys$Component$set_id, get_isInitialized: Sys$Component$get_isInitialized, get_isUpdating: Sys$Component$get_isUpdating, add_disposing: Sys$Component$add_disposing, remove_disposing: Sys$Component$remove_disposing, add_propertyChanged: Sys$Component$add_propertyChanged, remove_propertyChanged: Sys$Component$remove_propertyChanged, beginUpdate: Sys$Component$beginUpdate, dispose: Sys$Component$dispose, endUpdate: Sys$Component$endUpdate, initialize: Sys$Component$initialize, raisePropertyChanged: Sys$Component$raisePropertyChanged, updated: Sys$Component$updated }
Sys.Component.registerClass('Sys.Component', null, Sys.IDisposable, Sys.INotifyPropertyChange, Sys.INotifyDisposing); function Sys$Component$_setProperties(target, properties) {
    var e = Function._validateParams(arguments, [{ name: "target" }, { name: "properties" }]); if (e) throw e; var current; var targetType = Object.getType(target); var isObject = (targetType === Object) || (targetType === Sys.UI.DomElement); var isComponent = Sys.Component.isInstanceOfType(target) && !target.get_isUpdating(); if (isComponent) target.beginUpdate(); for (var name in properties) {
        var val = properties[name]; var getter = isObject ? null : target["get_" + name]; if (isObject || typeof (getter) !== 'function') {
            var targetVal = target[name]; if (!isObject && typeof (targetVal) === 'undefined') throw Error.invalidOperation(String.format(Sys.Res.propertyUndefined, name)); if (!val || (typeof (val) !== 'object') || (isObject && !targetVal)) { target[name] = val; }
            else { Sys$Component$_setProperties(targetVal, val); }
        }
        else {
            var setter = target["set_" + name]; if (typeof (setter) === 'function') { setter.apply(target, [val]); }
            else if (val instanceof Array) { current = getter.apply(target); if (!(current instanceof Array)) throw new Error.invalidOperation(String.format(Sys.Res.propertyNotAnArray, name)); for (var i = 0, j = current.length, l = val.length; i < l; i++, j++) { current[j] = val[i]; } }
            else if ((typeof (val) === 'object') && (Object.getType(val) === Object)) { current = getter.apply(target); if ((typeof (current) === 'undefined') || (current === null)) throw new Error.invalidOperation(String.format(Sys.Res.propertyNullOrUndefined, name)); Sys$Component$_setProperties(current, val); }
            else { throw new Error.invalidOperation(String.format(Sys.Res.propertyNotWritable, name)); }
        }
    }
    if (isComponent) target.endUpdate();
}
function Sys$Component$_setReferences(component, references) { for (var name in references) { var setter = component["set_" + name]; var reference = $find(references[name]); if (typeof (setter) !== 'function') throw new Error.invalidOperation(String.format(Sys.Res.propertyNotWritable, name)); if (!reference) throw Error.invalidOperation(String.format(Sys.Res.referenceNotFound, references[name])); setter.apply(component, [reference]); } }
var $create = Sys.Component.create = function Sys$Component$create(type, properties, events, references, element) {
    var e = Function._validateParams(arguments, [{ name: "type", type: Type }, { name: "properties", mayBeNull: true, optional: true }, { name: "events", mayBeNull: true, optional: true }, { name: "references", mayBeNull: true, optional: true }, { name: "element", mayBeNull: true, domElement: true, optional: true }]); if (e) throw e; if (!type.inheritsFrom(Sys.Component)) { throw Error.argument('type', String.format(Sys.Res.createNotComponent, type.getName())); }
    if (type.inheritsFrom(Sys.UI.Behavior) || type.inheritsFrom(Sys.UI.Control)) { if (!element) throw Error.argument('element', Sys.Res.createNoDom); }
    else if (element) throw Error.argument('element', Sys.Res.createComponentOnDom); var component = (element ? new type(element) : new type()); var app = Sys.Application; var creatingComponents = app.get_isCreatingComponents(); component.beginUpdate(); if (properties) { Sys$Component$_setProperties(component, properties); }
    if (events) { for (var name in events) { if (!(component["add_" + name] instanceof Function)) throw new Error.invalidOperation(String.format(Sys.Res.undefinedEvent, name)); if (!(events[name] instanceof Function)) throw new Error.invalidOperation(Sys.Res.eventHandlerNotFunction); component["add_" + name](events[name]); } }
    if (component.get_id()) { app.addComponent(component); }
    if (creatingComponents) {
        app._createdComponents[app._createdComponents.length] = component; if (references) { app._addComponentToSecondPass(component, references); }
        else { component.endUpdate(); }
    }
    else {
        if (references) { Sys$Component$_setReferences(component, references); }
        component.endUpdate();
    }
    return component;
}
Sys.UI.MouseButton = function Sys$UI$MouseButton() { if (arguments.length !== 0) throw Error.parameterCount(); throw Error.notImplemented(); }
Sys.UI.MouseButton.prototype = { leftButton: 0, middleButton: 1, rightButton: 2 }
Sys.UI.MouseButton.registerEnum("Sys.UI.MouseButton"); Sys.UI.Key = function Sys$UI$Key() { if (arguments.length !== 0) throw Error.parameterCount(); throw Error.notImplemented(); }
Sys.UI.Key.prototype = { backspace: 8, tab: 9, enter: 13, esc: 27, space: 32, pageUp: 33, pageDown: 34, end: 35, home: 36, left: 37, up: 38, right: 39, down: 40, del: 127 }
Sys.UI.Key.registerEnum("Sys.UI.Key"); Sys.UI.Point = function Sys$UI$Point(x, y) { var e = Function._validateParams(arguments, [{ name: "x", type: Number, integer: true }, { name: "y", type: Number, integer: true }]); if (e) throw e; this.x = x; this.y = y; }
Sys.UI.Point.registerClass('Sys.UI.Point'); Sys.UI.Bounds = function Sys$UI$Bounds(x, y, width, height) { var e = Function._validateParams(arguments, [{ name: "x", type: Number, integer: true }, { name: "y", type: Number, integer: true }, { name: "height", type: Number, integer: true }, { name: "width", type: Number, integer: true }]); if (e) throw e; this.x = x; this.y = y; this.height = height; this.width = width; }
Sys.UI.Bounds.registerClass('Sys.UI.Bounds'); Sys.UI.DomEvent = function Sys$UI$DomEvent(eventObject) {
    var e = Function._validateParams(arguments, [{ name: "eventObject" }]); if (e) throw e; var e = eventObject; var etype = this.type = e.type.toLowerCase(); this.rawEvent = e; this.altKey = e.altKey; if (typeof (e.button) !== 'undefined') { this.button = (typeof (e.which) !== 'undefined') ? e.button : (e.button === 4) ? Sys.UI.MouseButton.middleButton : (e.button === 2) ? Sys.UI.MouseButton.rightButton : Sys.UI.MouseButton.leftButton; }
    if (etype === 'keypress') { this.charCode = e.charCode || e.keyCode; }
    else if (e.keyCode && (e.keyCode === 46)) { this.keyCode = 127; }
    else { this.keyCode = e.keyCode; }
    this.clientX = e.clientX; this.clientY = e.clientY; this.ctrlKey = e.ctrlKey; this.target = e.target ? e.target : e.srcElement; if (!etype.startsWith('key')) {
        if ((typeof (e.offsetX) !== 'undefined') && (typeof (e.offsetY) !== 'undefined')) { this.offsetX = e.offsetX; this.offsetY = e.offsetY; }
        else if (this.target && (this.target.nodeType !== 3) && (typeof (e.clientX) === 'number')) { var loc = Sys.UI.DomElement.getLocation(this.target); var w = Sys.UI.DomElement._getWindow(this.target); this.offsetX = (w.pageXOffset || 0) + e.clientX - loc.x; this.offsetY = (w.pageYOffset || 0) + e.clientY - loc.y; }
    }
    this.screenX = e.screenX; this.screenY = e.screenY; this.shiftKey = e.shiftKey;
}
function Sys$UI$DomEvent$preventDefault() {
    if (arguments.length !== 0) throw Error.parameterCount(); if (this.rawEvent.preventDefault) { this.rawEvent.preventDefault(); }
    else if (window.event) { this.rawEvent.returnValue = false; }
}
function Sys$UI$DomEvent$stopPropagation() {
    if (arguments.length !== 0) throw Error.parameterCount(); if (this.rawEvent.stopPropagation) { this.rawEvent.stopPropagation(); }
    else if (window.event) { this.rawEvent.cancelBubble = true; }
}
Sys.UI.DomEvent.prototype = { preventDefault: Sys$UI$DomEvent$preventDefault, stopPropagation: Sys$UI$DomEvent$stopPropagation }
Sys.UI.DomEvent.registerClass('Sys.UI.DomEvent'); var $addHandler = Sys.UI.DomEvent.addHandler = function Sys$UI$DomEvent$addHandler(element, eventName, handler) {
    var e = Function._validateParams(arguments, [{ name: "element" }, { name: "eventName", type: String }, { name: "handler", type: Function }]); if (e) throw e; Sys.UI.DomEvent._ensureDomNode(element); if (eventName === "error") throw Error.invalidOperation(Sys.Res.addHandlerCantBeUsedForError); if (!element._events) { element._events = {}; }
    var eventCache = element._events[eventName]; if (!eventCache) { element._events[eventName] = eventCache = []; }
    var browserHandler; if (element.addEventListener) {
        browserHandler = function (e) { return handler.call(element, new Sys.UI.DomEvent(e)); }
        element.addEventListener(eventName, browserHandler, false);
    }
    else if (element.attachEvent) {
        browserHandler = function () {
            var e = {}; try { e = Sys.UI.DomElement._getWindow(element).event } catch (ex) { }
            return handler.call(element, new Sys.UI.DomEvent(e));
        }
        element.attachEvent('on' + eventName, browserHandler);
    }
    eventCache[eventCache.length] = { handler: handler, browserHandler: browserHandler };
}
var $addHandlers = Sys.UI.DomEvent.addHandlers = function Sys$UI$DomEvent$addHandlers(element, events, handlerOwner) {
    var e = Function._validateParams(arguments, [{ name: "element" }, { name: "events", type: Object }, { name: "handlerOwner", optional: true }]); if (e) throw e; Sys.UI.DomEvent._ensureDomNode(element); for (var name in events) {
        var handler = events[name]; if (typeof (handler) !== 'function') throw Error.invalidOperation(Sys.Res.cantAddNonFunctionhandler); if (handlerOwner) { handler = Function.createDelegate(handlerOwner, handler); }
        $addHandler(element, name, handler);
    }
}
var $clearHandlers = Sys.UI.DomEvent.clearHandlers = function Sys$UI$DomEvent$clearHandlers(element) {
    var e = Function._validateParams(arguments, [{ name: "element" }]); if (e) throw e; Sys.UI.DomEvent._ensureDomNode(element); if (element._events) {
        var cache = element._events; for (var name in cache) { var handlers = cache[name]; for (var i = handlers.length - 1; i >= 0; i--) { $removeHandler(element, name, handlers[i].handler); } }
        element._events = null;
    }
}
var $removeHandler = Sys.UI.DomEvent.removeHandler = function Sys$UI$DomEvent$removeHandler(element, eventName, handler) {
    var e = Function._validateParams(arguments, [{ name: "element" }, { name: "eventName", type: String }, { name: "handler", type: Function }]); if (e) throw e; Sys.UI.DomEvent._ensureDomNode(element); var browserHandler = null; if ((typeof (element._events) !== 'object') || (element._events == null)) throw Error.invalidOperation(Sys.Res.eventHandlerInvalid); var cache = element._events[eventName]; if (!(cache instanceof Array)) throw Error.invalidOperation(Sys.Res.eventHandlerInvalid); for (var i = 0, l = cache.length; i < l; i++) { if (cache[i].handler === handler) { browserHandler = cache[i].browserHandler; break; } }
    if (typeof (browserHandler) !== 'function') throw Error.invalidOperation(Sys.Res.eventHandlerInvalid); if (element.removeEventListener) { element.removeEventListener(eventName, browserHandler, false); }
    else if (element.detachEvent) { element.detachEvent('on' + eventName, browserHandler); }
    cache.splice(i, 1);
}
Sys.UI.DomEvent._ensureDomNode = function Sys$UI$DomEvent$_ensureDomNode(element) { if (element.tagName && (element.tagName.toUpperCase() === "SCRIPT")) return; var doc = element.ownerDocument || element.document || element; if ((typeof (element.document) !== 'object') && (element != doc) && (typeof (element.nodeType) !== 'number')) { throw Error.argument("element", Sys.Res.argumentDomNode); } }
Sys.UI.DomElement = function Sys$UI$DomElement() { if (arguments.length !== 0) throw Error.parameterCount(); throw Error.notImplemented(); }
Sys.UI.DomElement.registerClass('Sys.UI.DomElement'); Sys.UI.DomElement.addCssClass = function Sys$UI$DomElement$addCssClass(element, className) {
    var e = Function._validateParams(arguments, [{ name: "element", domElement: true }, { name: "className", type: String }]); if (e) throw e; if (!Sys.UI.DomElement.containsCssClass(element, className)) {
        if (element.className === '') { element.className = className; }
        else { element.className += ' ' + className; }
    }
}
Sys.UI.DomElement.containsCssClass = function Sys$UI$DomElement$containsCssClass(element, className) { var e = Function._validateParams(arguments, [{ name: "element", domElement: true }, { name: "className", type: String }]); if (e) throw e; return Array.contains(element.className.split(' '), className); }
Sys.UI.DomElement.getBounds = function Sys$UI$DomElement$getBounds(element) { var e = Function._validateParams(arguments, [{ name: "element", domElement: true }]); if (e) throw e; var offset = Sys.UI.DomElement.getLocation(element); return new Sys.UI.Bounds(offset.x, offset.y, element.offsetWidth || 0, element.offsetHeight || 0); }
var $get = Sys.UI.DomElement.getElementById = function Sys$UI$DomElement$getElementById(id, element) {
    var e = Function._validateParams(arguments, [{ name: "id", type: String }, { name: "element", mayBeNull: true, domElement: true, optional: true }]); if (e) throw e; if (!element) return document.getElementById(id); if (element.getElementById) return element.getElementById(id); var nodeQueue = []; var childNodes = element.childNodes; for (var i = 0; i < childNodes.length; i++) { var node = childNodes[i]; if (node.nodeType == 1) { nodeQueue[nodeQueue.length] = node; } }
    while (nodeQueue.length) {
        node = nodeQueue.shift(); if (node.id == id) { return node; }
        childNodes = node.childNodes; for (i = 0; i < childNodes.length; i++) { node = childNodes[i]; if (node.nodeType == 1) { nodeQueue[nodeQueue.length] = node; } }
    }
    return null;
}
switch (Sys.Browser.agent) {
    case Sys.Browser.InternetExplorer: Sys.UI.DomElement.getLocation = function Sys$UI$DomElement$getLocation(element) {
        var e = Function._validateParams(arguments, [{ name: "element", domElement: true }]); if (e) throw e; if (element.self || element.nodeType === 9) return new Sys.UI.Point(0, 0); var clientRect = element.getBoundingClientRect(); if (!clientRect) { return new Sys.UI.Point(0, 0); }
        var documentElement = element.ownerDocument.documentElement; var offsetX = clientRect.left - 2 + documentElement.scrollLeft, offsetY = clientRect.top - 2 + documentElement.scrollTop; try { var f = element.ownerDocument.parentWindow.frameElement || null; if (f) { var offset = (f.frameBorder === "0" || f.frameBorder === "no") ? 2 : 0; offsetX += offset; offsetY += offset; } }
        catch (ex) { }
        return new Sys.UI.Point(offsetX, offsetY);
    }
        break; case Sys.Browser.Safari: Sys.UI.DomElement.getLocation = function Sys$UI$DomElement$getLocation(element) {
            var e = Function._validateParams(arguments, [{ name: "element", domElement: true }]); if (e) throw e; if ((element.window && (element.window === element)) || element.nodeType === 9) return new Sys.UI.Point(0, 0); var offsetX = 0; var offsetY = 0; var previous = null; var previousStyle = null; var currentStyle; for (var parent = element; parent; previous = parent, previousStyle = currentStyle, parent = parent.offsetParent) { currentStyle = Sys.UI.DomElement._getCurrentStyle(parent); var tagName = parent.tagName ? parent.tagName.toUpperCase() : null; if ((parent.offsetLeft || parent.offsetTop) && ((tagName !== "BODY") || (!previousStyle || previousStyle.position !== "absolute"))) { offsetX += parent.offsetLeft; offsetY += parent.offsetTop; } }
            currentStyle = Sys.UI.DomElement._getCurrentStyle(element); var elementPosition = currentStyle ? currentStyle.position : null; if (!elementPosition || (elementPosition !== "absolute")) {
                for (var parent = element.parentNode; parent; parent = parent.parentNode) {
                    tagName = parent.tagName ? parent.tagName.toUpperCase() : null; if ((tagName !== "BODY") && (tagName !== "HTML") && (parent.scrollLeft || parent.scrollTop)) { offsetX -= (parent.scrollLeft || 0); offsetY -= (parent.scrollTop || 0); }
                    currentStyle = Sys.UI.DomElement._getCurrentStyle(parent); var parentPosition = currentStyle ? currentStyle.position : null; if (parentPosition && (parentPosition === "absolute")) break;
                }
            }
            return new Sys.UI.Point(offsetX, offsetY);
        }
            break; case Sys.Browser.Opera: Sys.UI.DomElement.getLocation = function Sys$UI$DomElement$getLocation(element) {
                var e = Function._validateParams(arguments, [{ name: "element", domElement: true }]); if (e) throw e; if ((element.window && (element.window === element)) || element.nodeType === 9) return new Sys.UI.Point(0, 0); var offsetX = 0; var offsetY = 0; var previous = null; for (var parent = element; parent; previous = parent, parent = parent.offsetParent) { var tagName = parent.tagName; offsetX += parent.offsetLeft || 0; offsetY += parent.offsetTop || 0; }
                var elementPosition = element.style.position; var elementPositioned = elementPosition && (elementPosition !== "static"); for (var parent = element.parentNode; parent; parent = parent.parentNode) {
                    tagName = parent.tagName ? parent.tagName.toUpperCase() : null; if ((tagName !== "BODY") && (tagName !== "HTML") && (parent.scrollLeft || parent.scrollTop) && ((elementPositioned && ((parent.style.overflow === "scroll") || (parent.style.overflow === "auto"))))) { offsetX -= (parent.scrollLeft || 0); offsetY -= (parent.scrollTop || 0); }
                    var parentPosition = (parent && parent.style) ? parent.style.position : null; elementPositioned = elementPositioned || (parentPosition && (parentPosition !== "static"));
                }
                return new Sys.UI.Point(offsetX, offsetY);
            }
                break; default: Sys.UI.DomElement.getLocation = function Sys$UI$DomElement$getLocation(element) {
                    var e = Function._validateParams(arguments, [{ name: "element", domElement: true }]); if (e) throw e; if ((element.window && (element.window === element)) || element.nodeType === 9) return new Sys.UI.Point(0, 0); var offsetX = 0; var offsetY = 0; var previous = null; var previousStyle = null; var currentStyle = null; for (var parent = element; parent; previous = parent, previousStyle = currentStyle, parent = parent.offsetParent) {
                        var tagName = parent.tagName ? parent.tagName.toUpperCase() : null; currentStyle = Sys.UI.DomElement._getCurrentStyle(parent); if ((parent.offsetLeft || parent.offsetTop) && !((tagName === "BODY") && (!previousStyle || previousStyle.position !== "absolute"))) { offsetX += parent.offsetLeft; offsetY += parent.offsetTop; }
                        if (previous !== null && currentStyle) {
                            if ((tagName !== "TABLE") && (tagName !== "TD") && (tagName !== "HTML")) { offsetX += parseInt(currentStyle.borderLeftWidth) || 0; offsetY += parseInt(currentStyle.borderTopWidth) || 0; }
                            if (tagName === "TABLE" && (currentStyle.position === "relative" || currentStyle.position === "absolute")) { offsetX += parseInt(currentStyle.marginLeft) || 0; offsetY += parseInt(currentStyle.marginTop) || 0; }
                        }
                    }
                    currentStyle = Sys.UI.DomElement._getCurrentStyle(element); var elementPosition = currentStyle ? currentStyle.position : null; if (!elementPosition || (elementPosition !== "absolute")) { for (var parent = element.parentNode; parent; parent = parent.parentNode) { tagName = parent.tagName ? parent.tagName.toUpperCase() : null; if ((tagName !== "BODY") && (tagName !== "HTML") && (parent.scrollLeft || parent.scrollTop)) { offsetX -= (parent.scrollLeft || 0); offsetY -= (parent.scrollTop || 0); currentStyle = Sys.UI.DomElement._getCurrentStyle(parent); if (currentStyle) { offsetX += parseInt(currentStyle.borderLeftWidth) || 0; offsetY += parseInt(currentStyle.borderTopWidth) || 0; } } } }
                    return new Sys.UI.Point(offsetX, offsetY);
                }
                    break;
}
Sys.UI.DomElement.removeCssClass = function Sys$UI$DomElement$removeCssClass(element, className) {
    var e = Function._validateParams(arguments, [{ name: "element", domElement: true }, { name: "className", type: String }]); if (e) throw e; var currentClassName = ' ' + element.className + ' '; var index = currentClassName.indexOf(' ' + className + ' '); if (index >= 0) {
        element.className = (currentClassName.substr(0, index) + ' ' +
        currentClassName.substring(index + className.length + 1, currentClassName.length)).trim();
    }
}
Sys.UI.DomElement.setLocation = function Sys$UI$DomElement$setLocation(element, x, y) { var e = Function._validateParams(arguments, [{ name: "element", domElement: true }, { name: "x", type: Number, integer: true }, { name: "y", type: Number, integer: true }]); if (e) throw e; var style = element.style; style.position = 'absolute'; style.left = x + "px"; style.top = y + "px"; }
Sys.UI.DomElement.toggleCssClass = function Sys$UI$DomElement$toggleCssClass(element, className) {
    var e = Function._validateParams(arguments, [{ name: "element", domElement: true }, { name: "className", type: String }]); if (e) throw e; if (Sys.UI.DomElement.containsCssClass(element, className)) { Sys.UI.DomElement.removeCssClass(element, className); }
    else { Sys.UI.DomElement.addCssClass(element, className); }
}
Sys.UI.DomElement.getVisibilityMode = function Sys$UI$DomElement$getVisibilityMode(element) { var e = Function._validateParams(arguments, [{ name: "element", domElement: true }]); if (e) throw e; return (element._visibilityMode === Sys.UI.VisibilityMode.hide) ? Sys.UI.VisibilityMode.hide : Sys.UI.VisibilityMode.collapse; }
Sys.UI.DomElement.setVisibilityMode = function Sys$UI$DomElement$setVisibilityMode(element, value) {
    var e = Function._validateParams(arguments, [{ name: "element", domElement: true }, { name: "value", type: Sys.UI.VisibilityMode }]); if (e) throw e; Sys.UI.DomElement._ensureOldDisplayMode(element); if (element._visibilityMode !== value) {
        element._visibilityMode = value; if (Sys.UI.DomElement.getVisible(element) === false) {
            if (element._visibilityMode === Sys.UI.VisibilityMode.hide) { element.style.display = element._oldDisplayMode; }
            else { element.style.display = 'none'; }
        }
        element._visibilityMode = value;
    }
}
Sys.UI.DomElement.getVisible = function Sys$UI$DomElement$getVisible(element) { var e = Function._validateParams(arguments, [{ name: "element", domElement: true }]); if (e) throw e; var style = element.currentStyle || Sys.UI.DomElement._getCurrentStyle(element); if (!style) return true; return (style.visibility !== 'hidden') && (style.display !== 'none'); }
Sys.UI.DomElement.setVisible = function Sys$UI$DomElement$setVisible(element, value) {
    var e = Function._validateParams(arguments, [{ name: "element", domElement: true }, { name: "value", type: Boolean }]); if (e) throw e; if (value !== Sys.UI.DomElement.getVisible(element)) {
        Sys.UI.DomElement._ensureOldDisplayMode(element); element.style.visibility = value ? 'visible' : 'hidden'; if (value || (element._visibilityMode === Sys.UI.VisibilityMode.hide)) { element.style.display = element._oldDisplayMode; }
        else { element.style.display = 'none'; }
    }
}
Sys.UI.DomElement._ensureOldDisplayMode = function Sys$UI$DomElement$_ensureOldDisplayMode(element) { if (!element._oldDisplayMode) { var style = element.currentStyle || Sys.UI.DomElement._getCurrentStyle(element); element._oldDisplayMode = style ? style.display : null; if (!element._oldDisplayMode || element._oldDisplayMode === 'none') { switch (element.tagName.toUpperCase()) { case 'DIV': case 'P': case 'ADDRESS': case 'BLOCKQUOTE': case 'BODY': case 'COL': case 'COLGROUP': case 'DD': case 'DL': case 'DT': case 'FIELDSET': case 'FORM': case 'H1': case 'H2': case 'H3': case 'H4': case 'H5': case 'H6': case 'HR': case 'IFRAME': case 'LEGEND': case 'OL': case 'PRE': case 'TABLE': case 'TD': case 'TH': case 'TR': case 'UL': element._oldDisplayMode = 'block'; break; case 'LI': element._oldDisplayMode = 'list-item'; break; default: element._oldDisplayMode = 'inline'; } } } }
Sys.UI.DomElement._getWindow = function Sys$UI$DomElement$_getWindow(element) { var doc = element.ownerDocument || element.document || element; return doc.defaultView || doc.parentWindow; }
Sys.UI.DomElement._getCurrentStyle = function Sys$UI$DomElement$_getCurrentStyle(element) {
    if (element.nodeType === 3) return null; var w = Sys.UI.DomElement._getWindow(element); if (element.documentElement) element = element.documentElement; var computedStyle = (w && (element !== w) && w.getComputedStyle) ? w.getComputedStyle(element, null) : element.currentStyle || element.style; if (!computedStyle && (Sys.Browser.agent === Sys.Browser.Safari) && element.style) {
        var oldDisplay = element.style.display; var oldPosition = element.style.position; element.style.position = 'absolute'; element.style.display = 'block'; var style = w.getComputedStyle(element, null); element.style.display = oldDisplay; element.style.position = oldPosition; computedStyle = {}; for (var n in style) { computedStyle[n] = style[n]; }
        computedStyle.display = 'none';
    }
    return computedStyle;
}
Sys.IContainer = function Sys$IContainer() { throw Error.notImplemented(); }
function Sys$IContainer$addComponent(component) { var e = Function._validateParams(arguments, [{ name: "component", type: Sys.Component }]); if (e) throw e; throw Error.notImplemented(); }
function Sys$IContainer$removeComponent(component) { var e = Function._validateParams(arguments, [{ name: "component", type: Sys.Component }]); if (e) throw e; throw Error.notImplemented(); }
function Sys$IContainer$findComponent(id) { var e = Function._validateParams(arguments, [{ name: "id", type: String }]); if (e) throw e; throw Error.notImplemented(); }
function Sys$IContainer$getComponents() { if (arguments.length !== 0) throw Error.parameterCount(); throw Error.notImplemented(); }
Sys.IContainer.prototype = { addComponent: Sys$IContainer$addComponent, removeComponent: Sys$IContainer$removeComponent, findComponent: Sys$IContainer$findComponent, getComponents: Sys$IContainer$getComponents }
Sys.IContainer.registerInterface("Sys.IContainer"); Sys._ScriptLoader = function Sys$_ScriptLoader() { this._scriptsToLoad = null; this._sessions = []; this._scriptLoadedDelegate = Function.createDelegate(this, this._scriptLoadedHandler); }
function Sys$_ScriptLoader$dispose() {
    this._stopSession(); this._loading = false; if (this._events) { delete this._events; }
    this._sessions = null; this._currentSession = null; this._scriptLoadedDelegate = null;
}
function Sys$_ScriptLoader$loadScripts(scriptTimeout, allScriptsLoadedCallback, scriptLoadFailedCallback, scriptLoadTimeoutCallback) { var e = Function._validateParams(arguments, [{ name: "scriptTimeout", type: Number, integer: true }, { name: "allScriptsLoadedCallback", type: Function, mayBeNull: true }, { name: "scriptLoadFailedCallback", type: Function, mayBeNull: true }, { name: "scriptLoadTimeoutCallback", type: Function, mayBeNull: true }]); if (e) throw e; var session = { allScriptsLoadedCallback: allScriptsLoadedCallback, scriptLoadFailedCallback: scriptLoadFailedCallback, scriptLoadTimeoutCallback: scriptLoadTimeoutCallback, scriptsToLoad: this._scriptsToLoad, scriptTimeout: scriptTimeout }; this._scriptsToLoad = null; this._sessions[this._sessions.length] = session; if (!this._loading) { this._nextSession(); } }
function Sys$_ScriptLoader$notifyScriptLoaded() {
    if (arguments.length !== 0) throw Error.parameterCount(); if (!this._loading) { return; }
    this._currentTask._notified++; if (Sys.Browser.agent === Sys.Browser.Safari) { if (this._currentTask._notified === 1) { window.setTimeout(Function.createDelegate(this, function () { this._scriptLoadedHandler(this._currentTask.get_scriptElement(), true); }), 0); } }
}
function Sys$_ScriptLoader$queueCustomScriptTag(scriptAttributes) {
    var e = Function._validateParams(arguments, [{ name: "scriptAttributes" }]); if (e) throw e; if (!this._scriptsToLoad) { this._scriptsToLoad = []; }
    Array.add(this._scriptsToLoad, scriptAttributes);
}
function Sys$_ScriptLoader$queueScriptBlock(scriptContent) {
    var e = Function._validateParams(arguments, [{ name: "scriptContent", type: String }]); if (e) throw e; if (!this._scriptsToLoad) { this._scriptsToLoad = []; }
    Array.add(this._scriptsToLoad, { text: scriptContent });
}
function Sys$_ScriptLoader$queueScriptReference(scriptUrl) {
    var e = Function._validateParams(arguments, [{ name: "scriptUrl", type: String }]); if (e) throw e; if (!this._scriptsToLoad) { this._scriptsToLoad = []; }
    Array.add(this._scriptsToLoad, { src: scriptUrl });
}
function Sys$_ScriptLoader$_createScriptElement(queuedScript) {
    var scriptElement = document.createElement('script'); scriptElement.type = 'text/javascript'; for (var attr in queuedScript) { scriptElement[attr] = queuedScript[attr]; }
    return scriptElement;
}
function Sys$_ScriptLoader$_loadScriptsInternal() {
    var session = this._currentSession; if (session.scriptsToLoad && session.scriptsToLoad.length > 0) {
        var nextScript = Array.dequeue(session.scriptsToLoad); var scriptElement = this._createScriptElement(nextScript); if (scriptElement.text && Sys.Browser.agent === Sys.Browser.Safari) { scriptElement.innerHTML = scriptElement.text; delete scriptElement.text; }
        if (typeof (nextScript.src) === "string") { this._currentTask = new Sys._ScriptLoaderTask(scriptElement, this._scriptLoadedDelegate); this._currentTask.execute(); }
        else {
            var headElements = document.getElementsByTagName('head'); if (headElements.length === 0) { throw new Error.invalidOperation(Sys.Res.scriptLoadFailedNoHead); }
            else { headElements[0].appendChild(scriptElement); }
            Sys._ScriptLoader._clearScript(scriptElement); this._loadScriptsInternal();
        }
    }
    else {
        this._stopSession(); var callback = session.allScriptsLoadedCallback; if (callback) { callback(this); }
        this._nextSession();
    }
}
function Sys$_ScriptLoader$_nextSession() {
    if (this._sessions.length === 0) { this._loading = false; this._currentSession = null; return; }
    this._loading = true; var session = Array.dequeue(this._sessions); this._currentSession = session; this._loadScriptsInternal();
}
function Sys$_ScriptLoader$_raiseError(multipleCallbacks) {
    var callback = this._currentSession.scriptLoadFailedCallback; var scriptElement = this._currentTask.get_scriptElement(); this._stopSession(); if (callback) { callback(this, scriptElement, multipleCallbacks); this._nextSession(); }
    else { this._loading = false; throw Sys._ScriptLoader._errorScriptLoadFailed(scriptElement.src, multipleCallbacks); }
}
function Sys$_ScriptLoader$_scriptLoadedHandler(scriptElement, loaded) {
    if (loaded && this._currentTask._notified) {
        if (this._currentTask._notified > 1) { this._raiseError(true); }
        else { Array.add(Sys._ScriptLoader._getLoadedScripts(), scriptElement.src); this._currentTask.dispose(); this._currentTask = null; this._loadScriptsInternal(); }
    }
    else { this._raiseError(false); }
}
function Sys$_ScriptLoader$_scriptLoadTimeoutHandler() {
    var callback = this._currentSession.scriptLoadTimeoutCallback; this._stopSession(); if (callback) { callback(this); }
    this._nextSession();
}
function Sys$_ScriptLoader$_stopSession() { if (this._currentTask) { this._currentTask.dispose(); this._currentTask = null; } }
Sys._ScriptLoader.prototype = { dispose: Sys$_ScriptLoader$dispose, loadScripts: Sys$_ScriptLoader$loadScripts, notifyScriptLoaded: Sys$_ScriptLoader$notifyScriptLoaded, queueCustomScriptTag: Sys$_ScriptLoader$queueCustomScriptTag, queueScriptBlock: Sys$_ScriptLoader$queueScriptBlock, queueScriptReference: Sys$_ScriptLoader$queueScriptReference, _createScriptElement: Sys$_ScriptLoader$_createScriptElement, _loadScriptsInternal: Sys$_ScriptLoader$_loadScriptsInternal, _nextSession: Sys$_ScriptLoader$_nextSession, _raiseError: Sys$_ScriptLoader$_raiseError, _scriptLoadedHandler: Sys$_ScriptLoader$_scriptLoadedHandler, _scriptLoadTimeoutHandler: Sys$_ScriptLoader$_scriptLoadTimeoutHandler, _stopSession: Sys$_ScriptLoader$_stopSession }
Sys._ScriptLoader.registerClass('Sys._ScriptLoader', null, Sys.IDisposable); Sys._ScriptLoader.getInstance = function Sys$_ScriptLoader$getInstance() {
    var sl = Sys._ScriptLoader._activeInstance; if (!sl) { sl = Sys._ScriptLoader._activeInstance = new Sys._ScriptLoader(); }
    return sl;
}
Sys._ScriptLoader.isScriptLoaded = function Sys$_ScriptLoader$isScriptLoaded(scriptSrc) { var dummyScript = document.createElement('script'); dummyScript.src = scriptSrc; return Array.contains(Sys._ScriptLoader._getLoadedScripts(), dummyScript.src); }
Sys._ScriptLoader.readLoadedScripts = function Sys$_ScriptLoader$readLoadedScripts() { if (!Sys._ScriptLoader._referencedScripts) { var referencedScripts = Sys._ScriptLoader._referencedScripts = []; var existingScripts = document.getElementsByTagName('script'); for (i = existingScripts.length - 1; i >= 0; i--) { var scriptNode = existingScripts[i]; var scriptSrc = scriptNode.src; if (scriptSrc.length) { if (!Array.contains(referencedScripts, scriptSrc)) { Array.add(referencedScripts, scriptSrc); } } } } }
Sys._ScriptLoader._clearScript = function Sys$_ScriptLoader$_clearScript(scriptElement) { if (!Sys.Debug.isDebug) { scriptElement.parentNode.removeChild(scriptElement); } }
Sys._ScriptLoader._errorScriptLoadFailed = function Sys$_ScriptLoader$_errorScriptLoadFailed(scriptUrl, multipleCallbacks) {
    var errorMessage; if (multipleCallbacks) { errorMessage = Sys.Res.scriptLoadMultipleCallbacks; }
    else { errorMessage = Sys.Res.scriptLoadFailedDebug; }
    var displayMessage = "Sys.ScriptLoadFailedException: " + String.format(errorMessage, scriptUrl); var e = Error.create(displayMessage, { name: 'Sys.ScriptLoadFailedException', 'scriptUrl': scriptUrl }); e.popStackFrame(); return e;
}
Sys._ScriptLoader._getLoadedScripts = function Sys$_ScriptLoader$_getLoadedScripts() {
    if (!Sys._ScriptLoader._referencedScripts) { Sys._ScriptLoader._referencedScripts = []; Sys._ScriptLoader.readLoadedScripts(); }
    return Sys._ScriptLoader._referencedScripts;
}
Sys._ScriptLoaderTask = function Sys$_ScriptLoaderTask(scriptElement, completedCallback) { var e = Function._validateParams(arguments, [{ name: "scriptElement", domElement: true }, { name: "completedCallback", type: Function }]); if (e) throw e; this._scriptElement = scriptElement; this._completedCallback = completedCallback; this._notified = 0; }
function Sys$_ScriptLoaderTask$get_scriptElement() { if (arguments.length !== 0) throw Error.parameterCount(); return this._scriptElement; }
function Sys$_ScriptLoaderTask$dispose() {
    if (this._disposed) { return; }
    this._disposed = true; this._removeScriptElementHandlers(); Sys._ScriptLoader._clearScript(this._scriptElement); this._scriptElement = null;
}
function Sys$_ScriptLoaderTask$execute() {
    if (arguments.length !== 0) throw Error.parameterCount(); this._addScriptElementHandlers(); var headElements = document.getElementsByTagName('head'); if (headElements.length === 0) { throw new Error.invalidOperation(Sys.Res.scriptLoadFailedNoHead); }
    else { headElements[0].appendChild(this._scriptElement); }
}
function Sys$_ScriptLoaderTask$_addScriptElementHandlers() {
    this._scriptLoadDelegate = Function.createDelegate(this, this._scriptLoadHandler); if (Sys.Browser.agent !== Sys.Browser.InternetExplorer) { this._scriptElement.readyState = 'loaded'; $addHandler(this._scriptElement, 'load', this._scriptLoadDelegate); }
    else { $addHandler(this._scriptElement, 'readystatechange', this._scriptLoadDelegate); }
    if (this._scriptElement.addEventListener) { this._scriptErrorDelegate = Function.createDelegate(this, this._scriptErrorHandler); this._scriptElement.addEventListener('error', this._scriptErrorDelegate, false); }
}
function Sys$_ScriptLoaderTask$_removeScriptElementHandlers() {
    if (this._scriptLoadDelegate) {
        var scriptElement = this.get_scriptElement(); if (Sys.Browser.agent !== Sys.Browser.InternetExplorer) { $removeHandler(scriptElement, 'load', this._scriptLoadDelegate); }
        else { $removeHandler(scriptElement, 'readystatechange', this._scriptLoadDelegate); }
        if (this._scriptErrorDelegate) { this._scriptElement.removeEventListener('error', this._scriptErrorDelegate, false); this._scriptErrorDelegate = null; }
        this._scriptLoadDelegate = null;
    }
}
function Sys$_ScriptLoaderTask$_scriptErrorHandler() {
    if (this._disposed) { return; }
    this._completedCallback(this.get_scriptElement(), false);
}
function Sys$_ScriptLoaderTask$_scriptLoadHandler() {
    if (this._disposed) { return; }
    var scriptElement = this.get_scriptElement(); if ((scriptElement.readyState !== 'loaded') && (scriptElement.readyState !== 'complete')) { return; }
    var _this = this; window.setTimeout(function () { _this._completedCallback(scriptElement, true); }, 0);
}
Sys._ScriptLoaderTask.prototype = { get_scriptElement: Sys$_ScriptLoaderTask$get_scriptElement, dispose: Sys$_ScriptLoaderTask$dispose, execute: Sys$_ScriptLoaderTask$execute, _addScriptElementHandlers: Sys$_ScriptLoaderTask$_addScriptElementHandlers, _removeScriptElementHandlers: Sys$_ScriptLoaderTask$_removeScriptElementHandlers, _scriptErrorHandler: Sys$_ScriptLoaderTask$_scriptErrorHandler, _scriptLoadHandler: Sys$_ScriptLoaderTask$_scriptLoadHandler }
Sys._ScriptLoaderTask.registerClass("Sys._ScriptLoaderTask", null, Sys.IDisposable); Sys.ApplicationLoadEventArgs = function Sys$ApplicationLoadEventArgs(components, isPartialLoad) { var e = Function._validateParams(arguments, [{ name: "components", type: Array, elementType: Sys.Component }, { name: "isPartialLoad", type: Boolean }]); if (e) throw e; Sys.ApplicationLoadEventArgs.initializeBase(this); this._components = components; this._isPartialLoad = isPartialLoad; }
function Sys$ApplicationLoadEventArgs$get_components() { if (arguments.length !== 0) throw Error.parameterCount(); return this._components; }
function Sys$ApplicationLoadEventArgs$get_isPartialLoad() { if (arguments.length !== 0) throw Error.parameterCount(); return this._isPartialLoad; }
Sys.ApplicationLoadEventArgs.prototype = { get_components: Sys$ApplicationLoadEventArgs$get_components, get_isPartialLoad: Sys$ApplicationLoadEventArgs$get_isPartialLoad }
Sys.ApplicationLoadEventArgs.registerClass('Sys.ApplicationLoadEventArgs', Sys.EventArgs); Sys.HistoryEventArgs = function Sys$HistoryEventArgs(state) { var e = Function._validateParams(arguments, [{ name: "state", type: Object }]); if (e) throw e; Sys.HistoryEventArgs.initializeBase(this); this._state = state; }
function Sys$HistoryEventArgs$get_state() { if (arguments.length !== 0) throw Error.parameterCount(); return this._state; }
Sys.HistoryEventArgs.prototype = { get_state: Sys$HistoryEventArgs$get_state }
Sys.HistoryEventArgs.registerClass('Sys.HistoryEventArgs', Sys.EventArgs); Sys._Application = function Sys$_Application() { if (arguments.length !== 0) throw Error.parameterCount(); Sys._Application.initializeBase(this); this._disposableObjects = []; this._components = {}; this._createdComponents = []; this._secondPassComponents = []; this._appLoadHandler = null; this._beginRequestHandler = null; this._clientId = null; this._currentEntry = ''; this._endRequestHandler = null; this._history = null; this._enableHistory = false; this._historyEnabledInScriptManager = false; this._historyFrame = null; this._historyInitialized = false; this._historyInitialLength = 0; this._historyLength = 0; this._historyPointIsNew = false; this._ignoreTimer = false; this._initialState = null; this._state = {}; this._timerCookie = 0; this._timerHandler = null; this._uniqueId = null; this._unloadHandlerDelegate = Function.createDelegate(this, this._unloadHandler); this._loadHandlerDelegate = Function.createDelegate(this, this._loadHandler); Sys.UI.DomEvent.addHandler(window, "unload", this._unloadHandlerDelegate); Sys.UI.DomEvent.addHandler(window, "load", this._loadHandlerDelegate); }
function Sys$_Application$get_isCreatingComponents() { if (arguments.length !== 0) throw Error.parameterCount(); return this._creatingComponents; }
function Sys$_Application$get_stateString() {
    if (arguments.length !== 0) throw Error.parameterCount(); var hash = window.location.hash; if (this._isSafari2()) { var history = this._getHistory(); if (history) { hash = history[window.history.length - this._historyInitialLength]; } }
    if ((hash.length > 0) && (hash.charAt(0) === '#')) { hash = hash.substring(1); }
    if (Sys.Browser.agent === Sys.Browser.Firefox) { hash = this._serializeState(this._deserializeState(hash, true)); }
    return hash;
}
function Sys$_Application$get_enableHistory() { if (arguments.length !== 0) throw Error.parameterCount(); return this._enableHistory; }
function Sys$_Application$set_enableHistory(value) {
    var e = Function._validateParams(arguments, [{ name: "value", type: Boolean }]); if (e) throw e; if (this._initialized && !this._initializing) { throw Error.invalidOperation(Sys.Res.historyCannotEnableHistory); }
    else if (this._historyEnabledInScriptManager && !value) { throw Error.invalidOperation(Sys.Res.invalidHistorySettingCombination); }
    this._enableHistory = value;
}
function Sys$_Application$add_init(handler) {
    var e = Function._validateParams(arguments, [{ name: "handler", type: Function }]); if (e) throw e; if (this._initialized) { handler(this, Sys.EventArgs.Empty); }
    else { this.get_events().addHandler("init", handler); }
}
function Sys$_Application$remove_init(handler) { var e = Function._validateParams(arguments, [{ name: "handler", type: Function }]); if (e) throw e; this.get_events().removeHandler("init", handler); }
function Sys$_Application$add_load(handler) { var e = Function._validateParams(arguments, [{ name: "handler", type: Function }]); if (e) throw e; this.get_events().addHandler("load", handler); }
function Sys$_Application$remove_load(handler) { var e = Function._validateParams(arguments, [{ name: "handler", type: Function }]); if (e) throw e; this.get_events().removeHandler("load", handler); }
function Sys$_Application$add_navigate(handler) { var e = Function._validateParams(arguments, [{ name: "handler", type: Function }]); if (e) throw e; this.get_events().addHandler("navigate", handler); }
function Sys$_Application$remove_navigate(handler) { var e = Function._validateParams(arguments, [{ name: "handler", type: Function }]); if (e) throw e; this.get_events().removeHandler("navigate", handler); }
function Sys$_Application$add_unload(handler) { var e = Function._validateParams(arguments, [{ name: "handler", type: Function }]); if (e) throw e; this.get_events().addHandler("unload", handler); }
function Sys$_Application$remove_unload(handler) { var e = Function._validateParams(arguments, [{ name: "handler", type: Function }]); if (e) throw e; this.get_events().removeHandler("unload", handler); }
function Sys$_Application$addComponent(component) { var e = Function._validateParams(arguments, [{ name: "component", type: Sys.Component }]); if (e) throw e; var id = component.get_id(); if (!id) throw Error.invalidOperation(Sys.Res.cantAddWithoutId); if (typeof (this._components[id]) !== 'undefined') throw Error.invalidOperation(String.format(Sys.Res.appDuplicateComponent, id)); this._components[id] = component; }
function Sys$_Application$addHistoryPoint(state, title) {
    var e = Function._validateParams(arguments, [{ name: "state", type: Object }, { name: "title", type: String, mayBeNull: true, optional: true }]); if (e) throw e; if (!this._enableHistory) throw Error.invalidOperation(Sys.Res.historyCannotAddHistoryPointWithHistoryDisabled); for (var n in state) { var v = state[n]; var t = typeof (v); if ((v !== null) && ((t === 'object') || (t === 'function') || (t === 'undefined'))) { throw Error.argument('state', Sys.Res.stateMustBeStringDictionary); } }
    this._ensureHistory(); var initialState = this._state; for (var key in state) {
        var value = state[key]; if (value === null) { if (typeof (initialState[key]) !== 'undefined') { delete initialState[key]; } }
        else { initialState[key] = value; }
    }
    var entry = this._serializeState(initialState); this._historyPointIsNew = true; this._setState(entry, title); this._raiseNavigate();
}
function Sys$_Application$beginCreateComponents() { if (arguments.length !== 0) throw Error.parameterCount(); this._creatingComponents = true; }
function Sys$_Application$dispose() {
    if (arguments.length !== 0) throw Error.parameterCount(); if (!this._disposing) {
        this._disposing = true; if (this._timerCookie) { window.clearTimeout(this._timerCookie); delete this._timerCookie; }
        if (this._endRequestHandler) { Sys.WebForms.PageRequestManager.getInstance().remove_endRequest(this._endRequestHandler); delete this._endRequestHandler; }
        if (this._beginRequestHandler) { Sys.WebForms.PageRequestManager.getInstance().remove_beginRequest(this._beginRequestHandler); delete this._beginRequestHandler; }
        if (window.pageUnload) { window.pageUnload(this, Sys.EventArgs.Empty); }
        var unloadHandler = this.get_events().getHandler("unload"); if (unloadHandler) { unloadHandler(this, Sys.EventArgs.Empty); }
        var disposableObjects = Array.clone(this._disposableObjects); for (var i = 0, l = disposableObjects.length; i < l; i++) { disposableObjects[i].dispose(); }
        Array.clear(this._disposableObjects); Sys.UI.DomEvent.removeHandler(window, "unload", this._unloadHandlerDelegate); if (this._loadHandlerDelegate) { Sys.UI.DomEvent.removeHandler(window, "load", this._loadHandlerDelegate); this._loadHandlerDelegate = null; }
        var sl = Sys._ScriptLoader.getInstance(); if (sl) { sl.dispose(); }
        Sys._Application.callBaseMethod(this, 'dispose');
    }
}
function Sys$_Application$endCreateComponents() {
    if (arguments.length !== 0) throw Error.parameterCount(); var components = this._secondPassComponents; for (var i = 0, l = components.length; i < l; i++) { var component = components[i].component; Sys$Component$_setReferences(component, components[i].references); component.endUpdate(); }
    this._secondPassComponents = []; this._creatingComponents = false;
}
function Sys$_Application$findComponent(id, parent) { var e = Function._validateParams(arguments, [{ name: "id", type: String }, { name: "parent", mayBeNull: true, optional: true }]); if (e) throw e; return (parent ? ((Sys.IContainer.isInstanceOfType(parent)) ? parent.findComponent(id) : parent[id] || null) : Sys.Application._components[id] || null); }
function Sys$_Application$getComponents() {
    if (arguments.length !== 0) throw Error.parameterCount(); var res = []; var components = this._components; for (var name in components) { res[res.length] = components[name]; }
    return res;
}
function Sys$_Application$initialize() { if (arguments.length !== 0) throw Error.parameterCount(); if (!this._initialized && !this._initializing) { this._initializing = true; window.setTimeout(Function.createDelegate(this, this._doInitialize), 0); } }
function Sys$_Application$notifyScriptLoaded() { if (arguments.length !== 0) throw Error.parameterCount(); var sl = Sys._ScriptLoader.getInstance(); if (sl) { sl.notifyScriptLoaded(); } }
function Sys$_Application$registerDisposableObject(object) { var e = Function._validateParams(arguments, [{ name: "object", type: Sys.IDisposable }]); if (e) throw e; if (!this._disposing) { this._disposableObjects[this._disposableObjects.length] = object; } }
function Sys$_Application$raiseLoad() {
    if (arguments.length !== 0) throw Error.parameterCount(); var h = this.get_events().getHandler("load"); var args = new Sys.ApplicationLoadEventArgs(Array.clone(this._createdComponents), !this._initializing); if (h) { h(this, args); }
    if (window.pageLoad) { window.pageLoad(this, args); }
    this._createdComponents = [];
}
function Sys$_Application$removeComponent(component) { var e = Function._validateParams(arguments, [{ name: "component", type: Sys.Component }]); if (e) throw e; var id = component.get_id(); if (id) delete this._components[id]; }
function Sys$_Application$setServerId(clientId, uniqueId) { var e = Function._validateParams(arguments, [{ name: "clientId", type: String }, { name: "uniqueId", type: String }]); if (e) throw e; this._clientId = clientId; this._uniqueId = uniqueId; }
function Sys$_Application$setServerState(value) { var e = Function._validateParams(arguments, [{ name: "value", type: String }]); if (e) throw e; this._ensureHistory(); this._state.__s = value; this._updateHiddenField(value); }
function Sys$_Application$unregisterDisposableObject(object) { var e = Function._validateParams(arguments, [{ name: "object", type: Sys.IDisposable }]); if (e) throw e; if (!this._disposing) { Array.remove(this._disposableObjects, object); } }
function Sys$_Application$_addComponentToSecondPass(component, references) { this._secondPassComponents[this._secondPassComponents.length] = { component: component, references: references }; }
function Sys$_Application$_deserializeState(entry, skipDecodeUri) {
    var result = {}; entry = entry || ''; var serverSeparator = entry.indexOf('&&'); if ((serverSeparator !== -1) && (serverSeparator + 2 < entry.length)) { result.__s = entry.substr(serverSeparator + 2); entry = entry.substr(0, serverSeparator); }
    var tokens = entry.split('&'); for (var i = 0, l = tokens.length; i < l; i++) { var token = tokens[i]; var equal = token.indexOf('='); if ((equal !== -1) && (equal + 1 < token.length)) { var name = token.substr(0, equal); var value = token.substr(equal + 1); result[name] = skipDecodeUri ? value : decodeURIComponent(value); } }
    return result;
}
function Sys$_Application$_doInitialize() {
    Sys._Application.callBaseMethod(this, 'initialize'); var handler = this.get_events().getHandler("init"); if (handler) { this.beginCreateComponents(); handler(this, Sys.EventArgs.Empty); this.endCreateComponents(); }
    if (Sys.WebForms) { this._beginRequestHandler = Function.createDelegate(this, this._onPageRequestManagerBeginRequest); Sys.WebForms.PageRequestManager.getInstance().add_beginRequest(this._beginRequestHandler); this._endRequestHandler = Function.createDelegate(this, this._onPageRequestManagerEndRequest); Sys.WebForms.PageRequestManager.getInstance().add_endRequest(this._endRequestHandler); }
    var loadedEntry = this.get_stateString(); if (loadedEntry !== this._currentEntry) { this._navigate(loadedEntry); }
    this.raiseLoad(); this._initializing = false;
}
function Sys$_Application$_enableHistoryInScriptManager() { this._enableHistory = true; this._historyEnabledInScriptManager = true; }
function Sys$_Application$_ensureHistory() {
    if (!this._historyInitialized && this._enableHistory) {
        if ((Sys.Browser.agent === Sys.Browser.InternetExplorer) && (Sys.Browser.documentMode < 8)) { this._historyFrame = document.getElementById('__historyFrame'); if (!this._historyFrame) throw Error.invalidOperation(Sys.Res.historyMissingFrame); this._ignoreIFrame = true; }
        if (this._isSafari2()) { var historyElement = document.getElementById('__history'); if (!historyElement) throw Error.invalidOperation(Sys.Res.historyMissingHiddenInput); this._setHistory([window.location.hash]); this._historyInitialLength = window.history.length; }
        this._timerHandler = Function.createDelegate(this, this._onIdle); this._timerCookie = window.setTimeout(this._timerHandler, 100); try { this._initialState = this._deserializeState(this.get_stateString()); } catch (e) { }
        this._historyInitialized = true;
    }
}
function Sys$_Application$_getHistory() { var historyElement = document.getElementById('__history'); if (!historyElement) return ''; var v = historyElement.value; return v ? Sys.Serialization.JavaScriptSerializer.deserialize(v, true) : ''; }
function Sys$_Application$_isSafari2() { return (Sys.Browser.agent === Sys.Browser.Safari) && (Sys.Browser.version <= 419.3); }
function Sys$_Application$_loadHandler() {
    if (this._loadHandlerDelegate) { Sys.UI.DomEvent.removeHandler(window, "load", this._loadHandlerDelegate); this._loadHandlerDelegate = null; }
    this.initialize();
}
function Sys$_Application$_navigate(entry) {
    this._ensureHistory(); var state = this._deserializeState(entry); if (this._uniqueId) { var oldServerEntry = this._state.__s || ''; var newServerEntry = state.__s || ''; if (newServerEntry !== oldServerEntry) { this._updateHiddenField(newServerEntry); __doPostBack(this._uniqueId, newServerEntry); this._state = state; return; } }
    this._setState(entry); this._state = state; this._raiseNavigate();
}
function Sys$_Application$_onIdle() {
    delete this._timerCookie; var entry = this.get_stateString(); if (entry !== this._currentEntry) { if (!this._ignoreTimer) { this._historyPointIsNew = false; this._navigate(entry); this._historyLength = window.history.length; } }
    else { this._ignoreTimer = false; }
    this._timerCookie = window.setTimeout(this._timerHandler, 100);
}
function Sys$_Application$_onIFrameLoad(entry) {
    this._ensureHistory(); if (!this._ignoreIFrame) { this._historyPointIsNew = false; this._navigate(entry); }
    this._ignoreIFrame = false;
}
function Sys$_Application$_onPageRequestManagerBeginRequest(sender, args) { this._ignoreTimer = true; }
function Sys$_Application$_onPageRequestManagerEndRequest(sender, args) {
    var dataItem = args.get_dataItems()[this._clientId]; var eventTarget = document.getElementById("__EVENTTARGET"); if (eventTarget && eventTarget.value === this._uniqueId) { eventTarget.value = ''; }
    if (typeof (dataItem) !== 'undefined') { this.setServerState(dataItem); this._historyPointIsNew = true; }
    else { this._ignoreTimer = false; }
    var entry = this._serializeState(this._state); if (entry !== this._currentEntry) { this._ignoreTimer = true; this._setState(entry); this._raiseNavigate(); }
}
function Sys$_Application$_raiseNavigate() {
    var h = this.get_events().getHandler("navigate"); var stateClone = {}; for (var key in this._state) { if (key !== '__s') { stateClone[key] = this._state[key]; } }
    var args = new Sys.HistoryEventArgs(stateClone); if (h) { h(this, args); }
}
function Sys$_Application$_serializeState(state) {
    var serialized = []; for (var key in state) {
        var value = state[key]; if (key === '__s') { var serverState = value; }
        else { if (key.indexOf('=') !== -1) throw Error.argument('state', Sys.Res.stateFieldNameInvalid); serialized[serialized.length] = key + '=' + encodeURIComponent(value); }
    }
    return serialized.join('&') + (serverState ? '&&' + serverState : '');
}
function Sys$_Application$_setHistory(historyArray) { var historyElement = document.getElementById('__history'); if (historyElement) { historyElement.value = Sys.Serialization.JavaScriptSerializer.serialize(historyArray); } }
function Sys$_Application$_setState(entry, title) {
    entry = entry || ''; if (entry !== this._currentEntry) {
        if (window.theForm) { var action = window.theForm.action; var hashIndex = action.indexOf('#'); window.theForm.action = ((hashIndex !== -1) ? action.substring(0, hashIndex) : action) + '#' + entry; }
        if (this._historyFrame && this._historyPointIsNew) {
            this._ignoreIFrame = true; this._historyPointIsNew = false; var frameDoc = this._historyFrame.contentWindow.document; frameDoc.open("javascript:'<html></html>'"); frameDoc.write("<html><head><title>" + (title || document.title) +
            "</title><scri" + "pt type=\"text/javascript\">parent.Sys.Application._onIFrameLoad('" +
            entry + "');</scri" + "pt></head><body></body></html>"); frameDoc.close();
        }
        this._ignoreTimer = false; var currentHash = this.get_stateString(); this._currentEntry = entry; if (entry !== currentHash) {
            var loc = document.location; if (loc.href.length - loc.hash.length + entry.length > 1024) { throw Error.invalidOperation(Sys.Res.urlMustBeLessThan1024chars); }
            if (this._isSafari2()) { var history = this._getHistory(); history[window.history.length - this._historyInitialLength + 1] = entry; this._setHistory(history); this._historyLength = window.history.length + 1; var form = document.createElement('form'); form.method = 'get'; form.action = '#' + entry; document.appendChild(form); form.submit(); document.removeChild(form); }
            else { window.location.hash = entry; }
            if ((typeof (title) !== 'undefined') && (title !== null)) { document.title = title; }
        }
    }
}
function Sys$_Application$_unloadHandler(event) { this.dispose(); }
function Sys$_Application$_updateHiddenField(value) { if (this._clientId) { var serverStateField = document.getElementById(this._clientId); if (serverStateField) { serverStateField.value = value; } } }
Sys._Application.prototype = { _creatingComponents: false, _disposing: false, get_isCreatingComponents: Sys$_Application$get_isCreatingComponents, get_stateString: Sys$_Application$get_stateString, get_enableHistory: Sys$_Application$get_enableHistory, set_enableHistory: Sys$_Application$set_enableHistory, add_init: Sys$_Application$add_init, remove_init: Sys$_Application$remove_init, add_load: Sys$_Application$add_load, remove_load: Sys$_Application$remove_load, add_navigate: Sys$_Application$add_navigate, remove_navigate: Sys$_Application$remove_navigate, add_unload: Sys$_Application$add_unload, remove_unload: Sys$_Application$remove_unload, addComponent: Sys$_Application$addComponent, addHistoryPoint: Sys$_Application$addHistoryPoint, beginCreateComponents: Sys$_Application$beginCreateComponents, dispose: Sys$_Application$dispose, endCreateComponents: Sys$_Application$endCreateComponents, findComponent: Sys$_Application$findComponent, getComponents: Sys$_Application$getComponents, initialize: Sys$_Application$initialize, notifyScriptLoaded: Sys$_Application$notifyScriptLoaded, registerDisposableObject: Sys$_Application$registerDisposableObject, raiseLoad: Sys$_Application$raiseLoad, removeComponent: Sys$_Application$removeComponent, setServerId: Sys$_Application$setServerId, setServerState: Sys$_Application$setServerState, unregisterDisposableObject: Sys$_Application$unregisterDisposableObject, _addComponentToSecondPass: Sys$_Application$_addComponentToSecondPass, _deserializeState: Sys$_Application$_deserializeState, _doInitialize: Sys$_Application$_doInitialize, _enableHistoryInScriptManager: Sys$_Application$_enableHistoryInScriptManager, _ensureHistory: Sys$_Application$_ensureHistory, _getHistory: Sys$_Application$_getHistory, _isSafari2: Sys$_Application$_isSafari2, _loadHandler: Sys$_Application$_loadHandler, _navigate: Sys$_Application$_navigate, _onIdle: Sys$_Application$_onIdle, _onIFrameLoad: Sys$_Application$_onIFrameLoad, _onPageRequestManagerBeginRequest: Sys$_Application$_onPageRequestManagerBeginRequest, _onPageRequestManagerEndRequest: Sys$_Application$_onPageRequestManagerEndRequest, _raiseNavigate: Sys$_Application$_raiseNavigate, _serializeState: Sys$_Application$_serializeState, _setHistory: Sys$_Application$_setHistory, _setState: Sys$_Application$_setState, _unloadHandler: Sys$_Application$_unloadHandler, _updateHiddenField: Sys$_Application$_updateHiddenField }
Sys._Application.registerClass('Sys._Application', Sys.Component, Sys.IContainer); Sys.Application = new Sys._Application(); var $find = Sys.Application.findComponent; Type.registerNamespace('Sys.Net'); Sys.Net.WebRequestExecutor = function Sys$Net$WebRequestExecutor() { if (arguments.length !== 0) throw Error.parameterCount(); this._webRequest = null; this._resultObject = null; }
function Sys$Net$WebRequestExecutor$get_webRequest() { if (arguments.length !== 0) throw Error.parameterCount(); return this._webRequest; }
function Sys$Net$WebRequestExecutor$_set_webRequest(value) {
    if (this.get_started()) { throw Error.invalidOperation(String.format(Sys.Res.cannotCallOnceStarted, 'set_webRequest')); }
    this._webRequest = value;
}
function Sys$Net$WebRequestExecutor$get_started() { if (arguments.length !== 0) throw Error.parameterCount(); throw Error.notImplemented(); }
function Sys$Net$WebRequestExecutor$get_responseAvailable() { if (arguments.length !== 0) throw Error.parameterCount(); throw Error.notImplemented(); }
function Sys$Net$WebRequestExecutor$get_timedOut() { if (arguments.length !== 0) throw Error.parameterCount(); throw Error.notImplemented(); }
function Sys$Net$WebRequestExecutor$get_aborted() { if (arguments.length !== 0) throw Error.parameterCount(); throw Error.notImplemented(); }
function Sys$Net$WebRequestExecutor$get_responseData() { if (arguments.length !== 0) throw Error.parameterCount(); throw Error.notImplemented(); }
function Sys$Net$WebRequestExecutor$get_statusCode() { if (arguments.length !== 0) throw Error.parameterCount(); throw Error.notImplemented(); }
function Sys$Net$WebRequestExecutor$get_statusText() { if (arguments.length !== 0) throw Error.parameterCount(); throw Error.notImplemented(); }
function Sys$Net$WebRequestExecutor$get_xml() { if (arguments.length !== 0) throw Error.parameterCount(); throw Error.notImplemented(); }
function Sys$Net$WebRequestExecutor$get_object() {
    if (arguments.length !== 0) throw Error.parameterCount(); if (!this._resultObject) { this._resultObject = Sys.Serialization.JavaScriptSerializer.deserialize(this.get_responseData()); }
    return this._resultObject;
}
function Sys$Net$WebRequestExecutor$executeRequest() { if (arguments.length !== 0) throw Error.parameterCount(); throw Error.notImplemented(); }
function Sys$Net$WebRequestExecutor$abort() { if (arguments.length !== 0) throw Error.parameterCount(); throw Error.notImplemented(); }
function Sys$Net$WebRequestExecutor$getResponseHeader(header) { var e = Function._validateParams(arguments, [{ name: "header", type: String }]); if (e) throw e; throw Error.notImplemented(); }
function Sys$Net$WebRequestExecutor$getAllResponseHeaders() { if (arguments.length !== 0) throw Error.parameterCount(); throw Error.notImplemented(); }
Sys.Net.WebRequestExecutor.prototype = { get_webRequest: Sys$Net$WebRequestExecutor$get_webRequest, _set_webRequest: Sys$Net$WebRequestExecutor$_set_webRequest, get_started: Sys$Net$WebRequestExecutor$get_started, get_responseAvailable: Sys$Net$WebRequestExecutor$get_responseAvailable, get_timedOut: Sys$Net$WebRequestExecutor$get_timedOut, get_aborted: Sys$Net$WebRequestExecutor$get_aborted, get_responseData: Sys$Net$WebRequestExecutor$get_responseData, get_statusCode: Sys$Net$WebRequestExecutor$get_statusCode, get_statusText: Sys$Net$WebRequestExecutor$get_statusText, get_xml: Sys$Net$WebRequestExecutor$get_xml, get_object: Sys$Net$WebRequestExecutor$get_object, executeRequest: Sys$Net$WebRequestExecutor$executeRequest, abort: Sys$Net$WebRequestExecutor$abort, getResponseHeader: Sys$Net$WebRequestExecutor$getResponseHeader, getAllResponseHeaders: Sys$Net$WebRequestExecutor$getAllResponseHeaders }
Sys.Net.WebRequestExecutor.registerClass('Sys.Net.WebRequestExecutor'); Sys.Net.XMLDOM = function Sys$Net$XMLDOM(markup) {
    var e = Function._validateParams(arguments, [{ name: "markup", type: String }]); if (e) throw e; if (!window.DOMParser) {
        var progIDs = ['Msxml2.DOMDocument.3.0', 'Msxml2.DOMDocument']; for (var i = 0, l = progIDs.length; i < l; i++) {
            try { var xmlDOM = new ActiveXObject(progIDs[i]); xmlDOM.async = false; xmlDOM.loadXML(markup); xmlDOM.setProperty('SelectionLanguage', 'XPath'); return xmlDOM; }
            catch (ex) { }
        }
    }
    else {
        try { var domParser = new window.DOMParser(); return domParser.parseFromString(markup, 'text/xml'); }
        catch (ex) { }
    }
    return null;
}
Sys.Net.XMLHttpExecutor = function Sys$Net$XMLHttpExecutor() {
    if (arguments.length !== 0) throw Error.parameterCount(); Sys.Net.XMLHttpExecutor.initializeBase(this); var _this = this; this._xmlHttpRequest = null; this._webRequest = null; this._responseAvailable = false; this._timedOut = false; this._timer = null; this._aborted = false; this._started = false; this._onReadyStateChange = (function () {
        if (_this._xmlHttpRequest.readyState === 4) {
            try { if (typeof (_this._xmlHttpRequest.status) === "undefined") { return; } }
            catch (ex) { return; }
            _this._clearTimer(); _this._responseAvailable = true; try { _this._webRequest.completed(Sys.EventArgs.Empty); }
            finally { if (_this._xmlHttpRequest != null) { _this._xmlHttpRequest.onreadystatechange = Function.emptyMethod; _this._xmlHttpRequest = null; } }
        }
    }); this._clearTimer = (function () { if (_this._timer != null) { window.clearTimeout(_this._timer); _this._timer = null; } }); this._onTimeout = (function () { if (!_this._responseAvailable) { _this._clearTimer(); _this._timedOut = true; _this._xmlHttpRequest.onreadystatechange = Function.emptyMethod; _this._xmlHttpRequest.abort(); _this._webRequest.completed(Sys.EventArgs.Empty); _this._xmlHttpRequest = null; } });
}
function Sys$Net$XMLHttpExecutor$get_timedOut() { if (arguments.length !== 0) throw Error.parameterCount(); return this._timedOut; }
function Sys$Net$XMLHttpExecutor$get_started() { if (arguments.length !== 0) throw Error.parameterCount(); return this._started; }
function Sys$Net$XMLHttpExecutor$get_responseAvailable() { if (arguments.length !== 0) throw Error.parameterCount(); return this._responseAvailable; }
function Sys$Net$XMLHttpExecutor$get_aborted() { if (arguments.length !== 0) throw Error.parameterCount(); return this._aborted; }
function Sys$Net$XMLHttpExecutor$executeRequest() {
    if (arguments.length !== 0) throw Error.parameterCount(); this._webRequest = this.get_webRequest(); if (this._started) { throw Error.invalidOperation(String.format(Sys.Res.cannotCallOnceStarted, 'executeRequest')); }
    if (this._webRequest === null) { throw Error.invalidOperation(Sys.Res.nullWebRequest); }
    var body = this._webRequest.get_body(); var headers = this._webRequest.get_headers(); this._xmlHttpRequest = new XMLHttpRequest(); this._xmlHttpRequest.onreadystatechange = this._onReadyStateChange; var verb = this._webRequest.get_httpVerb(); this._xmlHttpRequest.open(verb, this._webRequest.getResolvedUrl(), true); if (headers) {
        for (var header in headers) {
            var val = headers[header]; if (typeof (val) !== "function")
                this._xmlHttpRequest.setRequestHeader(header, val);
        }
    }
    if (verb.toLowerCase() === "post") {
        if ((headers === null) || !headers['Content-Type']) { this._xmlHttpRequest.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=utf-8'); }
        if (!body) { body = ""; }
    }
    var timeout = this._webRequest.get_timeout(); if (timeout > 0) { this._timer = window.setTimeout(Function.createDelegate(this, this._onTimeout), timeout); }
    this._xmlHttpRequest.send(body); this._started = true;
}
function Sys$Net$XMLHttpExecutor$getResponseHeader(header) {
    var e = Function._validateParams(arguments, [{ name: "header", type: String }]); if (e) throw e; if (!this._responseAvailable) { throw Error.invalidOperation(String.format(Sys.Res.cannotCallBeforeResponse, 'getResponseHeader')); }
    if (!this._xmlHttpRequest) { throw Error.invalidOperation(String.format(Sys.Res.cannotCallOutsideHandler, 'getResponseHeader')); }
    var result; try { result = this._xmlHttpRequest.getResponseHeader(header); } catch (e) { }
    if (!result) result = ""; return result;
}
function Sys$Net$XMLHttpExecutor$getAllResponseHeaders() {
    if (arguments.length !== 0) throw Error.parameterCount(); if (!this._responseAvailable) { throw Error.invalidOperation(String.format(Sys.Res.cannotCallBeforeResponse, 'getAllResponseHeaders')); }
    if (!this._xmlHttpRequest) { throw Error.invalidOperation(String.format(Sys.Res.cannotCallOutsideHandler, 'getAllResponseHeaders')); }
    return this._xmlHttpRequest.getAllResponseHeaders();
}
function Sys$Net$XMLHttpExecutor$get_responseData() {
    if (arguments.length !== 0) throw Error.parameterCount(); if (!this._responseAvailable) { throw Error.invalidOperation(String.format(Sys.Res.cannotCallBeforeResponse, 'get_responseData')); }
    if (!this._xmlHttpRequest) { throw Error.invalidOperation(String.format(Sys.Res.cannotCallOutsideHandler, 'get_responseData')); }
    return this._xmlHttpRequest.responseText;
}
function Sys$Net$XMLHttpExecutor$get_statusCode() {
    if (arguments.length !== 0) throw Error.parameterCount(); if (!this._responseAvailable) { throw Error.invalidOperation(String.format(Sys.Res.cannotCallBeforeResponse, 'get_statusCode')); }
    if (!this._xmlHttpRequest) { throw Error.invalidOperation(String.format(Sys.Res.cannotCallOutsideHandler, 'get_statusCode')); }
    var result = 0; try { result = this._xmlHttpRequest.status; }
    catch (ex) { }
    return result;
}
function Sys$Net$XMLHttpExecutor$get_statusText() {
    if (arguments.length !== 0) throw Error.parameterCount(); if (!this._responseAvailable) { throw Error.invalidOperation(String.format(Sys.Res.cannotCallBeforeResponse, 'get_statusText')); }
    if (!this._xmlHttpRequest) { throw Error.invalidOperation(String.format(Sys.Res.cannotCallOutsideHandler, 'get_statusText')); }
    return this._xmlHttpRequest.statusText;
}
function Sys$Net$XMLHttpExecutor$get_xml() {
    if (arguments.length !== 0) throw Error.parameterCount(); if (!this._responseAvailable) { throw Error.invalidOperation(String.format(Sys.Res.cannotCallBeforeResponse, 'get_xml')); }
    if (!this._xmlHttpRequest) { throw Error.invalidOperation(String.format(Sys.Res.cannotCallOutsideHandler, 'get_xml')); }
    var xml = this._xmlHttpRequest.responseXML; if (!xml || !xml.documentElement) {
        xml = Sys.Net.XMLDOM(this._xmlHttpRequest.responseText); if (!xml || !xml.documentElement)
            return null;
    }
    else if (navigator.userAgent.indexOf('MSIE') !== -1) { xml.setProperty('SelectionLanguage', 'XPath'); }
    if (xml.documentElement.namespaceURI === "http://www.mozilla.org/newlayout/xml/parsererror.xml" && xml.documentElement.tagName === "parsererror") { return null; }
    if (xml.documentElement.firstChild && xml.documentElement.firstChild.tagName === "parsererror") { return null; }
    return xml;
}
function Sys$Net$XMLHttpExecutor$abort() {
    if (arguments.length !== 0) throw Error.parameterCount(); if (!this._started) { throw Error.invalidOperation(Sys.Res.cannotAbortBeforeStart); }
    if (this._aborted || this._responseAvailable || this._timedOut)
        return; this._aborted = true; this._clearTimer(); if (this._xmlHttpRequest && !this._responseAvailable) { this._xmlHttpRequest.onreadystatechange = Function.emptyMethod; this._xmlHttpRequest.abort(); this._xmlHttpRequest = null; this._webRequest.completed(Sys.EventArgs.Empty); }
}
Sys.Net.XMLHttpExecutor.prototype = { get_timedOut: Sys$Net$XMLHttpExecutor$get_timedOut, get_started: Sys$Net$XMLHttpExecutor$get_started, get_responseAvailable: Sys$Net$XMLHttpExecutor$get_responseAvailable, get_aborted: Sys$Net$XMLHttpExecutor$get_aborted, executeRequest: Sys$Net$XMLHttpExecutor$executeRequest, getResponseHeader: Sys$Net$XMLHttpExecutor$getResponseHeader, getAllResponseHeaders: Sys$Net$XMLHttpExecutor$getAllResponseHeaders, get_responseData: Sys$Net$XMLHttpExecutor$get_responseData, get_statusCode: Sys$Net$XMLHttpExecutor$get_statusCode, get_statusText: Sys$Net$XMLHttpExecutor$get_statusText, get_xml: Sys$Net$XMLHttpExecutor$get_xml, abort: Sys$Net$XMLHttpExecutor$abort }
Sys.Net.XMLHttpExecutor.registerClass('Sys.Net.XMLHttpExecutor', Sys.Net.WebRequestExecutor); Sys.Net._WebRequestManager = function Sys$Net$_WebRequestManager() { if (arguments.length !== 0) throw Error.parameterCount(); this._defaultTimeout = 0; this._defaultExecutorType = "Sys.Net.XMLHttpExecutor"; }
function Sys$Net$_WebRequestManager$add_invokingRequest(handler) { var e = Function._validateParams(arguments, [{ name: "handler", type: Function }]); if (e) throw e; this._get_eventHandlerList().addHandler("invokingRequest", handler); }
function Sys$Net$_WebRequestManager$remove_invokingRequest(handler) { var e = Function._validateParams(arguments, [{ name: "handler", type: Function }]); if (e) throw e; this._get_eventHandlerList().removeHandler("invokingRequest", handler); }
function Sys$Net$_WebRequestManager$add_completedRequest(handler) { var e = Function._validateParams(arguments, [{ name: "handler", type: Function }]); if (e) throw e; this._get_eventHandlerList().addHandler("completedRequest", handler); }
function Sys$Net$_WebRequestManager$remove_completedRequest(handler) { var e = Function._validateParams(arguments, [{ name: "handler", type: Function }]); if (e) throw e; this._get_eventHandlerList().removeHandler("completedRequest", handler); }
function Sys$Net$_WebRequestManager$_get_eventHandlerList() {
    if (!this._events) { this._events = new Sys.EventHandlerList(); }
    return this._events;
}
function Sys$Net$_WebRequestManager$get_defaultTimeout() { if (arguments.length !== 0) throw Error.parameterCount(); return this._defaultTimeout; }
function Sys$Net$_WebRequestManager$set_defaultTimeout(value) {
    var e = Function._validateParams(arguments, [{ name: "value", type: Number }]); if (e) throw e; if (value < 0) { throw Error.argumentOutOfRange("value", value, Sys.Res.invalidTimeout); }
    this._defaultTimeout = value;
}
function Sys$Net$_WebRequestManager$get_defaultExecutorType() { if (arguments.length !== 0) throw Error.parameterCount(); return this._defaultExecutorType; }
function Sys$Net$_WebRequestManager$set_defaultExecutorType(value) { var e = Function._validateParams(arguments, [{ name: "value", type: String }]); if (e) throw e; this._defaultExecutorType = value; }
function Sys$Net$_WebRequestManager$executeRequest(webRequest) {
    var e = Function._validateParams(arguments, [{ name: "webRequest", type: Sys.Net.WebRequest }]); if (e) throw e; var executor = webRequest.get_executor(); if (!executor) {
        var failed = false; try { var executorType = eval(this._defaultExecutorType); executor = new executorType(); } catch (e) { failed = true; }
        if (failed || !Sys.Net.WebRequestExecutor.isInstanceOfType(executor) || !executor) { throw Error.argument("defaultExecutorType", String.format(Sys.Res.invalidExecutorType, this._defaultExecutorType)); }
        webRequest.set_executor(executor);
    }
    if (executor.get_aborted()) { return; }
    var evArgs = new Sys.Net.NetworkRequestEventArgs(webRequest); var handler = this._get_eventHandlerList().getHandler("invokingRequest"); if (handler) { handler(this, evArgs); }
    if (!evArgs.get_cancel()) { executor.executeRequest(); }
}
Sys.Net._WebRequestManager.prototype = { add_invokingRequest: Sys$Net$_WebRequestManager$add_invokingRequest, remove_invokingRequest: Sys$Net$_WebRequestManager$remove_invokingRequest, add_completedRequest: Sys$Net$_WebRequestManager$add_completedRequest, remove_completedRequest: Sys$Net$_WebRequestManager$remove_completedRequest, _get_eventHandlerList: Sys$Net$_WebRequestManager$_get_eventHandlerList, get_defaultTimeout: Sys$Net$_WebRequestManager$get_defaultTimeout, set_defaultTimeout: Sys$Net$_WebRequestManager$set_defaultTimeout, get_defaultExecutorType: Sys$Net$_WebRequestManager$get_defaultExecutorType, set_defaultExecutorType: Sys$Net$_WebRequestManager$set_defaultExecutorType, executeRequest: Sys$Net$_WebRequestManager$executeRequest }
Sys.Net._WebRequestManager.registerClass('Sys.Net._WebRequestManager'); Sys.Net.WebRequestManager = new Sys.Net._WebRequestManager(); Sys.Net.NetworkRequestEventArgs = function Sys$Net$NetworkRequestEventArgs(webRequest) { var e = Function._validateParams(arguments, [{ name: "webRequest", type: Sys.Net.WebRequest }]); if (e) throw e; Sys.Net.NetworkRequestEventArgs.initializeBase(this); this._webRequest = webRequest; }
function Sys$Net$NetworkRequestEventArgs$get_webRequest() { if (arguments.length !== 0) throw Error.parameterCount(); return this._webRequest; }
Sys.Net.NetworkRequestEventArgs.prototype = { get_webRequest: Sys$Net$NetworkRequestEventArgs$get_webRequest }
Sys.Net.NetworkRequestEventArgs.registerClass('Sys.Net.NetworkRequestEventArgs', Sys.CancelEventArgs); Sys.Net.WebRequest = function Sys$Net$WebRequest() { if (arguments.length !== 0) throw Error.parameterCount(); this._url = ""; this._headers = {}; this._body = null; this._userContext = null; this._httpVerb = null; this._executor = null; this._invokeCalled = false; this._timeout = 0; }
function Sys$Net$WebRequest$add_completed(handler) { var e = Function._validateParams(arguments, [{ name: "handler", type: Function }]); if (e) throw e; this._get_eventHandlerList().addHandler("completed", handler); }
function Sys$Net$WebRequest$remove_completed(handler) { var e = Function._validateParams(arguments, [{ name: "handler", type: Function }]); if (e) throw e; this._get_eventHandlerList().removeHandler("completed", handler); }
function Sys$Net$WebRequest$completed(eventArgs) {
    var e = Function._validateParams(arguments, [{ name: "eventArgs", type: Sys.EventArgs }]); if (e) throw e; var handler = Sys.Net.WebRequestManager._get_eventHandlerList().getHandler("completedRequest"); if (handler) { handler(this._executor, eventArgs); }
    handler = this._get_eventHandlerList().getHandler("completed"); if (handler) { handler(this._executor, eventArgs); }
}
function Sys$Net$WebRequest$_get_eventHandlerList() {
    if (!this._events) { this._events = new Sys.EventHandlerList(); }
    return this._events;
}
function Sys$Net$WebRequest$get_url() { if (arguments.length !== 0) throw Error.parameterCount(); return this._url; }
function Sys$Net$WebRequest$set_url(value) { var e = Function._validateParams(arguments, [{ name: "value", type: String }]); if (e) throw e; this._url = value; }
function Sys$Net$WebRequest$get_headers() { if (arguments.length !== 0) throw Error.parameterCount(); return this._headers; }
function Sys$Net$WebRequest$get_httpVerb() {
    if (arguments.length !== 0) throw Error.parameterCount(); if (this._httpVerb === null) {
        if (this._body === null) { return "GET"; }
        return "POST";
    }
    return this._httpVerb;
}
function Sys$Net$WebRequest$set_httpVerb(value) {
    var e = Function._validateParams(arguments, [{ name: "value", type: String }]); if (e) throw e; if (value.length === 0) { throw Error.argument('value', Sys.Res.invalidHttpVerb); }
    this._httpVerb = value;
}
function Sys$Net$WebRequest$get_body() { if (arguments.length !== 0) throw Error.parameterCount(); return this._body; }
function Sys$Net$WebRequest$set_body(value) { var e = Function._validateParams(arguments, [{ name: "value", mayBeNull: true }]); if (e) throw e; this._body = value; }
function Sys$Net$WebRequest$get_userContext() { if (arguments.length !== 0) throw Error.parameterCount(); return this._userContext; }
function Sys$Net$WebRequest$set_userContext(value) { var e = Function._validateParams(arguments, [{ name: "value", mayBeNull: true }]); if (e) throw e; this._userContext = value; }
function Sys$Net$WebRequest$get_executor() { if (arguments.length !== 0) throw Error.parameterCount(); return this._executor; }
function Sys$Net$WebRequest$set_executor(value) {
    var e = Function._validateParams(arguments, [{ name: "value", type: Sys.Net.WebRequestExecutor }]); if (e) throw e; if (this._executor !== null && this._executor.get_started()) { throw Error.invalidOperation(Sys.Res.setExecutorAfterActive); }
    this._executor = value; this._executor._set_webRequest(this);
}
function Sys$Net$WebRequest$get_timeout() {
    if (arguments.length !== 0) throw Error.parameterCount(); if (this._timeout === 0) { return Sys.Net.WebRequestManager.get_defaultTimeout(); }
    return this._timeout;
}
function Sys$Net$WebRequest$set_timeout(value) {
    var e = Function._validateParams(arguments, [{ name: "value", type: Number }]); if (e) throw e; if (value < 0) { throw Error.argumentOutOfRange("value", value, Sys.Res.invalidTimeout); }
    this._timeout = value;
}
function Sys$Net$WebRequest$getResolvedUrl() { if (arguments.length !== 0) throw Error.parameterCount(); return Sys.Net.WebRequest._resolveUrl(this._url); }
function Sys$Net$WebRequest$invoke() {
    if (arguments.length !== 0) throw Error.parameterCount(); if (this._invokeCalled) { throw Error.invalidOperation(Sys.Res.invokeCalledTwice); }
    Sys.Net.WebRequestManager.executeRequest(this); this._invokeCalled = true;
}
Sys.Net.WebRequest.prototype = { add_completed: Sys$Net$WebRequest$add_completed, remove_completed: Sys$Net$WebRequest$remove_completed, completed: Sys$Net$WebRequest$completed, _get_eventHandlerList: Sys$Net$WebRequest$_get_eventHandlerList, get_url: Sys$Net$WebRequest$get_url, set_url: Sys$Net$WebRequest$set_url, get_headers: Sys$Net$WebRequest$get_headers, get_httpVerb: Sys$Net$WebRequest$get_httpVerb, set_httpVerb: Sys$Net$WebRequest$set_httpVerb, get_body: Sys$Net$WebRequest$get_body, set_body: Sys$Net$WebRequest$set_body, get_userContext: Sys$Net$WebRequest$get_userContext, set_userContext: Sys$Net$WebRequest$set_userContext, get_executor: Sys$Net$WebRequest$get_executor, set_executor: Sys$Net$WebRequest$set_executor, get_timeout: Sys$Net$WebRequest$get_timeout, set_timeout: Sys$Net$WebRequest$set_timeout, getResolvedUrl: Sys$Net$WebRequest$getResolvedUrl, invoke: Sys$Net$WebRequest$invoke }
Sys.Net.WebRequest._resolveUrl = function Sys$Net$WebRequest$_resolveUrl(url, baseUrl) {
    if (url && url.indexOf('://') !== -1) { return url; }
    if (!baseUrl || baseUrl.length === 0) {
        var baseElement = document.getElementsByTagName('base')[0]; if (baseElement && baseElement.href && baseElement.href.length > 0) { baseUrl = baseElement.href; }
        else { baseUrl = document.URL; }
    }
    var qsStart = baseUrl.indexOf('?'); if (qsStart !== -1) { baseUrl = baseUrl.substr(0, qsStart); }
    qsStart = baseUrl.indexOf('#'); if (qsStart !== -1) { baseUrl = baseUrl.substr(0, qsStart); }
    baseUrl = baseUrl.substr(0, baseUrl.lastIndexOf('/') + 1); if (!url || url.length === 0) { return baseUrl; }
    if (url.charAt(0) === '/') {
        var slashslash = baseUrl.indexOf('://'); if (slashslash === -1) { throw Error.argument("baseUrl", Sys.Res.badBaseUrl1); }
        var nextSlash = baseUrl.indexOf('/', slashslash + 3); if (nextSlash === -1) { throw Error.argument("baseUrl", Sys.Res.badBaseUrl2); }
        return baseUrl.substr(0, nextSlash) + url;
    }
    else {
        var lastSlash = baseUrl.lastIndexOf('/'); if (lastSlash === -1) { throw Error.argument("baseUrl", Sys.Res.badBaseUrl3); }
        return baseUrl.substr(0, lastSlash + 1) + url;
    }
}
Sys.Net.WebRequest._createQueryString = function Sys$Net$WebRequest$_createQueryString(queryString, encodeMethod) {
    if (!encodeMethod)
        encodeMethod = encodeURIComponent; var sb = new Sys.StringBuilder(); var i = 0; for (var arg in queryString) {
            var obj = queryString[arg]; if (typeof (obj) === "function") continue; var val = Sys.Serialization.JavaScriptSerializer.serialize(obj); if (i !== 0) { sb.append('&'); }
            sb.append(arg); sb.append('='); sb.append(encodeMethod(val)); i++;
        }
    return sb.toString();
}
Sys.Net.WebRequest._createUrl = function Sys$Net$WebRequest$_createUrl(url, queryString) {
    if (!queryString) { return url; }
    var qs = Sys.Net.WebRequest._createQueryString(queryString); if (qs.length > 0) {
        var sep = '?'; if (url && url.indexOf('?') !== -1)
            sep = '&'; return url + sep + qs;
    } else { return url; }
}
Sys.Net.WebRequest.registerClass('Sys.Net.WebRequest'); Sys.Net.WebServiceProxy = function Sys$Net$WebServiceProxy() { }
function Sys$Net$WebServiceProxy$get_timeout() { if (arguments.length !== 0) throw Error.parameterCount(); return this._timeout; }
function Sys$Net$WebServiceProxy$set_timeout(value) {
    var e = Function._validateParams(arguments, [{ name: "value", type: Number }]); if (e) throw e; if (value < 0) { throw Error.argumentOutOfRange('value', value, Sys.Res.invalidTimeout); }
    this._timeout = value;
}
function Sys$Net$WebServiceProxy$get_defaultUserContext() { if (arguments.length !== 0) throw Error.parameterCount(); return this._userContext; }
function Sys$Net$WebServiceProxy$set_defaultUserContext(value) { var e = Function._validateParams(arguments, [{ name: "value", mayBeNull: true }]); if (e) throw e; this._userContext = value; }
function Sys$Net$WebServiceProxy$get_defaultSucceededCallback() { if (arguments.length !== 0) throw Error.parameterCount(); return this._succeeded; }
function Sys$Net$WebServiceProxy$set_defaultSucceededCallback(value) { var e = Function._validateParams(arguments, [{ name: "value", type: Function, mayBeNull: true }]); if (e) throw e; this._succeeded = value; }
function Sys$Net$WebServiceProxy$get_defaultFailedCallback() { if (arguments.length !== 0) throw Error.parameterCount(); return this._failed; }
function Sys$Net$WebServiceProxy$set_defaultFailedCallback(value) { var e = Function._validateParams(arguments, [{ name: "value", type: Function, mayBeNull: true }]); if (e) throw e; this._failed = value; }
function Sys$Net$WebServiceProxy$get_path() { if (arguments.length !== 0) throw Error.parameterCount(); return this._path; }
function Sys$Net$WebServiceProxy$set_path(value) { var e = Function._validateParams(arguments, [{ name: "value", type: String }]); if (e) throw e; this._path = value; }
function Sys$Net$WebServiceProxy$_invoke(servicePath, methodName, useGet, params, onSuccess, onFailure, userContext) { var e = Function._validateParams(arguments, [{ name: "servicePath", type: String }, { name: "methodName", type: String }, { name: "useGet", type: Boolean }, { name: "params" }, { name: "onSuccess", type: Function, mayBeNull: true, optional: true }, { name: "onFailure", type: Function, mayBeNull: true, optional: true }, { name: "userContext", mayBeNull: true, optional: true }]); if (e) throw e; if (onSuccess === null || typeof onSuccess === 'undefined') onSuccess = this.get_defaultSucceededCallback(); if (onFailure === null || typeof onFailure === 'undefined') onFailure = this.get_defaultFailedCallback(); if (userContext === null || typeof userContext === 'undefined') userContext = this.get_defaultUserContext(); return Sys.Net.WebServiceProxy.invoke(servicePath, methodName, useGet, params, onSuccess, onFailure, userContext, this.get_timeout()); }
Sys.Net.WebServiceProxy.prototype = { get_timeout: Sys$Net$WebServiceProxy$get_timeout, set_timeout: Sys$Net$WebServiceProxy$set_timeout, get_defaultUserContext: Sys$Net$WebServiceProxy$get_defaultUserContext, set_defaultUserContext: Sys$Net$WebServiceProxy$set_defaultUserContext, get_defaultSucceededCallback: Sys$Net$WebServiceProxy$get_defaultSucceededCallback, set_defaultSucceededCallback: Sys$Net$WebServiceProxy$set_defaultSucceededCallback, get_defaultFailedCallback: Sys$Net$WebServiceProxy$get_defaultFailedCallback, set_defaultFailedCallback: Sys$Net$WebServiceProxy$set_defaultFailedCallback, get_path: Sys$Net$WebServiceProxy$get_path, set_path: Sys$Net$WebServiceProxy$set_path, _invoke: Sys$Net$WebServiceProxy$_invoke }
Sys.Net.WebServiceProxy.registerClass('Sys.Net.WebServiceProxy'); Sys.Net.WebServiceProxy.invoke = function Sys$Net$WebServiceProxy$invoke(servicePath, methodName, useGet, params, onSuccess, onFailure, userContext, timeout) {
    var e = Function._validateParams(arguments, [{ name: "servicePath", type: String }, { name: "methodName", type: String }, { name: "useGet", type: Boolean, optional: true }, { name: "params", mayBeNull: true, optional: true }, { name: "onSuccess", type: Function, mayBeNull: true, optional: true }, { name: "onFailure", type: Function, mayBeNull: true, optional: true }, { name: "userContext", mayBeNull: true, optional: true }, { name: "timeout", type: Number, optional: true }]); if (e) throw e; var request = new Sys.Net.WebRequest(); request.get_headers()['Content-Type'] = 'application/json; charset=utf-8'; if (!params) params = {}; var urlParams = params; if (!useGet || !urlParams) urlParams = {}; request.set_url(Sys.Net.WebRequest._createUrl(servicePath + "/" + encodeURIComponent(methodName), urlParams)); var body = null; if (!useGet) { body = Sys.Serialization.JavaScriptSerializer.serialize(params); if (body === "{}") body = ""; }
    request.set_body(body); request.add_completed(onComplete); if (timeout && timeout > 0) request.set_timeout(timeout); request.invoke(); function onComplete(response, eventArgs) {
        if (response.get_responseAvailable()) {
            var statusCode = response.get_statusCode(); var result = null; try {
                var contentType = response.getResponseHeader("Content-Type"); if (contentType.startsWith("application/json")) { result = response.get_object(); }
                else if (contentType.startsWith("text/xml")) { result = response.get_xml(); }
                else { result = response.get_responseData(); }
            } catch (ex) { }
            var error = response.getResponseHeader("jsonerror"); var errorObj = (error === "true"); if (errorObj) { if (result) { result = new Sys.Net.WebServiceError(false, result.Message, result.StackTrace, result.ExceptionType); } }
            else if (contentType.startsWith("application/json")) {
                if (!result || typeof (result.d) === "undefined") { throw Sys.Net.WebServiceProxy._createFailedError(methodName, String.format(Sys.Res.webServiceInvalidJsonWrapper, methodName)); }
                result = result.d;
            }
            if (((statusCode < 200) || (statusCode >= 300)) || errorObj) {
                if (onFailure) {
                    if (!result || !errorObj) { result = new Sys.Net.WebServiceError(false, String.format(Sys.Res.webServiceFailedNoMsg, methodName), "", ""); }
                    result._statusCode = statusCode; onFailure(result, userContext, methodName);
                }
                else {
                    var error; if (result && errorObj) { error = result.get_exceptionType() + "-- " + result.get_message(); }
                    else { error = response.get_responseData(); }
                    throw Sys.Net.WebServiceProxy._createFailedError(methodName, String.format(Sys.Res.webServiceFailed, methodName, error));
                }
            }
            else if (onSuccess) { onSuccess(result, userContext, methodName); }
        }
        else {
            var msg; if (response.get_timedOut()) { msg = String.format(Sys.Res.webServiceTimedOut, methodName); }
            else { msg = String.format(Sys.Res.webServiceFailedNoMsg, methodName) }
            if (onFailure) { onFailure(new Sys.Net.WebServiceError(response.get_timedOut(), msg, "", ""), userContext, methodName); }
            else { throw Sys.Net.WebServiceProxy._createFailedError(methodName, msg); }
        }
    }
    return request;
}
Sys.Net.WebServiceProxy._createFailedError = function Sys$Net$WebServiceProxy$_createFailedError(methodName, errorMessage) { var displayMessage = "Sys.Net.WebServiceFailedException: " + errorMessage; var e = Error.create(displayMessage, { 'name': 'Sys.Net.WebServiceFailedException', 'methodName': methodName }); e.popStackFrame(); return e; }
Sys.Net.WebServiceProxy._defaultFailedCallback = function Sys$Net$WebServiceProxy$_defaultFailedCallback(err, methodName) { var error = err.get_exceptionType() + "-- " + err.get_message(); throw Sys.Net.WebServiceProxy._createFailedError(methodName, String.format(Sys.Res.webServiceFailed, methodName, error)); }
Sys.Net.WebServiceProxy._generateTypedConstructor = function Sys$Net$WebServiceProxy$_generateTypedConstructor(type) {
    return function (properties) {
        if (properties) { for (var name in properties) { this[name] = properties[name]; } }
        this.__type = type;
    }
}
Sys.Net.WebServiceError = function Sys$Net$WebServiceError(timedOut, message, stackTrace, exceptionType) { var e = Function._validateParams(arguments, [{ name: "timedOut", type: Boolean }, { name: "message", type: String, mayBeNull: true }, { name: "stackTrace", type: String, mayBeNull: true }, { name: "exceptionType", type: String, mayBeNull: true }]); if (e) throw e; this._timedOut = timedOut; this._message = message; this._stackTrace = stackTrace; this._exceptionType = exceptionType; this._statusCode = -1; }
function Sys$Net$WebServiceError$get_timedOut() { if (arguments.length !== 0) throw Error.parameterCount(); return this._timedOut; }
function Sys$Net$WebServiceError$get_statusCode() { if (arguments.length !== 0) throw Error.parameterCount(); return this._statusCode; }
function Sys$Net$WebServiceError$get_message() { if (arguments.length !== 0) throw Error.parameterCount(); return this._message; }
function Sys$Net$WebServiceError$get_stackTrace() { if (arguments.length !== 0) throw Error.parameterCount(); return this._stackTrace; }
function Sys$Net$WebServiceError$get_exceptionType() { if (arguments.length !== 0) throw Error.parameterCount(); return this._exceptionType; }
Sys.Net.WebServiceError.prototype = { get_timedOut: Sys$Net$WebServiceError$get_timedOut, get_statusCode: Sys$Net$WebServiceError$get_statusCode, get_message: Sys$Net$WebServiceError$get_message, get_stackTrace: Sys$Net$WebServiceError$get_stackTrace, get_exceptionType: Sys$Net$WebServiceError$get_exceptionType }
Sys.Net.WebServiceError.registerClass('Sys.Net.WebServiceError'); Type.registerNamespace('Sys.Services'); Sys.Services._ProfileService = function Sys$Services$_ProfileService() { if (arguments.length !== 0) throw Error.parameterCount(); Sys.Services._ProfileService.initializeBase(this); this.properties = {}; }
Sys.Services._ProfileService.DefaultWebServicePath = ''; function Sys$Services$_ProfileService$get_defaultLoadCompletedCallback() { if (arguments.length !== 0) throw Error.parameterCount(); return this._defaultLoadCompletedCallback; }
function Sys$Services$_ProfileService$set_defaultLoadCompletedCallback(value) { var e = Function._validateParams(arguments, [{ name: "value", type: Function, mayBeNull: true }]); if (e) throw e; this._defaultLoadCompletedCallback = value; }
function Sys$Services$_ProfileService$get_defaultSaveCompletedCallback() { if (arguments.length !== 0) throw Error.parameterCount(); return this._defaultSaveCompletedCallback; }
function Sys$Services$_ProfileService$set_defaultSaveCompletedCallback(value) { var e = Function._validateParams(arguments, [{ name: "value", type: Function, mayBeNull: true }]); if (e) throw e; this._defaultSaveCompletedCallback = value; }
function Sys$Services$_ProfileService$get_path() { if (arguments.length !== 0) throw Error.parameterCount(); return this._path || ''; }
function Sys$Services$_ProfileService$load(propertyNames, loadCompletedCallback, failedCallback, userContext) {
    var e = Function._validateParams(arguments, [{ name: "propertyNames", type: Array, mayBeNull: true, optional: true, elementType: String }, { name: "loadCompletedCallback", type: Function, mayBeNull: true, optional: true }, { name: "failedCallback", type: Function, mayBeNull: true, optional: true }, { name: "userContext", mayBeNull: true, optional: true }]); if (e) throw e; var parameters; var methodName; if (!propertyNames) { methodName = "GetAllPropertiesForCurrentUser"; parameters = { authenticatedUserOnly: false }; }
    else { methodName = "GetPropertiesForCurrentUser"; parameters = { properties: this._clonePropertyNames(propertyNames), authenticatedUserOnly: false }; }
    this._invoke(this._get_path(), methodName, false, parameters, Function.createDelegate(this, this._onLoadComplete), Function.createDelegate(this, this._onLoadFailed), [loadCompletedCallback, failedCallback, userContext]);
}
function Sys$Services$_ProfileService$save(propertyNames, saveCompletedCallback, failedCallback, userContext) { var e = Function._validateParams(arguments, [{ name: "propertyNames", type: Array, mayBeNull: true, optional: true, elementType: String }, { name: "saveCompletedCallback", type: Function, mayBeNull: true, optional: true }, { name: "failedCallback", type: Function, mayBeNull: true, optional: true }, { name: "userContext", mayBeNull: true, optional: true }]); if (e) throw e; var flattenedProperties = this._flattenProperties(propertyNames, this.properties); this._invoke(this._get_path(), "SetPropertiesForCurrentUser", false, { values: flattenedProperties.value, authenticatedUserOnly: false }, Function.createDelegate(this, this._onSaveComplete), Function.createDelegate(this, this._onSaveFailed), [saveCompletedCallback, failedCallback, userContext, flattenedProperties.count]); }
function Sys$Services$_ProfileService$_clonePropertyNames(arr) {
    var nodups = []; var seen = {}; for (var i = 0; i < arr.length; i++) { var prop = arr[i]; if (!seen[prop]) { Array.add(nodups, prop); seen[prop] = true; }; }
    return nodups;
}
function Sys$Services$_ProfileService$_flattenProperties(propertyNames, properties, groupName) {
    var flattenedProperties = {}; var val; var key; var count = 0; if (propertyNames && propertyNames.length === 0) { return { value: flattenedProperties, count: 0 }; }
    for (var property in properties) {
        val = properties[property]; key = groupName ? groupName + "." + property : property; if (Sys.Services.ProfileGroup.isInstanceOfType(val)) { var obj = this._flattenProperties(propertyNames, val, key); var groupProperties = obj.value; count += obj.count; for (var subKey in groupProperties) { var subVal = groupProperties[subKey]; flattenedProperties[subKey] = subVal; } }
        else { if (!propertyNames || Array.indexOf(propertyNames, key) !== -1) { flattenedProperties[key] = val; count++; } }
    }
    return { value: flattenedProperties, count: count };
}
function Sys$Services$_ProfileService$_get_path() {
    var path = this.get_path(); if (!path.length) { path = Sys.Services._ProfileService.DefaultWebServicePath; }
    if (!path || !path.length) { throw Error.invalidOperation(Sys.Res.servicePathNotSet); }
    return path;
}
function Sys$Services$_ProfileService$_onLoadComplete(result, context, methodName) {
    if (typeof (result) !== "object") { throw Error.invalidOperation(String.format(Sys.Res.webServiceInvalidReturnType, methodName, "Object")); }
    var unflattened = this._unflattenProperties(result); for (var name in unflattened) { this.properties[name] = unflattened[name]; }
    var callback = context[0] || this.get_defaultLoadCompletedCallback() || this.get_defaultSucceededCallback(); if (callback) { var userContext = context[2] || this.get_defaultUserContext(); callback(result.length, userContext, "Sys.Services.ProfileService.load"); }
}
function Sys$Services$_ProfileService$_onLoadFailed(err, context, methodName) {
    var callback = context[1] || this.get_defaultFailedCallback(); if (callback) { var userContext = context[2] || this.get_defaultUserContext(); callback(err, userContext, "Sys.Services.ProfileService.load"); }
    else { Sys.Net.WebServiceProxy._defaultFailedCallback(err, methodName); }
}
function Sys$Services$_ProfileService$_onSaveComplete(result, context, methodName) {
    var count = context[3]; if (result !== null) {
        if (result instanceof Array) { count -= result.length; }
        else if (typeof (result) === 'number') { count = result; }
        else { throw Error.invalidOperation(String.format(Sys.Res.webServiceInvalidReturnType, methodName, "Array")); }
    }
    var callback = context[0] || this.get_defaultSaveCompletedCallback() || this.get_defaultSucceededCallback(); if (callback) { var userContext = context[2] || this.get_defaultUserContext(); callback(count, userContext, "Sys.Services.ProfileService.save"); }
}
function Sys$Services$_ProfileService$_onSaveFailed(err, context, methodName) {
    var callback = context[1] || this.get_defaultFailedCallback(); if (callback) { var userContext = context[2] || this.get_defaultUserContext(); callback(err, userContext, "Sys.Services.ProfileService.save"); }
    else { Sys.Net.WebServiceProxy._defaultFailedCallback(err, methodName); }
}
function Sys$Services$_ProfileService$_unflattenProperties(properties) {
    var unflattenedProperties = {}; var dotIndex; var val; var count = 0; for (var key in properties) {
        count++; val = properties[key]; dotIndex = key.indexOf('.'); if (dotIndex !== -1) {
            var groupName = key.substr(0, dotIndex); key = key.substr(dotIndex + 1); var group = unflattenedProperties[groupName]; if (!group || !Sys.Services.ProfileGroup.isInstanceOfType(group)) { group = new Sys.Services.ProfileGroup(); unflattenedProperties[groupName] = group; }
            group[key] = val;
        }
        else { unflattenedProperties[key] = val; }
    }
    properties.length = count; return unflattenedProperties;
}
Sys.Services._ProfileService.prototype = { _defaultLoadCompletedCallback: null, _defaultSaveCompletedCallback: null, _path: '', _timeout: 0, get_defaultLoadCompletedCallback: Sys$Services$_ProfileService$get_defaultLoadCompletedCallback, set_defaultLoadCompletedCallback: Sys$Services$_ProfileService$set_defaultLoadCompletedCallback, get_defaultSaveCompletedCallback: Sys$Services$_ProfileService$get_defaultSaveCompletedCallback, set_defaultSaveCompletedCallback: Sys$Services$_ProfileService$set_defaultSaveCompletedCallback, get_path: Sys$Services$_ProfileService$get_path, load: Sys$Services$_ProfileService$load, save: Sys$Services$_ProfileService$save, _clonePropertyNames: Sys$Services$_ProfileService$_clonePropertyNames, _flattenProperties: Sys$Services$_ProfileService$_flattenProperties, _get_path: Sys$Services$_ProfileService$_get_path, _onLoadComplete: Sys$Services$_ProfileService$_onLoadComplete, _onLoadFailed: Sys$Services$_ProfileService$_onLoadFailed, _onSaveComplete: Sys$Services$_ProfileService$_onSaveComplete, _onSaveFailed: Sys$Services$_ProfileService$_onSaveFailed, _unflattenProperties: Sys$Services$_ProfileService$_unflattenProperties }
Sys.Services._ProfileService.registerClass('Sys.Services._ProfileService', Sys.Net.WebServiceProxy); Sys.Services.ProfileService = new Sys.Services._ProfileService(); Sys.Services.ProfileGroup = function Sys$Services$ProfileGroup(properties) { var e = Function._validateParams(arguments, [{ name: "properties", mayBeNull: true, optional: true }]); if (e) throw e; if (properties) { for (var property in properties) { this[property] = properties[property]; } } }
Sys.Services.ProfileGroup.registerClass('Sys.Services.ProfileGroup'); Sys.Services._AuthenticationService = function Sys$Services$_AuthenticationService() { if (arguments.length !== 0) throw Error.parameterCount(); Sys.Services._AuthenticationService.initializeBase(this); }
Sys.Services._AuthenticationService.DefaultWebServicePath = ''; function Sys$Services$_AuthenticationService$get_defaultLoginCompletedCallback() { if (arguments.length !== 0) throw Error.parameterCount(); return this._defaultLoginCompletedCallback; }
function Sys$Services$_AuthenticationService$set_defaultLoginCompletedCallback(value) { var e = Function._validateParams(arguments, [{ name: "value", type: Function, mayBeNull: true }]); if (e) throw e; this._defaultLoginCompletedCallback = value; }
function Sys$Services$_AuthenticationService$get_defaultLogoutCompletedCallback() { if (arguments.length !== 0) throw Error.parameterCount(); return this._defaultLogoutCompletedCallback; }
function Sys$Services$_AuthenticationService$set_defaultLogoutCompletedCallback(value) { var e = Function._validateParams(arguments, [{ name: "value", type: Function, mayBeNull: true }]); if (e) throw e; this._defaultLogoutCompletedCallback = value; }
function Sys$Services$_AuthenticationService$get_isLoggedIn() { if (arguments.length !== 0) throw Error.parameterCount(); return this._authenticated; }
function Sys$Services$_AuthenticationService$get_path() { if (arguments.length !== 0) throw Error.parameterCount(); return this._path || ''; }
function Sys$Services$_AuthenticationService$login(username, password, isPersistent, customInfo, redirectUrl, loginCompletedCallback, failedCallback, userContext) { var e = Function._validateParams(arguments, [{ name: "username", type: String }, { name: "password", type: String, mayBeNull: true }, { name: "isPersistent", type: Boolean, mayBeNull: true, optional: true }, { name: "customInfo", type: String, mayBeNull: true, optional: true }, { name: "redirectUrl", type: String, mayBeNull: true, optional: true }, { name: "loginCompletedCallback", type: Function, mayBeNull: true, optional: true }, { name: "failedCallback", type: Function, mayBeNull: true, optional: true }, { name: "userContext", mayBeNull: true, optional: true }]); if (e) throw e; this._invoke(this._get_path(), "Login", false, { userName: username, password: password, createPersistentCookie: isPersistent }, Function.createDelegate(this, this._onLoginComplete), Function.createDelegate(this, this._onLoginFailed), [username, password, isPersistent, customInfo, redirectUrl, loginCompletedCallback, failedCallback, userContext]); }
function Sys$Services$_AuthenticationService$logout(redirectUrl, logoutCompletedCallback, failedCallback, userContext) { var e = Function._validateParams(arguments, [{ name: "redirectUrl", type: String, mayBeNull: true, optional: true }, { name: "logoutCompletedCallback", type: Function, mayBeNull: true, optional: true }, { name: "failedCallback", type: Function, mayBeNull: true, optional: true }, { name: "userContext", mayBeNull: true, optional: true }]); if (e) throw e; this._invoke(this._get_path(), "Logout", false, {}, Function.createDelegate(this, this._onLogoutComplete), Function.createDelegate(this, this._onLogoutFailed), [redirectUrl, logoutCompletedCallback, failedCallback, userContext]); }
function Sys$Services$_AuthenticationService$_get_path() {
    var path = this.get_path(); if (!path.length) { path = Sys.Services._AuthenticationService.DefaultWebServicePath; }
    if (!path || !path.length) { throw Error.invalidOperation(Sys.Res.servicePathNotSet); }
    return path;
}
function Sys$Services$_AuthenticationService$_onLoginComplete(result, context, methodName) {
    if (typeof (result) !== "boolean") { throw Error.invalidOperation(String.format(Sys.Res.webServiceInvalidReturnType, methodName, "Boolean")); }
    var redirectUrl = context[4]; var userContext = context[7] || this.get_defaultUserContext(); var callback = context[5] || this.get_defaultLoginCompletedCallback() || this.get_defaultSucceededCallback(); if (result) {
        this._authenticated = true; if (callback) { callback(true, userContext, "Sys.Services.AuthenticationService.login"); }
        if (typeof (redirectUrl) !== "undefined" && redirectUrl !== null) { window.location.href = redirectUrl; }
    }
    else if (callback) { callback(false, userContext, "Sys.Services.AuthenticationService.login"); }
}
function Sys$Services$_AuthenticationService$_onLoginFailed(err, context, methodName) {
    var callback = context[6] || this.get_defaultFailedCallback(); if (callback) { var userContext = context[7] || this.get_defaultUserContext(); callback(err, userContext, "Sys.Services.AuthenticationService.login"); }
    else { Sys.Net.WebServiceProxy._defaultFailedCallback(err, methodName); }
}
function Sys$Services$_AuthenticationService$_onLogoutComplete(result, context, methodName) {
    if (result !== null) { throw Error.invalidOperation(String.format(Sys.Res.webServiceInvalidReturnType, methodName, "null")); }
    var redirectUrl = context[0]; var userContext = context[3] || this.get_defaultUserContext(); var callback = context[1] || this.get_defaultLogoutCompletedCallback() || this.get_defaultSucceededCallback(); this._authenticated = false; if (callback) { callback(null, userContext, "Sys.Services.AuthenticationService.logout"); }
    if (!redirectUrl) { window.location.reload(); }
    else { window.location.href = redirectUrl; }
}
function Sys$Services$_AuthenticationService$_onLogoutFailed(err, context, methodName) {
    var callback = context[2] || this.get_defaultFailedCallback(); if (callback) { callback(err, context[3], "Sys.Services.AuthenticationService.logout"); }
    else { Sys.Net.WebServiceProxy._defaultFailedCallback(err, methodName); }
}
function Sys$Services$_AuthenticationService$_setAuthenticated(authenticated) { this._authenticated = authenticated; }
Sys.Services._AuthenticationService.prototype = { _defaultLoginCompletedCallback: null, _defaultLogoutCompletedCallback: null, _path: '', _timeout: 0, _authenticated: false, get_defaultLoginCompletedCallback: Sys$Services$_AuthenticationService$get_defaultLoginCompletedCallback, set_defaultLoginCompletedCallback: Sys$Services$_AuthenticationService$set_defaultLoginCompletedCallback, get_defaultLogoutCompletedCallback: Sys$Services$_AuthenticationService$get_defaultLogoutCompletedCallback, set_defaultLogoutCompletedCallback: Sys$Services$_AuthenticationService$set_defaultLogoutCompletedCallback, get_isLoggedIn: Sys$Services$_AuthenticationService$get_isLoggedIn, get_path: Sys$Services$_AuthenticationService$get_path, login: Sys$Services$_AuthenticationService$login, logout: Sys$Services$_AuthenticationService$logout, _get_path: Sys$Services$_AuthenticationService$_get_path, _onLoginComplete: Sys$Services$_AuthenticationService$_onLoginComplete, _onLoginFailed: Sys$Services$_AuthenticationService$_onLoginFailed, _onLogoutComplete: Sys$Services$_AuthenticationService$_onLogoutComplete, _onLogoutFailed: Sys$Services$_AuthenticationService$_onLogoutFailed, _setAuthenticated: Sys$Services$_AuthenticationService$_setAuthenticated }
Sys.Services._AuthenticationService.registerClass('Sys.Services._AuthenticationService', Sys.Net.WebServiceProxy); Sys.Services.AuthenticationService = new Sys.Services._AuthenticationService(); Sys.Services._RoleService = function Sys$Services$_RoleService() { if (arguments.length !== 0) throw Error.parameterCount(); Sys.Services._RoleService.initializeBase(this); this._roles = []; }
Sys.Services._RoleService.DefaultWebServicePath = ''; function Sys$Services$_RoleService$get_defaultLoadCompletedCallback() { if (arguments.length !== 0) throw Error.parameterCount(); return this._defaultLoadCompletedCallback; }
function Sys$Services$_RoleService$set_defaultLoadCompletedCallback(value) { var e = Function._validateParams(arguments, [{ name: "value", type: Function, mayBeNull: true }]); if (e) throw e; this._defaultLoadCompletedCallback = value; }
function Sys$Services$_RoleService$get_path() { if (arguments.length !== 0) throw Error.parameterCount(); return this._path || ''; }
function Sys$Services$_RoleService$get_roles() { if (arguments.length !== 0) throw Error.parameterCount(); return Array.clone(this._roles); }
function Sys$Services$_RoleService$isUserInRole(role) { var e = Function._validateParams(arguments, [{ name: "role", type: String }]); if (e) throw e; var v = this._get_rolesIndex()[role.trim().toLowerCase()]; return !!v; }
function Sys$Services$_RoleService$load(loadCompletedCallback, failedCallback, userContext) { var e = Function._validateParams(arguments, [{ name: "loadCompletedCallback", type: Function, mayBeNull: true, optional: true }, { name: "failedCallback", type: Function, mayBeNull: true, optional: true }, { name: "userContext", mayBeNull: true, optional: true }]); if (e) throw e; Sys.Net.WebServiceProxy.invoke(this._get_path(), "GetRolesForCurrentUser", false, {}, Function.createDelegate(this, this._onLoadComplete), Function.createDelegate(this, this._onLoadFailed), [loadCompletedCallback, failedCallback, userContext], this.get_timeout()); }
function Sys$Services$_RoleService$_get_path() {
    var path = this.get_path(); if (!path || !path.length) { path = Sys.Services._RoleService.DefaultWebServicePath; }
    if (!path || !path.length) { throw Error.invalidOperation(Sys.Res.servicePathNotSet); }
    return path;
}
function Sys$Services$_RoleService$_get_rolesIndex() {
    if (!this._rolesIndex) {
        var index = {}; for (var i = 0; i < this._roles.length; i++) { index[this._roles[i].toLowerCase()] = true; }
        this._rolesIndex = index;
    }
    return this._rolesIndex;
}
function Sys$Services$_RoleService$_onLoadComplete(result, context, methodName) {
    if (result && !(result instanceof Array)) { throw Error.invalidOperation(String.format(Sys.Res.webServiceInvalidReturnType, methodName, "Array")); }
    this._roles = result; this._rolesIndex = null; var callback = context[0] || this.get_defaultLoadCompletedCallback() || this.get_defaultSucceededCallback(); if (callback) { var userContext = context[2] || this.get_defaultUserContext(); var clonedResult = Array.clone(result); callback(clonedResult, userContext, "Sys.Services.RoleService.load"); }
}
function Sys$Services$_RoleService$_onLoadFailed(err, context, methodName) {
    var callback = context[1] || this.get_defaultFailedCallback(); if (callback) { var userContext = context[2] || this.get_defaultUserContext(); callback(err, userContext, "Sys.Services.RoleService.load"); }
    else { Sys.Net.WebServiceProxy._defaultFailedCallback(err, methodName); }
}
Sys.Services._RoleService.prototype = { _defaultLoadCompletedCallback: null, _rolesIndex: null, _timeout: 0, _path: '', get_defaultLoadCompletedCallback: Sys$Services$_RoleService$get_defaultLoadCompletedCallback, set_defaultLoadCompletedCallback: Sys$Services$_RoleService$set_defaultLoadCompletedCallback, get_path: Sys$Services$_RoleService$get_path, get_roles: Sys$Services$_RoleService$get_roles, isUserInRole: Sys$Services$_RoleService$isUserInRole, load: Sys$Services$_RoleService$load, _get_path: Sys$Services$_RoleService$_get_path, _get_rolesIndex: Sys$Services$_RoleService$_get_rolesIndex, _onLoadComplete: Sys$Services$_RoleService$_onLoadComplete, _onLoadFailed: Sys$Services$_RoleService$_onLoadFailed }
Sys.Services._RoleService.registerClass('Sys.Services._RoleService', Sys.Net.WebServiceProxy); Sys.Services.RoleService = new Sys.Services._RoleService(); Type.registerNamespace('Sys.Serialization'); Sys.Serialization.JavaScriptSerializer = function Sys$Serialization$JavaScriptSerializer() { if (arguments.length !== 0) throw Error.parameterCount(); }
Sys.Serialization.JavaScriptSerializer.registerClass('Sys.Serialization.JavaScriptSerializer'); Sys.Serialization.JavaScriptSerializer._charsToEscapeRegExs = []; Sys.Serialization.JavaScriptSerializer._charsToEscape = []; Sys.Serialization.JavaScriptSerializer._dateRegEx = new RegExp('(^|[^\\\\])\\"\\\\/Date\\((-?[0-9]+)(?:[a-zA-Z]|(?:\\+|-)[0-9]{4})?\\)\\\\/\\"', 'g'); Sys.Serialization.JavaScriptSerializer._escapeChars = {}; Sys.Serialization.JavaScriptSerializer._escapeRegEx = new RegExp('["\\\\\\x00-\\x1F]', 'i'); Sys.Serialization.JavaScriptSerializer._escapeRegExGlobal = new RegExp('["\\\\\\x00-\\x1F]', 'g'); Sys.Serialization.JavaScriptSerializer._jsonRegEx = new RegExp('[^,:{}\\[\\]0-9.\\-+Eaeflnr-u \\n\\r\\t]', 'g'); Sys.Serialization.JavaScriptSerializer._jsonStringRegEx = new RegExp('"(\\\\.|[^"\\\\])*"', 'g'); Sys.Serialization.JavaScriptSerializer._serverTypeFieldName = '__type'; Sys.Serialization.JavaScriptSerializer._init = function Sys$Serialization$JavaScriptSerializer$_init() { var replaceChars = ['\\u0000', '\\u0001', '\\u0002', '\\u0003', '\\u0004', '\\u0005', '\\u0006', '\\u0007', '\\b', '\\t', '\\n', '\\u000b', '\\f', '\\r', '\\u000e', '\\u000f', '\\u0010', '\\u0011', '\\u0012', '\\u0013', '\\u0014', '\\u0015', '\\u0016', '\\u0017', '\\u0018', '\\u0019', '\\u001a', '\\u001b', '\\u001c', '\\u001d', '\\u001e', '\\u001f']; Sys.Serialization.JavaScriptSerializer._charsToEscape[0] = '\\'; Sys.Serialization.JavaScriptSerializer._charsToEscapeRegExs['\\'] = new RegExp('\\\\', 'g'); Sys.Serialization.JavaScriptSerializer._escapeChars['\\'] = '\\\\'; Sys.Serialization.JavaScriptSerializer._charsToEscape[1] = '"'; Sys.Serialization.JavaScriptSerializer._charsToEscapeRegExs['"'] = new RegExp('"', 'g'); Sys.Serialization.JavaScriptSerializer._escapeChars['"'] = '\\"'; for (var i = 0; i < 32; i++) { var c = String.fromCharCode(i); Sys.Serialization.JavaScriptSerializer._charsToEscape[i + 2] = c; Sys.Serialization.JavaScriptSerializer._charsToEscapeRegExs[c] = new RegExp(c, 'g'); Sys.Serialization.JavaScriptSerializer._escapeChars[c] = replaceChars[i]; } }
Sys.Serialization.JavaScriptSerializer._serializeBooleanWithBuilder = function Sys$Serialization$JavaScriptSerializer$_serializeBooleanWithBuilder(object, stringBuilder) { stringBuilder.append(object.toString()); }
Sys.Serialization.JavaScriptSerializer._serializeNumberWithBuilder = function Sys$Serialization$JavaScriptSerializer$_serializeNumberWithBuilder(object, stringBuilder) {
    if (isFinite(object)) { stringBuilder.append(String(object)); }
    else { throw Error.invalidOperation(Sys.Res.cannotSerializeNonFiniteNumbers); }
}
Sys.Serialization.JavaScriptSerializer._serializeStringWithBuilder = function Sys$Serialization$JavaScriptSerializer$_serializeStringWithBuilder(string, stringBuilder) {
    stringBuilder.append('"'); if (Sys.Serialization.JavaScriptSerializer._escapeRegEx.test(string)) {
        if (Sys.Serialization.JavaScriptSerializer._charsToEscape.length === 0) { Sys.Serialization.JavaScriptSerializer._init(); }
        if (string.length < 128) { string = string.replace(Sys.Serialization.JavaScriptSerializer._escapeRegExGlobal, function (x) { return Sys.Serialization.JavaScriptSerializer._escapeChars[x]; }); }
        else {
            for (var i = 0; i < 34; i++) {
                var c = Sys.Serialization.JavaScriptSerializer._charsToEscape[i]; if (string.indexOf(c) !== -1) {
                    if (Sys.Browser.agent === Sys.Browser.Opera || Sys.Browser.agent === Sys.Browser.FireFox) { string = string.split(c).join(Sys.Serialization.JavaScriptSerializer._escapeChars[c]); }
                    else { string = string.replace(Sys.Serialization.JavaScriptSerializer._charsToEscapeRegExs[c], Sys.Serialization.JavaScriptSerializer._escapeChars[c]); }
                }
            }
        }
    }
    stringBuilder.append(string); stringBuilder.append('"');
}
Sys.Serialization.JavaScriptSerializer._serializeWithBuilder = function Sys$Serialization$JavaScriptSerializer$_serializeWithBuilder(object, stringBuilder, sort, prevObjects) {
    var i; switch (typeof object) {
        case 'object': if (object) {
            if (prevObjects) { for (var j = 0; j < prevObjects.length; j++) { if (prevObjects[j] === object) { throw Error.invalidOperation(Sys.Res.cannotSerializeObjectWithCycle); } } }
            else { prevObjects = new Array(); }
            try {
                Array.add(prevObjects, object); if (Number.isInstanceOfType(object)) { Sys.Serialization.JavaScriptSerializer._serializeNumberWithBuilder(object, stringBuilder); }
                else if (Boolean.isInstanceOfType(object)) { Sys.Serialization.JavaScriptSerializer._serializeBooleanWithBuilder(object, stringBuilder); }
                else if (String.isInstanceOfType(object)) { Sys.Serialization.JavaScriptSerializer._serializeStringWithBuilder(object, stringBuilder); }
                else if (Array.isInstanceOfType(object)) {
                    stringBuilder.append('['); for (i = 0; i < object.length; ++i) {
                        if (i > 0) { stringBuilder.append(','); }
                        Sys.Serialization.JavaScriptSerializer._serializeWithBuilder(object[i], stringBuilder, false, prevObjects);
                    }
                    stringBuilder.append(']');
                }
                else {
                    if (Date.isInstanceOfType(object)) { stringBuilder.append('"\\/Date('); stringBuilder.append(object.getTime()); stringBuilder.append(')\\/"'); break; }
                    var properties = []; var propertyCount = 0; for (var name in object) {
                        if (name.startsWith('$')) { continue; }
                        if (name === Sys.Serialization.JavaScriptSerializer._serverTypeFieldName && propertyCount !== 0) { properties[propertyCount++] = properties[0]; properties[0] = name; }
                        else { properties[propertyCount++] = name; }
                    }
                    if (sort) properties.sort(); stringBuilder.append('{'); var needComma = false; for (i = 0; i < propertyCount; i++) {
                        var value = object[properties[i]]; if (typeof value !== 'undefined' && typeof value !== 'function') {
                            if (needComma) { stringBuilder.append(','); }
                            else { needComma = true; }
                            Sys.Serialization.JavaScriptSerializer._serializeWithBuilder(properties[i], stringBuilder, sort, prevObjects); stringBuilder.append(':'); Sys.Serialization.JavaScriptSerializer._serializeWithBuilder(value, stringBuilder, sort, prevObjects);
                        }
                    }
                    stringBuilder.append('}');
                }
            }
            finally { Array.removeAt(prevObjects, prevObjects.length - 1); }
        }
        else { stringBuilder.append('null'); }
            break; case 'number': Sys.Serialization.JavaScriptSerializer._serializeNumberWithBuilder(object, stringBuilder); break; case 'string': Sys.Serialization.JavaScriptSerializer._serializeStringWithBuilder(object, stringBuilder); break; case 'boolean': Sys.Serialization.JavaScriptSerializer._serializeBooleanWithBuilder(object, stringBuilder); break; default: stringBuilder.append('null'); break;
    }
}
Sys.Serialization.JavaScriptSerializer.serialize = function Sys$Serialization$JavaScriptSerializer$serialize(object) { var e = Function._validateParams(arguments, [{ name: "object", mayBeNull: true }]); if (e) throw e; var stringBuilder = new Sys.StringBuilder(); Sys.Serialization.JavaScriptSerializer._serializeWithBuilder(object, stringBuilder, false); return stringBuilder.toString(); }
Sys.Serialization.JavaScriptSerializer.deserialize = function Sys$Serialization$JavaScriptSerializer$deserialize(data, secure) {
    var e = Function._validateParams(arguments, [{ name: "data", type: String }, { name: "secure", type: Boolean, optional: true }]); if (e) throw e; if (data.length === 0) throw Error.argument('data', Sys.Res.cannotDeserializeEmptyString); try { var exp = data.replace(Sys.Serialization.JavaScriptSerializer._dateRegEx, "$1new Date($2)"); if (secure && Sys.Serialization.JavaScriptSerializer._jsonRegEx.test(exp.replace(Sys.Serialization.JavaScriptSerializer._jsonStringRegEx, ''))) throw null; return eval('(' + exp + ')'); }
    catch (e) { throw Error.argument('data', Sys.Res.cannotDeserializeInvalidJson); }
}
Sys.CultureInfo = function Sys$CultureInfo(name, numberFormat, dateTimeFormat) { var e = Function._validateParams(arguments, [{ name: "name", type: String }, { name: "numberFormat", type: Object }, { name: "dateTimeFormat", type: Object }]); if (e) throw e; this.name = name; this.numberFormat = numberFormat; this.dateTimeFormat = dateTimeFormat; }
function Sys$CultureInfo$_getDateTimeFormats() {
    if (!this._dateTimeFormats) { var dtf = this.dateTimeFormat; this._dateTimeFormats = [dtf.MonthDayPattern, dtf.YearMonthPattern, dtf.ShortDatePattern, dtf.ShortTimePattern, dtf.LongDatePattern, dtf.LongTimePattern, dtf.FullDateTimePattern, dtf.RFC1123Pattern, dtf.SortableDateTimePattern, dtf.UniversalSortableDateTimePattern]; }
    return this._dateTimeFormats;
}
function Sys$CultureInfo$_getMonthIndex(value) {
    if (!this._upperMonths) { this._upperMonths = this._toUpperArray(this.dateTimeFormat.MonthNames); }
    return Array.indexOf(this._upperMonths, this._toUpper(value));
}
function Sys$CultureInfo$_getAbbrMonthIndex(value) {
    if (!this._upperAbbrMonths) { this._upperAbbrMonths = this._toUpperArray(this.dateTimeFormat.AbbreviatedMonthNames); }
    return Array.indexOf(this._upperAbbrMonths, this._toUpper(value));
}
function Sys$CultureInfo$_getDayIndex(value) {
    if (!this._upperDays) { this._upperDays = this._toUpperArray(this.dateTimeFormat.DayNames); }
    return Array.indexOf(this._upperDays, this._toUpper(value));
}
function Sys$CultureInfo$_getAbbrDayIndex(value) {
    if (!this._upperAbbrDays) { this._upperAbbrDays = this._toUpperArray(this.dateTimeFormat.AbbreviatedDayNames); }
    return Array.indexOf(this._upperAbbrDays, this._toUpper(value));
}
function Sys$CultureInfo$_toUpperArray(arr) {
    var result = []; for (var i = 0, il = arr.length; i < il; i++) { result[i] = this._toUpper(arr[i]); }
    return result;
}
function Sys$CultureInfo$_toUpper(value) { return value.split("\u00A0").join(' ').toUpperCase(); }
Sys.CultureInfo.prototype = { _getDateTimeFormats: Sys$CultureInfo$_getDateTimeFormats, _getMonthIndex: Sys$CultureInfo$_getMonthIndex, _getAbbrMonthIndex: Sys$CultureInfo$_getAbbrMonthIndex, _getDayIndex: Sys$CultureInfo$_getDayIndex, _getAbbrDayIndex: Sys$CultureInfo$_getAbbrDayIndex, _toUpperArray: Sys$CultureInfo$_toUpperArray, _toUpper: Sys$CultureInfo$_toUpper }
Sys.CultureInfo._parse = function Sys$CultureInfo$_parse(value) { var cultureInfo = Sys.Serialization.JavaScriptSerializer.deserialize(value); return new Sys.CultureInfo(cultureInfo.name, cultureInfo.numberFormat, cultureInfo.dateTimeFormat); }
Sys.CultureInfo.registerClass('Sys.CultureInfo'); Sys.CultureInfo.InvariantCulture = Sys.CultureInfo._parse('{"name":"","numberFormat":{"CurrencyDecimalDigits":2,"CurrencyDecimalSeparator":".","IsReadOnly":true,"CurrencyGroupSizes":[3],"NumberGroupSizes":[3],"PercentGroupSizes":[3],"CurrencyGroupSeparator":",","CurrencySymbol":"\u00A4","NaNSymbol":"NaN","CurrencyNegativePattern":0,"NumberNegativePattern":1,"PercentPositivePattern":0,"PercentNegativePattern":0,"NegativeInfinitySymbol":"-Infinity","NegativeSign":"-","NumberDecimalDigits":2,"NumberDecimalSeparator":".","NumberGroupSeparator":",","CurrencyPositivePattern":0,"PositiveInfinitySymbol":"Infinity","PositiveSign":"+","PercentDecimalDigits":2,"PercentDecimalSeparator":".","PercentGroupSeparator":",","PercentSymbol":"%","PerMilleSymbol":"\u2030","NativeDigits":["0","1","2","3","4","5","6","7","8","9"],"DigitSubstitution":1},"dateTimeFormat":{"AMDesignator":"AM","Calendar":{"MinSupportedDateTime":"@-62135568000000@","MaxSupportedDateTime":"@253402300799999@","AlgorithmType":1,"CalendarType":1,"Eras":[1],"TwoDigitYearMax":2029,"IsReadOnly":true},"DateSeparator":"/","FirstDayOfWeek":0,"CalendarWeekRule":0,"FullDateTimePattern":"dddd, dd MMMM yyyy HH:mm:ss","LongDatePattern":"dddd, dd MMMM yyyy","LongTimePattern":"HH:mm:ss","MonthDayPattern":"MMMM dd","PMDesignator":"PM","RFC1123Pattern":"ddd, dd MMM yyyy HH\':\'mm\':\'ss \'GMT\'","ShortDatePattern":"MM/dd/yyyy","ShortTimePattern":"HH:mm","SortableDateTimePattern":"yyyy\'-\'MM\'-\'dd\'T\'HH\':\'mm\':\'ss","TimeSeparator":":","UniversalSortableDateTimePattern":"yyyy\'-\'MM\'-\'dd HH\':\'mm\':\'ss\'Z\'","YearMonthPattern":"yyyy MMMM","AbbreviatedDayNames":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"ShortestDayNames":["Su","Mo","Tu","We","Th","Fr","Sa"],"DayNames":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"AbbreviatedMonthNames":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec",""],"MonthNames":["January","February","March","April","May","June","July","August","September","October","November","December",""],"IsReadOnly":true,"NativeCalendarName":"Gregorian Calendar","AbbreviatedMonthGenitiveNames":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec",""],"MonthGenitiveNames":["January","February","March","April","May","June","July","August","September","October","November","December",""]}}'); if (typeof (__cultureInfo) === 'undefined') { var __cultureInfo = '{"name":"en-US","numberFormat":{"CurrencyDecimalDigits":2,"CurrencyDecimalSeparator":".","IsReadOnly":false,"CurrencyGroupSizes":[3],"NumberGroupSizes":[3],"PercentGroupSizes":[3],"CurrencyGroupSeparator":",","CurrencySymbol":"$","NaNSymbol":"NaN","CurrencyNegativePattern":0,"NumberNegativePattern":1,"PercentPositivePattern":0,"PercentNegativePattern":0,"NegativeInfinitySymbol":"-Infinity","NegativeSign":"-","NumberDecimalDigits":2,"NumberDecimalSeparator":".","NumberGroupSeparator":",","CurrencyPositivePattern":0,"PositiveInfinitySymbol":"Infinity","PositiveSign":"+","PercentDecimalDigits":2,"PercentDecimalSeparator":".","PercentGroupSeparator":",","PercentSymbol":"%","PerMilleSymbol":"\u2030","NativeDigits":["0","1","2","3","4","5","6","7","8","9"],"DigitSubstitution":1},"dateTimeFormat":{"AMDesignator":"AM","Calendar":{"MinSupportedDateTime":"@-62135568000000@","MaxSupportedDateTime":"@253402300799999@","AlgorithmType":1,"CalendarType":1,"Eras":[1],"TwoDigitYearMax":2029,"IsReadOnly":false},"DateSeparator":"/","FirstDayOfWeek":0,"CalendarWeekRule":0,"FullDateTimePattern":"dddd, MMMM dd, yyyy h:mm:ss tt","LongDatePattern":"dddd, MMMM dd, yyyy","LongTimePattern":"h:mm:ss tt","MonthDayPattern":"MMMM dd","PMDesignator":"PM","RFC1123Pattern":"ddd, dd MMM yyyy HH\':\'mm\':\'ss \'GMT\'","ShortDatePattern":"M/d/yyyy","ShortTimePattern":"h:mm tt","SortableDateTimePattern":"yyyy\'-\'MM\'-\'dd\'T\'HH\':\'mm\':\'ss","TimeSeparator":":","UniversalSortableDateTimePattern":"yyyy\'-\'MM\'-\'dd HH\':\'mm\':\'ss\'Z\'","YearMonthPattern":"MMMM, yyyy","AbbreviatedDayNames":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"ShortestDayNames":["Su","Mo","Tu","We","Th","Fr","Sa"],"DayNames":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"AbbreviatedMonthNames":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec",""],"MonthNames":["January","February","March","April","May","June","July","August","September","October","November","December",""],"IsReadOnly":false,"NativeCalendarName":"Gregorian Calendar","AbbreviatedMonthGenitiveNames":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec",""],"MonthGenitiveNames":["January","February","March","April","May","June","July","August","September","October","November","December",""]}}'; }
Sys.CultureInfo.CurrentCulture = Sys.CultureInfo._parse(__cultureInfo); delete __cultureInfo; Sys.UI.Behavior = function Sys$UI$Behavior(element) {
    var e = Function._validateParams(arguments, [{ name: "element", domElement: true }]); if (e) throw e; Sys.UI.Behavior.initializeBase(this); this._element = element; var behaviors = element._behaviors; if (!behaviors) { element._behaviors = [this]; }
    else { behaviors[behaviors.length] = this; }
}
function Sys$UI$Behavior$get_element() { if (arguments.length !== 0) throw Error.parameterCount(); return this._element; }
function Sys$UI$Behavior$get_id() { if (arguments.length !== 0) throw Error.parameterCount(); var baseId = Sys.UI.Behavior.callBaseMethod(this, 'get_id'); if (baseId) return baseId; if (!this._element || !this._element.id) return ''; return this._element.id + '$' + this.get_name(); }
function Sys$UI$Behavior$get_name() { if (arguments.length !== 0) throw Error.parameterCount(); if (this._name) return this._name; var name = Object.getTypeName(this); var i = name.lastIndexOf('.'); if (i != -1) name = name.substr(i + 1); if (!this.get_isInitialized()) this._name = name; return name; }
function Sys$UI$Behavior$set_name(value) {
    var e = Function._validateParams(arguments, [{ name: "value", type: String }]); if (e) throw e; if ((value === '') || (value.charAt(0) === ' ') || (value.charAt(value.length - 1) === ' '))
        throw Error.argument('value', Sys.Res.invalidId); if (typeof (this._element[value]) !== 'undefined')
            throw Error.invalidOperation(String.format(Sys.Res.behaviorDuplicateName, value)); if (this.get_isInitialized()) throw Error.invalidOperation(Sys.Res.cantSetNameAfterInit); this._name = value;
}
function Sys$UI$Behavior$initialize() { Sys.UI.Behavior.callBaseMethod(this, 'initialize'); var name = this.get_name(); if (name) this._element[name] = this; }
function Sys$UI$Behavior$dispose() {
    Sys.UI.Behavior.callBaseMethod(this, 'dispose'); if (this._element) {
        var name = this.get_name(); if (name) { this._element[name] = null; }
        Array.remove(this._element._behaviors, this); delete this._element;
    }
}
Sys.UI.Behavior.prototype = { _name: null, get_element: Sys$UI$Behavior$get_element, get_id: Sys$UI$Behavior$get_id, get_name: Sys$UI$Behavior$get_name, set_name: Sys$UI$Behavior$set_name, initialize: Sys$UI$Behavior$initialize, dispose: Sys$UI$Behavior$dispose }
Sys.UI.Behavior.registerClass('Sys.UI.Behavior', Sys.Component); Sys.UI.Behavior.getBehaviorByName = function Sys$UI$Behavior$getBehaviorByName(element, name) { var e = Function._validateParams(arguments, [{ name: "element", domElement: true }, { name: "name", type: String }]); if (e) throw e; var b = element[name]; return (b && Sys.UI.Behavior.isInstanceOfType(b)) ? b : null; }
Sys.UI.Behavior.getBehaviors = function Sys$UI$Behavior$getBehaviors(element) { var e = Function._validateParams(arguments, [{ name: "element", domElement: true }]); if (e) throw e; if (!element._behaviors) return []; return Array.clone(element._behaviors); }
Sys.UI.Behavior.getBehaviorsByType = function Sys$UI$Behavior$getBehaviorsByType(element, type) {
    var e = Function._validateParams(arguments, [{ name: "element", domElement: true }, { name: "type", type: Type }]); if (e) throw e; var behaviors = element._behaviors; var results = []; if (behaviors) { for (var i = 0, l = behaviors.length; i < l; i++) { if (type.isInstanceOfType(behaviors[i])) { results[results.length] = behaviors[i]; } } }
    return results;
}
Sys.UI.VisibilityMode = function Sys$UI$VisibilityMode() { if (arguments.length !== 0) throw Error.parameterCount(); throw Error.notImplemented(); }
Sys.UI.VisibilityMode.prototype = { hide: 0, collapse: 1 }
Sys.UI.VisibilityMode.registerEnum("Sys.UI.VisibilityMode"); Sys.UI.Control = function Sys$UI$Control(element) { var e = Function._validateParams(arguments, [{ name: "element", domElement: true }]); if (e) throw e; if (typeof (element.control) != 'undefined') throw Error.invalidOperation(Sys.Res.controlAlreadyDefined); Sys.UI.Control.initializeBase(this); this._element = element; element.control = this; }
function Sys$UI$Control$get_element() { if (arguments.length !== 0) throw Error.parameterCount(); return this._element; }
function Sys$UI$Control$get_id() { if (arguments.length !== 0) throw Error.parameterCount(); if (!this._element) return ''; return this._element.id; }
function Sys$UI$Control$set_id(value) { var e = Function._validateParams(arguments, [{ name: "value", type: String }]); if (e) throw e; throw Error.invalidOperation(Sys.Res.cantSetId); }
function Sys$UI$Control$get_parent() {
    if (arguments.length !== 0) throw Error.parameterCount(); if (this._parent) return this._parent; if (!this._element) return null; var parentElement = this._element.parentNode; while (parentElement) {
        if (parentElement.control) { return parentElement.control; }
        parentElement = parentElement.parentNode;
    }
    return null;
}
function Sys$UI$Control$set_parent(value) {
    var e = Function._validateParams(arguments, [{ name: "value", type: Sys.UI.Control }]); if (e) throw e; if (!this._element) throw Error.invalidOperation(Sys.Res.cantBeCalledAfterDispose); var parents = [this]; var current = value; while (current) { if (Array.contains(parents, current)) throw Error.invalidOperation(Sys.Res.circularParentChain); parents[parents.length] = current; current = current.get_parent(); }
    this._parent = value;
}
function Sys$UI$Control$get_visibilityMode() { if (arguments.length !== 0) throw Error.parameterCount(); if (!this._element) throw Error.invalidOperation(Sys.Res.cantBeCalledAfterDispose); return Sys.UI.DomElement.getVisibilityMode(this._element); }
function Sys$UI$Control$set_visibilityMode(value) { var e = Function._validateParams(arguments, [{ name: "value", type: Sys.UI.VisibilityMode }]); if (e) throw e; if (!this._element) throw Error.invalidOperation(Sys.Res.cantBeCalledAfterDispose); Sys.UI.DomElement.setVisibilityMode(this._element, value); }
function Sys$UI$Control$get_visible() { if (arguments.length !== 0) throw Error.parameterCount(); if (!this._element) throw Error.invalidOperation(Sys.Res.cantBeCalledAfterDispose); return Sys.UI.DomElement.getVisible(this._element); }
function Sys$UI$Control$set_visible(value) { var e = Function._validateParams(arguments, [{ name: "value", type: Boolean }]); if (e) throw e; if (!this._element) throw Error.invalidOperation(Sys.Res.cantBeCalledAfterDispose); Sys.UI.DomElement.setVisible(this._element, value) }
function Sys$UI$Control$addCssClass(className) { var e = Function._validateParams(arguments, [{ name: "className", type: String }]); if (e) throw e; if (!this._element) throw Error.invalidOperation(Sys.Res.cantBeCalledAfterDispose); Sys.UI.DomElement.addCssClass(this._element, className); }
function Sys$UI$Control$dispose() {
    Sys.UI.Control.callBaseMethod(this, 'dispose'); if (this._element) { this._element.control = undefined; delete this._element; }
    if (this._parent) delete this._parent;
}
function Sys$UI$Control$onBubbleEvent(source, args) { var e = Function._validateParams(arguments, [{ name: "source" }, { name: "args", type: Sys.EventArgs }]); if (e) throw e; return false; }
function Sys$UI$Control$raiseBubbleEvent(source, args) {
    var e = Function._validateParams(arguments, [{ name: "source" }, { name: "args", type: Sys.EventArgs }]); if (e) throw e; var currentTarget = this.get_parent(); while (currentTarget) {
        if (currentTarget.onBubbleEvent(source, args)) { return; }
        currentTarget = currentTarget.get_parent();
    }
}
function Sys$UI$Control$removeCssClass(className) { var e = Function._validateParams(arguments, [{ name: "className", type: String }]); if (e) throw e; if (!this._element) throw Error.invalidOperation(Sys.Res.cantBeCalledAfterDispose); Sys.UI.DomElement.removeCssClass(this._element, className); }
function Sys$UI$Control$toggleCssClass(className) { var e = Function._validateParams(arguments, [{ name: "className", type: String }]); if (e) throw e; if (!this._element) throw Error.invalidOperation(Sys.Res.cantBeCalledAfterDispose); Sys.UI.DomElement.toggleCssClass(this._element, className); }
Sys.UI.Control.prototype = { _parent: null, _visibilityMode: Sys.UI.VisibilityMode.hide, get_element: Sys$UI$Control$get_element, get_id: Sys$UI$Control$get_id, set_id: Sys$UI$Control$set_id, get_parent: Sys$UI$Control$get_parent, set_parent: Sys$UI$Control$set_parent, get_visibilityMode: Sys$UI$Control$get_visibilityMode, set_visibilityMode: Sys$UI$Control$set_visibilityMode, get_visible: Sys$UI$Control$get_visible, set_visible: Sys$UI$Control$set_visible, addCssClass: Sys$UI$Control$addCssClass, dispose: Sys$UI$Control$dispose, onBubbleEvent: Sys$UI$Control$onBubbleEvent, raiseBubbleEvent: Sys$UI$Control$raiseBubbleEvent, removeCssClass: Sys$UI$Control$removeCssClass, toggleCssClass: Sys$UI$Control$toggleCssClass }
Sys.UI.Control.registerClass('Sys.UI.Control', Sys.Component); Type.registerNamespace('Sys'); Sys.Res = { 'urlMustBeLessThan1024chars': 'The history state must be small enough to not make the url larger than 1024 characters.', 'argumentTypeName': 'Value is not the name of an existing type.', 'methodRegisteredTwice': 'Method {0} has already been registered.', 'cantSetIdAfterInit': 'The id property can\'t be set on this object after initialization.', 'cantBeCalledAfterDispose': 'Can\'t be called after dispose.', 'componentCantSetIdAfterAddedToApp': 'The id property of a component can\'t be set after it\'s been added to the Application object.', 'behaviorDuplicateName': 'A behavior with name \'{0}\' already exists or it is the name of an existing property on the target element.', 'notATypeName': 'Value is not a valid type name.', 'typeShouldBeTypeOrString': 'Value is not a valid type or a valid type name.', 'historyInvalidHistorySettingCombination': 'Cannot set enableHistory to false when ScriptManager.EnableHistory is true.', 'stateMustBeStringDictionary': 'The state object can only have null and string fields.', 'boolTrueOrFalse': 'Value must be \'true\' or \'false\'.', 'scriptLoadFailedNoHead': 'ScriptLoader requires pages to contain a <head> element.', 'stringFormatInvalid': 'The format string is invalid.', 'referenceNotFound': 'Component \'{0}\' was not found.', 'enumReservedName': '\'{0}\' is a reserved name that can\'t be used as an enum value name.', 'eventHandlerNotFound': 'Handler not found.', 'circularParentChain': 'The chain of control parents can\'t have circular references.', 'undefinedEvent': '\'{0}\' is not an event.', 'notAMethod': '{0} is not a method.', 'propertyUndefined': '\'{0}\' is not a property or an existing field.', 'historyCannotEnableHistory': 'Cannot set enableHistory after initialization.', 'eventHandlerInvalid': 'Handler was not added through the Sys.UI.DomEvent.addHandler method.', 'scriptLoadFailedDebug': 'The script \'{0}\' failed to load. Check for:\r\n Inaccessible path.\r\n Script errors. (IE) Enable \'Display a notification about every script error\' under advanced settings.\r\n Missing call to Sys.Application.notifyScriptLoaded().', 'propertyNotWritable': '\'{0}\' is not a writable property.', 'enumInvalidValueName': '\'{0}\' is not a valid name for an enum value.', 'controlAlreadyDefined': 'A control is already associated with the element.', 'addHandlerCantBeUsedForError': 'Can\'t add a handler for the error event using this method. Please set the window.onerror property instead.', 'namespaceContainsObject': 'Object {0} already exists and is not a namespace.', 'cantAddNonFunctionhandler': 'Can\'t add a handler that is not a function.', 'invalidNameSpace': 'Value is not a valid namespace identifier.', 'notAnInterface': 'Value is not a valid interface.', 'eventHandlerNotFunction': 'Handler must be a function.', 'propertyNotAnArray': '\'{0}\' is not an Array property.', 'typeRegisteredTwice': 'Type {0} has already been registered. The type may be defined multiple times or the script file that defines it may have already been loaded. A possible cause is a change of settings during a partial update.', 'cantSetNameAfterInit': 'The name property can\'t be set on this object after initialization.', 'historyMissingFrame': 'For the history feature to work in IE, the page must have an iFrame element with id \'__historyFrame\' pointed to a page that gets its title from the \'title\' query string parameter and calls Sys.Application._onIFrameLoad() on the parent window. This can be done by setting EnableHistory to true on ScriptManager.', 'appDuplicateComponent': 'Two components with the same id \'{0}\' can\'t be added to the application.', 'historyCannotAddHistoryPointWithHistoryDisabled': 'A history point can only be added if enableHistory is set to true.', 'appComponentMustBeInitialized': 'Components must be initialized before they are added to the Application object.', 'baseNotAClass': 'Value is not a class.', 'methodNotFound': 'No method found with name \'{0}\'.', 'arrayParseBadFormat': 'Value must be a valid string representation for an array. It must start with a \'[\' and end with a \']\'.', 'stateFieldNameInvalid': 'State field names must not contain any \'=\' characters.', 'cantSetId': 'The id property can\'t be set on this object.', 'historyMissingHiddenInput': 'For the history feature to work in Safari 2, the page must have a hidden input element with id \'__history\'.', 'stringFormatBraceMismatch': 'The format string contains an unmatched opening or closing brace.', 'enumValueNotInteger': 'An enumeration definition can only contain integer values.', 'propertyNullOrUndefined': 'Cannot set the properties of \'{0}\' because it returned a null value.', 'argumentDomNode': 'Value must be a DOM element or a text node.', 'componentCantSetIdTwice': 'The id property of a component can\'t be set more than once.', 'createComponentOnDom': 'Value must be null for Components that are not Controls or Behaviors.', 'createNotComponent': '{0} does not derive from Sys.Component.', 'createNoDom': 'Value must not be null for Controls and Behaviors.', 'cantAddWithoutId': 'Can\'t add a component that doesn\'t have an id.', 'badTypeName': 'Value is not the name of the type being registered or the name is a reserved word.', 'argumentInteger': 'Value must be an integer.', 'scriptLoadMultipleCallbacks': 'The script \'{0}\' contains multiple calls to Sys.Application.notifyScriptLoaded(). Only one is allowed.', 'invokeCalledTwice': 'Cannot call invoke more than once.', 'webServiceFailed': 'The server method \'{0}\' failed with the following error: {1}', 'webServiceInvalidJsonWrapper': 'The server method \'{0}\' returned invalid data. The \'d\' property is missing from the JSON wrapper.', 'argumentType': 'Object cannot be converted to the required type.', 'argumentNull': 'Value cannot be null.', 'controlCantSetId': 'The id property can\'t be set on a control.', 'formatBadFormatSpecifier': 'Format specifier was invalid.', 'webServiceFailedNoMsg': 'The server method \'{0}\' failed.', 'argumentDomElement': 'Value must be a DOM element.', 'invalidExecutorType': 'Could not create a valid Sys.Net.WebRequestExecutor from: {0}.', 'cannotCallBeforeResponse': 'Cannot call {0} when responseAvailable is false.', 'actualValue': 'Actual value was {0}.', 'enumInvalidValue': '\'{0}\' is not a valid value for enum {1}.', 'scriptLoadFailed': 'The script \'{0}\' could not be loaded.', 'parameterCount': 'Parameter count mismatch.', 'cannotDeserializeEmptyString': 'Cannot deserialize empty string.', 'formatInvalidString': 'Input string was not in a correct format.', 'invalidTimeout': 'Value must be greater than or equal to zero.', 'cannotAbortBeforeStart': 'Cannot abort when executor has not started.', 'argument': 'Value does not fall within the expected range.', 'cannotDeserializeInvalidJson': 'Cannot deserialize. The data does not correspond to valid JSON.', 'invalidHttpVerb': 'httpVerb cannot be set to an empty or null string.', 'nullWebRequest': 'Cannot call executeRequest with a null webRequest.', 'eventHandlerInvalid': 'Handler was not added through the Sys.UI.DomEvent.addHandler method.', 'cannotSerializeNonFiniteNumbers': 'Cannot serialize non finite numbers.', 'argumentUndefined': 'Value cannot be undefined.', 'webServiceInvalidReturnType': 'The server method \'{0}\' returned an invalid type. Expected type: {1}', 'servicePathNotSet': 'The path to the web service has not been set.', 'argumentTypeWithTypes': 'Object of type \'{0}\' cannot be converted to type \'{1}\'.', 'cannotCallOnceStarted': 'Cannot call {0} once started.', 'badBaseUrl1': 'Base URL does not contain ://.', 'badBaseUrl2': 'Base URL does not contain another /.', 'badBaseUrl3': 'Cannot find last / in base URL.', 'setExecutorAfterActive': 'Cannot set executor after it has become active.', 'paramName': 'Parameter name: {0}', 'cannotCallOutsideHandler': 'Cannot call {0} outside of a completed event handler.', 'cannotSerializeObjectWithCycle': 'Cannot serialize object with cyclic reference within child properties.', 'format': 'One of the identified items was in an invalid format.', 'assertFailedCaller': 'Assertion Failed: {0}\r\nat {1}', 'argumentOutOfRange': 'Specified argument was out of the range of valid values.', 'webServiceTimedOut': 'The server method \'{0}\' timed out.', 'notImplemented': 'The method or operation is not implemented.', 'assertFailed': 'Assertion Failed: {0}', 'invalidOperation': 'Operation is not valid due to the current state of the object.', 'breakIntoDebugger': '{0}\r\n\r\nBreak into debugger?' }; if (typeof (Sys) !== 'undefined') Sys.Application.notifyScriptLoaded();

/* MicrosoftMvcAjax.debug.js */
Type.registerNamespace('Sys.Mvc'); Sys.Mvc.$create_AjaxOptions = function Sys_Mvc_AjaxOptions() { return {}; }
Sys.Mvc.InsertionMode = function () { }; Sys.Mvc.InsertionMode.prototype = { replace: 0, insertBefore: 1, insertAfter: 2 }
Sys.Mvc.InsertionMode.registerEnum('Sys.Mvc.InsertionMode', false); Sys.Mvc.AjaxContext = function Sys_Mvc_AjaxContext(request, updateTarget, loadingElement, insertionMode) { this._request = request; this._updateTarget = updateTarget; this._loadingElement = loadingElement; this._insertionMode = insertionMode; }
Sys.Mvc.AjaxContext.prototype = {
    _insertionMode: 0, _loadingElement: null, _response: null, _request: null, _updateTarget: null, get_data: function Sys_Mvc_AjaxContext$get_data() {
        if (this._response) { return this._response.get_responseData(); }
        else { return null; }
    }, get_insertionMode: function Sys_Mvc_AjaxContext$get_insertionMode() { return this._insertionMode; }, get_loadingElement: function Sys_Mvc_AjaxContext$get_loadingElement() { return this._loadingElement; }, get_object: function Sys_Mvc_AjaxContext$get_object() { var executor = this.get_response(); return (executor) ? executor.get_object() : null; }, get_response: function Sys_Mvc_AjaxContext$get_response() { return this._response; }, set_response: function Sys_Mvc_AjaxContext$set_response(value) { this._response = value; return value; }, get_request: function Sys_Mvc_AjaxContext$get_request() { return this._request; }, get_updateTarget: function Sys_Mvc_AjaxContext$get_updateTarget() { return this._updateTarget; }
}
Sys.Mvc.AsyncHyperlink = function Sys_Mvc_AsyncHyperlink() { }
Sys.Mvc.AsyncHyperlink.handleClick = function Sys_Mvc_AsyncHyperlink$handleClick(anchor, evt, ajaxOptions) { evt.preventDefault(); Sys.Mvc.MvcHelpers._asyncRequest(anchor.href, 'post', '', anchor, ajaxOptions); }
Sys.Mvc.MvcHelpers = function Sys_Mvc_MvcHelpers() { }
Sys.Mvc.MvcHelpers._serializeSubmitButton = function Sys_Mvc_MvcHelpers$_serializeSubmitButton(element, offsetX, offsetY) {
    if (element.disabled) { return null; }
    var name = element.name; if (name) {
        var tagName = element.tagName.toUpperCase(); var encodedName = encodeURIComponent(name); var inputElement = element; if (tagName === 'INPUT') {
            var type = inputElement.type; if (type === 'submit') { return encodedName + '=' + encodeURIComponent(inputElement.value); }
            else if (type === 'image') { return encodedName + '.x=' + offsetX + '&' + encodedName + '.y=' + offsetY; }
        }
        else if ((tagName === 'BUTTON') && (name.length) && (inputElement.type === 'submit')) { return encodedName + '=' + encodeURIComponent(inputElement.value); }
    }
    return null;
}
Sys.Mvc.MvcHelpers._serializeForm = function Sys_Mvc_MvcHelpers$_serializeForm(form) {
    var formElements = form.elements; var formBody = new Sys.StringBuilder(); var count = formElements.length; for (var i = 0; i < count; i++) {
        var element = formElements[i]; var name = element.name; if (!name || !name.length) { continue; }
        var tagName = element.tagName.toUpperCase(); if (tagName === 'INPUT') { var inputElement = element; var type = inputElement.type; if ((type === 'text') || (type === 'password') || (type === 'hidden') || (((type === 'checkbox') || (type === 'radio')) && element.checked)) { formBody.append(encodeURIComponent(name)); formBody.append('='); formBody.append(encodeURIComponent(inputElement.value)); formBody.append('&'); } }
        else if (tagName === 'SELECT') { var selectElement = element; var optionCount = selectElement.options.length; for (var j = 0; j < optionCount; j++) { var optionElement = selectElement.options[j]; if (optionElement.selected) { formBody.append(encodeURIComponent(name)); formBody.append('='); formBody.append(encodeURIComponent(optionElement.value)); formBody.append('&'); } } }
        else if (tagName === 'TEXTAREA') { formBody.append(encodeURIComponent(name)); formBody.append('='); formBody.append(encodeURIComponent((element.value))); formBody.append('&'); }
    }
    var additionalInput = form._additionalInput; if (additionalInput) { formBody.append(additionalInput); formBody.append('&'); }
    return formBody.toString();
}
Sys.Mvc.MvcHelpers._asyncRequest = function Sys_Mvc_MvcHelpers$_asyncRequest(url, verb, body, triggerElement, ajaxOptions) {
    if (ajaxOptions.confirm) { if (!confirm(ajaxOptions.confirm)) { return; } }
    if (ajaxOptions.url) { url = ajaxOptions.url; }
    if (ajaxOptions.httpMethod) { verb = ajaxOptions.httpMethod; }
    if (body.length > 0 && !body.endsWith('&')) { body += '&'; }
    body += 'X-Requested-With=XMLHttpRequest'; var upperCaseVerb = verb.toUpperCase(); var isGetOrPost = (upperCaseVerb === 'GET' || upperCaseVerb === 'POST'); if (!isGetOrPost) { body += '&'; body += 'X-HTTP-Method-Override=' + upperCaseVerb; }
    var requestBody = ''; if (upperCaseVerb === 'GET' || upperCaseVerb === 'DELETE') {
        if (url.indexOf('?') > -1) {
            if (!url.endsWith('&')) { url += '&'; }
            url += body;
        }
        else { url += '?'; url += body; }
    }
    else { requestBody = body; }
    var request = new Sys.Net.WebRequest(); request.set_url(url); if (isGetOrPost) { request.set_httpVerb(verb); }
    else { request.set_httpVerb('POST'); request.get_headers()['X-HTTP-Method-Override'] = upperCaseVerb; }
    request.set_body(requestBody); if (verb.toUpperCase() === 'PUT') { request.get_headers()['Content-Type'] = 'application/x-www-form-urlencoded;'; }
    request.get_headers()['X-Requested-With'] = 'XMLHttpRequest'; var updateElement = null; if (ajaxOptions.updateTargetId) { updateElement = $get(ajaxOptions.updateTargetId); }
    var loadingElement = null; if (ajaxOptions.loadingElementId) { loadingElement = $get(ajaxOptions.loadingElementId); }
    var ajaxContext = new Sys.Mvc.AjaxContext(request, updateElement, loadingElement, ajaxOptions.insertionMode); var continueRequest = true; if (ajaxOptions.onBegin) { continueRequest = ajaxOptions.onBegin(ajaxContext) !== false; }
    if (loadingElement) { Sys.UI.DomElement.setVisible(ajaxContext.get_loadingElement(), true); }
    if (continueRequest) { request.add_completed(Function.createDelegate(null, function (executor) { Sys.Mvc.MvcHelpers._onComplete(request, ajaxOptions, ajaxContext); })); request.invoke(); }
}
Sys.Mvc.MvcHelpers._onComplete = function Sys_Mvc_MvcHelpers$_onComplete(request, ajaxOptions, ajaxContext) {
    ajaxContext.set_response(request.get_executor()); if (ajaxOptions.onComplete && ajaxOptions.onComplete(ajaxContext) === false) { return; }
    var statusCode = ajaxContext.get_response().get_statusCode(); if ((statusCode >= 200 && statusCode < 300) || statusCode === 304 || statusCode === 1223) {
        if (statusCode !== 204 && statusCode !== 304 && statusCode !== 1223) {
            var contentType = ajaxContext.get_response().getResponseHeader('Content-Type'); if ((contentType) && (contentType.indexOf('application/x-javascript') !== -1)) { eval(ajaxContext.get_data()); }
            else { Sys.Mvc.MvcHelpers.updateDomElement(ajaxContext.get_updateTarget(), ajaxContext.get_insertionMode(), ajaxContext.get_data()); }
        }
        if (ajaxOptions.onSuccess) { ajaxOptions.onSuccess(ajaxContext); }
    }
    else { if (ajaxOptions.onFailure) { ajaxOptions.onFailure(ajaxContext); } }
    if (ajaxContext.get_loadingElement()) { Sys.UI.DomElement.setVisible(ajaxContext.get_loadingElement(), false); }
}
Sys.Mvc.MvcHelpers.updateDomElement = function Sys_Mvc_MvcHelpers$updateDomElement(target, insertionMode, content) {
    if (target) {
        switch (insertionMode) {
            case Sys.Mvc.InsertionMode.replace: target.innerHTML = content; break; case Sys.Mvc.InsertionMode.insertBefore: if (content && content.length > 0) { target.innerHTML = content + target.innerHTML.trimStart(); }
                break; case Sys.Mvc.InsertionMode.insertAfter: if (content && content.length > 0) { target.innerHTML = target.innerHTML.trimEnd() + content; }
                    break;
        }
    }
}
Sys.Mvc.AsyncForm = function Sys_Mvc_AsyncForm() { }
Sys.Mvc.AsyncForm.handleClick = function Sys_Mvc_AsyncForm$handleClick(form, evt) { var additionalInput = Sys.Mvc.MvcHelpers._serializeSubmitButton(evt.target, evt.offsetX, evt.offsetY); form._additionalInput = additionalInput; }
Sys.Mvc.AsyncForm.handleSubmit = function Sys_Mvc_AsyncForm$handleSubmit(form, evt, ajaxOptions) { evt.preventDefault(); var body = Sys.Mvc.MvcHelpers._serializeForm(form); Sys.Mvc.MvcHelpers._asyncRequest(form.action, form.method || 'post', body, form, ajaxOptions); }
Sys.Mvc.AjaxContext.registerClass('Sys.Mvc.AjaxContext'); Sys.Mvc.AsyncHyperlink.registerClass('Sys.Mvc.AsyncHyperlink'); Sys.Mvc.MvcHelpers.registerClass('Sys.Mvc.MvcHelpers'); Sys.Mvc.AsyncForm.registerClass('Sys.Mvc.AsyncForm');

/* ui.core.js */
; jQuery.ui || (function ($) {
    var _remove = $.fn.remove, isFF2 = $.browser.mozilla && (parseFloat($.browser.version) < 1.9); $.ui = {
        version: "1.7.1", plugin: {
            add: function (module, option, set) { var proto = $.ui[module].prototype; for (var i in set) { proto.plugins[i] = proto.plugins[i] || []; proto.plugins[i].push([option, set[i]]); } }, call: function (instance, name, args) {
                var set = instance.plugins[name]; if (!set || !instance.element[0].parentNode) { return; }
                for (var i = 0; i < set.length; i++) { if (instance.options[set[i][0]]) { set[i][1].apply(instance.element, args); } }
            }
        }, contains: function (a, b) {
            return document.compareDocumentPosition
            ? a.compareDocumentPosition(b) & 16
            : a !== b && a.contains(b);
        }, hasScroll: function (el, a) {
            if ($(el).css('overflow') == 'hidden') { return false; }
            var scroll = (a && a == 'left') ? 'scrollLeft' : 'scrollTop', has = false; if (el[scroll] > 0) { return true; }
            el[scroll] = 1; has = (el[scroll] > 0); el[scroll] = 0; return has;
        }, isOverAxis: function (x, reference, size) { return (x > reference) && (x < (reference + size)); }, isOver: function (y, x, top, left, height, width) { return $.ui.isOverAxis(y, top, height) && $.ui.isOverAxis(x, left, width); }, keyCode: { BACKSPACE: 8, CAPS_LOCK: 20, COMMA: 188, CONTROL: 17, DELETE: 46, DOWN: 40, END: 35, ENTER: 13, ESCAPE: 27, HOME: 36, INSERT: 45, LEFT: 37, NUMPAD_ADD: 107, NUMPAD_DECIMAL: 110, NUMPAD_DIVIDE: 111, NUMPAD_ENTER: 108, NUMPAD_MULTIPLY: 106, NUMPAD_SUBTRACT: 109, PAGE_DOWN: 34, PAGE_UP: 33, PERIOD: 190, RIGHT: 39, SHIFT: 16, SPACE: 32, TAB: 9, UP: 38 }
    }; if (isFF2) {
        var attr = $.attr, removeAttr = $.fn.removeAttr, ariaNS = "http://www.w3.org/2005/07/aaa", ariaState = /^aria-/, ariaRole = /^wairole:/; $.attr = function (elem, name, value) {
            var set = value !== undefined; return (name == 'role'
            ? (set
            ? attr.call(this, elem, name, "wairole:" + value)
            : (attr.apply(this, arguments) || "").replace(ariaRole, ""))
            : (ariaState.test(name)
            ? (set
            ? elem.setAttributeNS(ariaNS, name.replace(ariaState, "aaa:"), value)
            : attr.call(this, elem, name.replace(ariaState, "aaa:")))
            : attr.apply(this, arguments)));
        }; $.fn.removeAttr = function (name) {
            return (ariaState.test(name)
            ? this.each(function () { this.removeAttributeNS(ariaNS, name.replace(ariaState, "")); }) : removeAttr.call(this, name));
        };
    }
    $.fn.extend({
        remove: function () { $("*", this).add(this).each(function () { $(this).triggerHandler("remove"); }); return _remove.apply(this, arguments); }, enableSelection: function () {
            return this
            .attr('unselectable', 'off')
            .css('MozUserSelect', '')
            .unbind('selectstart.ui');
        }, disableSelection: function () {
            return this
            .attr('unselectable', 'on')
            .css('MozUserSelect', 'none')
            .bind('selectstart.ui', function () { return false; });
        }, scrollParent: function () {
            var scrollParent; if (($.browser.msie && (/(static|relative)/).test(this.css('position'))) || (/absolute/).test(this.css('position'))) { scrollParent = this.parents().filter(function () { return (/(relative|absolute|fixed)/).test($.curCSS(this, 'position', 1)) && (/(auto|scroll)/).test($.curCSS(this, 'overflow', 1) + $.curCSS(this, 'overflow-y', 1) + $.curCSS(this, 'overflow-x', 1)); }).eq(0); } else { scrollParent = this.parents().filter(function () { return (/(auto|scroll)/).test($.curCSS(this, 'overflow', 1) + $.curCSS(this, 'overflow-y', 1) + $.curCSS(this, 'overflow-x', 1)); }).eq(0); }
            return (/fixed/).test(this.css('position')) || !scrollParent.length ? $(document) : scrollParent;
        }
    }); $.extend($.expr[':'], {
        data: function (elem, i, match) { return !!$.data(elem, match[3]); }, focusable: function (element) {
            var nodeName = element.nodeName.toLowerCase(), tabIndex = $.attr(element, 'tabindex'); return (/input|select|textarea|button|object/.test(nodeName)
            ? !element.disabled
            : 'a' == nodeName || 'area' == nodeName
            ? element.href || !isNaN(tabIndex)
            : !isNaN(tabIndex))
            && !$(element)['area' == nodeName ? 'parents' : 'closest'](':hidden').length;
        }, tabbable: function (element) { var tabIndex = $.attr(element, 'tabindex'); return (isNaN(tabIndex) || tabIndex >= 0) && $(element).is(':focusable'); }
    }); function getter(namespace, plugin, method, args) {
        function getMethods(type) { var methods = $[namespace][plugin][type] || []; return (typeof methods == 'string' ? methods.split(/,?\s+/) : methods); }
        var methods = getMethods('getter'); if (args.length == 1 && typeof args[0] == 'string') { methods = methods.concat(getMethods('getterSetter')); }
        return ($.inArray(method, methods) != -1);
    }
    $.widget = function (name, prototype) {
        var namespace = name.split(".")[0]; name = name.split(".")[1]; $.fn[name] = function (options) {
            var isMethodCall = (typeof options == 'string'), args = Array.prototype.slice.call(arguments, 1); if (isMethodCall && options.substring(0, 1) == '_') { return this; }
            if (isMethodCall && getter(namespace, name, options, args)) {
                var instance = $.data(this[0], name); return (instance ? instance[options].apply(instance, args)
                : undefined);
            }
            return this.each(function () { var instance = $.data(this, name); (!instance && !isMethodCall && $.data(this, name, new $[namespace][name](this, options))._init()); (instance && isMethodCall && $.isFunction(instance[options]) && instance[options].apply(instance, args)); });
        }; $[namespace] = $[namespace] || {}; $[namespace][name] = function (element, options) {
            var self = this; this.namespace = namespace; this.widgetName = name; this.widgetEventPrefix = $[namespace][name].eventPrefix || name; this.widgetBaseClass = namespace + '-' + name; this.options = $.extend({}, $.widget.defaults, $[namespace][name].defaults, $.metadata && $.metadata.get(element)[name], options); this.element = $(element)
            .bind('setData.' + name, function (event, key, value) { if (event.target == element) { return self._setData(key, value); } })
            .bind('getData.' + name, function (event, key) { if (event.target == element) { return self._getData(key); } })
            .bind('remove', function () { return self.destroy(); });
        }; $[namespace][name].prototype = $.extend({}, $.widget.prototype, prototype); $[namespace][name].getterSetter = 'option';
    }; $.widget.prototype = {
        _init: function () { }, destroy: function () {
            this.element.removeData(this.widgetName)
            .removeClass(this.widgetBaseClass + '-disabled' + ' ' + this.namespace + '-state-disabled')
            .removeAttr('aria-disabled');
        }, option: function (key, value) {
            var options = key, self = this; if (typeof key == "string") {
                if (value === undefined) { return this._getData(key); }
                options = {}; options[key] = value;
            }
            $.each(options, function (key, value) { self._setData(key, value); });
        }, _getData: function (key) { return this.options[key]; }, _setData: function (key, value) {
            this.options[key] = value; if (key == 'disabled') {
                this.element
                [value ? 'addClass' : 'removeClass'](this.widgetBaseClass + '-disabled' + ' ' +
                this.namespace + '-state-disabled')
                .attr("aria-disabled", value);
            }
        }, enable: function () { this._setData('disabled', false); }, disable: function () { this._setData('disabled', true); }, _trigger: function (type, event, data) {
            var callback = this.options[type], eventName = (type == this.widgetEventPrefix
            ? type : this.widgetEventPrefix + type); event = $.Event(event); event.type = eventName; if (event.originalEvent) { for (var i = $.event.props.length, prop; i;) { prop = $.event.props[--i]; event[prop] = event.originalEvent[prop]; } }
            this.element.trigger(event, data); return !($.isFunction(callback) && callback.call(this.element[0], event, data) === false
            || event.isDefaultPrevented());
        }
    }; $.widget.defaults = { disabled: false }; $.ui.mouse = {
        _mouseInit: function () {
            var self = this; this.element
            .bind('mousedown.' + this.widgetName, function (event) { return self._mouseDown(event); })
            .bind('click.' + this.widgetName, function (event) { if (self._preventClickEvent) { self._preventClickEvent = false; event.stopImmediatePropagation(); return false; } }); if ($.browser.msie) { this._mouseUnselectable = this.element.attr('unselectable'); this.element.attr('unselectable', 'on'); }
            this.started = false;
        }, _mouseDestroy: function () {
            this.element.unbind('.' + this.widgetName); ($.browser.msie
            && this.element.attr('unselectable', this._mouseUnselectable));
        }, _mouseDown: function (event) {
            event.originalEvent = event.originalEvent || {}; if (event.originalEvent.mouseHandled) { return; }
            (this._mouseStarted && this._mouseUp(event)); this._mouseDownEvent = event; var self = this, btnIsLeft = (event.which == 1), elIsCancel = (typeof this.options.cancel == "string" ? $(event.target).parents().add(event.target).filter(this.options.cancel).length : false); if (!btnIsLeft || elIsCancel || !this._mouseCapture(event)) { return true; }
            this.mouseDelayMet = !this.options.delay; if (!this.mouseDelayMet) { this._mouseDelayTimer = setTimeout(function () { self.mouseDelayMet = true; }, this.options.delay); }
            if (this._mouseDistanceMet(event) && this._mouseDelayMet(event)) { this._mouseStarted = (this._mouseStart(event) !== false); if (!this._mouseStarted) { event.preventDefault(); return true; } }
            this._mouseMoveDelegate = function (event) { return self._mouseMove(event); }; this._mouseUpDelegate = function (event) { return self._mouseUp(event); }; $(document)
            .bind('mousemove.' + this.widgetName, this._mouseMoveDelegate)
            .bind('mouseup.' + this.widgetName, this._mouseUpDelegate); ($.browser.safari || event.preventDefault()); event.originalEvent.mouseHandled = true; return true;
        }, _mouseMove: function (event) {
            if ($.browser.msie && !event.button) { return this._mouseUp(event); }
            if (this._mouseStarted) { this._mouseDrag(event); return event.preventDefault(); }
            if (this._mouseDistanceMet(event) && this._mouseDelayMet(event)) { this._mouseStarted = (this._mouseStart(this._mouseDownEvent, event) !== false); (this._mouseStarted ? this._mouseDrag(event) : this._mouseUp(event)); }
            return !this._mouseStarted;
        }, _mouseUp: function (event) {
            $(document)
            .unbind('mousemove.' + this.widgetName, this._mouseMoveDelegate)
            .unbind('mouseup.' + this.widgetName, this._mouseUpDelegate); if (this._mouseStarted) { this._mouseStarted = false; this._preventClickEvent = (event.target == this._mouseDownEvent.target); this._mouseStop(event); }
            return false;
        }, _mouseDistanceMet: function (event) { return (Math.max(Math.abs(this._mouseDownEvent.pageX - event.pageX), Math.abs(this._mouseDownEvent.pageY - event.pageY)) >= this.options.distance); }, _mouseDelayMet: function (event) { return this.mouseDelayMet; }, _mouseStart: function (event) { }, _mouseDrag: function (event) { }, _mouseStop: function (event) { }, _mouseCapture: function (event) { return true; }
    }; $.ui.mouse.defaults = { cancel: null, distance: 1, delay: 0 };
})(jQuery);

/* RollOverPopup.js */
//$(function () {
//    var hideDelay = 100; var showDelay = 500; var currentID; var hideTimer = null;
//    var container = $('<div id="personPopupContainer" >'
//    + '<table width="" border="0" cellspacing="0" cellpadding="0" align="center" class="personPopupPopup shadow">'
//    + '<tr>'
//    + '   <td><div id="personPopupContent">'
//    + '       <table><tr><td align="right" colspan="2" id="numberSosa"></td></tr>'
//    + '       <tr><td rowspan="2"><div id="personImage"></div></td><td><div id="personName"></div></td></tr>'
//    + '       <tr><td><div id="personId"></div></td></tr>'
//    + '       <tr><td colspan="2" class="italicText" id="birthDate"></td></tr>'
//    + '       <tr><td colspan="2" class="italicText" id="deathDate"></td></tr>'
//    + '       <tr><td colspan="2"><div id="brothersSisters"></div></td></tr>'
//    + '       <tr><td colspan="2" align="right" id="icons"></td></tr>'
//    + '   </table>'
//    + '   </div></td>'
//    + '</tr>'
//    + '</table>'
//    + '</div>');
//    $('body').append(container);
//    $('.personPopupTrigger').live('mouseover', function () {
//        $("#personPopupContainer").removeClass("tooltip-red"); var settings = $(this).attr('rel').split(';'); if (hideTimer)
//            clearTimeout(hideTimer); $('#personName').html('<a href="Tree/Tree/' + settings[1] + '">' + settings[0] + '</a>'); if (settings[13] == "True") { $('#personId').html('<img border="0" alt="!" src="Content/img/icone-voir.png" align="absmiddle" /><a href="IndividualSheet.mvc/DisplayIndividualSheet/' + settings[1] + '">Voir la Fiche complÃ¨te</a>'); }
//        if (settings[2] > 0) { $('#numberSosa').html(settings[2]); }
//        else { $('#numberSosa').html(''); }
//        var birth = ''; var death = ''; if (settings[3] != '') { birth = settings[3]; }
//        if (settings[5] != '') { death = settings[5]; }
//        if (settings[4] != '') { birth = birth + ' Ã  ' + settings[4]; }
//        if (settings[6] != '') { death = death + ' Ã  ' + settings[6]; }
//        if (settings[7] == 'M') {
//            if (birth != '') { birth = 'NÃ© ' + birth; }
//            if (death != '') { death = 'DÃ©cÃ©dÃ© ' + death; }
//        }
//        else {
//            if (birth != '') { birth = 'NÃ©e ' + birth; }
//            if (death != '') { death = 'DÃ©cÃ©dÃ©e ' + death; }
//        }
//        if (settings[12] != '' && settings.length > 11) { $('#personImage').html('<img width="50px" height="57px" src="' + settings[12] + '" height="100%" />'); }
//        $('#birthDate').html(birth); $('#deathDate').html(death); if (!($(this).attr("id") == "tooltipSearchRight")) {
//            var pos = $(this).offset(); var width = $(this).width(); var height = $(this).height(); var leftpos = (pos.left + width) + 'px'; var toppos = pos.top - 5 + 'px'; var winHeight = document.body.offsetHeight; var winWidth = document.body.offsetWidth; var popupHeight = 88; var popupWidth = 400; if (settings[2] > 0) { popupHeight = popupHeight + 15; }
//            if (birth != '') { popupHeight = popupHeight + 15; }
//            if (death != '') { popupHeight = popupHeight + 15; }
//            if (settings.length > 14) { popupHeight = popupHeight + 33; popupHeight = popupHeight + ((settings.length - 14) / 4) * 23; }
//            if (pos.left + width + popupWidth > winWidth) { leftpos = (pos.left) - popupWidth + 'px'; }
//            if (pos.top + popupHeight > winHeight) { toppos = pos.top - popupHeight + 'px'; }
//        }
//        else {
//            var pos = $(this).offset(); var width = $(this).width(); var height = $(this).height(); var leftpos = (pos.left + width) + 'px'; var toppos = pos.top + 'px'; var winHeight = document.body.offsetHeight; var winWidth = document.body.offsetWidth; var popupHeight = 88; var popupWidth = 500; if (settings[2] > 0) { popupHeight = popupHeight + 15; }
//            if (birth != '') { popupHeight = popupHeight + 15; }
//            if (death != '') { popupHeight = popupHeight + 15; }
//            if (settings.length > 14) { popupHeight = popupHeight + 33; popupHeight = popupHeight + ((settings.length - 14) / 4) * 23; }
//            leftpos = (pos.left) - popupWidth - width - 12 + 'px'; if (pos.top + popupHeight > winHeight) { toppos = pos.top - popupHeight + 'px'; }
//        }
//        container.css({ left: leftpos, top: toppos }); var iconsToShow = ''; if (settings[9] == 'True') { iconsToShow = iconsToShow + '<img src="Content/img/icone-alerte.png"/>'; }
//        $('#icons').html(iconsToShow); var names = '<table>'; var i = 14; if (settings) {
//            if (settings.length > 14) {
//                names = names + '<tr><td colspan="2"><br/>FrÃ¨res et SÅ“urs</td></tr>'
//                do {
//                    var brotherName = settings[i]; var brotherId = settings[i + 1]; var sex = settings[i + 2]; var isPrivate = settings[i + 3]; var imageSex = ''; if (isPrivate == 'True') { imageSex = '<img class="brotherStyleImage" src="Content/img/puce-neutre.png" style="border: 0px"/>'; brotherName = '?' }
//                    else {
//                        if (sex == 'M') { imageSex = '<img class="brotherStyleImage" src="Content/img/puce-masculin.png" style="border: 0px"/>'; }
//                        else { imageSex = '<img class="brotherStyleImage" src="Content/img/puce-feminin.png" style="border: 0px"/>'; }
//                    }
//                    names = names + '<tr><td><div class="brotherStyle">' + imageSex + '<a href="Tree/Tree/' + brotherId + '">' + brotherName + '</a></div></td</tr>'; i = i + 4;
//                }
//                while (i < settings.length)
//            }
//        }
//        names = names + "</table>"; $('#brothersSisters').html(names); var title = $(this).attr('alt'); if ($(this).attr('rel') == "") { $("#personPopupContainer").html(title); $("#personPopupContainer").addClass("tooltip-red"); }
//        hideTimer = setTimeout(function () { container.css('display', 'block'); }, showDelay);
//    }); $('.personPopupTrigger').live('mouseout', function () {
//        if (hideTimer)
//            clearTimeout(hideTimer); hideTimer = setTimeout(function () { container.css('display', 'none'); }, hideDelay);
//    }); $('#personPopupContainer').mouseover(function () {
//        if (hideTimer)
//            clearTimeout(hideTimer);
//    }); $('#personPopupContainer').mouseout(function () {
//        if (hideTimer)
//            clearTimeout(hideTimer); hideTimer = setTimeout(function () { container.css('display', 'none'); }, hideDelay);
//    });
//});

//#endregion SystÃ¨me


/***********************************************************
 *                                                         *
 *      Fonctions GÃ©nÃ©alogie                               *
 *                                                         *
 ***********************************************************/

//#region Fonctions Utilitaires

function loadingDelete() {
    $("#uiContent").empty();
    $("#uiContent").html("Suppression en cours...")
    $.blockUI({ message: $('#throbber'), css: { dispay: 'block', left: '40%' } });
}
function loading() {
    $("#uiContent").empty();
    $("#uiContent").html("Sauvegarde en cours...")
    $.blockUI({ message: $('#throbber'), css: { dispay: 'block' }, baseZ: 2000 });
}
function loadingInProgress() { $.blockUI({ message: $('#throbber'), css: { dispay: 'block' }, baseZ: 2000 }); }
function loadingSearchInProgressNoFacebox() {
    $("#colonneRight").html('<div align="center" style="width:691px;*width:667px;*margin-top:100px;font-weight:bold;margin-left:25px">Merci de patienter quelques secondes.</div><div align="center"> <br/>Nous calculons les rÃ©sultats les plus pertinents pour vos critÃ¨res de recherche.</div><div align="center"><h3><img src=Content/img/loading.gif align="center" style="margin-top:7px;*margin-top:10px;"></img></h3></div>');
}
function loadingSave() {
    $("#uiContent").empty();
    $("#uiContent").html("Sauvegarde en cours...")
    $.blockUI({ message: $('#throbber'), css: { dispay: 'block', left: '40%' }, baseZ: 2000 });
}
function loadingOperation() {
    $("#uiContent").empty();
    $("#uiContent").html("OpÃ©ration en cours...")
    $.blockUI({ message: $('#throbber'), css: { dispay: 'block', left: '40%' } });
}
function closeLoading() { $.unblockUI(); }
function ConfirmDisconnect(f) { if (confirm("Souhaitez-vous vous dÃ©connecter ?") == true) { window.location.href = f; } }
function selflink() {
    var l = ''; for (i = 0; i < arguments.length; i++) { l = l + arguments[i].replace(/\|/g, '/'); }
    if (l.charAt(0) == '#') l = l.substring(1, l.length); window.location.href = l;
}
function SetCookie(name, value, path) { document.cookie = name + "=" + escape(value) + ((path) ? ";path=" + path : ""); }
function Get_Cookie(check_name) {
    var a_all_cookies = document.cookie.split(';'); var a_temp_cookie = ''; var cookie_name = ''; var cookie_value = ''; var b_cookie_found = false; for (i = 0; i < a_all_cookies.length; i++) {
        a_temp_cookie = a_all_cookies[i].split('='); cookie_name = a_temp_cookie[0].replace(/^\s+|\s+$/g, ''); if (cookie_name == check_name) {
            b_cookie_found = true; if (a_temp_cookie.length > 1) { cookie_value = unescape(a_temp_cookie[1].replace(/^\s+|\s+$/g, '')); }
            return cookie_value; break;
        }
        a_temp_cookie = null; cookie_name = '';
    }
    if (!b_cookie_found) { return null; }
}
function Delete_Cookie(name) { if (Get_Cookie(name)) { document.cookie = name + "=;path=" + '/' + ";expires=Thu, 01-Jan-1970 00:00:01 GMT"; } }
function CreateTag(s) {
    var r = s.toLowerCase(); for (i = 1; i < 10; i++) { r = r.replace(new RegExp("[Ã Ã¡Ã¢Ã£Ã¤Ã¥]", 'g'), "a"); r = r.replace(new RegExp("Ã¦", 'g'), "ae"); r = r.replace(new RegExp("Ã§", 'g'), "c"); r = r.replace(new RegExp("[Ã¨Ã©ÃªÃ«]", 'g'), "e"); r = r.replace(new RegExp("[Ã¬Ã­Ã®Ã¯]", 'g'), "i"); r = r.replace(new RegExp("Ã±", 'g'), "n"); r = r.replace(new RegExp("[Ã²Ã³Ã´ÃµÃ¶]", 'g'), "o"); r = r.replace(new RegExp("Å“", 'g'), "oe"); r = r.replace(new RegExp("[Ã¹ÃºÃ»Ã¼]", 'g'), "u"); r = r.replace(new RegExp("[Ã½Ã¿]", 'g'), "y"); r = r.replace(' ', '-'); r = r.replace(',', ''); }
    return r;
}
function InitAnalytics() {
    (function (i, s, o, g, r, a, m) {
        i['GoogleAnalyticsObject'] = r; i[r] = i[r] || function () {
            (i[r].q = i[r].q || []).push(arguments)
        }, i[r].l = 1 * new Date(); a = s.createElement(o),
        m = s.getElementsByTagName(o)[0]; a.async = 1; a.src = g; m.parentNode.insertBefore(a, m)
    })(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');
}
var pageTrackerG;
var pageTrackerL;
function CreateAnalytics(url1, url2) {
    try {
        if (dataLayer != null) {
            dataLayer.push({ 'url_virtuelle': url2 });
        }
    }
    catch (err) { }
}
function refreshAnalytics(lienAnalytics) {
    try {
        if (dataLayer != null) {
            dataLayer.push({ 'url_virtuelle': lienAnalytics });
        }
    }
    catch (err) { }
}
function RefreshAnalyticsLink(url) {
}
function selflink() {
    var l = ''; for (i = 0; i < arguments.length; i++) { l = l + arguments[i].replace(/\|/g, '/'); }
    if (l.charAt(0) == '#') l = l.substring(1, l.length); window.location.href = l;
}

//#endregion Fonctions Utilitaires

//#region Fonctions User
function ValidateUser() {
    var emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}$/; var arrayErrors = new Array(); if ($("#EmailHeader").length) {
        if (($("#EmailHeader").val().length == 0) && ($("#EmailForm").val().length == 0)) { arrayErrors[0] = "email"; }
        else if ((!emailPattern.test($("#EmailHeader").val().toString())) && (!emailPattern.test($("#EmailForm").val().toString()))) { arrayErrors[0] = "emailAt"; }
    } else {
        if ($("#EmailForm").val().length == 0) { arrayErrors[0] = "email"; }
        else if (!emailPattern.test($("#EmailForm").val().toString())) { arrayErrors[0] = "emailAt"; }
    }
    if ($("#PasswordHeader").length) { if ((($("#PasswordHeader").val().length == 0) && ($("#PasswordForm").val().length == 0))) { arrayErrors[1] = "password"; } } else { if ($("#PasswordForm").val().length == 0) { arrayErrors[1] = "password"; } }
    if (arrayErrors.length > 0) {
        // jQuery.facebox({ ajax: 'Login.mvc/DisplayMessage?error=' + arrayErrors }); 
        $.ajax({
            url: appPath + "/Login.mvc/DisplayMessage?error=" + arrayErrors,
            type: "GET",
            contentType: "html",
            success: function (e) {
                $("#vide").empty();
                $("#vide").append(e);
                $("#showAlert").click()
            },
            error: function () { }
        });
        return false;
    }
}
//#endregion Fonctions User

//#region Fonctions Categories
function SetCategoryName(name) {
    $("#selectedCategoryName").val(name.replace(/\<\/div\>/gi, '').replace(/\<div\>/gi, ''));
}
function ExpandAll() {
    $("#expandAll").hide();
    $("#expandNone").show();
    $("div[class^='titleDisplayCategL1 flip']").addClass("active").next().next().slideDown("slow");
    $("div[class^='titleDisplayCategL2 flip']").addClass("active").next().next().slideDown("slow");
}
function ExpandNone() { $("#expandNone").hide(); $("#expandAll").show(); $("div[class^='titleDisplayCategL1 flip']").removeClass("active").next().next().slideUp("slow"); $("div[class^='titleDisplayCategL2 flip']").removeClass("active").next().next().slideUp("slow"); }
function FormatNumber(numberToFormat) {
    var returnFormat = numberToFormat + ''; if (numberToFormat > 999999) { returnFormat = returnFormat.substr(0, returnFormat.length - 6) + ' ' + returnFormat.substr(returnFormat.length - 6, 3) + ' ' + returnFormat.substr(returnFormat.length - 3, 3); }
    else { if (numberToFormat > 999) { returnFormat = returnFormat.substr(0, returnFormat.length - 3) + ' ' + returnFormat.substr(returnFormat.length - 3); } }
    return returnFormat;
}
function SetActiveMenus() { $("div[class^='titleDisplayCategL1 flip']").click(function () { $(this).toggleClass("active").next().next().slideToggle("slow"); }); $("div[class^='titleDisplayCategL2 flip']").click(function () { $(this).toggleClass("active").next().next().slideToggle("slow"); }); $("div[class^='labelCategoryName']").click(function () { $("div[class^='titleDisplayCategories']").removeClass('activeLabel'); $("div[class^='labelCategoryName']").removeClass('activeLabel'); $("div[class^='titleDisplayCategL3']").removeClass('activeLabel'); $(this).addClass("activeLabel"); SetCategoryName($(this).html()); }); $("div[class^='titleDisplayCategories']").click(function () { $("div[class^='labelCategoryName']").removeClass('activeLabel'); $("div[class^='titleDisplayCategL3']").removeClass('activeLabel'); $(this).addClass("activeLabel"); SetCategoryName(""); }); $("div[class^='titleDisplayCategL3']").click(function () { $("div[class^='labelCategoryName']").removeClass('activeLabel'); $("div[class^='titleDisplayCategL3']").removeClass('activeLabel'); $(this).addClass("activeLabel"); SetCategoryName($(this).attr("title")); }); GetActiveElement(); }
function GetActiveElement() {
    var classCateg = $('div[class~="activeLabel"]').first().attr("class"); if (classCateg.indexOf("titleDisplayCategL3") >= 0) { SetCategoryName($('div[class~="activeLabel"]').first().attr("title")); }
    else if (classCateg.indexOf("titleDisplayCategories") >= 0) { SetCategoryName(""); }
    else { SetCategoryName($('div[class~="activeLabel"]').first().html()); }
}
function AlertDisplayCategories_FilterCategory(categId1, categId2, categId3, typeSearch) {
    if (categId1 && categId1 != '0') { $("#CategoryId1").val(categId1); $("#SearchType").val(typeSearch); }
    else { $("#CategoryId1").val(''); $("#SearchType").val(''); }
    if (categId2 && categId2 != '0') { $("#CategoryId2").val(categId2); }
    else { $("#CategoryId2").val(''); }
    if (categId3 && categId3 != '0') { $("#CategoryId3").val(categId3); }
    else { $("#CategoryId3").val(''); }
    if (categId1 && !categId2 && !categId3) { $("div[class~=flip" + categId1 + "]").addClass("active").next().next().slideDown("slow"); }
    if (categId1 && categId2 && !categId3) { $("div[class~=flip" + categId2 + "]").addClass("active").next().next().slideDown("slow"); }
    $("#FirstPageInPagination").val(1); $("#PageNumber").val(1); $('#testSearch').submit();
}
function AlertDisplayCategories_SetCategoriesCount() { $.post(appPath + "/Alerts.mvc/GetCategoriesCount", { idAlert: $("#IdAlert").val(), days: $("#days").val() }, function (e) { $("div[id^='categ']").addClass("CategoryNoResults"); $("i[id^='iconA']").removeClass("icon-puce-verte"); $("i[id^='iconA']").addClass("icon-puce-gris"); $("i[id^='iconI']").removeClass("icon-feuille-ouverte"); $("i[id^='iconI']").addClass("icon-feuille-gris"); $("label[id^='categ']").addClass("vide"); $("a[id^='categ']").addClass("vide"); $("font[id^='fontCateg']").html(""); var t = 0; var n = 0; var r; if (e.ListCategoriesCountResults.length > 0) { for (var i in e.ListCategoriesCountResults) { r = e.ListCategoriesCountResults[i]; n = parseInt(r.CountResults); if (e.IsSolrSearch) { $("#categ" + r.IdCategory).removeClass("vide"); if ($("#iconI" + r.IdCategory) != null) { $("#iconI" + r.IdCategory).removeClass("icon-feuille-gris"); $("#iconI" + r.IdCategory).addClass("icon-feuille-ouverte") } if ($("#iconA" + r.IdCategory) != null) { $("#iconA" + r.IdCategory).removeClass("icon-puce-gris"); $("#iconA" + r.IdCategory).addClass("icon-puce-verte") } $("#fontCateg" + r.IdCategory).html("(" + FormatNumber(n) + ")") } else { t = t + n; $("#categ" + r.IdCategory1).removeClass("vide"); $("#categ" + r.IdCategory2).removeClass("vide"); $("#categ" + r.IdCategory3).removeClass("vide") } } } var s; if (e.IsSolrSearch) { s = FormatNumber(e.ResultsFound) } else { s = t + ""; if (t > 999999) { s = s.substr(0, s.length - 6) + " " + s.substr(s.length - 6, 3) + " " + s.substr(s.length - 3, 3) } else { if (t > 999) { s = s.substr(0, s.length - 3) + " " + s.substr(s.length - 3) } } } $("#countCateg0").html(s) }) }
function stars(relevance, divName, half) { $("div[id='" + divName + "']").raty({ readOnly: true, start: relevance.replace(',', '.'), showHalf: half }); }
//#endregion Fonctions Categories

//#region Fonctions AlertRight
function AlertRight_GetPage(page) {
    $("#searchPageNumber").val(page); $("#PageNumber").val(page); var total = parseInt($("#valueNumberSearchTree").val()); var pageSize = parseInt($("#PageSize").val()); var lastPage = Math.ceil(total / pageSize) - 2; if (page > 2) {
        if (lastPage > 3) {
            if (lastPage < page) { $("#FirstPageInPagination").val(lastPage - 2); }
            else { $("#FirstPageInPagination").val(page - 2); }
        }
        else { $("#FirstPageInPagination").val(1); }
    }
    else { $("#FirstPageInPagination").val(1); }
    $('#testSearchPage').click();
}
function AlertRight_NextPage(firstPage) {
    var page = parseInt($("#PageNumber").val()); var firstPage = parseInt($("#FirstPageInPagination").val()); if (page - firstPage == 4) { $("#FirstPageInPagination").val(firstPage + 1); AlertRight_GetPage(page + 1); }
    else { AlertRight_GetPage(page + 1); }
}
function AlertRight_PreviousPage(firstPage) {
    var page = parseInt($("#PageNumber").val()); var firstPage = parseInt($("#FirstPageInPagination").val()); if (page - firstPage == 0) { $("#FirstPageInPagination").val(firstPage - 1); AlertRight_GetPage(page - 1); }
    else { AlertRight_GetPage(page - 1) }
}
function EnableNotPayingUserSemipublicPopup(index) {
    $('#notPayingMessageSemipublic' + index).click();
    //$.blockUI({ message: $('#notPayingMessageSemipublic' + index).html(), css: { border: '0px', top: '30%', width: '417px', height: '150px' } });
}
function EnableNotPayingUserPublicPopup(index) {
    $('#notPayingMessagePublic' + index).click();
    //$.blockUI({ message: $('#notPayingMessagePublic' + index).html(), css: { border: '0px', top: '30%', width: '417px', height: '150px' } });
}
function EnableAlreadyDemanded(index) { $.blockUI({ message: $('#alreadyDemanded' + index).html(), css: { border: '0px', top: '30%', width: '417px', height: '150px' } }); }
function AlertRight_GetGedcomType(e, t, n) { loadingInProgress(); $.post(appPath + "/Search.mvc/GetGedcomType", { idPerson: e }, function (r) { var i = r; if (i.GedcomState == 0) { EnableNotAvailablePersonPopup(n) } if (i.IsUserGedcom == false) { if (t) { if (i.GedcomState == 1) { AlertRight_RedirectAccessRights(e) } if (i.GedcomState == 2) { if (i.PrivilegeRequested) { EnableAlreadyDemanded(n) } else { EnableDemandeAccess(i.GedcomId, i.Name, i.PseudoName, n, e, i.PersonName) } } } else { if (i.GedcomState == 1) { EnableNotPayingUserPublicPopup(n) } if (i.GedcomState == 2) { EnableNotPayingUserSemipublicPopup(n) } } } else { AlertRight_RedirectAccessRights(e) } }) }
function AlertRight_RedirectAccessRights(idPerson) { $.post(appPath + "/Search.mvc/GetGedcomType", { idPerson: idPerson }, function (msg) { }); SetCookie("SearchResultCookie", CreateUrl(), '/'); window.location.href = appPath + "/MainLayout.mvc/RedirectUser?IdPerson=" + encodeURIComponent(idPerson); }
function EnableRegisterPopup(index) { $.blockUI({ message: $('#registerMessage' + index).html(), css: { width: '417px', height: '150px' } }); }
function EnableNotAvailablePersonPopup(index) { $.blockUI({ message: $('#notAccessible' + index).html(), css: { border: '0px', top: '30%', width: '417px', height: '150px' } }); }
function EnableDemandeAccess(e, t, n, r, i, s) {
    $("#messageContent").html("La fiche relative Ã  <b>" + s + "</b> fait partie </br> de l'arbre gÃ©nÃ©alogique : " + t + ". Pour consulter cette fiche et avoir accÃ¨s Ã  l'arbre auquel elle appartient, faites en la demande Ã  " + n);
    $("#demandAccess").click(); var o = "EnableDemandeAccessPopup(" + e + "," + r + "," + i + ");return false;";
    $("#demandeAccesButton").attr({ onClick: o })
}
function EnableDemandeAccessPopup(e, t, n) {
    loadingInProgress();
    $("#closeDemandAccess").click();

    var r = appPath + "/Menu.mvc/MessageDemandAccessPopup?idGedcom=" + e + "&idPerson=" + n + "&mathValue=" + Math.random();
    $.ajax({
        url: r, type: "GET", contentType: "html",
        success: function (e) {
            $("#acces-formulaire").empty();
            $("#acces-formulaire").append(e);
            $("#redirectPopUpAccess").click();
            closeLoading();

        }, error: function () { closeLoading(); }
    });
}
function EnableNotPayingUser(index) { $.blockUI({ message: $('#notPayingMessage' + index).html(), css: { border: '0px', top: '30%', width: '417px', height: '150px' } }); }
function AlertRight_ViewActe(idActe, name) { Delete_Cookie("SearchResultCookie"); SetCookie("SearchResultCookie", CreateUrl(), '/'); SetCookie("PageType", "alert", '/'); SetCookie("SelectedCategoryNameCookie", $("#selectedCategoryName").val(), '/'); SetCookie("SelectedNameCookie", $("#txtName").val(), '/'); $("#CategoryId1").val(''); $("#CategoryId2").val(''); $("#CategoryId3").val(''); $("#SearchType").val(''); var currentPage = $("#searchPageNumber").val(); $("#searchPageNumber").val(1); var firstPage = $("#searchFirstPageInPagination").val(); $("#searchFirstPageInPagination").val(1); SetCookie("SelectedNameHrefCookie", CreateUrl(), '/'); $("#searchPageNumber").val(currentPage); $("#searchFirstPageInPagination").val(firstPage); window.open(appPath + "/Search.mvc/ViewerCivilState?idActe=" + escape(idActe), '_newtab'); }
function AlertRight_ViewArchive(idActe, idPerson, firstName, lastName, source) { SetCookie("SearchResultCookie", CreateUrl(), '/'); SetCookie("PageType", "alert", '/'); window.open(appPath + "/SearchResults.mvc/ViewArchive?idPerson=" + idPerson + "&idActe=" + idActe + "&firstName=" + firstName + "&lastName=" + lastName + "&source=" + source, '_newtab'); }
function AlertRight_ClosePopup() { $.unblockUI(); }
function CreateUrl() {
    var filter = ''; if ($("#CategoryId1").val() != '') { filter = '&CategoryId1=' + $("#CategoryId1").val(); }
    if ($("#CategoryId2").val() != '') { filter += '&CategoryId2=' + $("#CategoryId2").val(); }
    if ($("#CategoryId3").val() != '') { filter += '&CategoryId3=' + $("#CategoryId3").val(); }
    return appPath + "/Alerts.mvc/AlertsList?idAlert=" + $("#IdAlert").val() + "&pageNumber=" + $("#PageNumber").val() + "&firstPagePagination=" + $("#FirstPageInPagination").val() + "&days=" + $("#daysField").val() + filter;
}
function AlertRight_ChangePageSize(number) { $("#PageNumber").val(1); $("#FirstPageInPagination").val(1); var valNumber = document.getElementById("itemsNumber" + number.toString()).value; $("#PageSize").val(valNumber); $('#testSearchPage').click(); }
//#endregion Fonctions AlertRight

//#region Fonctions Alertes
function AlertsList_InitElements() {
    $("#categorySearch").html($("#selectedCategoryName").val());
    var valueNumber = parseInt($("#valueNumberSearchTree").val());
    var valuePageSize = 10; if (valueNumber <= valuePageSize) { $("#pagesize1").css("display", "block"); }
    else {
        if (valueNumber <= valuePageSize * 3) { $("#pagesize3").css("display", "block"); }
        else { $("#pagesize4").css("display", "block"); }
    }
}
//#endregion Fonctions Alertes

//#region Fonctions Archives
function redirectToSearch() { window.location.href = appPath + "/Search.mvc/Search"; }
function SetYearOrDay() {
    if ($('input[id=yearRadio]:checked').length > 0) { $("#searchedYear").css('display', ''); $("#searchedDay").css('display', 'none'); $("#searchedMonth").css('display', 'none'); }
    else { $("#searchedYear").css('display', 'none'); $("#searchedDay").css('display', ''); $("#searchedMonth").css('display', ''); }
}
//#endregion Fonctions Archives

//#region Fonctions DocumentNote and DocumentMedia
function DocumentMedia_ParseResult(content) {
    var jsonData = Sys.Serialization.JavaScriptSerializer.deserialize(content.get_data()); if (jsonData && jsonData.length > 0) { $("#errorMessages").html(jsonData); return false; }
    if (jsonData.RouteValues && jsonData.RouteValues.length == 3) { $("#errorMessages").html("<font color='red'>Note sauvegardÃ©e avec succÃ¨s</font> <br />"); location.href = '/' + jsonData.RouteValues[1].Value + '.mvc/' + jsonData.RouteValues[0].Value + "/" + jsonData.RouteValues[2].Value;; }
}
function DocumentMedia_increaseTable(width, height) { if (417 > width + 136) { $(".content").css("width", 'auto'); $(".content").css("height", height + 80 + 'px'); } else { $(".content").css("height", height + 80 + 'px'); $(".content").css("width", width + 136 + 'px'); $("#pop-up-add-media").css("width", width + 136 + 'px'); } }
var addNoteDisabled = false;
function DocumentNote_ParseResult(e) { addNoteDisabled = false; var t = Sys.Serialization.JavaScriptSerializer.deserialize(e.get_data()); if (t && t.length > 0) { $("#errorMessages").html('<div role="alert" class="alert alert-warning fade in" ><button data-dismiss="alert" class="close" type="button"><span aria-hidden="true">Ã—</span><span class="sr-only">Close</span></button><p>' + t + "</p></div>"); $("#saveButton").attr("enabled", "enabled"); $("#saveButton").removeAttr("disabled", "disabled"); return false } $("#closeAddNote").click(); loading(); if (t.RouteValues && t.RouteValues.length == 3) { location.href = appPath + "/" + t.RouteValues[1].Value + ".mvc/" + t.RouteValues[0].Value + "/" + t.RouteValues[2].Value; } if (t.RouteValues != null && t.RouteValues.length == 4) { window.location = appPath + "/" + t.RouteValues[1].Value + ".mvc/" + t.RouteValues[0].Value + "/" + t.RouteValues[2].Value + "/" + t.RouteValues[3].Value } }
function ValidateNoteContent() {
    $('#validateMessage').hide();
    if ($('#Title').val().length > 50) {
        $("#errorMessages").html('<div role="alert" class="alert alert-warning fade in" ><button data-dismiss="alert" class="close" type="button"><span aria-hidden="true">Ã—</span><span class="sr-only">Close</span></button><p>  Le titre est trop long ! Un <strong> maximum de 50 caractÃ¨res </ strong> est autorisÃ© </p></div>');
        $('#validateMessage').show('slow');
        addNoteDisabled = false;
        return false;
    }
    return true;
}
function DocumentNote_DisableButton() { if (addNoteDisabled == false) { addNoteDisabled = true; return true; } else { return false; } }
var deleteMediaDisabled = false; function ConfirmDocumentMedia_ParseResult(content) {
    deleteMediaDisabled = false; $(document).ajaxStop($.unblockUI); var jsonData = Sys.Serialization.JavaScriptSerializer.deserialize(content.get_data()); if (jsonData == "closeFacebox") { CloseFacebox(); return false; }
    loadingDelete(); if ((jsonData.RouteValues != null) && (jsonData.RouteValues.length == 3)) { window.location = appPath + '/' + jsonData.RouteValues[1].Value + '.mvc/' + jsonData.RouteValues[0].Value + "/" + jsonData.RouteValues[2].Value; }
    if ((jsonData.RouteValues != null) && (jsonData.RouteValues.length == 4)) { window.location = appPath + '/' + jsonData.RouteValues[1].Value + '.mvc/' + jsonData.RouteValues[0].Value + "/" + jsonData.RouteValues[2].Value + "/" + jsonData.RouteValues[3].Value; }
}
function ConfirmDocumentMedia_DisableButton() { if (deleteMediaDisabled == false) { deleteMediaDisabled = true; return true; } else { return false; } }
var deleteNoteDisabled = false;
function ConfirmDocumentNote_ParseResult(e) { deleteNoteDisabled = false; $(document).ajaxStop($.unblockUI); var t = Sys.Serialization.JavaScriptSerializer.deserialize(e.get_data()); if (t == "closeFacebox") { $("#closeDeleteNote").click() } $("#closeDeleteNote").click(); loadingDelete(); if (t.RouteValues != null && t.RouteValues.length == 3) { window.location = appPath + "/" + t.RouteValues[1].Value + ".mvc/" + t.RouteValues[0].Value + "/" + t.RouteValues[2].Value } if (t.RouteValues != null && t.RouteValues.length == 4) { window.location = appPath + "/" + t.RouteValues[1].Value + ".mvc/" + t.RouteValues[0].Value + "/" + t.RouteValues[2].Value + "/" + t.RouteValues[3].Value } }
function ConfirmDocumentNote_DisableButton() { if (deleteNoteDisabled == false) { deleteNoteDisabled = true; return true; } else { return false; } }
var deleteOficialDisabled = false; function ConfirmDocumentOficial_ParseResult(content) {
    deleteOficialDisabled = false; $(document).ajaxStop($.unblockUI); var jsonData = Sys.Serialization.JavaScriptSerializer.deserialize(content.get_data()); if (jsonData == "closeFacebox") { CloseFacebox(); return false; }
    loadingDelete(); if ((jsonData.RouteValues != null) && (jsonData.RouteValues.length == 3)) { window.location = appPath + '/' + jsonData.RouteValues[1].Value + '.mvc/' + jsonData.RouteValues[0].Value + "/" + jsonData.RouteValues[2].Value; }
    if ((jsonData.RouteValues != null) && (jsonData.RouteValues.length == 4)) { window.location = appPath + '/' + jsonData.RouteValues[1].Value + '.mvc/' + jsonData.RouteValues[0].Value + "/" + jsonData.RouteValues[2].Value + "/" + jsonData.RouteValues[3].Value; }
}
function ConfirmDocumentOficial_DisableButton() { if (deleteOficialDisabled == false) { deleteOficialDisabled = true; return true; } else { return false; } }
//#endregion Fonctions DocumentNote and DocumentMedia

//#region Fonctions Events
function ChangedType() { if ($("#SelectType").val() == "") { var e = []; e.push("<option>Choisir un Ã©vÃ©nement</option>"); $("#SelectTypeEvent").html(e.join("")); $("#SelectTypeEvent").attr("disabled", "disabled"); $("#datePopup").css("display", ""); $("#DateGedcomFormat").css("display", ""); $("#dateStart").css("display", "none"); $("#DateGedcomStart").css("display", "none"); $("#dateEnd").css("display", "none"); $("#avec").css("display", "none"); $("#MarriagesList").css("display", "none") } else if ($("#SelectType").val() == "Family") { $("#datePopup").css("display", ""); $("#DateGedcomFormat").css("display", ""); $("#dateStart").css("display", "none"); $("#DateGedcomStart").css("display", "none"); $("#dateEnd").css("display", "none"); $("#DateGedcomEnd").css("display", "none"); $("#avec").css("display", ""); $("#MarriagesList").css("display", "") } else { $("#datePopup").css("display", ""); $("#DateGedcomFormat").css("display", ""); $("#dateStart").css("display", "none"); $("#DateGedcomStart").css("display", "none"); $("#dateEnd").css("display", "none"); $("#DateGedcomEnd").css("display", "none"); $("#avec").css("display", "none"); $("#MarriagesList").css("display", "none") } if ($("#SelectType").val() != "") { $.post(appPath + "/Event.mvc/GetTypeEvents", { type: $("#SelectType").val() }, function (e) { var t = e.SelectTypeEvent; if (t.length > 0) { var n = []; var r = true; if (t[1].Value && (t[1].Value == "BIRT" || t[1].Value == "DEAT" || t[1].Value == "MARR")) { r = false } for (var i in t) { if (t[i].Value && t[i].Value != "BIRT" && t[i].Value != "DEAT" && t[i].Value != "MARR" && !r) { r = true; n.push('<option disabled="disabled" class="lineOption"></option>') } n.push('<option value="' + t[i].Value + '" selected="' + t[i].Selected + '">' + t[i].Text + "</option>") } $("#SelectTypeEvent").html(n.join("")); $("#SelectTypeEvent").removeAttr("disabled", "disabled"); $("#SelectTypeEvent").attr("enabled", "enabled"); if ($("#SelectType").val() == "Family" && e.MarriagesList != null) { $("#avec").css("display", ""); $("#MarriagesList").css("display", "") } else { $("#avec").css("display", "none"); $("#MarriagesList").css("display", "none") } document.getElementById("SelectTypeEvent").selectedIndex = 0; $("#notProfession").css("display", "display"); $("#isProfession").css("display", "none") } else { alert("Il n'y a pas des resultats") } }); AddEvent_resetMessages() } }
function GetMarriageEventType(e) {
    if (e.val != "" && e.value != "-1") {
        $.post(appPath + "/Event.mvc/GetMarriageTypeEvents", { unionId: e.value },
            function (e) {
                var t = e;
                if (t.length > 0) {
                    var n = [];
                    var r = true;
                    if (t[1].Value && (t[1].Value == "BIRT" || t[1].Value == "DEAT" || t[1].Value == "MARR")) {
                        r = false
                    }
                    for (var i in t) {
                        if (t[i].Value && t[i].Value != "BIRT" && t[i].Value != "DEAT" && t[i].Value != "MARR" && !r) {
                            r = true;
                            n.push('<option disabled="disabled" class="lineOption"></option>')
                        }
                        n.push('<option value="' + t[i].Value + '" selected="' + t[i].Selected + '">' + t[i].Text + "</option>")
                    }
                    $("#SelectTypeEvent").html(n.join("")); document.getElementById("SelectTypeEvent").selectedIndex = 0
                } else {
                    alert("Il n'y a pas des resultats")
                }
            });
        AddEvent_resetMessages()
    }
}
function ChangedEvent(e) { if (e.value == "OCCU") { $("#datePopup").css("display", "none"); $("#DateGedcomFormat").css("display", "none"); $("#dateStart").css("display", ""); $("#DateGedcomStart").css("display", ""); $("#dateEnd").css("display", ""); $("#DateGedcomEnd").css("display", "") } else { $("#datePopup").css("display", ""); $("#DateGedcomFormat").css("display", ""); $("#dateStart").css("display", "none"); $("#DateGedcomStart").css("display", "none"); $("#dateEnd").css("display", "none"); $("#DateGedcomEnd").css("display", "none") } AddEvent_resetMessages() }
var eventDisabled = false;
function AddEvent_DisableButton() { if (eventDisabled == false) { eventDisabled = true; return true } else { return false } }
function AddEvent_changeVal() { $("#PlaceNameId").val(0); }
function AddEvent_ParseResult(e) {
    eventDisabled = false;
    var t = Sys.Serialization.JavaScriptSerializer.deserialize(e.get_data());
    if (t && t.TypeError == "date") {
        $("#dateFormatLink").css("display", "");
        $("#errorMessagesEvent").html('<div role="alert" class="alert alert-warning fade in" id="alertErrorMessages"><button data-dismiss="alert" class="close" type="button"><span aria-hidden="true">Ã—</span><span class="sr-only">Close</span></button><p id="errorMessagesEventInside">' + t.Message + "</div>");
        document.getElementById("saveButton").enabled = true;
        return false
    }
    if (t && t.TypeError != "date" && t.TypeError != null) {
        $("#dateFormatLink").css("display", "none");
        $("#errorMessagesEvent").html('<div role="alert" class="alert alert-warning fade in" id="alertErrorMessages"><button data-dismiss="alert" class="close" type="button"><span aria-hidden="true">Ã—</span><span class="sr-only">Close</span></button><p id="errorMessagesEventInside">' + t.Message + "</div>");
        $("#saveButton").attr("enabled", "enabled");
        $("#saveButton").removeAttr("disabled", "disabled");
        return false
    }
    $("#closeAddEvent").click();
    loading();
    if (t.RouteValues != null && t.RouteValues.length == 3) {
        window.location = appPath + "/" + t.RouteValues[1].Value + ".mvc/" + t.RouteValues[0].Value + "/" + t.RouteValues[2].Value
    }
    if (t.RouteValues != null && t.RouteValues.length == 4) {
        window.location = appPath + "/" + t.RouteValues[1].Value + ".mvc/" + t.RouteValues[0].Value + "/" + t.RouteValues[2].Value + "/" + t.RouteValues[3].Value
    }
}
function AddEvent_resetMessages() { $("#errorMessages").html(""); $("#dateFormatLink").css("display", "none") }
function DeleteEvents_ParseResult(e) { deleteEventDisabled = false; var t = Sys.Serialization.JavaScriptSerializer.deserialize(e.get_data()); if (t == "closeFacebox") { $("#closeDeleteEvent").click(); return false } if (t == "errorDelete") { $("#errorMessages").html('<div role="alert" class="alert alert-warning fade in" id="alertErrorMessages"><button data-dismiss="alert" class="close" type="button"><span aria-hidden="true">Ã—</span><span class="sr-only">Close</span></button><p id="errorMessages">' + "OpÃ©ration de suppression a Ã©chouÃ©" + "</div>"); $("#deleteEvent").attr("enabled", "enabled"); $("#deleteEvent").removeAttr("disabled", "disabled"); return false } $("#closeDeleteEvent").click(); loadingDelete(); if (t.RouteValues != null && t.RouteValues.length == 3) { window.location = appPath + "/" + t.RouteValues[1].Value + ".mvc/" + t.RouteValues[0].Value + "/" + t.RouteValues[2].Value } if (t.RouteValues != null && t.RouteValues.length == 4) { window.location = appPath + "/" + t.RouteValues[1].Value + ".mvc/" + t.RouteValues[0].Value + "/" + t.RouteValues[2].Value + "/" + t.RouteValues[3].Value } } var deleteEventDisabled = false
function DeleteEvents_DisableButton() { if (deleteEventDisabled == false) { deleteEventDisabled = true; return true; } else { return false; } }
var updateMarriageDisabledEvent = false;
function UpdateMarriageEvent_ParseResult(e) { updateMarriageDisabledEvent = false; var t = Sys.Serialization.JavaScriptSerializer.deserialize(e.get_data()); if (t && t.TypeError == "date") { $("#dateFormatLink").css("display", ""); $("#errorMessages").css("display", ""); $("#errorMessages").html('<div role="alert" class="alert alert-warning fade in" ><button data-dismiss="alert" class="close" type="button"><span aria-hidden="true">Ã—</span><span class="sr-only">Close</span></button><p>' + t.Message + "</p></div>"); $("#saveButton").attr("enabled", "enabled"); $("#saveButton").removeAttr("disabled", "disabled"); return false } if (t && t.TypeError != "date" && t.TypeError != null) { $("#dateFormatLink").css("display", "none"); $("#errorMessages").css("display", ""); $("#errorMessages").html('<div role="alert" class="alert alert-warning fade in" ><button data-dismiss="alert" class="close" type="button"><span aria-hidden="true">Ã—</span><span class="sr-only">Close</span></button><p>' + t.Message + "</p></div>"); $("#saveButton").attr("enabled", "enabled"); $("#saveButton").removeAttr("disabled", "disabled"); return false } $("#closeMarriageModal").click(); loading(); if (t.RouteValues != null && t.RouteValues.length == 3) { window.location = appPath + "/" + t.RouteValues[1].Value + ".mvc/" + t.RouteValues[0].Value + "/" + t.RouteValues[2].Value } if (t.RouteValues != null && t.RouteValues.length == 4) { window.location = appPath + "/" + t.RouteValues[1].Value + ".mvc/" + t.RouteValues[0].Value + "/" + t.RouteValues[2].Value + "/" + t.RouteValues[3].Value } }
function UpdateMarriageEvent_resetMessages() { $("#errorMessages").html(""); $("#errorMessages").css("display", "none"); $("#dateFormatLink").css("display", "none"); }
function UpdateMarriageEvent_DisableButton() { if (updateMarriageDisabledEvent == false) { updateMarriageDisabledEvent = true; return true; } else { return false; } }
function UpdateMarriageEvent_changeValUpdateMarriageEvent() { $("#PlaceNameId").val(0); }
//#endregion Fonctions Events

//#region Fonctions GenericSearch
function GenericSearch_Validate() { var e = $("#txtName").val(); if (e.length == 0) { GenericSearch_ShowErrorMessage(1) } else { if (e.length < 2) { GenericSearch_ShowErrorMessage(1) } else if (e.charAt(0) == "*") { GenericSearch_ShowErrorMessage(5) } else if (e.indexOf("*") != -1 && e.length < 4) { GenericSearch_ShowErrorMessage(6) } else { var t = /^[-]?[0-9]*$/; var n = $("#txtPeriod1").val(); var r = $("#txtPeriod2").val(); if (n || r) { if (n.match(t) && r.match(t)) { GenericSearch_ValidateYearsRedirect(n, r) } else { GenericSearch_ShowErrorMessage(2) } } else { GenericSearch_RedirectSearch() } } } }
function GenericSearch_ValidateYearsRedirect(e, t) { var n = 0; var r = 0; if (e) { n = parseInt(e) } if (t) { r = parseInt(t) } if (n) { if (r) { if (r < 0) { GenericSearch_ShowErrorMessage(2) } else { if (r < n) { GenericSearch_ShowErrorMessage(3) } else { if (n.toString().length == 2 && r.toString().length == 2) { n = parseInt("19" + n.toString()); r = parseInt("19" + r.toString()); $("#txtPeriod1").val(n); $("#txtPeriod2").val(r) } GenericSearch_RedirectSearch() } } } else { if (r == 0) { GenericSearch_RedirectSearch() } else { GenericSearch_ShowErrorMessage(2) } } } else { if (n == 0 && r && r < 0 || !r && r != 0 || n != 0) { GenericSearch_ShowErrorMessage(2) } else { GenericSearch_RedirectSearch() } } }
function GenericSearch_ShowErrorMessage(e) { var t = "Search.mvc/SearchErrorMessage?errorType=" + e; $.ajax({ url: t, type: "Post", contentType: "html", success: function (e) { $("#vide").empty(); $("#vide").append(e); $("#showAlert").click() }, error: function () { } }) }
function GenericSearch_ChangeDepartment(idDepartment) { if (document.getElementById("ddlCountry").value == "0") { $("#ddlCountry").val("FR"); } }
function GenericSearch_Change() { var e = document.getElementById("ddlCountry").value; if (e == "0") { e = "FR" } if (e == "FR") { $.post(appPath + "/Search.mvc/GetDepartmentsByCountry", { countryCode: e }, function (e) { var t = '<select name="departement" id="departement" class="form-control" onchange = "GenericSearch_ChangeDepartment(this.Value)">'; t += '<option value="0">Tous les dÃ©partements</option>'; if (e.length > 0) { for (var n in e) { t += '<option value="' + e[n].Admin2Code + '">' + e[n].Name + "</option>" } } t += "</select>"; $("#divDepartments").html(t) }) } else { var t = '<select name="departement" id="departement" class="form-control" disabled="disabled"><option value="0">Tous les dÃ©partements</option></select>'; $("#divDepartments").html(t) } }
//#endregion Fonctions GenericSearch

function menuSwitch(e) { var t = "#div" + e; if ($(t).css("display") == "none") { $(t).show() } else { $(t).hide() } }
function GoToTree(gedcomId) { $.post(appPath + "/HomePage.mvc/ChangeActiveTree", { idGedcom: gedcomId }, function (jsonData) { window.location = appPath + '/Tree/Tree'; }); }
function AccessDemanded_UpdatePrivilege(idGedcom, idPrivilege, accept) { loading(); $.post(appPath + "/HomePage.mvc/UpdatePrivilege", { privilegeId: idPrivilege, accept: accept }, function (jsonData) { window.location = appPath + '/HomePage.mvc/AccessDemanded?idGedcom=' + idGedcom + '&tabSelected=2&respond=false&idPrivilege=' + idPrivilege; }); }
function ShowAnswerFields(e) { var t = $("#afficher-normal" + e).css("display"); if (t == "block") { $("#afficher-normal" + e).trigger("click") } $("#AnswerMessage" + e).css("display", "none"); $("#AnswerFields" + e).css("display", "block"); $("#errorMessage" + e).css("display", "none") }
function SendMessage(e, t, n) { var r = $("#textarea" + e).val(); if (r) { window.location = appPath + "/HomePage.mvc/SendNewMessage?idGedcom=" + n + "&text=" + r.toString() + "&privilegeId=" + e + "&tab=" + t } else { $("#errorMessage" + e).css("display", "block") } }
function HideAnswerFields(privilegeId) { $("#AnswerMessage" + privilegeId).css("display", "block"); $("#AnswerFields" + privilegeId).css("display", "none"); }
function ViewComments(privilegeId, tabSelected) { $("#message" + privilegeId).css("display", "none"); $("#afficher-normal" + privilegeId).css("display", "none"); $("#afficher-open" + privilegeId).css("display", "block"); $.post(appPath + "/HomePage.mvc/UpdateViewMessage", { privilegeId: privilegeId }, function (msg) { $("#message" + privilegeId).css("display", "none"); }); }
function HideComments(privilegeId) { $("#afficher-open" + privilegeId).css("display", "none"); $("#afficher-normal" + privilegeId).css("display", "block"); }
function ChangeTab(index, idGedcom) { loadingInProgress(); window.location = appPath + "/HomePage.mvc/AccessDemanded?idGedcom=" + idGedcom + "&tabSelected=" + index + "&idPrivilege=0&respond=false"; }
function UpdateIdGedcomPrincipal(gedcomId) { $.post(appPath + "/HomePage.mvc/UpdateIdGedcomPrincipale/", { gedcomId: gedcomId }, function (msg) { if (msg.TypeError != null) { $("#messages").html(meg.Message); } else { window.location = appPath + "/Tree/Tree"; } }); }
function Welcome_ValidateTreeRegistration() { var e = 0; var t = new Array; if ($("#FirstName").val().length == 0) { t[e++] = "FirstName" } if ($("#LastName").val().length == 0) { t[e++] = "LastName" } if (t.length > 0) { $.ajax({ url: "Login.mvc/DisplayMessage?error=" + t + "&errorType=5", type: "GET", contentType: "html", success: function (e) { $("#vide").empty(); $("#vide").append(e); $("#showAlert").click() }, error: function () { } }); return false } else { var n = ""; if ($("#FirstName").val().length > 0) { n = $("#FirstName").val() } var r = ""; if ($("#LastName").val().length > 0) { r = $("#LastName").val() } n = n.substring(0, 1).toUpperCase() + n.substring(1, n.length).toLowerCase(); r = r.substring(0, 1).toUpperCase() + r.substring(1, r.length).toLowerCase(); $("#FirstName").val(n); $("#LastName").val(r); $("#SubmitRegistration").click() } }
function SecondLineControl_Validate() {
    var t = $("#name").val().trim();
    var r = $("#firstName").val().trim();
    if (t.length == 0) { SecondLineControl_ShowErrorMessage(1); return false }
    else if (t.length < 2) { SecondLineControl_ShowErrorMessage(1); return false }
    else if ('*?'.lastIndexOf(t.charAt(0)) !== -1) { SecondLineControl_ShowErrorMessage(5); return false }
    else if (t.match(/[?*]/) && t.replace(/\?|\*/g, '').length < 3) { SecondLineControl_ShowErrorMessage(6); return false }
    else { return true }
}
function TabletteSearchLineControl_Validate() {
    var t = $("#nameTablette").val().trim();
    var r = $("#firstNameTablette").val().trim();

    if (t.length == 0) { SecondLineControl_ShowErrorMessage(1); return false }
    else if (t.length < 2) { SecondLineControl_ShowErrorMessage(1); return false }
    else if ('*?'.lastIndexOf(t.charAt(0)) !== -1) { SecondLineControl_ShowErrorMessage(5); return false }
    else if (t.match(/[?*]/) && t.replace(/\?|\*/g, '').length < 3) { SecondLineControl_ShowErrorMessage(6); return false }
    else { return true }
}
function SecondLineControl_ShowErrorMessage(e) {
    $.ajax({
        url: appPath + "/Search.mvc/SearchErrorMessage?errorType=" + e, type: "GET", contentType: "html",
        success: function (e) { $("#vide").empty(); $("#vide").append(e); $("#showAlert").click() }, error: function () { }
    })
}
function setFocus() { if ($('#txtSearchLastNames').val() == $('#txtSearchLastNames').attr('title')) { $('#txtSearchLastNames').val(''); $('#txtSearchLastNames').css('color', 'black'); } }
function setBlur() { if ($('#txtSearchLastNames').val() == '') { $('#txtSearchLastNames').val($('#txtSearchLastNames').attr('title')); $('#txtSearchLastNames').css('color', 'GrayText'); } }
function OpenName() { if ($("#txtSearchLastNames").val() != "") { $.post(appPath + "/Lastnames.mvc/LastnameDetailsCheck", { name: $("#txtSearchLastNames").val() }, function (e) { if (e == "exists") { window.location = "/nom-de-famille/" + $("#txtSearchLastNames").val().replace(" ", "_") + ".html" } else { window.location = appPath + "/lastnames.mvc/LastnameDetails?name=" + $("#txtSearchLastNames").val() } }) } }
function ChangeDepartment() { var e = document.getElementById("departement").value; window.location = appPath + "/Lastnames.mvc/LastnamesDepartmentRank?departmentId=" + e }
var isRequestFinished = true;
function ValidateUserEmail() { if (isRequestFinished) { $('#sendMailButton').prop('disabled', true); isRequestFinished = false; var e = new RegExp(/^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?$/i); var t = new RegExp("[Ã€Ã‚Ã„ÃˆÃ‰ÃŠÃ‹ÃŽÃÃ”Å’Ã™Ã›ÃœÅ¸Ã Ã¢Ã¤Ã¨Ã©ÃªÃ«Ã®Ã¯Ã´Å“Ã¹Ã»Ã¼Ã¿Ã‡Ã§]"); var n = new Array; var r = 1; if ($("#EmailForm").val().length == 0) { n[0] = "email"; r = 1 } else if (!e.test($("#EmailForm").val().toString()) || t.test($("#EmailForm").val().toString())) { n[0] = "emailAt"; r = 2 } if (n.length > 0) { $.ajax({ url: "Login.mvc/DisplayMessage?error=" + n + "&errorType=" + r, type: "GET", contentType: "html", success: function (e) { $("#myModalMess").empty(); $("#myModalMess").append(e); if (!$('#myModalMess').hasClass('in')) { $("#mesageForgot").click(); } }, error: function () { } }); $('#sendMailButton').prop('disabled', false); return false } else { return true; } } return false; }
function ForgotPassword_ParseResults(content) {
    var jsonData = Sys.Serialization.JavaScriptSerializer.deserialize(content.get_data()); if (jsonData && jsonData.TypeError == 'error') { $("#linkProbl").text(jsonData.Message); $("#redirProblIndentification").text(jsonData.RedirectValue); $("#okeMessage").text(""); $("#emailOke").text(""); }
    else
        if (jsonData && jsonData.TypeError == 'sendEmail') { $("#linkProbl").text(""); $("#redirProblIndentification").text(""); $("#okeMessage").text(jsonData.Message); $("#emailOke").text(jsonData.RedirectValue); }
}
function Login_ParseResult(e) { var t = Sys.Serialization.JavaScriptSerializer.deserialize(e.get_data()); if (t && t.TypeError != null && t.TypeError == "error") { $("#errorMessage").css("display", ""); return } if (t && t.Url && t.Url.length > 0) { window.location = t.Url; return } if (t.RouteValues != null && t.RouteValues.length == 2) { window.location = appPath + "/" + t.RouteValues[1].Value + ".mvc/" + t.RouteValues[0].Value; return } if (t.RouteValues != null && t.RouteValues.length == 3) { window.location = appPath + "/" + t.RouteValues[1].Value + ".mvc/" + t.RouteValues[0].Value + "/" + t.RouteValues[2].Value; return } }
function ValidateRegistration() { var forbiddenCharacters = /[\\/:\*\?\"<>\|]/; /* forbidden characters \ / : * ? " < > |*/var e = 0; var t = new Array; if ($("#FirstName").val().length == 0) { t[e++] = "FirstName" } else if (forbiddenCharacters.test($("#FirstName").val())) { t[e++] = "ForbiddenCharactersFirstName" } if ($("#LastName").val().length == 0) { t[e++] = "LastName" } else if (forbiddenCharacters.test($("#LastName").val())) { t[e++] = "ForbiddenCharactersLastName" } var n = new RegExp(/^[-a-z0-9~!$%^&*_=+}{\'?]+(\.[-a-z0-9~!$%^&*_=+}{\'?]+)*@([a-z0-9_][-a-z0-9_]*(\.[-a-z0-9_]+)*\.(aero|arpa|biz|com|coop|edu|gov|info|int|mil|museum|name|net|org|pro|travel|mobi|[a-z][a-z])|([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}))(:[0-9]{1,5})?$/i); var r = new RegExp("[Ã€Ã‚Ã„ÃˆÃ‰ÃŠÃ‹ÃŽÃÃ”Å’Ã™Ã›ÃœÅ¸Ã Ã¢Ã¤Ã¨Ã©ÃªÃ«Ã®Ã¯Ã´Å“Ã¹Ã»Ã¼Ã¿Ã‡Ã§]"); if ($("#EmailRegistrationPage").val().length == 0) { t[e++] = "email" } else if (!n.test($("#EmailRegistrationPage").val().toString()) || r.test($("#EmailRegistrationPage").val().toString())) { t[e++] = "emailAt" } if ($("#PasswordRegistrationPage").val().length == 0) { t[e++] = "password" } else if ($("#PasswordRegistrationPage").val().indexOf("<") > -1) { t[e++] = "ForbiddenCharactersPassword" } else { if ($("#PasswordRegistrationPage").val().indexOf(" ") > -1) { t[e++] = "spaceInPassword"; } else { if ($("#PasswordRegistrationPage").val().length < 5 && $("#PasswordRegistrationPage").val().length > 0) { t[e++] = "passwordNotLong" } } } if ($("#BirthDateDay").val().length != 0 && $("#BirthDateMonth").val().length != 0 && $("#BirthDateYear").val().length != 0) { var i = parseInt($("#BirthDateMonth").val()); var s = parseInt($("#BirthDateDay").val()); var o = parseInt($("#BirthDateYear").val()); if (i == 1 || i == 3 || i == 5 || i == 7 || i == 8 || i == 10 || i == 12) { if (s > 31) { t[e++] = "wrongBirthDate" } } if (i == 4 || i == 6 || i == 9 || i == 11) { if (s > 30) { t[e++] = "wrongBirthDate" } } if (i == 2 && o % 4 == 0) { if (s > 29) { t[e++] = "wrongBirthDate" } } if (i == 2 && o % 4 != 0) { if (s > 28) { t[e++] = "wrongBirthDate" } } if (o > new Date().getFullYear() || (o == new Date().getFullYear() && i > new Date().getMonth() + 1) || (o == new Date().getFullYear() && i == new Date().getMonth() + 1 && s > new Date().getDate())) { t[e++] = "wrongBirthDate"; } if (o < 1900) { t[e++] = "birthYearToSmall"; } } else { t[e++] = "noBirthDate" } if (t.length > 0) { $.ajax({ url: appPath + "/Login.mvc/DisplayMessage?error=" + t, type: "GET", contentType: "html", success: function (e) { $("#vide").empty(); $("#vide").append(e); $("#showAlert").click() }, error: function () { } }); return false } }
function ParseRegistrationResult(e) { var t = Sys.Serialization.JavaScriptSerializer.deserialize(e.get_data()); if (t.Message != null) { $.ajax({ url: appPath + "/Login.mvc/DisplayMessage?error=" + t.Message.toString(), type: "GET", contentType: "html", success: function (e) { $("#vide").empty(); $("#vide").append(e); $("#showAlert").click() }, error: function () { } }) } else { window.location = "homePage.mvc/HomePageConnected" } }
function CapitalizeString() { var firstName = $("#FirstName").val(); var lastName = $("#LastName").val(); firstName = firstName.substring(0, 1).toUpperCase() + firstName.substring(1, firstName.length).toLowerCase(); lastName = lastName.substring(0, 1).toUpperCase() + lastName.substring(1, lastName.length).toLowerCase(); $("#FirstName").val(firstName); $("#LastName").val(lastName); }
function StepOne_ValidateTreeRegistration() {

    $('#submitNewTree').addClass('disabled');
    var e = 0;
    var t = new Array;
    if ($("#FirstName").val().length == 0)
    { t[e++] = "FirstName" }
    if ($("#LastName").val().length == 0)
    { t[e++] = "LastName" }
    if (t.length > 0) {
        $.ajax({
            url: appPath + "/Login.mvc/DisplayMessage?error=" + t + "&errorType=5", type: "GET", contentType: "html",
            success: function (e) {
                $("#vide").empty(); $("#vide").append(e); $("#showAlert").click();
                $('#submitNewTree').removeClass('disabled');
            },
            error: function () { }
        }); return false;
    } else { var n = ""; if ($("#FirstName").val().length > 0) { n = $("#FirstName").val() } var r = ""; if ($("#LastName").val().length > 0) { r = $("#LastName").val() } n = n.substring(0, 1).toUpperCase() + n.substring(1, n.length).toLowerCase(); r = r.substring(0, 1).toUpperCase() + r.substring(1, r.length).toLowerCase(); $("#FirstName").val(n); $("#LastName").val(r); $("#SubmitRegistration").click() }
}
function StepTwo_ValidateTreeRegistration() { var e = 0; var t = new RegExp(/^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?$/i); var n = new RegExp("[Ã€Ã‚Ã„ÃˆÃ‰ÃŠÃ‹ÃŽÃÃ”Å’Ã™Ã›ÃœÅ¸Ã Ã¢Ã¤Ã¨Ã©ÃªÃ«Ã®Ã¯Ã´Å“Ã¹Ã»Ã¼Ã¿Ã‡Ã§]"); var r = new Array; if ($("#EmailTreeRegister").val().length == 0) { r[e++] = "email" } else if (!t.test($("#EmailTreeRegister").val().toString()) || n.test($("#EmailTreeRegister").val().toString())) { r[e++] = "emailAt" } if ($("#PasswordTreeRegister").val().length < 5 && $("#PasswordTreeRegister").val().length > 0) { r[e++] = "passwordNotLong" } if ($("#PasswordTreeRegister").val().length == 0) { r[e++] = "password" } if ($("#TreeName").val().length < 0) { r[e++] = "treeName" } if (r.length > 0) { $.ajax({ url: "Login.mvc/DisplayMessage?error=" + r, type: "GET", contentType: "html", success: function (e) { $("#vide").empty(); $("#vide").append(e); $("#showAlert").click() }, error: function () { } }); return false } else { var i = ""; if ($("#TreeName").val().length > 0) { i = $("#TreeName").val() } treetName = i.substring(0, 1).toUpperCase() + i.substring(1, i.length).toLowerCase(); $("#TreeName").val(i) } }
function ValidateTreeRegistrationWithCheckPasswordField() { if ($("#filename").length && $("#filename").html() == "") { $("#filename").text('Veuillez choisir un fichier avec l\'extension ".ged"'); return false } var e = 0; var t = new RegExp(/^[-a-z0-9~!$%^&*_=+}{\'?]+(\.[-a-z0-9~!$%^&*_=+}{\'?]+)*@([a-z0-9_][-a-z0-9_]*(\.[-a-z0-9_]+)*\.(aero|arpa|biz|com|coop|edu|gov|info|int|mil|museum|name|net|org|pro|travel|mobi|[a-z][a-z])|([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}))(:[0-9]{1,5})?$/i); var n = new RegExp("[Ã€Ã‚Ã„ÃˆÃ‰ÃŠÃ‹ÃŽÃÃ”Å’Ã™Ã›ÃœÅ¸Ã Ã¢Ã¤Ã¨Ã©ÃªÃ«Ã®Ã¯Ã´Å“Ã¹Ã»Ã¼Ã¿Ã‡Ã§]"); var r = new Array; if ($("#EmailTreeRegister").val().length == 0) { r[e++] = "email" } else if (!t.test($("#EmailTreeRegister").val().toString()) || n.test($("#EmailTreeRegister").val().toString())) { r[e++] = "emailAt" } if ($("#PasswordTreeRegister").val().length < 5 && $("#PasswordTreeRegister").val().length > 0) { r[e++] = "passwordNotLong" } if ($("#PasswordTreeRegister").val().length == 0) { r[e++] = "password" } if (!$("#filename").length && $("#TreeName").val().length < 0) { r[e++] = "treeName" } if ($("#PasswordTreeRegister").val() != $("#PasswordTreeRegisterCheck").val()) { r[e++] = "passwordCheck" } if (r.length > 0) { $.ajax({ url: "Login.mvc/DisplayMessage?error=" + r + "&fromRegistration=true", type: "GET", contentType: "html", success: function (e) { $("#vide").empty(); $("#vide").append(e); $("#showAlert").click() }, error: function () { } }); return false } else { var i = ""; if (!$("#filename").length && $("#TreeName").val().length > 0) { i = $("#TreeName").val() } treetName = i.substring(0, 1).toUpperCase() + i.substring(1, i.length).toLowerCase(); $("#TreeName").val(i) } }
function ValidateGedcomExtension() { var e = $("#fileupload").val().split(".").pop().toLowerCase(); if ($.inArray(e, ["ged"]) == -1) { return false } return true }
function TreeReg_ParseResults(e) { var t = Sys.Serialization.JavaScriptSerializer.deserialize(e.get_data()); if (t.Message != null) { $.post(appPath + "/Login.mvc/DisplayMessage?error=" + t.Message.toString(), {}, function (e) { $("#vide").empty(); $("#vide").html(e); $("#showAlert").click() }) } else { window.location = appPath + "/" + t.Url } }
function HidePersons(e, t) { $("#closeConf").click(); loadingSave(); var n = []; $("#personItems :checked").each(function () { n.push($(this).val()) }); $.post(appPath + "/Menu.mvc/ConfidentialReturn", { personIds: n.toString(), idGedcom: e }, function (e) { if (e == "Success") { jQuery(document).trigger("close.facebox"); document.location = appPath + "/Tree/Tree/" + t } }) }
function displayPersonFirst(isVisible) { var val = $('#hideAllPersons').val(); if (val == 'false') { $('#hideAllPersons').val('true'); } else { $('#hideAllPersons').val('false'); } }
function displayPersonItems(e) { $("#hideAllPersons").val(e); if (e == false) { $("#countChecked").val($("#countPersons").val()); $("input[name=personsAgeLessThan100]").prop("checked", false) } else { $("#countChecked").val(0); $("input[name=personsAgeLessThan100]").prop("checked", true) } }
function UpdateCount(value) { if (value == false) { DecreaseNumberOfCheckedPersons(); } else { IncreaseNumberOfCheckedPersons(); } }
function IncreaseNumberOfCheckedPersons() { $("#countChecked").val($("#countChecked").val() + 1); if ($("#countChecked").val() == $("#countPersons").val()) { $('input[id=hideAllPersons]').attr('checked', true); $('#hideAllPersons').val('false'); } }
function DecreaseNumberOfCheckedPersons() { $("#countChecked").val($("#countChecked").val() - 1); $('input[id=hideAllPersons]').attr('checked', false); $('#hideAllPersons').val('false'); }
function CloseFacebox() { jQuery(document).trigger('close.facebox'); }

//#region Fonctions Calendar
function ValidateNumericKey(event) {
    var key = event.keyCode || event.charCode;
    if (key >= 48 && key <= 57)
        return true;
    if (event.charCode != 0 && event.ctrlKey === false) {
        event.preventDefault();
    }
}

function Calculate() { valSelected = $(".convertisseur input:checked").val(); switch (valSelected) { case "1": calcGregorian(); break; case "2": calcFrench(); break; case "3": calcJulianCalendar(); break; case "4": calcHebrew(); break; case "5": calcIslamic(); break; case "6": calcPersian(); break; case "7": calcMayanCount(); break; case "8": calcIndianCivilCalendar(); break; default: break; } }
var J0000 = 1721424.5; var J1970 = 2440587.5; var JMJD = 2400000.5; var J1900 = 2415020.5; var J1904 = 2416480.5; var NormLeap = new Array("AnnÃ©e normale", "AnnÃ©e bissextile"); function weekday_before(weekday, jd) { return jd - jwday(jd - weekday); }
function search_weekday(weekday, jd, direction, offset) { return weekday_before(weekday, jd + (direction * offset)); }
function nearest_weekday(weekday, jd) { return search_weekday(weekday, jd, 1, 3); }
function next_weekday(weekday, jd) { return search_weekday(weekday, jd, 1, 7); }
function next_or_current_weekday(weekday, jd) { return search_weekday(weekday, jd, 1, 6); }
function previous_weekday(weekday, jd) { return search_weekday(weekday, jd, -1, 1); }
function previous_or_current_weekday(weekday, jd) { return search_weekday(weekday, jd, 1, 0); }
function leap_gregorian(year) { return ((year % 4) == 0) && (!(((year % 100) == 0) && ((year % 400) != 0))); }
var GREGORIAN_EPOCH = 1721425.5; function gregorian_to_jd(year, month, day) {
    return (GREGORIAN_EPOCH - 1) +
    (365 * (year - 1)) +
    Math.floor((year - 1) / 4) +
    (-Math.floor((year - 1) / 100)) +
    Math.floor((year - 1) / 400) +
    Math.floor((((367 * month) - 362) / 12) +
    ((month <= 2) ? 0 : (leap_gregorian(year) ? -1 : -2)) +
    day);
}
function jd_to_gregorian(jd) {
    var wjd, depoch, quadricent, dqc, cent, dcent, quad, dquad, yindex, dyindex, year, yearday, leapadj; wjd = Math.floor(jd - 0.5) + 0.5; depoch = wjd - GREGORIAN_EPOCH; quadricent = Math.floor(depoch / 146097); dqc = mod(depoch, 146097); cent = Math.floor(dqc / 36524); dcent = mod(dqc, 36524); quad = Math.floor(dcent / 1461); dquad = mod(dcent, 1461); yindex = Math.floor(dquad / 365); year = (quadricent * 400) + (cent * 100) + (quad * 4) + yindex; if (!((cent == 4) || (yindex == 4))) { year++; }
    yearday = wjd - gregorian_to_jd(year, 1, 1); leapadj = ((wjd < gregorian_to_jd(year, 3, 1)) ? 0
    : (leap_gregorian(year) ? 1 : 2)); month = Math.floor((((yearday + leapadj) * 12) + 373) / 367); day = (wjd - gregorian_to_jd(year, month, 1)) + 1; return new Array(year, month, day);
}
function n_weeks(weekday, jd, nthweek) {
    var j = 7 * nthweek; if (nthweek > 0) { j += previous_weekday(weekday, jd); } else { j += next_weekday(weekday, jd); }
    return j;
}
function iso_to_julian(year, week, day) { return day + n_weeks(0, gregorian_to_jd(year - 1, 12, 28), week); }
function jd_to_iso(jd) {
    var year, week, day; year = jd_to_gregorian(jd - 3)[0]; if (jd >= iso_to_julian(year + 1, 1, 1)) { year++; }
    week = Math.floor((jd - iso_to_julian(year, 1, 1)) / 7) + 1; day = jwday(jd); if (day == 0) { day = 7; }
    return new Array(year, week, day);
}
function iso_day_to_julian(year, day) { return (day - 1) + gregorian_to_jd(year, 1, 1); }
function jd_to_iso_day(jd) { var year, day; year = jd_to_gregorian(jd)[0]; day = Math.floor(jd - gregorian_to_jd(year, 1, 1)) + 1; return new Array(year, day); }
function pad(str, howlong, padwith) {
    var s = str.toString(); while (s.length < howlong) { s = padwith + s; }
    return s;
}
var JULIAN_EPOCH = 1721423.5; function leap_julian(year) { return (year % 4) == ((year > 0) ? 0 : 3); }
function julian_to_jd(year, month, day) {
    if (year < 1) { year++; }
    if (month <= 2) { year--; month += 12; }
    return ((Math.floor((365.25 * (year + 4716))) +
    Math.floor((30.6001 * (month + 1))) +
    day) - 1524.5);
}
function jd_to_julian(td) {
    var z, a, alpha, b, c, d, e, year, month, day; td += 0.5; z = Math.floor(td); a = z; b = a + 1524; c = Math.floor((b - 122.1) / 365.25); d = Math.floor(365.25 * c); e = Math.floor((b - d) / 30.6001); month = Math.floor((e < 14) ? (e - 1) : (e - 13)); year = Math.floor((month > 2) ? (c - 4716) : (c - 4715)); day = b - d - Math.floor(30.6001 * e); if (year < 1) { year--; }
    return new Array(year, month, day);
}
var HEBREW_EPOCH = 347995.5; function hebrew_leap(year) { return mod(((year * 7) + 1), 19) < 7; }
function hebrew_year_months(year) { return hebrew_leap(year) ? 13 : 12; }
function hebrew_delay_1(year) {
    var months, days, parts; months = Math.floor(((235 * year) - 234) / 19); parts = 12084 + (13753 * months); day = (months * 29) + Math.floor(parts / 25920); if (mod((3 * (day + 1)), 7) < 3) { day++; }
    return day;
}
function hebrew_delay_2(year) { var last, present, next; last = hebrew_delay_1(year - 1); present = hebrew_delay_1(year); next = hebrew_delay_1(year + 1); return ((next - present) == 356) ? 2 : (((present - last) == 382) ? 1 : 0); }
function hebrew_year_days(year) { return hebrew_to_jd(year + 1, 7, 1) - hebrew_to_jd(year, 7, 1); }
function hebrew_month_days(year, month) {
    if (month == 2 || month == 4 || month == 6 || month == 10 || month == 13) { return 29; }
    if (month == 12 && !hebrew_leap(year)) { return 29; }
    if (month == 8 && !(mod(hebrew_year_days(year), 10) == 5)) { return 29; }
    if (month == 9 && (mod(hebrew_year_days(year), 10) == 3)) { return 29; }
    return 30;
}
function hebrew_to_jd(year, month, day) {
    var jd, mon, months; months = hebrew_year_months(year); jd = HEBREW_EPOCH + hebrew_delay_1(year) +
    hebrew_delay_2(year) + day + 1; if (month < 7) {
        for (mon = 7; mon <= months; mon++) { jd += hebrew_month_days(year, mon); }
        for (mon = 1; mon < month; mon++) { jd += hebrew_month_days(year, mon); }
    } else { for (mon = 7; mon < month; mon++) { jd += hebrew_month_days(year, mon); } }
    return jd;
}
function jd_to_hebrew(jd) {
    var year, month, day, i, count, first; jd = Math.floor(jd) + 0.5; count = Math.floor(((jd - HEBREW_EPOCH) * 98496.0) / 35975351.0); year = count - 1; for (i = count; jd >= hebrew_to_jd(i, 7, 1) ; i++) { year++; }
    first = (jd < hebrew_to_jd(year, 1, 1)) ? 7 : 1; month = first; for (i = first; jd > hebrew_to_jd(year, i, hebrew_month_days(year, i)) ; i++) { month++; }
    day = (jd - hebrew_to_jd(year, month, 1)) + 1; return new Array(year, month, day);
}
function equinoxe_a_paris(year) { var equJED, equJD, equAPP, equParis, dtParis; equJED = equinox(year, 2); equJD = equJED - (deltat(year) / (24 * 60 * 60)); equAPP = equJD + equationOfTime(equJED); dtParis = (2 + (20 / 60.0) + (15 / (60 * 60.0))) / 360; equParis = equAPP + dtParis; return equParis; }
function paris_equinoxe_jd(year) { var ep, epg; ep = equinoxe_a_paris(year); epg = Math.floor(ep - 0.5) + 0.5; return epg; }
var FRENCH_REVOLUTIONARY_EPOCH = 2375839.5; function annee_da_la_revolution(jd) {
    var guess = jd_to_gregorian(jd)[0] - 2, lasteq, nexteq, adr; lasteq = paris_equinoxe_jd(guess); while (lasteq > jd) { guess--; lasteq = paris_equinoxe_jd(guess); }
    nexteq = lasteq - 1; while (!((lasteq <= jd) && (jd < nexteq))) { lasteq = nexteq; guess++; nexteq = paris_equinoxe_jd(guess); }
    adr = Math.round((lasteq - FRENCH_REVOLUTIONARY_EPOCH) / TropicalYear) + 1; return new Array(adr, lasteq);
}
function jd_to_french_revolutionary(jd) { var an, mois, decade, jour, adr, equinoxe; jd = Math.floor(jd) + 0.5; adr = annee_da_la_revolution(jd); an = adr[0]; equinoxe = adr[1]; mois = Math.floor((jd - equinoxe) / 30) + 1; jour = (jd - equinoxe) % 30; decade = Math.floor(jour / 10) + 1; jour = (jour % 10) + 1; return new Array(an, mois, decade, jour); }
function french_revolutionary_to_jd(an, mois, decade, jour) {
    var adr, equinoxe, guess, jd; guess = FRENCH_REVOLUTIONARY_EPOCH + (TropicalYear * ((an - 1) - 1)); adr = new Array(an - 1, 0); while (adr[0] < an) { adr = annee_da_la_revolution(guess); guess = adr[1] + (TropicalYear + 2); }
    equinoxe = adr[1]; jd = equinoxe + (30 * (mois - 1)) + (10 * (decade - 1)) + (jour - 1); return jd;
}
function leap_islamic(year) { return (((year * 11) + 14) % 30) < 11; }
var ISLAMIC_EPOCH = 1948439.5; var ISLAMIC_WEEKDAYS = new Array("al-'ahad", "al-'ithnayn", "ath-thalatha'", "al-'arb`a'", "al-khamis", "al-jum`a", "as-sabt"); function islamic_to_jd(year, month, day) {
    return (day +
    Math.ceil(29.5 * (month - 1)) +
    (year - 1) * 354 +
    Math.floor((3 + (11 * year)) / 30) +
    ISLAMIC_EPOCH) - 1;
}
function jd_to_islamic(jd) { var year, month, day; jd = Math.floor(jd) + 0.5; year = Math.floor(((30 * (jd - ISLAMIC_EPOCH)) + 10646) / 10631); month = Math.min(12, Math.ceil((jd - (29 + islamic_to_jd(year, 1, 1))) / 29.5) + 1); day = (jd - islamic_to_jd(year, month, 1)) + 1; return new Array(year, month, day); }
function leap_persian(year) { return ((((((year - ((year > 0) ? 474 : 473)) % 2820) + 474) + 38) * 682) % 2816) < 682; }
var PERSIAN_EPOCH = 1948320.5; var PERSIAN_WEEKDAYS = new Array("Yekshanbeh", "Doshanbeh", "Seshhanbeh", "Chaharshanbeh", "Panjshanbeh", "Jomeh", "Shanbeh"); function persian_to_jd(year, month, day) {
    var epbase, epyear; epbase = year - ((year >= 0) ? 474 : 473); epyear = 474 + mod(epbase, 2820); return day +
    ((month <= 7) ? ((month - 1) * 31) : (((month - 1) * 30) + 6)) +
    Math.floor(((epyear * 682) - 110) / 2816) +
    (epyear - 1) * 365 +
    Math.floor(epbase / 2820) * 1029983 +
    (PERSIAN_EPOCH - 1);
}
function jd_to_persian(jd) {
    var year, month, day, depoch, cycle, cyear, ycycle, aux1, aux2, yday; jd = Math.floor(jd) + 0.5; depoch = jd - persian_to_jd(475, 1, 1); cycle = Math.floor(depoch / 1029983); cyear = mod(depoch, 1029983); if (cyear == 1029982) { ycycle = 2820; } else {
        aux1 = Math.floor(cyear / 366); aux2 = mod(cyear, 366); ycycle = Math.floor(((2134 * aux1) + (2816 * aux2) + 2815) / 1028522) +
        aux1 + 1;
    }
    year = ycycle + (2820 * cycle) + 474; if (year <= 0) { year--; }
    yday = (jd - persian_to_jd(year, 1, 1)) + 1; month = (yday <= 186) ? Math.ceil(yday / 31) : Math.ceil((yday - 6) / 30); day = (jd - persian_to_jd(year, month, 1)) + 1; return new Array(year, month, day);
}
var MAYAN_COUNT_EPOCH = 584282.5; function mayan_count_to_jd(baktun, katun, tun, uinal, kin) {
    return MAYAN_COUNT_EPOCH +
    (baktun * 144000) +
    (katun * 7200) +
    (tun * 360) +
    (uinal * 20) +
    kin;
}
function jd_to_mayan_count(jd) { var d, baktun, katun, tun, uinal, kin; d = jd - MAYAN_COUNT_EPOCH; baktun = Math.floor(d / 144000); d = mod(d, 144000); katun = Math.floor(d / 7200); d = mod(d, 7200); tun = Math.floor(d / 360); d = mod(d, 360); uinal = Math.floor(d / 20); kin = mod(d, 20); return new Array(baktun, katun, tun, uinal, kin); }
var MAYAN_HAAB_MONTHS = new Array("Pop", "Uo", "Zip", "Zotz", "Tzec", "Xul", "Yaxkin", "Mol", "Chen", "Yax", "Zac", "Ceh", "Mac", "Kankin", "Muan", "Pax", "Kayab", "Cumku"); function jd_to_mayan_haab(jd) { var lcount, day; lcount = jd - MAYAN_COUNT_EPOCH; day = mod(lcount + 8 + ((18 - 1) * 20), 365); return new Array(Math.floor(day / 20) + 1, mod(day, 20)); }
var MAYAN_TZOLKIN_MONTHS = new Array("Imix", "Ik", "Akbal", "Kan", "Chicchan", "Cimi", "Manik", "Lamat", "Muluc", "Oc", "Chuen", "Eb", "Ben", "Ix", "Men", "Cib", "Caban", "Etxnab", "Cauac", "Ahau"); function jd_to_mayan_tzolkin(jd) { var lcount = jd - MAYAN_COUNT_EPOCH; return new Array(amod(lcount + 20, 20), amod(lcount + 4, 13)); }
var BAHAI_EPOCH = 2394646.5; var BAHAI_WEEKDAYS = new Array("JamÃ¡l", "KamÃ¡l", "FidÃ¡l", "IdÃ¡l", "IstijlÃ¡l", "IstiqlÃ¡l", "JalÃ¡l"); function bahai_to_jd(major, cycle, year, month, day) {
    var gy; gy = (361 * (major - 1)) + (19 * (cycle - 1)) + (year - 1) +
    jd_to_gregorian(BAHAI_EPOCH)[0]; return gregorian_to_jd(gy, 3, 20) + (19 * (month - 1)) +
    ((month != 20) ? 0 : (leap_gregorian(gy + 1) ? -14 : -15)) +
    day;
}
function jd_to_bahai(jd) { var major, cycle, year, month, day, gy, bstarty, bys, days, bld; jd = Math.floor(jd) + 0.5; gy = jd_to_gregorian(jd)[0]; bstarty = jd_to_gregorian(BAHAI_EPOCH)[0]; bys = gy - (bstarty + (((gregorian_to_jd(gy, 1, 1) <= jd) && (jd <= gregorian_to_jd(gy, 3, 20))) ? 1 : 0)); major = Math.floor(bys / 361) + 1; cycle = Math.floor(mod(bys, 361) / 19) + 1; year = mod(bys, 19) + 1; days = jd - bahai_to_jd(major, cycle, year, 1, 1); bld = bahai_to_jd(major, cycle, year, 20, 1); month = (jd >= bld) ? 20 : (Math.floor(days / 19) + 1); day = (jd + 1) - bahai_to_jd(major, cycle, year, month, 1); return new Array(major, cycle, year, month, day); }
var INDIAN_CIVIL_WEEKDAYS = new Array("Ravivara", "Somavara", "Mangalavara", "Budhavara", "Brahaspativara", "Sukravara", "Sanivara"); function indian_civil_to_jd(year, month, day) {
    var Caitra, gyear, leap, start, jd, m; gyear = year + 78; leap = leap_gregorian(gyear); start = gregorian_to_jd(gyear, 3, leap ? 21 : 22); Caitra = leap ? 31 : 30; if (month == 1) { jd = start + (day - 1); } else {
        jd = start + Caitra; m = month - 2; m = Math.min(m, 5); jd += m * 31; if (month >= 8) { m = month - 7; jd += m * 30; }
        jd += day - 1;
    }
    return jd;
}
function jd_to_indian_civil(jd) {
    var Caitra, Saka, greg, greg0, leap, start, year, yday, mday; Saka = 79 - 1; start = 80; jd = Math.floor(jd) + 0.5; greg = jd_to_gregorian(jd); leap = leap_gregorian(greg[0]); year = greg[0] - Saka; greg0 = gregorian_to_jd(greg[0], 1, 1); yday = jd - greg0; Caitra = leap ? 31 : 30; if (yday < start) { year--; yday += Caitra + (31 * 5) + (30 * 3) + 10 + start; }
    yday -= start; if (yday < Caitra) { month = 1; day = yday + 1; } else { mday = yday - Caitra; if (mday < (31 * 5)) { month = Math.floor(mday / 31) + 2; day = (mday % 31) + 1; } else { mday -= 31 * 5; month = Math.floor(mday / 30) + 7; day = (mday % 30) + 1; } }
    return new Array(year, month, day);
}
function updateFromGregorian() {
    var j, year, mon, mday, hour, min, sec, weekday, julcal, hebcal, islcal, hmindex, utime, isoweek, may_countcal, mayhaabcal, maytzolkincal, bahcal, frrcal, indcal, isoday, xgregcal; year = new Number(document.gregorian.year.value); mon = document.gregorian.month.selectedIndex; mday = new Number(document.gregorian.day.value); hour = min = sec = 0; hour = new Number(document.gregorian.hour.value); min = new Number(document.gregorian.min.value); sec = new Number(document.gregorian.sec.value); j = gregorian_to_jd(year, mon + 1, mday) +
    ((sec + 60 * (min + 60 * hour)) / 86400.0); document.julianday.day.value = j; document.modifiedjulianday.day.value = j - JMJD; weekday = jwday(j); document.gregorian.wday.value = Weekdays[weekday]; document.gregorian.leap.value = NormLeap[leap_gregorian(year) ? 1 : 0]; julcal = jd_to_julian(j); document.juliancalendar.year.value = julcal[0]; document.juliancalendar.month.selectedIndex = julcal[1] - 1; document.juliancalendar.day.value = julcal[2]; document.juliancalendar.leap.value = NormLeap[leap_julian(julcal[0]) ? 1 : 0]; hebcal = jd_to_hebrew(j); if (hebrew_leap(hebcal[0])) { document.hebrew.month.options.length = 13; document.hebrew.month.options[11] = new Option("Adar I"); document.hebrew.month.options[12] = new Option("Veadar"); } else { document.hebrew.month.options.length = 12; document.hebrew.month.options[11] = new Option("Adar"); }
    document.hebrew.year.value = hebcal[0]; document.hebrew.month.selectedIndex = hebcal[1] - 1; document.hebrew.day.value = hebcal[2]; hmindex = hebcal[1]; if (hmindex == 12 && !hebrew_leap(hebcal[0])) { hmindex = 14; }
    hmindex + ".gif"; switch (hebrew_year_days(hebcal[0])) {
        case 353: document.hebrew.leap.value = "AnnÃ©e commune dÃ©ficiente (353 jours)"; break; case 354: document.hebrew.leap.value = "AnnÃ©e commune normale (354 jours)"; break; case 355: document.hebrew.leap.value = "AnnÃ©e commune complÃ¨te (355 jours)"; break; case 383: document.hebrew.leap.value = "AnnÃ©e embolismique dÃ©ficiente (383 jours)"; break; case 384: document.hebrew.leap.value = "AnnÃ©e embolismique normale (384 jours)"; break; case 385: document.hebrew.leap.value = "AnnÃ©e embolismique complÃ¨te (385 jours)"; break; default: document.hebrew.leap.value = "Nombre de jours invalide : " +
        hebrew_year_days(hebcal[0]) + " jours."; break;
    }
    islcal = jd_to_islamic(j); document.islamic.year.value = islcal[0]; document.islamic.month.selectedIndex = islcal[1] - 1; document.islamic.day.value = islcal[2]; document.islamic.wday.value = "yawm " + ISLAMIC_WEEKDAYS[weekday]; document.islamic.leap.value = NormLeap[leap_islamic(islcal[0]) ? 1 : 0]; perscal = jd_to_persian(j); document.persian.year.value = perscal[0]; document.persian.month.selectedIndex = perscal[1] - 1; document.persian.day.value = perscal[2]; document.persian.wday.value = PERSIAN_WEEKDAYS[weekday]; document.persian.leap.value = NormLeap[leap_persian(perscal[0]) ? 1 : 0]; may_countcal = jd_to_mayan_count(j); document.mayancount.baktun.value = may_countcal[0]; document.mayancount.katun.value = may_countcal[1]; document.mayancount.tun.value = may_countcal[2]; document.mayancount.uinal.value = may_countcal[3]; document.mayancount.kin.value = may_countcal[4]; mayhaabcal = jd_to_mayan_haab(j); document.mayancount.haab.value = "" + mayhaabcal[1] + " " + MAYAN_HAAB_MONTHS[mayhaabcal[0] - 1]; maytzolkincal = jd_to_mayan_tzolkin(j); document.mayancount.tzolkin.value = "" + maytzolkincal[1] + " " + MAYAN_TZOLKIN_MONTHS[maytzolkincal[0] - 1]; bahcal = jd_to_bahai(j); document.bahai.kull_i_shay.value = bahcal[0]; document.bahai.vahid.value = bahcal[1]; document.bahai.year.selectedIndex = bahcal[2] - 1; document.bahai.month.selectedIndex = bahcal[3] - 1; document.bahai.day.selectedIndex = bahcal[4] - 1; document.bahai.weekday.value = BAHAI_WEEKDAYS[weekday]; document.bahai.leap.value = NormLeap[leap_gregorian(year) ? 1 : 0]; indcal = jd_to_indian_civil(j); document.indiancivilcalendar.year.value = indcal[0]; document.indiancivilcalendar.month.selectedIndex = indcal[1] - 1; document.indiancivilcalendar.day.value = indcal[2]; document.indiancivilcalendar.weekday.value = INDIAN_CIVIL_WEEKDAYS[weekday]; document.indiancivilcalendar.leap.value = NormLeap[leap_gregorian(indcal[0] + 78) ? 1 : 0]; frrcal = jd_to_french_revolutionary(j); document.french.an.value = frrcal[0]; document.french.mois.selectedIndex = frrcal[1] - 1; document.french.decade.selectedIndex = frrcal[2] - 1; document.french.jour.selectedIndex = ((frrcal[1] <= 12) ? frrcal[3] : (frrcal[3] + 11)) - 1; if (document.gregserial != null) { document.gregserial.day.value = j - J0000; }
    document.excelserial1900.day.value = (j - J1900) + 1 +
    ((j > 2415078.5) ? 1 : 0)
    ; document.excelserial1904.day.value = j - J1904; utime = (j - J1970) * (60 * 60 * 24 * 1000); document.unixtime.time.value = Math.round(utime / 1000); isoweek = jd_to_iso(j); document.isoweek.year.value = isoweek[0]; document.isoweek.week.value = isoweek[1]; document.isoweek.day.value = isoweek[2]; isoday = jd_to_iso_day(j); document.isoday.year.value = isoday[0]; document.isoday.day.value = isoday[1];
}
function calcGregorian() { updateFromGregorian(); }
function calcJulian() { var j, date, time; j = new Number(document.julianday.day.value); date = jd_to_gregorian(j); time = jhms(j); document.gregorian.year.value = date[0]; document.gregorian.month.selectedIndex = date[1] - 1; document.gregorian.day.value = date[2]; document.gregorian.hour.value = pad(time[0], 2, " "); document.gregorian.min.value = pad(time[1], 2, "0"); document.gregorian.sec.value = pad(time[2], 2, "0"); updateFromGregorian(); }
function setJulian(j) { document.julianday.day.value = new Number(j); calcJulian(); }
function calcModifiedJulian() { setJulian((new Number(document.modifiedjulianday.day.value)) + JMJD); }
function calcJulianCalendar() { setJulian(julian_to_jd((new Number(document.juliancalendar.year.value)), document.juliancalendar.month.selectedIndex + 1, (new Number(document.juliancalendar.day.value)))); }
function calcHebrew() { setJulian(hebrew_to_jd((new Number(document.hebrew.year.value)), document.hebrew.month.selectedIndex + 1, (new Number(document.hebrew.day.value)))); }
function calcIslamic() { setJulian(islamic_to_jd((new Number(document.islamic.year.value)), document.islamic.month.selectedIndex + 1, (new Number(document.islamic.day.value)))); }
function calcPersian() { setJulian(persian_to_jd((new Number(document.persian.year.value)), document.persian.month.selectedIndex + 1, (new Number(document.persian.day.value)))); }
function calcMayanCount() { setJulian(mayan_count_to_jd((new Number(document.mayancount.baktun.value)), (new Number(document.mayancount.katun.value)), (new Number(document.mayancount.tun.value)), (new Number(document.mayancount.uinal.value)), (new Number(document.mayancount.kin.value)))); }
function calcBahai() { setJulian(bahai_to_jd((new Number(document.bahai.kull_i_shay.value)), (new Number(document.bahai.vahid.value)), document.bahai.year.selectedIndex + 1, document.bahai.month.selectedIndex + 1, document.bahai.day.selectedIndex + 1)); }
function calcIndianCivilCalendar() { setJulian(indian_civil_to_jd((new Number(document.indiancivilcalendar.year.value)), document.indiancivilcalendar.month.selectedIndex + 1, (new Number(document.indiancivilcalendar.day.value)))); }
function calcFrench() {
    var decade, j, mois; j = document.french.jour.selectedIndex; decade = document.french.decade.selectedIndex; mois = document.french.mois.selectedIndex; if (j > 9) { j -= 11; decade = 0; mois = 12; }
    if (mois == 12) { decade = 0; if (j > 5) { j = 0; } }
    setJulian(french_revolutionary_to_jd((new Number(document.french.an.value)), mois + 1, decade + 1, j + 1));
}
function calcGregSerial() { setJulian((new Number(document.gregserial.day.value)) + J0000); }
function calcExcelSerial1900() {
    var d = new Number(document.excelserial1900.day.value); if (d > 60) { d--; }
    setJulian((d - 1) + J1900);
}
function calcExcelSerial1904() { setJulian((new Number(document.excelserial1904.day.value)) + J1904); }
function calcUnixTime() { var t = new Number(document.unixtime.time.value); setJulian(J1970 + (t / (60 * 60 * 24))); }
function calcIsoWeek() { var year = new Number(document.isoweek.year.value), week = new Number(document.isoweek.week.value), day = new Number(document.isoweek.day.value); setJulian(iso_to_julian(year, week, day)); }
function calcIsoDay() { var year = new Number(document.isoday.year.value), day = new Number(document.isoday.day.value); setJulian(iso_day_to_julian(year, day)); }
//#endregion Fonctions Calendar

function FavoritePlace_CloseFacebox() { document.body.style.cursor = 'default'; jQuery(document).trigger('close.facebox') }
function FavoritePlace_Changement_onglet2(letter) {
    document.body.style.cursor = 'wait';
    var tabId = "litab" + letter;
    $("li[class='active']").toggleClass('').removeClass('active');
    $("li[id='" + tabId + "']").addClass('active');
    //$("a[class='ongletOn']").toggleClass('ongletOff').removeClass('ongletOn').css('color', 'rgb(2, 47, 114)'); $("a[class='ongletOff'][id='" + tabId + "']").toggleClass('ongletOn').removeClass('ongletOff').css('color', 'rgb(204, 187, 130)');
    $("#letter").val(letter);
    $("#placeNamesSubmit").submit();
    document.body.style.cursor = 'default';
}
function setWidthListIndivids() { $(".content").css("height", "auto"); $(".content").css("width", "540px"); }
function setWidthDefault() { $(".content").css("height", "auto"); $(".content").css("width", "650px"); }

//#region Function Import Export
function PopupExport(e) { if (e == "complet") { $.ajax({ url: appPath + "/Menu.mvc/WaitExport/" + Math.random(), type: "GET", contentType: "html", success: function (e) { $("#gedcom").empty(); $("#gedcom").append(e) }, error: function () { } }) } else { idPerson = $("#fromPersonId").val(); ascendants = $("input[name='ascendants']:checked").val(); $.ajax({ url: appPath + "/Menu.mvc/WaitExport?idPerson=" + idPerson + "&ascendants=" + ascendants + "&" + Math.random(), type: "GET", contentType: "html", success: function (e) { $("#gedcom").empty(); $("#gedcom").append(e) }, error: function () { } }) } }
function ImportExport_Changement_onglet2(e) { ImportExport_getPersonsList(e); var t = "litab" + e; $("li[class='active']").toggleClass("").removeClass("active"); $("li[id='" + t + "']").addClass("active") } function ImportExport_getPersonsList(e, t, n) { $.post(appPath + "/Menu.mvc/GetPersonsByLetter", { gedcomId: $("#gedcomIdOfPerson").val(), letter: e, familyName: t, otherThenLetter: n, page: 1 }, function (e) { if (e.htmlSource != null) { $("#prochesContenu_a").html(e.htmlSource) } else { alert("No records found"); document.body.style.cursor = "default" } }) }
function ImportExport_closePersonList() { setWidthDefault(); $("#importexport-pop-up").css("display", "block"); $("#listIndivids").css("display", "none"); }
function ImportExport_showListIndividus() { setWidthListIndivids(); $("#importexport-pop-up").css("display", "none"); $("#listIndivids").css("display", "block"); }
function ImportExport_SetFromPerson(name, id) { $("#fromPerson").val(unescape(name)); $("#fromPersonId").val(id); ImportExport_closePersonList(); }
function ChangePlaceformat(placeformat) { $("#FormatId").val(placeformat.value); }
function SelectFormula() { $("#exportStandard").css("display", "none"); $("#exportAdvanced").css("display", "block"); }
//#endregion Function Import Export

function Individus_Changement_onglet2(e, t) { Individus_getPersonsList(e, t); var n = "lmaintab" + t; $("li[class='active']").toggleClass("").removeClass("active"); $("li[id='" + n + "']").addClass("active") }
function Individus_getPersonsList(e, t, n, r) { document.body.style.cursor = "wait"; $.post(appPath + "/Menu.mvc/GetPersonsByLetter", { gedcomId: e, letter: t, familyName: n, otherThenLetter: r, page: 2 }, function (e) { if (e.htmlSource != null) { $("#prochesContenu_a").html(e.htmlSource); $("div[class^='apanel']").hide(); $("p[class^='titlePerson_a aflip']").click(function () { var e = $(this).attr("class").substring(19); $(this).toggleClass("active_a").next().slideToggle("slow"); $("div[class^='apanel'][class!='apanel" + e + "']").hide(); $("p[class^='titlePerson_a aflip'][class!='titlePerson_a aflip" + e + " active_a']").removeClass("active_a") }); document.body.style.cursor = "default" } else { alert("No records found"); document.body.style.cursor = "default" } }) }
function MessageDemandAccess_DemandeAcces(idGedcom) { loading(); $.post(appPath + "/Person.mvc/DemandeAcces", { idGedcom: idGedcom, message: $('#Message').val(), receiver: $('#Receiver').val(), subject: $('#Subject').val() }, function (jsonData) { if (jsonData == "requestSent") { $.blockUI({ message: $('#requestSent').html(), css: { width: '417px', height: '150px' } }); } else if (jsonData == 'alreadyDemanded') { $.blockUI({ message: $('#alreadyDemanded').html(), css: { width: '417px', height: '150px' } }); } else { closeLoading(); } }); }
function ClosePopup() { jQuery(document).trigger('close.facebox'); }
function MessageDemandAccessPopup_DemandeAcces(e, t) { $("#closeSendMessage").click(); loading(); $.post(appPath + "/Person.mvc/DemandeAcces", { idGedcom: e, idPerson: t, message: $("#Message").val(), receiver: $("#Receiver").val(), subject: $("#Subject").val() }, function (e) { if ((e.RouteValues != null) && (e.RouteValues.length == 2)) { window.location = appPath + '/' + e.RouteValues[1].Value + '.mvc/' + e.RouteValues[0].Value; } else if (e == "requestSent") { $("#divResponse").html($("#requestSent").html()); closeLoading(); $("#responseMessage").click() } else if (e == "alreadyDemanded") { $("#divResponse").append($("#alreadyDemanded").html()); closeLoading(); $("#responseMessage").click() } else { closeLoading() } }) }
function CloseBlockUI() { $.unblockUI(); }

//#region Function Gedcom
function PropertiesGedcom_CloseFacebox() { jQuery(document).trigger('close.facebox'); document.location = appPath + "/Tree/Tree"; }
function PropertiesGedcom_resetMessages() { $("#errorMessages").html(""); $("#errorMessages").css("display", "none"); }
function PropertiesGedcom_ParseResult(e) {
    var t = Sys.Serialization.JavaScriptSerializer.deserialize(e.get_data());
    if (t && t.TypeError != null) {
        $("#errorMessages").css("display", "");
        $("#errorMessages").html('<div role="alert" class="alert alert-warning fade in" ><button data-dismiss="alert" class="close" type="button"><span aria-hidden="true">Ã—</span><span class="sr-only">Close</span></button><p>' + t.Message + "</p></div>");
        return false
    }
    else if (t && t.Message != null) {
        if (updateGedcomNameIndividualSheet && typeof updateGedcomNameIndividualSheet === "function") {
            updateGedcomNameIndividualSheet();
            updateGedcomNameIndividualSheet = null;
        }
        $("#errorMessages").css("display", "");
        $("#errorMessages").html('<div role="alert" class="alert alert-warning fade in" ><button data-dismiss="alert" class="close" type="button"><span aria-hidden="true">Ã—</span><span class="sr-only">Close</span></button><p>' + t.Message + "</p></div>");
        return false
    } else {
        $("#errorMessages").css("display", "none");
        return false
    }
}
function showListIndividus(e) { $("#from").val(e); $(".content").css("height", "auto"); PropertiesGedcom_resetMessages(); jQuery(document).ready(function (e) { e("#properties-top").css("display", "none"); e("#listIndivids").css("display", "block") }) } function PropertiesGedcom_Changement_onglet2(e) { PropertiesGedcom_getPersonsList(e); var t = "litab" + e; $("li[class='active']").toggleClass("").removeClass("active"); $("li[id='" + t + "']").addClass("active") }
function PropertiesGedcom_getPersonsList(e, t, n) { document.body.style.cursor = "wait"; $.post(appPath + "/Menu.mvc/GetPersonsByLetter", { gedcomId: $("#gedcomIdOfPerson").val(), letter: e, familyName: t, otherThenLetter: n, page: 3 }, function (e) { if (e.htmlSource) { $("#prochesContenu_a").html(e.htmlSource); $("div[class^='apanel']").hide(); $("p[class^='titlePerson_a aflip']").click(function () { var e = $(this).attr("class").substring(19); $(this).toggleClass("active_a").next().slideToggle("slow"); $("div[class^='apanel'][class!='apanel" + e + "']").hide(); $("p[class^='titlePerson_a aflip'][class!='titlePerson_a aflip" + e + " active_a']").removeClass("active_a") }); document.body.style.cursor = "default" } else { alert("No records found"); document.body.style.cursor = "default" } }) }
function closePersonList() { jQuery(document).ready(function (e) { e("#properties-top").css("display", "block"); e("#listIndivids").css("display", "none") }) }
function SelectDeparturePerson(e, t) { if ($("#from").val() == "root") { $("#RootName").val(unescape(e)); $("#RootId").val(t) } else { $("#DepartName").val(unescape(e)); $("#DepartId").val(t) } closePersonList() }
function SetActiveGedcom(e) { $.post(appPath + "/Menu.mvc/SetActiveGedcom/" + Math.random(), { gedcomId: e }, function (e) { if (e == "Failed") { $("#errorMessages").html("Operation d'actualiser le privilege a echoue") } else { window.location = appPath + "/Tree/Tree/" + e + "/" + Math.random() } }) }
function DeleteGedcom() { var e = $("#idGedcomToDelete").val(); $.post(appPath + "/Menu.mvc/DeleteGedcom/" + Math.random(), { gedcomId: e }, function (t) { if (t == "Failed") { $("#errorMessages").html("OpÃ©ration de suppression a Ã©chouÃ©") } else { $("#rowGedcom" + e).remove() } }); CancelDeleteGedcom() }
function ConfirmDeleteGedcom(gedcomId) { $("#top-treeList").css("display", "none"); $("#confirmDeleteGedcom").css("display", "block"); $("#idGedcomToDelete").val(gedcomId); $(".content").css("height", "180px"); $(".content").css("width", "450px"); $("#pop-up-treeList").css("width", "450px"); $("#pop-up-treeList").css("height", "200px"); }
function CancelDeleteGedcom() { $("#top-treeList").css("display", "block"); $("#confirmDeleteGedcom").css("display", "none"); }
//#endregion Function Gedcom

function TreeSharing_ParseResult(content) {
    var jsonData = Sys.Serialization.JavaScriptSerializer.deserialize(content.get_data());
    if (jsonData && jsonData.statusCode == 0) {
        $("#errorMessages").html('<div role="alert" class="alert alert-warning fade in" ><button data-dismiss="alert" class="close" type="button"><span aria-hidden="true">Ã—</span><span class="sr-only">Close</span></button><p>' +
           jsonData.statusMessage + '</p></div>');
        $("#FirstName").val(""); $("#LastName").val("");
        $("#Email").val("");
        $(".content").css("cursor", "");
    }
    if (jsonData && (jsonData.TypeError == "emptyField" || jsonData.TypeError == "emailNotValid")) {
        $("#errorMessages").html('<div role="alert" class="alert alert-warning fade in" ><button data-dismiss="alert" class="close" type="button"><span aria-hidden="true">Ã—</span><span class="sr-only">Close</span></button><p>' +
           jsonData.Message + '</p></div>');
        $(".content").css("cursor", "");
        $("#inviteButton").removeAttr("disabled", "disabled");
        $("#inviteButton").attr("enabled", "enabled");
        return false;
    }
    if (jsonData && jsonData.statusCode == 1) {
        $("#errorMessages").html('<div role="alert" class="alert alert-warning fade in" ><button data-dismiss="alert" class="close" type="button"><span aria-hidden="true">Ã—</span><span class="sr-only">Close</span></button><p>' +
           jsonData.statusMessage + '</p></div>');
        $("#FirstName").val(""); $("#LastName").val("");
        $("#Email").val("");
        $(".content").css("cursor", "");
        $("#SendInvitationList").html(jsonData.personHtml);
        return false;
    }
    $(".content").css("cursor", "");
}
function DisableFunction() { $(".content").css("cursor", "wait"); }
function ParseResultAccess(content) {
    var jsonData = Sys.Serialization.JavaScriptSerializer.deserialize(content.get_data());
    if (jsonData && jsonData.Message != null) {
        $("#messageTreeStatus").html('<div role="alert" class="alert alert-warning fade in" ><button data-dismiss="alert" class="close" type="button"><span aria-hidden="true">Ã—</span><span class="sr-only">Close</span></button><p>' +
           jsonData.Message + '</p></div>');
        return false;
    }
}
function UpdateAuthorisation(privilegeId, allowAccess) { $.post(appPath + "/Menu.mvc/UpdatePrivilege", { privilegeId: privilegeId, allowAccess: allowAccess }, function (msg) { if (msg == "Failed") { $("#errorMessages").html("Operation d'actualiser le privilege a echoue"); } }); }
function DeleteAuthorisation(privilegeId) { $.post(appPath + "/Menu.mvc/DeletePrivilege", { privilegeId: privilegeId }, function (msg) { if (msg == "Success") { $("#row" + privilegeId).remove(); } else { $("#errorMessages").html("OpÃ©ration de suppression a Ã©chouÃ©"); } }); }
function ResetErrorMessage() { $("#errorMessages").html(""); $("#messageTreeStatus").html(""); }
function fnStartClock() { oInterval = setInterval(fnDoClock, 10000); }
function fnDoClock() {
    $.post(appPath + "/Menu.mvc/GetState/" + Math.random(), null, function (data) {
        if (data.state.toString() == "2") {
            clearInterval(oInterval);
            PopupDownloadExport(data.workid);
        }
        else if (data.state.toString() == "3") {
            clearInterval(oInterval);
            ErrorExport();
        }
    });
}
function ValidateHistory() {
    var x = $("#keyword").val().trim(); if (x.length == 0) { return false; }
    else
        if (x.length < 2) { return false; }
        else { window.location.href = "http://r.orange.fr/r?ref=famille_HP_villesvillages&url=" + encodeURIComponent(top.location.host + "/v2/services-villes-villages/villes-et-villages-recherche.asp?keyword=" + x.toString()); return false; }
}
function keyeventHistory(e) { if (e.keyCode == 13) { ValidateHistory(); } }

//#region Function Orange
function SubmitForm() { $("#SearchBlocForm").submit(); }
//#endregion Function Orange

function ConfirmDeleteChild_ParseResult(e) { var t = Sys.Serialization.JavaScriptSerializer.deserialize(e.get_data()); if (t == "closeFacebox") { $("#closeDelete").click(); return false } if (t == "errorDelete") { $("#errorMessages").html("OpÃ©ration de suppression a Ã©chouÃ©"); return false } else if (t == "errorRoot") { $("#closeDelete").click(); $("#messageContent").empty(); $("#messageContent").html("Vous ne pouvez pas supprimer la racine de lâ€™arbre. Pour changer la racine aller dans le menu Â« Gestion / PropriÃ©tÃ©s de lâ€™Arbre Â»"); $("#linkError").click(); return false } $("#closeDelete").click(); loadingDelete(); if (t.Url != null) { window.location = t.Url } if (t.RouteValues != null && t.RouteValues.length == 3) { window.location = appPath + "/" + t.RouteValues[1].Value + ".mvc/" + t.RouteValues[0].Value + "/" + t.RouteValues[2].Value + "?" + Math.random() } if (t.RouteValues != null && t.RouteValues.length == 4) { window.location = appPath + "/" + t.RouteValues[1].Value + ".mvc/" + t.RouteValues[0].Value + "/" + t.RouteValues[2].Value + "/" + t.RouteValues[3].Value + "?" + Math.random() } }
function ConfirmDeletePerson_ParseResult(e) { var t = Sys.Serialization.JavaScriptSerializer.deserialize(e.get_data()); if (t == "closeModal") { $("#closeDelete").click(); return false } if (t == "errorDelete") { $("#closeDelete").click(); $("#messageContent").empty(); $("#messageContent").html("OpÃ©ration de suppression a Ã©chouÃ©"); $("#linkError").click(); return false } else if (t == "errorRoot") { $("#closeDelete").click(); $("#messageContent").empty(); $("#messageContent").html("Vous ne pouvez pas supprimer la racine de lâ€™arbre. Pour changer la racine aller dans le menu Â« Gestion / PropriÃ©tÃ©s de lâ€™Arbre Â»"); $("#linkError").click(); return false } $("#closeDelete").click(); loadingDelete(); if (t.Url != null) { window.location = t.Url } if (t.RouteValues != null && t.RouteValues.length == 3) { window.location = appPath + "/" + t.RouteValues[1].Value + ".mvc/" + t.RouteValues[0].Value + "/" + t.RouteValues[2].Value + "?" + Math.random() } if (t.RouteValues != null && t.RouteValues.length == 4) { window.location = appPath + "/" + t.RouteValues[1].Value + ".mvc/" + t.RouteValues[0].Value + "/" + t.RouteValues[2].Value + "/" + t.RouteValues[3].Value + "?" + Math.random() } }
function ConfirmDeleteUnion_ParseResult(e) { $(document).ajaxStop($.unblockUI); var t = Sys.Serialization.JavaScriptSerializer.deserialize(e.get_data()); if (t == "closeFacebox") { $("#closeDeleteUnion").click(); return false } if (t == "errorDelete") { $("#errorMessages").html("OpÃ©ration de suppression a Ã©chouÃ©"); return false } else if (t == "errorRoot") { jQuery(document).ready(function (e) { jQuery.facebox({ ajax: "Person.mvc/ErrorDeleteRoot" }) }); return false } $("#closeDeleteUnion").click(); loadingDelete(); if (t.RouteValues != null && t.RouteValues.length == 3) { window.location = appPath + "/" + t.RouteValues[1].Value + ".mvc/" + t.RouteValues[0].Value + "/" + t.RouteValues[2].Value + "?" + Math.random() } if (t.RouteValues != null && t.RouteValues.length == 4) { window.location = appPath + "/" + t.RouteValues[1].Value + ".mvc/" + t.RouteValues[0].Value + "/" + t.RouteValues[2].Value + "/" + t.RouteValues[3].Value + "?" + Math.random() } }
function ConfirmSexChanged_ParseResult(e) { var t = Sys.Serialization.JavaScriptSerializer.deserialize(e.get_data()); if (t == "closeFacebox") { closeFacebox(); return "false" } else { if (t.RouteValues != null && t.RouteValues.length == 5) { window.location = appPath + "/" + t.RouteValues[1].Value + ".mvc/" + t.RouteValues[0].Value + "/" + t.RouteValues[2].Value + "/" + t.RouteValues[3].Value + "/" + t.RouteValues[4].Value + "?" + Math.random() } } }
function Createperson_ParseResult(e) { createPersonDisabled = false; var t = Sys.Serialization.JavaScriptSerializer.deserialize(e.get_data()); if (t && t.TypeError == "date") { $("#dateFormatLink").css("display", ""); $("#errorMessages").html('<div role="alert" class="alert alert-warning fade in" ><button data-dismiss="alert" class="close" type="button"><span aria-hidden="true">Ã—</span><span class="sr-only">Close</span></button><p>' + t.Message + "</p></div>"); $("#saveButton").removeAttr("disabled", "disabled"); $("#saveButton").attr("enabled", "enabled"); return false } if (t && t.TypeError != "date" && t.TypeError != null) { $("#dateFormatLink").css("display", "none"); $("#errorMessages").html('<div role="alert" class="alert alert-warning fade in" ><button data-dismiss="alert" class="close" type="button"><span aria-hidden="true">Ã—</span><span class="sr-only">Close</span></button><p>' + t.Message + "</p></div>"); $("#saveButton").removeAttr("disabled", "disabled"); $("#saveButton").attr("enabled", "enabled"); return false } $("#closeCreatePerson").click(); loading(); if (t.RouteValues != null && t.RouteValues.length == 3) { location.href = appPath + "/" + t.RouteValues[1].Value + ".mvc/" + t.RouteValues[0].Value + "/" + t.RouteValues[2].Value + "?" + Math.random() } if (t.RouteValues != null && t.RouteValues.length == 4) { location.href = appPath + "/" + t.RouteValues[1].Value + ".mvc/" + t.RouteValues[0].Value + "/" + t.RouteValues[2].Value + "/" + t.RouteValues[3].Value + "?" + Math.random() } } var createPersonDisabled = false
function SelectPerson(type, idAttachTo) { location.href = appPath + '/MainLayout.mvc/SetParameters?type=' + type + '&idPerson=' + idAttachTo + '&idFamily=' + $("#MarriageList").val(); }
function SetFamilyId(value) { $("#FamilyId").val(value); }
function CreatePerson_DisableButton() { if (createPersonDisabled == false) { createPersonDisabled = true; return true; } else { return false; } }
function changeValBirth() { $("#BirthPlaceId").val(0); }
function changeValDeath() { $("#DeathPlaceId").val(0); }
function changeValMarriage() { $("#MarriagePlaceId").val(0); }
function GetFirstNameList(e, t) { var n = 0; if (t == 2) { n = $("#FirstName1").val() } $.post(appPath + "/Person.mvc/GetFirstNames", { familyName: e, idFirstPerson: n }, function (e) { if (e.length > 0) { var n = []; for (var r in e) { n.push('<option value="' + e[r].PersonId + '">' + e[r].Name + "</option>") } if (t == 1) { $("#FirstName1").html(n.join("")); $("#FirstName1").removeAttr("disabled", "disabled"); $("#FirstName1").attr("enabled", "enabled"); var i = document.getElementById("LastName2"); i[0].selected = "1"; n.push('<option selected="selected">SÃ©lectionner le prÃ©nom</option>'); $("#FirstName2").html(n.join("")); $("#FirstName2").attr("disabled", "disabled"); $("#FirstName2").removeAttr("enabled", "enabled") } else { $("#FirstName2").html(n.join("")); $("#FirstName2").removeAttr("disabled", "disabled"); $("#FirstName2").attr("enabled", "enabled") } $("#TypeConnection").val(1); if (e.length == 1 && t == 2) { $("#TypeConnection").val(2) } ViewConnectivity() } }) }
function ViewConnectivity() { $("#IdPerson1").val($("#FirstName1").val()); $("#IdPerson2").val($("#FirstName2").val()); WaitToCalculate(); $.post(appPath + "/Person.mvc/GetConnectivity", { IdPerson1: $("#IdPerson1").val(), IdPerson2: $("#IdPerson2").val() }, function (e) { if (e) { var t = '<div><div class="marge-top15px"><p><i title="" data-original-title="" class="fleche-orange-d"></i>'; var n = ""; var r = ""; switch (e.TypeConnectionTree) { case 1: n = "Les deux personnes sont <b>parentes au degrÃ© " + e.TreeConnections[0].Degree + ".</b>"; r = "L'une des deux personnes descend en ligne directe de l'autre."; break; case 2: n = "Les deux personnes sont <b>parentes au degrÃ© " + e.TreeConnections[0].Degree + "</b>"; r = "Nous avons trouvÃ© plusieurs ancÃªtres communs contribuant au mÃªme degrÃ© de parentÃ©."; break; case 3: r = "Pas de lien de parentÃ© trouveÃ© entre."; break } t += '<div class="textDegree">' + n + " <b>" + r + "</b></p></div></div>"; switch (e.TypeConnectionTree) { case 1: t += '<b><div id="contentConnectionSimple" class="bloc-lien-parente"><table class="treeName">'; if (e.TreeConnections && e.TreeConnections.length > 0) { var i = e.TreeConnections[0]; for (var s = i.LeftTree.length - 1; s >= 0; s--) { t += "<tr><td>" + i.LeftTree[s].Name + "</td></tr>"; if (s != 0) { if (s % 2 == 1) { t += '<tr><td class="leafRight"><img src="Content/img/leaf1.png" /></td></tr>' } else { t += '<tr><td class="leafLeft"><img src="Content/img/leaf2.png" /></td></tr>' } } } } t += "</table></div>"; break; case 2: for (var s in e.TreeConnections) { var o = e.TreeConnections[s]; t += '<b><div id="contentConnectionDouble" class="bloc-lien-parente">'; if (o.LeftTree && o.LeftTree.length > 1) { var u = o.LeftTree[o.LeftTree.length - 1]; t += '<div class="ancester">' + u.Name; if (o.CommonAncesterUnion) { t += '<br/> <i alt="" data-original-title="mariage" class="icon-union"></i><br/>' + o.CommonAncesterUnion.Name } t += "</div>" } t += '<div class="leftTree"><table class="treeName">'; for (var a = o.LeftTree.length - 2; a >= 0; a--) { if (a % 2 == 0) { t += '<tr><td class="leafLeft"><img src="Content/img/leaf2.png" /></td></tr>' } else { t += '<tr><td class="leafRight"><img src="Content/img/leaf1.png" /></td></tr>' } var u = o.LeftTree[a].Name; t += "<tr><td>" + u + "</td></tr>" } t += '</table></div><div class="rightTree"><table class="treeName">'; for (var a = o.RightTree.length - 2; a >= 0; a--) { if (a % 2 == 0) { t += '<tr><td class="leafLeft"><img src="Content/img/leaf2.png" /></td></tr>' } else { t += '<tr><td class="leafRight"><img src="Content/img/leaf1.png" /></td></tr>' } var u = o.RightTree[a].Name; t += "<tr><td>" + u + "</td></tr>" } t += "</table></div>"; t += '<div class="clear"></div></div>' } break; case 3: t += '<b><div id="contentNoConnection" class="bloc-lien-parente"><table class="treeName"><tr><td>'; t += e.Person1.Name + '</td></tr> <tr> <td><img src="Content/img/leaf10.png" /></td></tr>'; t += "<tr><td>" + e.Person2.Name + "</td></tr></table></div>"; break } t += "</b></div>"; $("#connectivityTree").html(t) } else { $("#connectivityTree").html("") } }) }
function WaitToCalculate() { var wait = "<div><div class=\"divInformation\"><div class=\"textDegree\"><img src=\"Content/img/indicator.gif\" />Calcul en cours...</div></div></div>"; $("#connectivityTree").html(wait); }
function ClearPerson2() { var LastName2 = document.getElementById('LastName2'); LastName2[0].selected = "1"; $("#FirstName2").html('<option selected="selected">SÃ©lectionner le prÃ©nom</option>'); $("#FirstName2").attr("disabled", "disabled"); $("#FirstName2").removeAttr("enabled", "enabled"); ViewConnectivity(); }
function ListeIndividus_Changement_onglet2(e, t) { ListeIndividus_getPersonsList(e, t); var n = "#lmaintab" + t; $("li[id^=lmaintab]").removeClass("active"); $(n).addClass("active") }
function ListeIndividus_getPersonsList(e, t, n, r) { document.body.style.cursor = "wait"; $.post(appPath + "/Person.mvc/GetPersonsByLetter", { individId: $("#individId").val(), archiveId: $("#archiveId").val(), idGedcom: e, letter: t, familyName: n, otherThenLetter: r, page: 6, acte: 0 }, function (e) { if (e.htmlSource != null) { $("#prochesMainContenu_a").html(e.htmlSource); $("div[class^='apanel']").hide(); $("p[class^='titlePerson_a aflip']").click(function () { var e = $(this).attr("class").substring(19); $(this).toggleClass("active_a").next().slideToggle("slow"); $("div[class^='apanel'][class!='apanel" + e + "']").hide(); $("p[class^='titlePerson_a aflip'][class!='titlePerson_a aflip" + e + " active_a']").removeClass("active_a") }); document.body.style.cursor = "default" } else { alert("No records found"); document.body.style.cursor = "default" } }) }
function ChangeCursor(e) { document.body.style.cursor = e }
function SetPerson(idToAttach, idAttachTo) {
    ChangeCursor("wait"); $.post(appPath + "/Person.mvc/SetPerson", { idToAttach: idToAttach, idAttachTo: $("#PersonSelected").val(), idFamily: $("#MarriageList").val() },
        function (e) {
            ChangeCursor("default");
            if (e.RouteValues != null && e.RouteValues.length == 3) {
                window.location = appPath + "/" + e.RouteValues[1].Value + ".mvc/" + e.RouteValues[0].Value + "/" + e.RouteValues[2].Value + "?" + Math.random()
            }
            else if (e.RouteValues != null && e.RouteValues.length == 4) {
                window.location = appPath + "/" + e.RouteValues[1].Value + ".mvc/" + e.RouteValues[0].Value + "/" + e.RouteValues[2].Value + "/" + e.RouteValues[3].Value + "?" + Math.random()
            }
            else if (e.RouteValues != null && e.RouteValues.length == 2) {
                window.location = appPath + "/" + e.RouteValues[1].Value + ".mvc/" + e.RouteValues[0].Value;
            }
            else { $.post(appPath + "/Person.mvc/ValidateForm?errorType=" + e, {}, function (e) { $("#vide").empty(); $("#vide").html(e); $("#linkError").click() }) }
        })
}
function changesort(e) { if ($("#sortField").val()) { if ($("#sortField").val() == e) { if ($("#sortDirection").val() == "Asc") { $("#sortDirection").val("Desc") } else { $("#sortDirection").val("Asc") } } else { $("#sortField").val(e); $("#sortDirection").val("Asc") } } else { if (e) { $("#sortField").val(e) } else { $("#sortField").val("DocumentType") } $("#sortDirection").val("Asc") } $("#changeSortDocuments").click() }
function changesortEvent(e) { if ($("#sortFieldEvents").val()) { if ($("#sortFieldEvents").val() == e) { if ($("#sortDirectionEvents").val() == "Asc") { $("#sortDirectionEvents").val("Desc") } else { $("#sortDirectionEvents").val("Asc") } } else { $("#sortFieldEvents").val(e); $("#sortDirectionEvents").val("Asc") } } else { if (e) { $("#sortFieldEvents").val(e) } else { $("#sortFieldEvents").val("Year") } $("#sortDirectionEvents").val("Asc") } $("#changeSortEvents").click() }
function ValidateFormPersonDetails() {
    var message = ""; $.post(appPath + "/PersonDetails.mvc/ValidateNameBirthAndDeathDates", {
        birthDate: $("#BirthDate").val(), deathDate: $("#DeathDate").val(), fName: $("#FirstName").val(), lName: $("#Name").val()
    }, function (e) {
        if (e != "succes" && e != "") {
            if (e == "dateDeathError") { message = "Attention : La date de deces n'est pas valide"; $("#linkPopupDates").css('display', 'block'); }
            else if (e == "dateBirthError") { message = "Attention : La date de naissance n'est pas valide"; $("#linkPopupDates").css('display', 'block'); }
            else if (e == "nameError") { message = "Attention : Merci de remplir le nom ou prenom"; }
            $("#errorMessagesPersonDetails").html('<div role="alert" class="alert alert-warning fade in" ><button data-dismiss="alert" class="close" id="xbuttonclose" type="button"><span aria-hidden="true">Ã—</span><span class="sr-only">Close</span></button><p>' + message + '</p></div>');

        } else {
            loading();
            $("#formPerson").submit()
        }
    })
}
function ValidateBirth() { if ($("#BirthDate").val() != "") { var e = "Birth"; $.post(appPath + "/PersonDetails.mvc/ValidateDate", { dateString: $("#BirthDate").val(), typeEv: e }, function (e) { if (e != "succes" && e != "") { jQuery.facebox({ ajax: appPath + "/Person.mvc/ValidateForm?errorType=dateBirthError" }); return false } else { return true } }) } else return true }
function ValidateDeath() { if ($("#DeathDate").val() != "") { var e = "Death"; $.post(appPath + "/PersonDetails.mvc/ValidateDate", { dateString: $("#DeathDate").val(), typeEv: e }, function (e) { if (e != "succes" && e != "") { jQuery.facebox({ ajax: appPath + "/Person.mvc/ValidateForm?errorType=dateDeathError" }); return false } else { return true } }) } else return true }
function ValidateSexChange(e) {
    $.post(appPath + "/PersonDetails.mvc/ValidateSexChange", { idPerson: e, newSexValue: $("#Sex").val(), firstName: $("#FirstName").val(), lastName: $("#Name").val(), nickname: $("#NickName").val(), birthPlace: $("#BirthPlace").val(), deathPlace: $("#DeathPlace").val(), birthDate: $("#BirthDate").val(), deathDate: $("#DeathDate").val() },
        function (e) {
            if (e == true) {
                $("#linkConfirmSexChange").click();
                //jQuery(document).ready(function (e) {
                //    e("a[rel*=facebox]").facebox();
                //    jQuery.facebox({ ajax: "PersonDetails.mvc/ConfirmSexChange" })
                //})
            }
        })
}
function changeValBirthPersonDetails() { $("#BirthPlaceId").val(0); }
function changeValDeathPersonDetails() { $("#DeathPlaceId").val(0); }
var updateMarriageDisabled = false;
function UpdateBirthDate_ParseResult(e) { updateMarriageDisabled = false; var t = Sys.Serialization.JavaScriptSerializer.deserialize(e.get_data()); if (t && t.TypeError == "date") { $("#dateFormatLink").css("display", ""); $("#errorMessages").html('<div role="alert" class="alert alert-warning fade in" id="alertErrorMessages"><button data-dismiss="alert" class="close" type="button"><span aria-hidden="true">Ã—</span><span class="sr-only">Close</span></button><p id="errorMessages">' + t.Message + "</div>"); $("#saveButton").attr("enabled", "enabled"); $("#saveButton").removeAttr("disabled", "disabled"); return false } if (t && t.TypeError != "date" && t.TypeError != null) { $("#dateFormatLink").css("display", "none"); $("#errorMessages").html('<div role="alert" class="alert alert-warning fade in" id="alertErrorMessages"><button data-dismiss="alert" class="close" type="button"><span aria-hidden="true">Ã—</span><span class="sr-only">Close</span></button><p id="errorMessages">' + t.Message + "</div>"); $("#saveButton").attr("enabled", "enabled"); $("#saveButton").removeAttr("disabled", "disabled"); return false } $("#closeUpdateBirtDeath").click(); loading(); if (t.RouteValues != null && t.RouteValues.length == 3) { window.location = appPath + "/" + t.RouteValues[1].Value + ".mvc/" + t.RouteValues[0].Value + "/" + t.RouteValues[2].Value + "?" + Math.random() } if (t.RouteValues != null && t.RouteValues.length == 4) { window.location = appPath + "/" + t.RouteValues[1].Value + ".mvc/" + t.RouteValues[0].Value + "/" + t.RouteValues[2].Value + "/" + t.RouteValues[3].Value + "?" + Math.random() } }
function resetMessages() { $("#errorMessages").html(""); $("#dateFormatLink").css("display", "none") } function UpdateBirthDeath_DisableButton() { if (updateMarriageDisabled == false) { updateMarriageDisabled = true; return true } else { return false } }
function changeValUpdateMarriageEvent() { $("#PlaceNameId").val(0); }
var updateUnionDisabled = false;
function UpdateUnion_ParseResult(e) { updateUnionDisabled = false; var t = Sys.Serialization.JavaScriptSerializer.deserialize(e.get_data()); if (t && t.TypeError == "date") { $("#dateFormatLink").css("display", ""); $("#errorMessages").css("display", ""); $("#errorMessages").html('<div role="alert" class="alert alert-warning fade in" ><button data-dismiss="alert" class="close" type="button"><span aria-hidden="true">Ã—</span><span class="sr-only">Close</span></button><p>' + t.Message + "</p></div>"); $("#saveButton").removeAttr("disabled", "disabled"); $("#saveButton").attr("enabled", "enabled"); return false } if (t && t.TypeError != "date" && t.TypeError != null) { $("#dateFormatLink").css("display", "none"); $("#errorMessages").css("display", ""); $("#errorMessages").html('<div role="alert" class="alert alert-warning fade in" ><button data-dismiss="alert" class="close" type="button"><span aria-hidden="true">Ã—</span><span class="sr-only">Close</span></button><p>' + t.Message + "</p></div>"); $("#saveButton").removeAttr("disabled", "disabled"); $("#saveButton").attr("enabled", "enabled"); return false } $("#closeUpdateUnion").click(); loading(); if (t.RouteValues != null && t.RouteValues.length == 3) { location.href = appPath + "/" + t.RouteValues[1].Value + ".mvc/" + t.RouteValues[0].Value + "/" + t.RouteValues[2].Value + "?" + Math.random() } if (t.RouteValues != null && t.RouteValues.length == 4) { location.href = appPath + "/" + t.RouteValues[1].Value + ".mvc/" + t.RouteValues[0].Value + "/" + t.RouteValues[2].Value + "/" + t.RouteValues[3].Value + "?" + Math.random() } }
function changeValBirthUpdateUnion() { $("#BirthPlaceId").val(0); }
function changeValDeathUpdateUnion() { $("#DeathPlaceId").val(0); }
function changeValMarriageUpdateUnion() { $("#MarriagePlaceId").val(0); }
function UpdateUnion_DisableButton() { if (updateUnionDisabled == false) { updateUnionDisabled = true; return true; } else { return false; } }
function increaseTable() { if ($(".content").css("height") == 'auto') { $(".content").css("height", "260px"); } else { $(".content").css("height", $(".content").height() + 70 + 'px'); } }
function increaseTableForNoPictures() { $(".content").css("height", "180px"); }
function FollowTree(e) { loading(); $.post(appPath + "/Person.mvc/FollowTree", { idGedcom: e }, function (e) { if (e.RouteValues != null && e.RouteValues.length == 4) { window.location = appPath + "/" + e.RouteValues[1].Value + ".mvc/" + e.RouteValues[0].Value + "/" + e.RouteValues[2].Value + "/" + e.RouteValues[3].Value + "?" + Math.random(); closeLoading() } }) }
function DemandeAcces(idGedcom) { loading(); $.post(appPath + "/Person.mvc/DemandeAcces", { idGedcom: idGedcom, message: $('#Message').val(), receiver: $('#Receiver').val(), subject: $('#Subject').val() }, function (jsonData) { if (jsonData == "requestSent") { $.blockUI({ message: $('#requestSent').html(), css: { width: '417px', height: '150px' } }); } else if (jsonData == 'alreadyDemanded') { $.blockUI({ message: $('#alreadyDemanded').html(), css: { width: '417px', height: '150px' } }); } else { closeLoading(); } }); }
function ViewPerson_SendRequest(idGedcom) { $.blockUI({ message: $('#messageForm').html(), css: { color: 'black', width: '517px', height: '320px' } }); }
function SelectOldestMale() { $("#oldestMaleTab").attr("class", "divSelectedDemographics"); $("#oldestFemaleTab").attr("class", "divNotSelectedDemographics"); $("#oldestPersonTab").attr("class", "divNotSelectedDemographics"); $("#oldestMale").css("display", "block"); $("#oldestFemale").css("display", "none"); $("#oldestPerson").css("display", "none"); }
function SelectOldestFemale() { $("#oldestMaleTab").attr("class", "divNotSelectedDemographics"); $("#oldestFemaleTab").attr("class", "divSelectedDemographics"); $("#oldestPersonTab").attr("class", "divNotSelectedDemographics"); $("#oldestMale").css("display", "none"); $("#oldestFemale").css("display", "block"); $("#oldestPerson").css("display", "none"); }
function SelectOldestPerson() { $("#oldestMaleTab").attr("class", "divNotSelectedDemographics"); $("#oldestFemaleTab").attr("class", "divNotSelectedDemographics"); $("#oldestPersonTab").attr("class", "divSelectedDemographics"); $("#oldestMale").css("display", "none"); $("#oldestFemale").css("display", "none"); $("#oldestPerson").css("display", "none"); var x = $("#DivToShow").val(); switch (x) { case "oldestMale": $("#oldestMale").css("display", "block"); break; case "oldestFemale": $("#oldestFemale").css("display", "block"); break; } }
function SelectYoungestMale() { $("#youngestMaleTab").attr("class", "divSelectedDemographics"); $("#youngestFemaleTab").attr("class", "divNotSelectedDemographics"); $("#youngestPersonTab").attr("class", "divNotSelectedDemographics"); $("#youngestMale").css("display", "block"); $("#youngestFemale").css("display", "none"); $("#youngestPerson").css("display", "none"); }
function SelectYoungestFemale() { $("#youngestMaleTab").attr("class", "divNotSelectedDemographics"); $("#youngestFemaleTab").attr("class", "divSelectedDemographics"); $("#youngestPersonTab").attr("class", "divNotSelectedDemographics"); $("#youngestMale").css("display", "none"); $("#youngestFemale").css("display", "block"); $("#youngestPerson").css("display", "none"); }
function SelectYoungestPerson() { $("#youngestMaleTab").attr("class", "divNotSelectedDemographics"); $("#youngestFemaleTab").attr("class", "divNotSelectedDemographics"); $("#youngestPersonTab").attr("class", "divSelectedDemographics"); $("#youngestMale").css("display", "none"); $("#youngestFemale").css("display", "none"); $("#youngestPerson").css("display", "none"); var x = $("#DivToShowYoungest").val(); switch (x) { case "youngestMale": $("#youngestMale").css("display", "block"); break; case "youngestFemale": $("#youngestFemale").css("display", "block"); break; } }
function SelectMaleDeathAgeTab() { $("#MaleDeathAgeTab").attr("class", "divSelectedDemographics"); $("#FemaleDeathAgeTab").attr("class", "divNotSelectedDemographics"); $("#PersonDeathAgeTab").attr("class", "divNotSelectedDemographics"); $("#MaleDeathAge").css("display", "block"); $("#FemaleDeathAge").css("display", "none"); $("#PersonDeathAge").css("display", "none"); }
function SelectFemaleDeathAgeTab() { $("#MaleDeathAgeTab").attr("class", "divNotSelectedDemographics"); $("#FemaleDeathAgeTab").attr("class", "divSelectedDemographics"); $("#PersonDeathAgeTab").attr("class", "divNotSelectedDemographics"); $("#MaleDeathAge").css("display", "none"); $("#FemaleDeathAge").css("display", "block"); $("#PersonDeathAge").css("display", "none"); }
function SelectPersonDeathAgeTab() { $("#MaleDeathAgeTab").attr("class", "divNotSelectedDemographics"); $("#FemaleDeathAgeTab").attr("class", "divNotSelectedDemographics"); $("#PersonDeathAgeTab").attr("class", "divSelectedDemographics"); $("#MaleDeathAge").css("display", "none"); $("#FemaleDeathAge").css("display", "none"); $("#PersonDeathAge").css("display", "block"); }
function SelectMale() { $("#divMale").attr("class", "divSelected"); $("#divFemale").attr("class", "divNotSelected"); $("#divGeneral").attr("class", "divNotSelected"); $("#MaleList").css("display", "block"); $("#FemaleList").css("display", "none"); $("#GeneralList").css("display", "none"); }
function SelectFemale() { $("#divMale").attr("class", "divNotSelected"); $("#divFemale").attr("class", "divSelected"); $("#divGeneral").attr("class", "divNotSelected"); $("#MaleList").css("display", "none"); $("#FemaleList").css("display", "block"); $("#GeneralList").css("display", "none"); }
function SelectGeneral() { $("#divMale").attr("class", "divNotSelected"); $("#divFemale").attr("class", "divNotSelected"); $("#divGeneral").attr("class", "divSelected"); $("#MaleList").css("display", "none"); $("#FemaleList").css("display", "none"); $("#GeneralList").css("display", "block"); }
function SelectUnionsMale() { $("#oldestMaleTab").attr("class", "divSelectedUnions"); $("#oldestFemaleTab").attr("class", "divNotSelectedUnions"); $("#oldestPersonTab").attr("class", "divNotSelectedUnions"); $("#oldestMale").css("display", "block"); $("#oldestFemale").css("display", "none"); $("#oldestPerson").css("display", "none"); }
function SelectUnionsFemale() { $("#oldestMaleTab").attr("class", "divNotSelectedUnions"); $("#oldestFemaleTab").attr("class", "divSelectedUnions"); $("#oldestPersonTab").attr("class", "divNotSelectedUnions"); $("#oldestMale").css("display", "none"); $("#oldestFemale").css("display", "block"); $("#oldestPerson").css("display", "none"); }
function SelectUnionsPerson() { $("#oldestMaleTab").attr("class", "divNotSelectedUnions"); $("#oldestFemaleTab").attr("class", "divNotSelectedUnions"); $("#oldestPersonTab").attr("class", "divSelectedUnions"); $("#oldestMale").css("display", "none"); $("#oldestFemale").css("display", "none"); $("#oldestPerson").css("display", "block"); var x = $("#DivToShow").val(); switch (x) { case "oldestMale": $("#oldestMale").css("display", "block"); break; case "oldestFemale": $("#oldestFemale").css("display", "block"); break; } }
function UpdatePrivilege(privilegeId, accept) { $.post(appPath + "/Menu.mvc/UpdatePrivilegeStateInTodo", { privilegeId: privilegeId, accept: accept }, function (msg) { if (msg == "Failed") { $("#messages").html("Operation d'actualiser le privilege a echoue"); } else { $("#row" + privilegeId).remove(); $("#tableRequestsTreated > tbody").append(msg); } }); }

//#region Fonctions Notes
function TabNote_GetNoteData(e) { $("#errorMessages").html(""); $.post(appPath + "/Todo.mvc/GetNoteData/" + e, { idNote: e }, function (t) { if (t != "error") { $("li").removeClass("actif"); $("#idNote-" + e).addClass("actif"); $("#ViewMode").css("display", ""); $("#DescriptionTitle").val(t.Title); $("#DescriptionViewMode").html(t.Description); $("#Description").html(t.Description); $("#SelectPriority").val(t.Priority); $("#SelecteValues").val(e); $("#Order").val(t.Order) } }) }
function TabNote_MakeVisibleDelete() { $("#notes").css("display", "none"); $("#titlePopup").empty(); $("#deleteNotePopup").css("display", "") } function TabNote_ResetForm() { $("#SelectPriority").val(0); $("#DescriptionTitle").val(""); $("#Description").html(""); $("#Description").val(""); $("#AddNote").val("Sauvegarder"); $("#notes").css("display", "none"); $("#titlePopup").empty(); $("#titlePopup").append("Ajouter une note"); $("#addNotePopup").css("display", "") }
function TabNote_RemoveNote() { $.post(appPath + "/Todo.mvc/RemoveNote", { idNote: document.getElementById("SelecteValues").value }, function (e) { if (e == "saved") { var t = parseInt($("#noTodo").html()); t = t - 1; $("#noTodo").html(t); TabNote_GetNotesList(-1, "Remove") } }) }

function TabNote_AddOrUpdate() {
    if ($("#AddNote").val() == "Actualiser") {
        TabNote_AddNote($("#SelecteValues").val(), "Update")
    } else {
        TabNote_AddNote("", "Add")
    }
}
function TabNote_AddNote(e, t) {
    $.post(appPath + "/Todo.mvc/AddOrUpdateNote", {
        header: $("#DescriptionTitle").val(),
        text: $("#Description").val(),
        idNote: e, priority: $("#SelectPriority").val(),
        order: $("#Order").val()
    },
    function (n) {
        if (n == "saved") {
            if (t == "Add") {
                var r = parseInt($("#noTodo").html());
                r = r + 1; $("#noTodo").html(r)
            }
            TabNote_GetNotesList(e, t)
        }
        else {
            $("#errorMessages").css("display", "");
            $("#errorMessages").html('<div role="alert" class="alert alert-warning fade in" ><button data-dismiss="alert" class="close" type="button"><span aria-hidden="true">Ã—</span><span class="sr-only">Close</span></button><p>' + n + "</p></div>")
        }
    })
}
function TabNote_GetNotesList(idNote, type) {
    $("#errorMessages").html("");
    $.post(appPath + "/Todo.mvc/GetNotesList", { idNote: idNote, typeOperation: type }, function (msg) {
        $('#addNotePopup').css('display', 'none');
        $('#deleteNotePopup').css('display', 'none');
        $('#titlePopup').empty();
        $('#titlePopup').append('Vos tÃ¢ches en cours');
        $('#notes').css('display', '');
        $("#Order").val(msg.Order);
        var itemsReturned = msg.SelectType;
        var notesList = $('#NotesList');
        if (itemsReturned.length > 0) {
            notesList.empty();
            for (var key in itemsReturned) {
                if (itemsReturned[key].Value == msg.SelectValues[0]) {
                    notesList.append('<li class=\"actif\" id=\"idNote-' + itemsReturned[key].Value + '\" onclick=TabNote_GetNoteData(' + itemsReturned[key].Value + ')>' + itemsReturned[key].Text + '</li>');
                } else {
                    notesList.append('<li id=\"idNote-' + itemsReturned[key].Value + '\" onclick=TabNote_GetNoteData(' + itemsReturned[key].Value + ')>' + itemsReturned[key].Text + '</li>');
                }
            }
            //$("#SelectValues").append(listItems.join(''));
            $("#SelecteValues").val(msg.SelectValues[0]);
            $("#DescriptionTitle").val(msg.Title);
            $("#DescriptionViewMode").empty();
            $("#DescriptionViewMode").html(msg.Description);
            $("#Description").html($("#DescriptionViewMode").html());
        } else {
            if (type != "Remove") {
                //alert("Il n'y a pas des resultats");
            }
            $('#notes').css('display', 'none');
            $("#noNote").css('display', '');

            //closeLoading();
        }
    });
}
function TabNote_MakeVisibileSaveButton() {
    $("#AddNote").css('display', '');
    $("#AddNote").val('Actualiser');
    document.getElementById("Description").value = $("#DescriptionViewMode").html();
    $('#notes').css('display', 'none');
    $('#titlePopup').empty();
    $('#titlePopup').append('Modifier la note');
    $('#addNotePopup').css('display', '');
}
function TabNote_MakeVisible() {
    $("#DescriptionTitle").val('');
    $("#Description").empty();
    $('#notes').css('display', 'none');
    $('#noNote').css('display', 'none');
    $('#titlePopup').empty();
    $('#titlePopup').append('Ajouter une note');
    $('#addNotePopup').css('display', '');
}
function CancelSaveOperation() {
    var selectedTaskId = $("#SelecteValues").val();
    TabNote_GetNotesList("", 'Remove');
    TabNote_GetNoteData(selectedTaskId)
}
function TabNote2_GetNoteData(listBox) {
    $.post(appPath + "/Todo.mvc/GetNoteData/" + listBox.value, { idNote: listBox.value }, function (newid) {
        $("#ViewMode").css('display', ''); $("#DescriptionTitle").val(newid.Title); $("#DescriptionViewMode").html(newid.Description); $("#Description").tinymce().execCommand("mceReplaceContent", false, newid.Description); $("#SelectPriority").val(newid.Priority); if (newid.Priority == 1) { $("#SelectPriority").css("background-color", "red"); } else { $("#SelectPriority").css("background-color", "white"); }
        $("#Order").val(newid.Order);
    }); $("#EditMode").css('display', 'none'); $("#AddNote").css('display', 'none');
}
function TabNote2_ResetForm() { $("#SelectPriority").css("background-color", "white"); $("#SelectPriority").val(0); $("#DescriptionTitle").val(''); $("#Description").val(''); $("#AddNote").show("fast"); $("#AddNote").val('Sauvegarder'); $("#EditMode").css('display', ''); $("#ViewMode").css('display', 'none'); $('#Description').tinymce().execCommand('mceReplaceContent', false, ''); }
function TabNote2_RemoveNote() { $.post(appPath + "/Todo.mvc/RemoveNote", { idNote: document.getElementById("SelectValues").value }, function (msg) { if (msg == 'saved') { TabNote2_GetNotesList(-1, "Remove"); } }); }
function TabNote2_AddOrUpdate() { if ($("#AddNote").val() == 'Actualiser') { TabNote2_AddNote(document.getElementById("SelectValues").value, "Update"); } else { TabNote2_AddNote("", "Add"); } }
function TabNote2_AddNote(idNoteSelected, typeOperation) { $.post(appPath + "/Todo.mvc/AddOrUpdateNote", { header: $("#DescriptionTitle").val(), text: $("#Description").html(), idNote: idNoteSelected, priority: $("#SelectPriority").val(), order: $("#Order").val() }, function (msg) { if (msg == 'saved') { TabNote2_GetNotesList(idNoteSelected, typeOperation); } }); }
function TabNote2_UpdatePriority(selectList) { if ($("#SelectPriority").val() == 1) { $("#SelectPriority").css("background-color", "red"); } else { $("#SelectPriority").css("background-color", "white"); } }
function TabNote2_GetNotesList(e, t) { $.post(appPath + "/Todo.mvc/GetNotesList", { idNote: e, typeOperation: t }, function (e) { $("#listBox").css("display", ""); $("#EditMode").css("display", "none"); $("#ViewMode").css("display", ""); $("#SelectValues").get(0).options.length = 0; $("#Order").val(e.Order); var n = e.SelectType; if (n.length > 0) { var r = []; for (var i in n) { if (n[i].Value == e.SelectValues[0]) { r.push('<option value="' + n[i].Value + '" selected="true">' + n[i].Text + "</option>") } else { r.push('<option value="' + n[i].Value + '">' + n[i].Text + "</option>") } } $("#SelectValues").append(r.join("")); $("#SelectValues").val(e.SelectValues[0]); $("#DescriptionTitle").val(e.Title); $("#DescriptionViewMode").html(e.Description); $("#Description").tinymce().execCommand("mceReplaceContent", false, e.Description) } else { if (t != "Remove") { alert("Il n'y a pas des resultats") } $("#mainTable").css("display", "none"); $("#noNote").css("display", "") } }) }
function TabNote2_MakeVisibileSaveButton() { $("#AddNote").css('display', ''); $("#AddNote").val('Actualiser'); $("#EditMode").css('display', ''); $("#ViewMode").css('display', 'none'); }
function TabNote2_MakeVisible() { $("#mainTable").css('display', ''); $("#EditMode").css('display', ''); $("#noteForm").css('display', ''); $("#AddNote").css('display', ''); $("#Description").tinymce().execCommand('mceInsertContent', false, ''); $("#ViewMode").css('display', 'none'); $("#listBox").css('display', 'none'); $("#noNote").css('display', 'none'); }
function GetNoteData(e) { $.post(appPath + "/Todo.mvc/GetNoteData/" + e.value, { idNote: e.value }, function (e) { $("#ViewMode").css("display", ""); $("#DescriptionTitle").val(e.Title); $("#DescriptionViewMode").html(e.Description); $("#Description").html(e.Description); $("#SelectPriority").val(e.Priority); if (e.Priority == 1) { $("#SelectPriority").css("background-color", "red") } else { $("#SelectPriority").css("background-color", "white") } $("#Order").val(e.Order) }); $("#EditMode").css("display", "none"); $("#AddNote").css("display", "none") }
function ResetForm() { $("#SelectPriority").css("background-color", "white"); $("#SelectPriority").val(0); $("#DescriptionTitle").val(''); $("#Description").val(''); $("#AddNote").show("fast"); $("#AddNote").val('Sauvegarder'); $("#EditMode").css('display', ''); $("#ViewMode").css('display', 'none'); $("#Description").html(''); }
function RemoveNote() { $.post(appPath + "/Todo.mvc/RemoveNote", { idNote: document.getElementById("SelectValues").value }, function (msg) { if (msg == 'saved') { GetNotesList(-1, "Remove"); } }); }
function AddOrUpdate() { if ($("#AddNote").val() == 'Actualiser') { AddNote(document.getElementById("SelectValues").value, "Update"); } else { AddNote("", "Add"); } }
function AddNote(idNoteSelected, typeOperation) { $.post(appPath + "/Todo.mvc/AddOrUpdateNote", { header: $("#DescriptionTitle").val(), text: $("#Description").val(), idNote: idNoteSelected, priority: $("#SelectPriority").val(), order: $("#Order").val() }, function (msg) { if (msg == 'saved') { GetNotesList(idNoteSelected, typeOperation); } }); }
function UpdatePriority(selectList) { if ($("#SelectPriority").val() == 1) { $("#SelectPriority").css("background-color", "red"); } else { $("#SelectPriority").css("background-color", "white"); } }
function GetNotesList(e, t) { $.post(appPath + "/Todo.mvc/GetNotesList", { idNote: e, typeOperation: t }, function (e) { $("#listBox").css("display", ""); $("#EditMode").css("display", "none"); $("#ViewMode").css("display", ""); $("#SelectValues").get(0).options.length = 0; $("#Order").val(e.Order); var n = e.SelectType; if (n.length > 0) { var r = []; for (var i in n) { if (n[i].Value == e.SelectValues[0]) { r.push('<option value="' + n[i].Value + '" selected="true">' + n[i].Text + "</option>") } else { r.push('<option value="' + n[i].Value + '">' + n[i].Text + "</option>") } } $("#SelectValues").append(r.join("")); $("#SelectValues").val(e.SelectValues[0]); $("#DescriptionTitle").val(e.Title); $("#DescriptionViewMode").html(e.Description); $("#Description").html($("#DescriptionViewMode").html()) } else { if (t != "Remove") { alert("Il n'y a pas des resultats") } $("#mainTable").css("display", "none"); $("#noNote").css("display", "") } }) }
function MakeVisibileSaveButton() { $("#AddNote").css('display', ''); $("#AddNote").val('Actualiser'); $("#EditMode").css('display', ''); $("#Description").html($("#DescriptionViewMode").html()); $("#ViewMode").css('display', 'none'); }
function MakeVisible() { $("#mainTable").css('display', ''); $("#EditMode").css('display', ''); $("#noteForm").css('display', ''); $("#AddNote").css('display', ''); $("#Description").html(""); $("#ViewMode").css('display', 'none'); $("#listBox").css('display', 'none'); $("#noNote").css('display', 'none'); }
//#endregion Fonctions Notes

//#region Fonctions Archives
function AttachArchive_Changement_onglet2(e, t) { AttachArchive_getPersonsList(e, t); var n = "#litab" + t; $("li[id^=litab]").removeClass("active"); $(n).addClass("active") }
function AttachArchive_getPersonsList(e, t, n, r) { document.body.style.cursor = "wait"; $.post(appPath + "/Search.mvc/GetPersonsByLetter", { individId: $("#individIdModal").val(), archiveId: $("#archiveId").val(), idGedcom: e, letter: t, familyName: n, otherThenLetter: r, page: 4, acte: 0 }, function (e) { if (e.htmlSource != null) { $("#prochesContenu_a").html(e.htmlSource); document.body.style.cursor = "default" } else { alert("No records found"); document.body.style.cursor = "default" } }) }
function AttachArchiveToIndivid(e, t, n, r, i) { $.post(appPath + "/Search.mvc/AttachArchiveToIndivid", { archiveId: n, individId: t, personId: e }, function (e) { closeLoading(); switch (e.TypeError) { case "message": $("#closeRattach").click(); $("#MessageSuccess").html(e.Message); $("#modalRattach").click(); break; case "error": $("#alertRattach").html('<div role="alert" class="alert alert-warning fade in" ><button data-dismiss="alert" class="close" type="button"><span aria-hidden="true">Ã—</span><span class="sr-only">Close</span></button><p id="errorMessages"></p></div>'); $("#errorMessages").html(e.Message.toString()); break } }) }
function AttachArchive_GetGedcom() {
    var gedcomId = document.getElementById("gedcoms").value;
    var individId = document.getElementById("individIdModal").value;
    var archiveId = $("#archiveId").val();
    $.ajax({
        url: appPath + '/Search.mvc/AttachArchive',
        type: 'GET',
        data: { archiveId: archiveId, individId: individId, gedcomId: gedcomId },
        contentType: 'html',
        success: function (response) {
            $('#liste-individus').empty();
            $('#liste-individus').append(response);
        },
        error: function () {

        }
    });
}
function AttachArchive_SearchsetFocus() { if ($('#searchName').val() == $('#searchName').attr('title')) { $('#searchName').val(''); $('#searchName').css('color', 'black'); } }
function AttachArchive_SearchsetBlur() { if ($('#searchName').val() == '') { $('#searchName').val($('#searchName').attr('title')); $('#searchName').css('color', 'GrayText'); } }
//#endregion Fonctions Archives

function Changement_onglet2(idGedcom, letter) { getPersonsList(idGedcom, letter); var litabId = "#litab" + letter; $("li[id^=litab]").removeClass('active'); $(litabId).addClass('active'); }
function getPersonsList(idGedcom, letter, familyName, otherThenLetter) { $.post(appPath + "/Search.mvc/GetPersonsByLetter", { individId: $("#individId").val(), archiveId: $("#idArchive").val(), idGedcom: idGedcom, letter: letter, familyName: familyName, otherThenLetter: otherThenLetter, page: 5, acte: $("#newIdActe").val() }, function (msg) { if (msg.htmlSource != null) { $("#prochesContenu_a").html(msg.htmlSource); } else { alert("No records found"); document.body.style.cursor = 'default'; } }); }
function AttachToIndivid(idPerson, newIdActe, idArchive, lastName, firstName) { $.post(appPath + "/Search.mvc/AttachActeToIndivid", { newIdActe: newIdActe, idArchive: idArchive, idIndivid: idPerson }, function (msg) { switch (msg.TypeError) { case "message": $("#closeRattach").click(); $("#MessageSuccess").html(msg.Message); $("#modalRattach").click(); break; case "error": $("#alertRattach").html('<div role="alert" class="alert alert-warning fade in" ><button data-dismiss="alert" class="close" type="button"><span aria-hidden="true">Ã—</span><span class="sr-only">Close</span></button><p id="errorMessages"></p></div>'); $("#errorMessages").html(msg.Message.toString()); break; } }); }
function GetGedcom() { var e = document.getElementById("gedcoms").value; var t = $("#newIdActe").val(); $.ajax({ url: appPath + "/Search.mvc/AttachDocument", type: "GET", data: { newIdActe: t, idGedcom: e }, contentType: "html", success: function (e) { $("#liste-individus").empty(); $("#liste-individus").append(e) }, error: function () { } }) }

//#region Fonctions Search
function SearchsetFocus() { if ($('#searchName').val() == $('#searchName').attr('title')) { $('#searchName').val(''); $('#searchName').css('color', 'black'); } }
function SearchsetBlur() { if ($('#searchName').val() == '') { $('#searchName').val($('#searchName').attr('title')); $('#searchName').css('color', 'GrayText'); } }
function CivilRecordsSearch_Validate() { var e = $("#txtName").val(); if (e.length == 0) { CivilRecordsSearch_ShowErrorMessage(1) } else { if (e.length < 2) { CivilRecordsSearch_ShowErrorMessage(1) } else if (e.charAt(0) == "*") { CivilRecordsSearch_ShowErrorMessage(5) } else if (e.indexOf("*") != -1 && e.length < 4) { CivilRecordsSearch_ShowErrorMessage(6) } else { var t = /^[-]?[0-9]*$/; var n = $("#txtPeriod1").val(); var r = $("#txtPeriod2").val(); if (n || r) { if (n.match(t) && r.match(t)) { CivilRecordsSearch_ValidateYearsRedirect(n, r) } else { CivilRecordsSearch_ShowErrorMessage(2) } } else { CivilRecordsSearch_RedirectSearch() } } } }
function CivilRecordsWithImageSearch_RedirectSearch() { var name = $("#txtName").val(); var stringRedirect = "?name=" + name; var firstName = $("#txtFirstName").val(); if (firstName) { stringRedirect += "&firstName=" + firstName; } var period1 = $("#txtPeriod1").val(); if (period1) { stringRedirect += "&period1=" + period1; } var period2 = $("#txtPeriod2").val(); if (period2) { stringRedirect += "&period2=" + period2; } stringRedirect += "&countryId=FR"; stringRedirect += "&departmentId=" + $("#searchDepartement").val(); stringRedirect += "&expended=false"; var nameUnion = $("#nameUnion").val(); if (nameUnion) { stringRedirect += "&nameUnion=" + nameUnion; } var firstNameUnion = $("#firstNameUnion").val(); if (firstNameUnion) { stringRedirect += "&firstNameUnion=" + firstNameUnion; } var alertchecked = $("#checkAlert").is(':checked'); stringRedirect += "&withAlert=" + alertchecked; stringRedirect += "&page=1&firstPageInPagination=1&sortField=1&advanced=false"; stringRedirect += "&categoryId1=1&searchType=2"; stringRedirect += "&categoryId2=" + document.getElementById("categoryId2").value; stringRedirect += "&excludeWithoutPhoto=true"; var townId = $("#townId").val(); if (townId) { stringRedirect += "&townId=" + townId; } var townName = $("#townName").val(); if (townName) { stringRedirect += "&townName=" + townName; } window.location = appPath + "/Search.mvc/SearchResult" + stringRedirect; }
function CivilRecordsWithImageSearch_Validate() { var e = $("#txtName").val(); if (e.length == 0) { CivilRecordsSearch_ShowErrorMessage(1) } else { if (e.length < 2) { CivilRecordsSearch_ShowErrorMessage(1) } else if (e.charAt(0) == "*") { CivilRecordsSearch_ShowErrorMessage(5) } else if (e.indexOf("*") != -1 && e.length < 4) { CivilRecordsSearch_ShowErrorMessage(6) } else { var t = /^[-]?[0-9]*$/; var n = $("#txtPeriod1").val(); var r = $("#txtPeriod2").val(); if (n || r) { if (n.match(t) && r.match(t)) { CivilRecordsWithImageSearch_ValidateYearsRedirect(n, r) } else { CivilRecordsSearch_ShowErrorMessage(2) } } else { CivilRecordsWithImageSearch_RedirectSearch() } } } }
function CivilRecordsSearch_ValidateYearsRedirect(e, t) { var n = 0; var r = 0; if (e) { n = parseInt(e) } if (t) { r = parseInt(t) } if (n) { if (r) { if (r < 0) { CivilRecordsSearch_ShowErrorMessage(2) } else { if (r < n) { CivilRecordsSearch_ShowErrorMessage(3) } else { if (n.toString().length == 2 && r.toString().length == 2) { n = parseInt("19" + n.toString()); r = parseInt("19" + r.toString()); $("#txtPeriod1").val(n); $("#txtPeriod2").val(r) } CivilRecordsSearch_RedirectSearch() } } } else { if (r == 0) { CivilRecordsSearch_RedirectSearch() } else { CivilRecordsSearch_ShowErrorMessage(2) } } } else { if (n == 0 && r && r < 0 || !r && r != 0 || n != 0) { CivilRecordsSearch_ShowErrorMessage(2) } else { CivilRecordsSearch_RedirectSearch() } } }
function CivilRecordsSearch_ShowErrorMessage(e) { $.ajax({ url: appPath + "/Search.mvc/SearchErrorMessage", type: "GET", data: { errorType: e }, contentType: "html", success: function (e) { $("#vide").empty(); $("#vide").append(e); $("#showAlert").click() }, error: function () { } }) }
function CivilRecordsWithImageSearch_ValidateYearsRedirect(year1, year2) { var y1 = 0; var y2 = 0; if (year1) { y1 = parseInt(year1); } if (year2) { y2 = parseInt(year2); } if (y1) { if (y2) { if (y2 < 0) { CivilRecordsSearch_ShowErrorMessage(2); } else { if (y2 < y1) { CivilRecordsSearch_ShowErrorMessage(3); } else { if (y1.toString().length == 2 && y2.toString().length == 2) { y1 = parseInt("19" + y1.toString()); y2 = parseInt("19" + y2.toString()); $("#txtPeriod1").val(y1); $("#txtPeriod2").val(y2); } CivilRecordsWithImageSearch_RedirectSearch(); } } } else { if (y2 == 0) { CivilRecordsWithImageSearch_RedirectSearch(); } else { CivilRecordsSearch_ShowErrorMessage(2); } } } else { if ((y1 == 0 && (y2 && y2 < 0) || (!y2 && y2 != 0)) || (y1 != 0)) { CivilRecordsSearch_ShowErrorMessage(2); } else { CivilRecordsWithImageSearch_RedirectSearch(); } } }
function CivilRecordsSearch_RedirectSearch() {
    var name = $("#txtName").val(); var stringRedirect = "?name=" + name; var firstName = $("#txtFirstName").val(); if (firstName) { stringRedirect += "&firstName=" + firstName; }
    var period1 = $("#txtPeriod1").val(); if (period1) { stringRedirect += "&period1=" + period1; }
    var period2 = $("#txtPeriod2").val(); if (period2) { stringRedirect += "&period2=" + period2; }
    stringRedirect += "&countryId=" + document.getElementById("ddlCountry").value; stringRedirect += "&departmentId=" + document.getElementById("departement").value; var checked = $("#checkEnlarge").is(':checked'); stringRedirect += "&expended=" + checked; var nameFather = $("#nameFather").val(); if (nameFather) { stringRedirect += "&nameFather=" + nameFather; }
    var firstNameFather = $("#firstNameFather").val(); if (firstNameFather) { stringRedirect += "&firstNameFather=" + firstNameFather; }
    var nameMother = $("#nameMother").val(); if (nameMother) { stringRedirect += "&nameMother=" + nameMother; }
    var firstNameMother = $("#firstNameMother").val(); if (firstNameMother) { stringRedirect += "&firstNameMother=" + firstNameMother; }
    var nameUnion = $("#nameUnion").val(); if (nameUnion) { stringRedirect += "&nameUnion=" + nameUnion; }
    var firstNameUnion = $("#firstNameUnion").val(); if (firstNameUnion) { stringRedirect += "&firstNameUnion=" + firstNameUnion; }
    var alertchecked = $("#checkAlert").is(':checked'); stringRedirect += "&withAlert=" + alertchecked; var advancedSearch = "false"; if ($("#AdvancedSearch").css("display") == "block") { advancedSearch = "true"; }
    stringRedirect += "&page=1&firstPageInPagination=1&sortField=1&advanced=" + advancedSearch;
    stringRedirect += "&categoryId1=1&searchType=2"; stringRedirect += "&acteType=" + document.getElementById("acteType").value;
    window.location = appPath + "/Search.mvc/SearchResult" + stringRedirect;
}
function CivilRecordsSearch_Change() { var e = document.getElementById("ddlCountry").value; SetEtatCivilBlazon(e); if (e == "0") { e = "FR" } if (e == "FR") { $.post(appPath + "/Search.mvc/GetDepartmentsByCountry", { countryCode: e }, function (e) { var t = '<select name="departement" id="departement" class="form-control spe-ec" onchange = "CivilRecordsSearch_Enlarge();CivilRecordsSearch_ChangeCountry(this.val);">'; t += '<option value="0">Tous les dÃ©partements</option>'; if (e.length > 0) { for (var n in e) { t += '<option value="' + e[n].Admin2Code + '">' + e[n].Name + "</option>" } } t += "</select>"; $("#divDepartments").html(t) }) } else { var t = '<select name="departement" id="departement" class="form-control spe-ec" disabled="disabled"><option value="0">Tous les dÃ©partements</option></select>'; $("#divDepartments").html(t) } CivilRecordsSearch_Enlarge(); CivilRecordsSearch_ShowDisplayDepartments() }
function CivilRecordsSearch_ChangeCountry(e) { if (document.getElementById("ddlCountry").value == "0") { $("#ddlCountry").val("FR") } }
function SetEtatCivilBlazon(e) { $.post(appPath + "/Search.mvc/GetEtatCivilBlazons", { countryCode: e }, function (e) { $("#etatCivilBlazon").attr("src", appPath + "/Content/Etat-Civil-Blasons/" + e) }) }
function CivilRecordsSearch_Enlarge() { var e = document.getElementById("departement").value; var t = document.getElementById("ddlCountry").value; var n = document.getElementById("checkEnlarge"); if (e != "0" && t == "FR") { $("#divEnlarge").css("display", "block"); SetEtatCivilBlazon(e) } else { n.checked = false; $("#divEnlarge").css("display", "none"); if (t == "FR") { SetEtatCivilBlazon(t) } } }
function CivilRecordsSearch_ShowDisplayDepartments() { $("#divLabelDepartments").css("display", "block"); $("#divDepartments").css("display", "block"); }
function Search_Validate() {
    var e = $("#txtName").val(); if (e.length == 0 || jQuery.trim(e).length < 2) { Search_ShowErrorMessage(1) } else {
        if (e.charAt(0) == "*" || e.charAt(0) == "?") { Search_ShowErrorMessage(5) } else if (e.indexOf("*") != -1 && e.length < 4) { Search_ShowErrorMessage(6) } else {
            var f = $("#txtFirstName").val(); if (f != "" && f.charAt(0) == "*" || f.charAt(0) == "?") { Search_ShowErrorMessage(11) } else {
                var t = /^[-]?[0-9]*$/; var n = $("#txtPeriod1").val(); var r = $("#txtPeriod2").val(); if (n || r) { if (n.match(t) && r.match(t)) { Search_ValidateYearsRedirect(n, r) } else { Search_ShowErrorMessage(2) } }
                else {
                    var p = $("#nameFather").val();
                    if (p != "" && p.charAt(0) == "*" || p.charAt(0) == "?") { Search_ShowErrorMessage(12) }
                    else {
                        var pf = $("#firstNameFather").val();
                        if (pf != "" && pf.charAt(0) == "*" || pf.charAt(0) == "?") { Search_ShowErrorMessage(12) }
                        else {
                            var m = $("#nameMother").val();
                            if (m != "" && m.charAt(0) == "*" || m.charAt(0) == "?") { Search_ShowErrorMessage(13) }
                            else {
                                var mf = $("#firstNameMother").val();
                                if (mf != "" && mf.charAt(0) == "*" || mf.charAt(0) == "?") { Search_ShowErrorMessage(13) }
                                else {
                                    var c = $("#nameUnion").val();
                                    if (c != "" && c.charAt(0) == "*" || c.charAt(0) == "?") { Search_ShowErrorMessage(14) }
                                    else {
                                        var cf = $("#firstNameUnion").val();
                                        if (cf != "" && cf.charAt(0) == "*" || cf.charAt(0) == "?") { Search_ShowErrorMessage(14) }
                                        else { Search_RedirectSearch() }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
function Search_Validate_FreeColection() { var e = $("#txtName").val(); if (e.length == 0 || jQuery.trim(e).length < 2) { Search_ShowErrorMessage(1) } else { if (e.charAt(0) == "*") { Search_ShowErrorMessage(5) } else if (e.indexOf("*") != -1 && e.length < 4) { Search_ShowErrorMessage(6) } else { Search_Free_Collection_RedirectSearch() } } }
function Search_Free_Collection_RedirectSearch() { var e = $("#txtName").val(); var t = "?name=" + e; var n = $("#txtFirstName").val(); if (n) { t += "&firstName=" + n } t += "&page=1&firstPageInPagination=1&sortField=1"; t += "&categoryId1=3&categoryId2=16&categoryId3=0"; window.location = appPath + "/Search.mvc/SearchResult" + t }
function Search_ValidateYearsRedirect(e, t) { var n = 0; var r = 0; if (e) { n = parseInt(e) } if (t) { r = parseInt(t) } if (n) { if (r) { if (r < 0) { Search_ShowErrorMessage(2) } else { if (r < n) { Search_ShowErrorMessage(3) } else { if (n.toString().length == 2 && r.toString().length == 2) { n = parseInt("19" + n.toString()); r = parseInt("19" + r.toString()); $("#txtPeriod1").val(n); $("#txtPeriod2").val(r) } Search_RedirectSearch() } } } else { if (r == 0) { Search_RedirectSearch() } else { Search_ShowErrorMessage(2) } } } else { if (n == 0 && r && r < 0 || !r && r != 0 || n != 0) { Search_ShowErrorMessage(2) } else { Search_RedirectSearch() } } }
function Search_ShowErrorMessage(e, c) { c = (typeof c == "function") ? c : function () { }; $.ajax({ url: "search.mvc/SearchErrorMessage", type: "GET", data: { errorType: e }, contentType: "html", success: function (e) { $("#vide").empty(); $("#vide").append(e); $("#showAlert").click() }, error: function () { } }).always(c) }
function Search_RedirectSearch() {
    var name = $("#txtName").val(); var stringRedirect = "?name=" + name; var firstName = $("#txtFirstName").val(); if (firstName) { stringRedirect += "&firstName=" + firstName; }
    var period1 = $("#txtPeriod1").val(); if (period1) { stringRedirect += "&period1=" + period1; }
    var period2 = $("#txtPeriod2").val(); if (period2) { stringRedirect += "&period2=" + period2; }
    stringRedirect += "&countryId=" + document.getElementById("ddlCountry").value; stringRedirect += "&departmentId=" + document.getElementById("departement").value; var checked = $("#checkEnlarge").is(':checked'); stringRedirect += "&expended=" + checked; var nameFather = $("#nameFather").val(); if (nameFather) { stringRedirect += "&nameFather=" + nameFather; }
    var firstNameFather = $("#firstNameFather").val(); if (firstNameFather) { stringRedirect += "&firstNameFather=" + firstNameFather; }
    var nameMother = $("#nameMother").val(); if (nameMother) { stringRedirect += "&nameMother=" + nameMother; }
    var firstNameMother = $("#firstNameMother").val(); if (firstNameMother) { stringRedirect += "&firstNameMother=" + firstNameMother; }
    var nameUnion = $("#nameUnion").val(); if (nameUnion) { stringRedirect += "&nameUnion=" + nameUnion; }
    var firstNameUnion = $("#firstNameUnion").val(); if (firstNameUnion) { stringRedirect += "&firstNameUnion=" + firstNameUnion; }
    var alertchecked = $("#checkAlert").is(':checked'); stringRedirect += "&withAlert=" + alertchecked; var advancedSearch = "false"; if ($("#AdvancedSearch").css("display") == "block") { advancedSearch = "true"; } stringRedirect += "&page=1&firstPageInPagination=1&sortField=1&advanced=" + advancedSearch; var categ = document.getElementById("category").value; if (categ && categ > 0) { stringRedirect += "&categoryId1=" + document.getElementById("category").value; }
    window.location = appPath + "/Search.mvc/SearchResult" + stringRedirect;
}
function Search_Change() { var e = document.getElementById("ddlCountry").value; if (e == "0") { e = "FR" } if (e == "FR") { $.post(appPath + "/Search.mvc/GetDepartmentsByCountry", { countryCode: e }, function (e) { var t = '<select name="departement" id="departement" class="form-control" onchange = "Search_Enlarge();Search_ChangeCountry(this.value);">'; t += '<option value="0">Tous les dÃ©partements</option>'; if (e.length > 0) { for (var n in e) { t += '<option value="' + e[n].Admin2Code + '">' + e[n].Name + "</option>" } } t += "</select>"; $("#divDepartments").html(t) }) } else { var t = '<select name="departement" id="departement"  class="generalSearchTextBoxRoundDisabled" disabled="disabled"><option value="0">Tous les dÃ©partements</option></select>'; $("#divDepartments").html(t) } Search_Enlarge() }
function Search_ChangeCountry(idDepartment) { if (document.getElementById("ddlCountry").value == "0") { $("#ddlCountry").val("FR"); } }
function Search_Enlarge() { var code = document.getElementById("departement").value; var ctry = document.getElementById("ddlCountry").value; var chk = document.getElementById("checkEnlarge"); if (code != "0" && ctry == "FR") { $("#divEnlarge").css("display", "block"); } else { chk.checked = false; $("#divEnlarge").css("display", "none"); } Search_ShowDisplayDepartments(); }
function Search_ShowDisplayDepartments() { var code = document.getElementById("ddlCountry").value; $("#divShowDepartments").css("display", "block"); }
function Redirect() { window.location = CreateUrl(true); }
function NewSearch() {
    Search(false); FilterCategories(0, 0, 0, 0);
    EmptySearchFilters(); $("#colonneRight").hide();
    $("#searchExcludeNoIndividPrincipal").val("");
    $("#ExcludeNoIndividPrincipal").val("");
    $("#collectionsDiv").hide(); document.getElementById("departement").value = "0"; $("#SearchFields").css("display", "block"); $("#SearchDetails").css("display", "none"); $("#2_searchModify").val("0"); $('input:text').hint(); $("#searchAreaField").val("0"); $("#SearchFieldArray").val("0"); $("#SelectedObjectIds").val("");
}
function EmptySearchFilters() { $("#ActeType").val(""); $("#ExcludeIndivids").val(""); $("#ExcludeOrphans").val(""); $("#OnlyPublicTree").val(""); $("#ExcludeWithoutPhoto").val(""); $("#ExcludeWithoutParent").val(""); $("#Name").val(""); $("#CountryId").val("0"); $("#DepartmentKey").val("0"); $("#FirstNameInitial").val(""); $("#Period1").val(""); $("#Period2").val(""); $("#SortField").val("1"); $("#TownId").val(""); $("#TownName").val(""); $("#SearchLastAddedDays").val(""); $("#ExcludeFromTree").val(""); $("#SelectedObjectIds").val(""); $("#SelectedObjectIdsString").val(""); $("#PageNumber").val("1"); $("#PageSize").val("10"); $("#searchActeType").val(""); $("#searchExcludeIndivids").val(""); $("#searchExcludeOrphans").val(""); $("#searchOnlyPublicTree").val(""); $("#searchExcludeWithoutPhoto").val(""); $("#searchExcludeWithoutParent").val(""); $("#searchName").val(""); $("#searchCountry").val("0"); $("#searchDepartement").val("0"); $("#searchFirstNameInitial").val(""); $("#searchPeriod1").val(""); $("#searchPeriod2").val(""); $("#searchSortField").val("1"); $("#searchTownId").val(""); $("#searchTownName").val(""); $("#lastAddedDays").val(""); $("#excludeFromTree").val(""); $("#selectedObjectIds").val(""); $("#selectedObjectIdsString").val(""); $("#searchPageNumber").val("1"); $("#searchPageSize").val("10"); }
function ModifySearch() { Search(true); $("#SearchFields").css("display", "block"); $("#SearchDetails").css("display", "none"); $("#2_searchModify").val("1"); EnlargeDisabled(); }
function Search(modify) {
    if (modify) { FillFields(); }
    else { EmptyFields("0"); }
}
function EmptyFields(country) { $("#txtName").val(""); $("#txtFirstName").val(""); $("#txtPeriod1").val(""); $("#txtPeriod2").val(""); $("#departement").value = 0; document.getElementById("ddlCountry").value = country; $("#txtNameFather").val(""); $("#txtFirstNameFather").val(""); $("#txtNameMother").val(""); $("#txtFirstNameMother").val(""); $("#txtNameUnion").val(""); $("#txtFirstNameUnion").val(""); $("#txtNameFatherHidden").val(""); $("#txtFirstNameFatherHidden").val(""); $("#txtNameMotherHidden").val(""); $("#txtFirstNameMotherHidden").val(""); $("#txtNameUnionHidden").val(""); $("#txtFirstNameUnionHidden").val(""); }
function FillFields() {
    EmptyFields($("#searchCountry").val()); $("#txtName").val($("#searchName").val()); $("#txtFirstName").val($("#searchFirstName").val()); $("#txtPeriod1").val($("#searchPeriod1").val()); $("#txtPeriod2").val($("#searchPeriod2").val()); if (($("#searchCountry").val() == "0") && ($("#searchDepartement").val() != "0")) { $("#ddlCountry").val("FR"); } else { $("#ddlCountry").val($("#searchCountry").val()); }
    if ($("#searchNameFather").val()) { $("#txtNameFather").val($("#searchNameFather").val()); $("#txtNameFather").removeClass("blur"); }
    $("#txtNameFatherHidden").val($("#searchNameFather").val()); if ($("#searchFirstNameFather").val()) { $("#txtFirstNameFather").val($("#searchFirstNameFather").val()); $("#txtFirstNameFather").removeClass("blur"); }
    $("#txtFirstNameFatherHidden").val($("#searchFirstNameFather").val()); if ($("#searchNameMother").val()) { $("#txtNameMother").val($("#searchNameMother").val()); $("#txtNameMother").removeClass("blur"); }
    $("#txtNameMotherHidden").val($("#searchNameMother").val()); if ($("#searchFirstNameMother").val()) { $("#txtFirstNameMother").val($("#searchFirstNameMother").val()); $("#txtFirstNameMother").removeClass("blur"); }
    $("#txtFirstNameMotherHidden").val($("#searchFirstNameMother").val()); if ($("#searchNameUnion").val()) { $("#txtNameUnion").val($("#searchNameUnion").val()); $("#txtNameUnion").removeClass("blur"); }
    $("#txtNameUnionHidden").val($("#searchNameUnion").val()); if ($("#searchFirstNameUnion").val()) { $("#txtFirstNameUnion").val($("#searchFirstNameUnion").val()); $("#txtFirstNameUnion").removeClass("blur"); }
    $("#txtFirstNameUnionHidden").val($("#searchFirstNameUnion").val()); $("#SearchFieldArray").val($("#ArraySearch").val()); EnlargeDisabled();
}
function SearchDetails_Validate() {
    refreshAnalytics('/recherches/resultats/');
    var x = $("#txtName").val().trim();
    if (x.length == 0) { SearchDetails_ShowErrorMessage(1); }
    else {
        if (x.length < 2) { SearchDetails_ShowErrorMessage(1); }
        else if (x.charAt(0) == '*') { SearchDetails_ShowErrorMessage(5); }
        else {
            var f = $('#txtFirstName').val(); if (f.charAt(0) == '*' || f.charAt(0) == '?') { SearchDetails_ShowErrorMessage(11); }
            else if (x.indexOf("*") != -1 && x.length < 4) { SearchDetails_ShowErrorMessage(6); }
            else {
                var numericExpression = /^[-]?[0-9]*$/; var period1 = $("#txtPeriod1").val(); var period2 = $("#txtPeriod2").val(); $("#colonneRight").show(); $("#collectionsDiv").show(); if (period1 || period2) {
                    if (period1.match(numericExpression) && period2.match(numericExpression)) { SearchDetails_ValidateYearsRedirect(period1, period2); }
                    else { SearchDetails_ShowErrorMessage(2); }
                }
                else {
                    var p = $("#txtNameFather").val();
                    if (p != "" && p.charAt(0) == "*" || p.charAt(0) == "?") { SearchDetails_ShowErrorMessage(12) }
                    else {
                        var pf = $("#txtFirstNameFather").val();
                        if (pf != "" && pf.charAt(0) == "*" || pf.charAt(0) == "?") { SearchDetails_ShowErrorMessage(12) }
                        else {
                            var m = $("#txtNameMother").val();
                            if (m != "" && m.charAt(0) == "*" || m.charAt(0) == "?") { SearchDetails_ShowErrorMessage(13) }
                            else {
                                var mf = $("#txtFirstNameMother").val();
                                if (mf != "" && mf.charAt(0) == "*" || mf.charAt(0) == "?") { SearchDetails_ShowErrorMessage(13) }
                                else {
                                    var c = $("#txtNameUnion").val();
                                    if (c != "" && c.charAt(0) == "*" || c.charAt(0) == "?") { SearchDetails_ShowErrorMessage(14); return false; }
                                    else {
                                        var cf = $("#txtFirstNameUnion").val();
                                        if (cf != "" && cf.charAt(0) == "*" || cf.charAt(0) == "?") { SearchDetails_ShowErrorMessage(14) }
                                        else {
                                            loadingSearchInProgressNoFacebox();
                                            $("#SelectedObjectIds").val(""); $("#SelectedObjectIdsString").val(""); $("#selectedObjectIds").val(""); $("#selectedObjectIdsString").val("");
                                            SetSearchFields();
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
function ReloadsearchRight() {
    $("#Name").val($("#txtName").val());
    $("#FirstName").val($("#txtFirstName").val()); $("#Period1").val($("#txtPeriod1").val()); $("#Period2").val($("#txtPeriod2").val());
    $("#CountryId").val(document.getElementById("ddlCountry").value); $("#DepartmentKey").val(document.getElementById("departement").value);
    $("#ExpendedToRegion").val(document.getElementById("SearchChkExpended").checked);
    $("#FirstNameFather").val($("#txtFirstNameFatherHidden").val()); $("#FirstNameMother").val($("#txtFirstNameMotherHidden").val());
    $("#FirstNameUnion").val($("#txtFirstNameUnionHidden").val()); $("#NameFather").val($("#txtNameFatherHidden").val()); $("#NameMother").val($("#txtNameMotherHidden").val());
    $("#NameUnion").val($("#txtNameUnionHidden").val());
    $("#name").val($("#txtName").val()); $("#firstName").val($("#txtFirstName").val()); $("#period1").val($("#txtPeriod1").val());
    $("#period2").val($("#txtPeriod2").val()); $("#countryId").val(document.getElementById("ddlCountry").value);
    $("#departmentKey").val(document.getElementById("departement").value); $("#expendedToRegion").val(document.getElementById("SearchChkExpended").checked);
    $("#firstNameFather").val($("#txtFirstNameFatherHidden").val()); $("#firstNameMother").val($("#txtFirstNameMotherHidden").val());
    $("#firstNameUnion").val($("#txtFirstNameUnionHidden").val()); $("#nameFather").val($("#txtNameFatherHidden").val());
    $("#nameMother").val($("#txtNameMotherHidden").val()); $("#nameUnion").val($("#txtNameUnionHidden").val());
    SearchSubmit();
}
function SearchDetails_ValidateYearsRedirect(year1, year2) {
    var y1 = 0; var y2 = 0; if (year1) { y1 = parseInt(year1); }
    if (year2) { y2 = parseInt(year2); }
    if (y1) {
        if (y2) {
            if (y2 < 0) { SearchDetails_ShowErrorMessage(2); }
            else {
                if (y2 < y1) { SearchDetails_ShowErrorMessage(3); }
                else {
                    if (y1.toString().length == 2 && y2.toString().length == 2) { y1 = parseInt("19" + y1.toString()); y2 = parseInt("19" + y2.toString()); $("#txtPeriod1").val(y1); $("#txtPeriod2").val(y2); }
                    SetSearchFields();
                }
            }
        }
        else {
            if (y2 == 0) { SetSearchFields(); }
            else { SearchDetails_ShowErrorMessage(2); }
        }
    }
    else {
        if ((y1 == 0 && (y2 && y2 < 0) || (!y2 && y2 != 0)) || (y1 != 0)) { SearchDetails_ShowErrorMessage(2); }
        else { SetSearchFields(); }
    }
}
function SearchDetails_ShowErrorMessage(errorType) {
    $.ajax({
        url: 'search.mvc/SearchErrorMessage',
        type: 'GET',
        data: { errorType: errorType },
        contentType: 'html',
        success: function (response) {
            $('#vide').empty();
            $('#vide').append(response);
            $('#showAlert').click();
        },
        error: function () {

        }
    });
}
function FilterCategories(categId1, categId2, categId3, typeSearch) {
    if (categId1) { $("#categoryId1").val(categId1); $("#CategoryId1").val(categId1); $("#SearchType").val(typeSearch); $("#searchSearchType").val(typeSearch); $("#divExcludeFromTree").hide(); $("#excludeFromTree").val("false"); $("#ExcludeFromTree").val("false"); }
    else { $("#categoryId1").val(''); $("#CategoryId1").val(''); $("#SearchType").val(''); $("#searchSearchType").val(''); $("#divExcludeFromTree").show(); $("#excludeFromTree").val("false"); $("#ExcludeFromTree").val("false"); }
    if (categId2) { $("#categoryId2").val(categId2); $("#CategoryId2").val(categId2); }
    else { $("#categoryId2").val(''); $("#CategoryId2").val(''); }
    if (categId3) { $("#categoryId3").val(categId3); $("#CategoryId3").val(categId3); }
    else { $("#categoryId3").val(''); $("#CategoryId3").val(''); }
    $("#SearchDetail").val(1);
}
function RemoveTown() { $("#searchTownId").val(""); $("#TownId").val(""); $("#searchTownName").val(""); $("#TownName").val(""); $("#communes").val(""); $("#communesId").val(0); $("#searchAreaField").val("0"); $("#SearchFieldArray").val("0"); SearchSubmit(); }
function SetSearchFields() {
    $("#searchName").val($("#txtName").val());
    $("#searchFirstName").val($("#txtFirstName").val());
    $("#txtNameMotherHidden").val($("#txtNameMother").val());
    $("#txtFirstNameMotherHidden").val($("#txtFirstNameMother").val());
    $("#txtNameFatherHidden").val($("#txtNameFather").val());
    $("#txtFirstNameFatherHidden").val($("#txtFirstNameFather").val());
    $("#txtNameUnionHidden").val($("#txtNameUnion").val());
    $("#txtFirstNameUnionHidden").val($("#txtFirstNameUnion").val());
    var period1 = $("#txtPeriod1").val();
    if (period1) {
        $("#searchPeriod1").val(period1);
    }
    else {
        $("#searchPeriod1").val("");
    }
    var period2 = $("#txtPeriod2").val(); if (period2) { $("#searchPeriod2").val(period2); }
    else { $("#searchPeriod2").val(""); }
    $("#searchCountry").val(document.getElementById("ddlCountry").value); $("#searchDepartement").val(document.getElementById("departement").value); var code = document.getElementById("departement").value; var ctry = document.getElementById("ddlCountry").value;
    $("#searchExpended").val($("#SearchChkExpended").is(':checked')); var nameFather = $("#txtNameFatherHidden").val(); if (nameFather) { $("#searchNameFather").val(nameFather); } else { $("#searchNameFather").val(""); }
    var firstNameFather = $("#txtFirstNameFatherHidden").val(); if (firstNameFather) { $("#searchFirstNameFather").val(firstNameFather); } else { $("#searchFirstNameFather").val(""); }
    var nameMother = $("#txtNameMotherHidden").val(); if (nameMother) { $("#searchNameMother").val(nameMother); } else { $("#searchNameMother").val(""); }
    var firstNameMother = $("#txtFirstNameMotherHidden").val(); if (firstNameMother) { $("#searchFirstNameMother").val(firstNameMother); } else { $("#searchFirstNameMother").val(""); }
    var nameUnion = $("#txtNameUnionHidden").val(); if (nameUnion) { $("#searchNameUnion").val(nameUnion); } else { $("#searchNameUnion").val(""); }
    var firstNameUnion = $("#txtFirstNameUnionHidden").val(); if (firstNameUnion) { $("#searchFirstNameUnion").val(firstNameUnion); } else { $("#searchFirstNameUnion").val(""); }
    $("#PageNumber").val(1); $("#searchPageNumber").val(1); $("#FirstPageInPagination").val(1); $("#searchFirstPageInPagination").val(1); $("#searchSortField").val(1); $("#SortField").val(1); var filter = $("#searchPageSize").val(); if (filter) { $("#searchPageSize").val(filter); $("#PageSize").val(filter); }
    $("#searchPageNumber").val("1"); $("#searchFirstPageInPagination").val("1"); ReloadsearchRight();
}
function SearchDetails_Change(value) {
    var code = document.getElementById("ddlCountry").value; if (code == "0") { code = "FR"; }
    if (code == "FR") {
        $.post(appPath + "/Search.mvc/GetDepartmentsByCountry", { countryCode: code }, function (msg) {
            var listItems = '<select name="departement" id="departement" class="form-control" onchange = "DepartmentChanged();ChangeDepartmentSearch(this.Value)">'; listItems += '<option value="0">Tous les dÃ©partements</option>'; if (msg.length > 0) {
                for (var i in msg) {
                    var selected = ""; if (value == msg[i].Admin2Code) { selected = "selected"; }
                    listItems += '<option value="' + msg[i].Admin2Code + '" ' + selected + '>' + msg[i].Name + '</option>';
                }
            }
            listItems += '</select>'; $("#divDepartments").html(listItems);
        });
    }
    else { var listItems = '<select name="departement" id="departement" class="form-control" disabled="disabled"><option value="0">Tous les dÃ©partements</option></select>'; $("#divDepartments").html(listItems); }
    EnlargeDisabled();
}


function EnlargeDisabled() {
    var code = document.getElementById("departement").value; var ctry = document.getElementById("ddlCountry").value; var chk = document.getElementById("SearchChkExpended"); if (code != "0") { $("#divEnlarge").css("display", "block"); }
    else { $("#divEnlarge").css("display", "none"); }
}
function ChangeDepartmentSearch(idDepartment) { if (document.getElementById("ddlCountry").value == "0") { $("#ddlCountry").val("FR"); } }
function DepartmentChanged() {
    var code = document.getElementById("departement").value; var ctry = document.getElementById("ddlCountry").value; var chk = document.getElementById("SearchChkExpended"); $("#ArraySearch").disable = false; chk.checked = false; $("#searchExpended").val("false"); if (code != "0") { $("#divEnlarge").css("display", "block"); }
    else { $("#divEnlarge").css("display", "none"); }
}
function SearchDetails_ChangeCountry() { $("#searchExpended").val("false"); document.getElementById("SearchChkExpended").checked = false; SearchDetails_Change(); ShowDisplayDepartments(); }
function ChangeNameFather() { $("#txtNameFatherHidden").val($("#txtNameFather").val()); }
function ChangeFirstNameFather() { $("#txtFirstNameFatherHidden").val($("#txtFirstNameFather").val()); }
function ChangeNameMother() { $("#txtNameMotherHidden").val($("#txtNameMother").val()); }
function ChangeFirstNameMother() { $("#txtFirstNameMotherHidden").val($("#txtFirstNameMother").val()); }
function ChangeNameUnion() { $("#txtNameUnionHidden").val($("#txtNameUnion").val()); }
function ChangeFirstNameUnion() { $("#txtFirstNameUnionHidden").val($("#txtFirstNameUnion").val()); }
function ShowDisplayDepartments() { var code = document.getElementById("ddlCountry").value; $("#divLabelDepartments").css("display", "block"); $("#divDepartments").css("display", "block"); }
//#endregion Fonctions Search

//#region Fonctions Search Categories
function FilterCategory(categId1, categId2, categId3, typeSearch, currentId) {
    if (categId1 != 0) {
        $('label').removeClass("activeLabel");
        $('a').removeClass("activeLabel");
        $('#' + currentId).addClass("activeLabel");
    }
    if (categId1) {
        $("#categoryId1").val(categId1);
        $("#CategoryId1").val(categId1);
        $("#SearchType").val(typeSearch);
        $("#searchSearchType").val(typeSearch);
        $("#divExcludeFromTree").hide();
        $("#excludeFromTree").val("false");
        $("#ExcludeFromTree").val("false");
    }
    else {
        $("#searchExcludeNoIndividPrincipal").val("");
        $("#ExcludeNoIndividPrincipal").val("");
        $("#categoryId1").val('');
        $("#CategoryId1").val('');
        $("#SearchType").val('');
        $("#searchSearchType").val('');
        $("#divExcludeFromTree").show();
        $("#excludeFromTree").val("false");
        $("#ExcludeFromTree").val("false");
    }
    if (categId2) {
        $("#categoryId2").val(categId2);
        $("#CategoryId2").val(categId2);
    }
    else {
        $("#categoryId2").val('');
        $("#CategoryId2").val('');
    }
    if (categId3) {
        $("#categoryId3").val(categId3);
        $("#CategoryId3").val(categId3);
    }
    else {
        $("#categoryId3").val('');
        $("#CategoryId3").val('');
    }
    if (categId1 && !categId2 && !categId3) {
        $("div[class~=flip" + categId1 + "]").addClass("active").next().next().slideDown("slow");
    }
    if (categId1 && categId2 && !categId3) {
        $("div[class~=flip" + categId2 + "]").addClass("active").next().next().slideDown("slow");
    }
    $("#SortField").val(1);
    SearchDisplayCategories_RedirectDisplay();
}
function SearchDisplayCategories_RedirectDisplay() {
    $("#searchPageNumber").val(1); $("#PageNumber").val(1); $("#searchFirstPageInPagination").val(1); $("#FirstPageInPagination").val(1); SearchSubmit();
}
function SetCategoriesCount(suggestedName) {
    $.post(appPath + "/Search.mvc/GetCategoriesCount",
        {
            name: suggestedName,
            firstName: $("#searchFirstName").val(),
            period1: $("#searchPeriod1").val(),
            period2: $("#searchPeriod2").val(),
            departmentKey: $("#searchDepartement").val(),
            countryId: $("#searchCountry").val(),
            expendedToRegion: $("#searchExpended").val(),
            fatherLastName: $("#searchNameFather").val(),
            fatherFirstName: $("#searchFirstNameFather").val(),
            motherLastName: $("#searchNameMother").val(),
            motherFirstName: $("#searchFirstNameMother").val(),
            jointLastName: $("#searchNameUnion").val(),
            jointFirstName: $("#searchFirstNameUnion").val(),
            lastAddedDays: $("#lastAddedDays").val(),
            townId: $("#searchTownId").val(),
            firstNameInitial: $("#searchFirstNameInitial").val(),
            excludeWithoutPhoto: $("#searchExcludeWithoutPhoto").val(),
            excludesOrphans: $("#searchExcludeOrphans").val(),
            onlyPublicTree: $("#searchOnlyPublicTree").val(),
            excludeOwnedPersons: $("#searchExcludeIndivids").val(),
            excludeArbresGenealogiques: $("#excludeFromTree").val(),
            acteType: $("#searchActeType").val(),
            excludeWithoutParent: $("#searchExcludeWithoutParent").val(),
            baseType: $("#searchSearchType").val(),
            range: $("#searchAreaField").val(),
            selectedObjectIds: $("#selectedObjectIdsString").val(),
            IndividPrincipal: $("#searchExcludeNoIndividPrincipal").val()
        }, function (msg) {
            $("div[id^='categ']").addClass('CategoryNoResults');
            $("i[id^='iconA']").removeClass("icon-puce-verte");
            $("i[id^='iconA']").addClass("icon-puce-gris");
            $("i[id^='iconI']").removeClass("icon-feuille-ouverte");
            $("i[id^='iconI']").addClass("icon-feuille-gris");
            $("label[id^='categ']").addClass("vide");
            $("a[id^='categ']").addClass("vide");
            $("font[id^='fontCateg']").html('');
            var totalNumber = 0;
            var valCount = 0;
            var category;
            if (msg.ListCategoriesCountResults.length > 0) {
                for (var i in msg.ListCategoriesCountResults) {
                    category = msg.ListCategoriesCountResults[i];
                    valCount = parseInt(category.CountResults);
                    if (msg.IsSolrSearch) {
                        // alert(valCount);
                        $("#categ" + category.IdCategory).removeClass("vide");
                        if ($("#iconI" + category.IdCategory) != null) {
                            $("#iconI" + category.IdCategory).removeClass("icon-feuille-gris");
                            $("#iconI" + category.IdCategory).addClass("icon-feuille-ouverte");
                        }
                        if ($("#iconA" + category.IdCategory) != null) {
                            $("#iconA" + category.IdCategory).removeClass("icon-puce-gris");
                            $("#iconA" + category.IdCategory).addClass("icon-puce-verte");
                        }
                        $("#fontCateg" + category.IdCategory).html("(" + SearchDisplayCategories_FormatNumber(valCount) + ")");
                    } else {
                        totalNumber = totalNumber + valCount;
                        $("#categ" + category.IdCategory1).removeClass("vide");
                        $("#categ" + category.IdCategory2).removeClass("vide");
                        $("#categ" + category.IdCategory3).removeClass("vide");
                    }
                }
            }
            var total;
            if (msg.IsSolrSearch) {
                total = SearchDisplayCategories_FormatNumber(msg.ResultsFound);
            } else {
                total = totalNumber + ''; if (totalNumber > 999999) { total = total.substr(0, total.length - 6) + ' ' + total.substr(total.length - 6, 3) + ' ' + total.substr(total.length - 3, 3); }
                else { if (totalNumber > 999) { total = total.substr(0, total.length - 3) + ' ' + total.substr(total.length - 3); } }
            }
            if (total == 0) {
                $("#divAllResults").hide(); $("#divNoResults").show();
                $("#countCateg0").html(total);
            }
            else {
                $("#divAllResults").show();
                $("#divNoResults").hide();
                $("#countCateg0").html(total);
            }
            if ($("#SearchDetail").val() == 1) {
                $("div[class^='titleDisplayCategories']").addClass("activeLabel"); $("#SearchDetail").val(0);
            }
        });
}
function SearchDisplayCategories_FormatNumber(numberToFormat) {
    var returnFormat = numberToFormat + ''; if (numberToFormat > 999999) { returnFormat = returnFormat.substr(0, returnFormat.length - 6) + ' ' + returnFormat.substr(returnFormat.length - 6, 3) + ' ' + returnFormat.substr(returnFormat.length - 3, 3); }
    else { if (numberToFormat > 999) { returnFormat = returnFormat.substr(0, returnFormat.length - 3) + ' ' + returnFormat.substr(returnFormat.length - 3); } }
    return returnFormat;
}
function SearchDisplayCategories_SetCategoryName(name) {
    $("#selectedCategoryName").val(name.replace(/\<\/div\>/gi, '').replace(/\<div\>/gi, ''));
}
function SearchDisplayCategories_ExpandAll() {
    $("#expandAll").hide();
    $("#expandNone").show();
    $("ul[class^='nav nav-list tree cache']").css('display', 'block');
}
function SearchDisplayCategories_ExpandNone() {
    $("#expandNone").hide();
    $("#expandAll").show();
    $("ul[class^='nav nav-list tree cache']").css('display', 'none');
}
//#endregion Fonctions Search Categories

//#region Fonctions Search Utilities/Page
function GetPage(page) {
    $("#searchPageNumber").val(page); $("#PageNumber").val(page); var total = parseInt($("#valueNumberSearchTree").val()); var pageSize = parseInt($("#searchPageSize").val()); var pageSize = parseInt($("#PageSize").val()); var lastPage = Math.ceil(total / pageSize) - 2; if (page > 2) {
        if (lastPage > 3) {
            if (lastPage < page) { $("#searchFirstPageInPagination").val(lastPage - 2); $("#FirstPageInPagination").val(lastPage - 2); }
            else { $("#searchFirstPageInPagination").val(page - 2); $("#FirstPageInPagination").val(page - 2); }
        }
        else { $("#searchFirstPageInPagination").val(1); $("#FirstPageInPagination").val(1); }
    }
    else { $("#searchFirstPageInPagination").val(1); $("#FirstPageInPagination").val(1); }
    var orphans = $("#checkOrphans").is(':checked'); if (orphans) { $("#searchExcludeOrphans").val(orphans); $("#ExcludeOrphans").val(orphans); }
    else { $("#searchExcludeOrphans").val('False'); $("#ExcludeOrphans").val('False'); }
    var publicTree = $("#checkOnlyPublicTree").is(':checked'); if (publicTree) { $("#searchOnlyPublicTree").val(publicTree); $("#OnlyPublicTree").val(publicTree); }
    else { $("#searchOnlyPublicTree").val('False'); $("#OnlyPublicTree").val('False'); }
    var individs = $("#checkExcludeIndivids").is(':checked'); if (individs) { $("#searchExcludeIndivids").val(individs); $("#ExcludeIndivids").val(individs); }
    else { $("#searchExcludeIndivids").val('False'); $("#ExcludeIndivids").val('False'); }
    SearchSubmit();
}
function NextPage(firstPage) {
    var page = parseInt($("#searchPageNumber").val()); var firstPage = parseInt($("#searchFirstPageInPagination").val()); if (page - firstPage == 4) { $("#searchFirstPageInPagination").val(firstPage + 1); $("#FirstPageInPagination").val(firstPage + 1); GetPage(page + 1); }
    else { GetPage(page + 1); }
}
function PreviousPage(firstPage) {
    var page = parseInt($("#searchPageNumber").val()); var firstPage = parseInt($("#searchFirstPageInPagination").val()); if (page - firstPage == 0) { $("#searchFirstPageInPagination").val(firstPage - 1); $("#FirstPageInPagination").val(firstPage - 1); GetPage(page - 1); }
    else { GetPage(page - 1) }
}
function ChangeOrderBy(sortValue, filter) {
    $("#searchFilterValue").val(""); if (sortValue == "1") { $("#searchSortField").val(sortValue); $("#SortField").val(sortValue); }
    if (sortValue == "2") { $("#searchSortField").val(sortValue); $("#SortField").val(sortValue); }
    if (sortValue == "3") { $("#searchSortField").val(sortValue); $("#SortField").val(sortValue); }
    if (sortValue == "4") { refreshAnalytics('/recherches/resultats/' + $("#selectedCategoryName").val() + '/filtre-initiale'); $("#searchFirstNameInitial").val(filter); $("#FirstNameInitial").val(filter); }
    if (sortValue == "5") { refreshAnalytics('/recherches/resultats/' + $("#selectedCategoryName").val() + '/filtre-commune'); $("#searchTownId").val(filter); $("#TownId").val(filter); $("#searchTownName").val($("#communes").val()); $("#TownName").val($("#communes").val()); }
    if (sortValue == "8") { refreshAnalytics('/recherches/resultats/' + $("#selectedCategoryName").val() + '/filtre-type-acte'); $("#searchActeType").val(filter); $("#ActeType").val(filter); }
    if (sortValue == "10") { $("#searchSortField").val(sortValue); $("#SortField").val(sortValue); }
    if (sortValue == "11") { $("#searchSortField").val(sortValue); $("#SortField").val(sortValue); }
    $("#PageNumber").val(1); $("#searchPageNumber").val(1); $("#searchFirstPageInPagination").val(1); $("#FirstPageInPagination").val(1); SearchSubmit();
}
function ExcludeOrphansChanged() {
    if ($("#checkOrphans").is(':checked')) { refreshAnalytics('/recherches/resultats/' + $("#selectedCategoryName").val() + '/filtre-orphelin'); }
    $("#PageNumber").val(1); $("#searchPageNumber").val(1); $("#searchFirstPageInPagination").val(1); $("#FirstPageInPagination").val(1); $("#searchExcludeOrphans").val($("#checkOrphans").is(':checked')); $("#ExcludeOrphans").val($("#checkOrphans").is(':checked')); SearchSubmit();
}
function OnlyPublicTreeChanged() { $("#PageNumber").val(1); $("#searchPageNumber").val(1); $("#searchFirstPageInPagination").val(1); $("#FirstPageInPagination").val(1); $("#searchOnlyPublicTree").val($("#checkOnlyPublicTree").is(':checked')); $("#OnlyPublicTree").val($("#checkOnlyPublicTree").is(':checked')); SearchSubmit(); }
function ExcludeIndividsChanged() {
    if ($("#checkExcludeIndivids").is(':checked')) { refreshAnalytics('/recherches/resultats/' + $("#selectedCategoryName").val() + '/filtre-masquer-individu-mon-arbre'); }
    $("#PageNumber").val(1); $("#searchPageNumber").val(1); $("#searchFirstPageInPagination").val(1); $("#FirstPageInPagination").val(1); $("#searchExcludeIndivids").val($("#checkExcludeIndivids").is(':checked')); $("#ExcludeIndivids").val($("#checkExcludeIndivids").is(':checked')); SearchSubmit();
}
function ExcludeWithoutPhotoChanged() {
    if ($("#checkExcludeNoPhoto").is(':checked')) { refreshAnalytics('/recherches/resultats/' + $("#selectedCategoryName").val() + '/filtre-photo'); }
    $("#PageNumber").val(1); $("#searchPageNumber").val(1); $("#searchFirstPageInPagination").val(1); $("#FirstPageInPagination").val(1); $("#searchExcludeWithoutPhoto").val($("#checkExcludeNoPhoto").is(':checked')); $("#ExcludeWithoutPhoto").val($("#checkExcludeNoPhoto").is(':checked')); SearchSubmit();
}
function ExcludeWithoutParentChanged() { $("#PageNumber").val(1); $("#searchPageNumber").val(1); $("#searchFirstPageInPagination").val(1); $("#FirstPageInPagination").val(1); $("#searchExcludeWithoutParent").val($("#checkExcludeNoParent").is(':checked')); $("#ExcludeWithoutParent").val($("#checkExcludeNoParent").is(':checked')); SearchSubmit(); }
function ExcludeFromTreeChanged() {
    if ($("#checkExcludeFromTree").is(':checked')) { refreshAnalytics('/recherches/resultats/' + $("#selectedCategoryName").val() + '/filtre-exclure-arbres'); }
    $("#PageNumber").val(1); $("#searchPageNumber").val(1); $("#searchFirstPageInPagination").val(1); $("#FirstPageInPagination").val(1); $("#excludeFromTree").val($("#checkExcludeFromTree").is(':checked')); $("#ExcludeFromTree").val($("#checkExcludeFromTree").is(':checked')); SearchSubmit();
}
function SearchRight_ChangePageSize(number) {
    $("#PageNumber").val(1);
    $("#searchPageNumber").val(1);
    $("#searchFirstPageInPagination").val(1);
    $("#FirstPageInPagination").val(1);
    var valNumber = document.getElementById("itemsNumber" + number.toString()).value;
    $("#PageSize").val(valNumber);
    $("#searchPageSize").val(valNumber);
    SearchSubmit();
}
function GetGedcomType(idPerson, isPayingUser, index, isPublic) {
    $.post(appPath + "/Search.mvc/GetGedcomType", { idPerson: idPerson }, function (msg) {
        var treeState = msg; if (treeState.GedcomState == 0) { EnableNotAvailablePersonPopup(index); }
        if (treeState.IsUserGedcom == false) {
            if (isPayingUser) {
                if (treeState.GedcomState == 1) { RedirectAccessRights(idPerson, isPublic); }
                if (treeState.GedcomState == 2) { if (treeState.PrivilegeRequested) { if ((!treeState.PrivilegeAnswered) || (treeState.PrivilegeAnswered && !treeState.PrivilegeAccepted)) { EnableDemandeAccess(treeState.GedcomId, treeState.Name, treeState.PseudoName, index, idPerson, treeState.PersonName); } } else { EnableDemandeAccess(treeState.GedcomId, treeState.Name, treeState.PseudoName, index, idPerson, treeState.PersonName); } }
            } else {
                if (treeState.GedcomState == 1) { EnableNotPayingUserPublicPopup(index); }
                if (treeState.GedcomState == 2) { EnableNotPayingUserSemipublicPopup(index); }
            }
        } else { RedirectAccessRights(idPerson, 1); }
    });
}
function RedirectAccessRights(idPerson, isPublic) { window.open(appPath + "/MainLayout.mvc/MainLayoutResults?idPerson=" + idPerson + "&addIntoMongo=true", "_blank"); }
function SearchRight_EnableRegisterPopup(index) {
    $('#registerMessage' + index).click();
    //$.blockUI({ message: $('#registerMessage' + index).html(), css: { width: '417px', height: '150px' } });
}
//function SearchRight_EnableRegisterModal(name, acteType, date, source, iamgePath, treeView, redirect) { $.post(appPath + "/Inscription.mvc/ModalSubscription", { name: name, acteType: acteType, date: date, source: source, iamgePath: iamgePath, treeView: treeView, redirect: redirect }, function (data) { $("#modalSubscription").html(data); }); }
function SearchRight_EnableRegisterPopupFreeAccess(index) {
    $('#registerMessage' + index).click();
    //$.blockUI({ message: $('#registerMessageFreeAccess' + index).html(), css: { width: '417px', height: '150px' } });
}
function ViewActe(idActe, name, isFree) {
    Delete_Cookie("SearchResultCookie");
    SetCookie("SearchResultCookie", CreateUrl(true), '/');
    SetCookie("PageType", "search", '/');
    SetCookie("SelectedCategoryNameCookie", $("#selectedCategoryName").val(), '/');
    SetCookie("SelectedNameCookie", $("#txtName").val(), '/');
    var currentPage = $("#searchPageNumber").val();
    $("#searchPageNumber").val(1);
    var firstPage = $("#searchFirstPageInPagination").val();
    $("#searchFirstPageInPagination").val(1);
    SetCookie("SelectedNameHrefCookie", CreateUrl(true), '/');
    $("#searchPageNumber").val(currentPage);
    $("#searchFirstPageInPagination").val(firstPage);
    window.open(appPath + "/SearchResults.mvc/CivilStateViewer?idActe=" + encodeURIComponent(idActe) + "&isFree=" + isFree, "_blank");
}
function SearchRight_ClosePopup() { $.unblockUI(); }
function SetLastAddedDays(numberDays) { refreshAnalytics('/recherches/resultats/' + $("#selectedCategoryName").val() + '/filtre-date-ajout'); $("#SearchLastAddedDays").val(numberDays); $("#lastAddedDays").val(numberDays); SearchSubmit(); }
function SetRange(number) { refreshAnalytics('/recherches/resultats/' + $("#selectedCategoryName").val() + '/filtre-date-ajout'); $("#searchAreaField").val(number); $("#SearchFieldArray").val(number); SearchSubmit(); }
function ViewArchive(idActe, idPerson, firstName, lastName, source, isFree, category1, baseType) {
    SetCookie("SearchResultCookie", CreateUrl(true), '/');
    SetCookie("PageType", "search", '/');
    SetCookie("PageType", "search", '/');
    SetCookie("SelectedCategoryNameCookie",
        $("#selectedCategoryName").val(), '/');
    SetCookie("SelectedNameCookie", $("#txtName").val(), '/');
    var currentPage = $("#searchPageNumber").val();
    $("#searchPageNumber").val(1);
    var firstPage = $("#searchFirstPageInPagination").val();
    $("#searchFirstPageInPagination").val(1);
    SetCookie("SelectedNameHrefCookie", CreateUrl(true), '/');
    $("#searchPageNumber").val(currentPage);
    $("#searchFirstPageInPagination").val(firstPage);
    window.open(appPath + "/SearchResults.mvc/ViewArchive?idPerson=" + idPerson + "&idActe=" + idActe + "&firstName=" + firstName + "&lastName=" + lastName + "&source=" + source + "&isFree=" + isFree + "&category1=" + category1 + "&baseType=" + baseType, "_blank");
}
function SaveContext() { SetCookie("SearchResultCookie", CreateUrl(true), '/'); SetCookie("PageType", "search", '/'); return false; }
function changeVal() {
    $("#communesId").val(0); $("#searchTownId").val(""); $("#TownId").val(""); $("#searchTownId").val(""); $("#searchTownName").val($("#communes").val()); $("#TownName").val($("#communes").val());
}
//#endregion Fonctions Search Utilities/Page


function RedirectToLoginArchive(loginPath) {
    redirectPath = CreateUrl(false);
    redirectPath = redirectPath.substring(1, redirectPath.length);
    SearchRight_ClosePopup();
    //jQuery.facebox({ ajax: 'Inscription.mvc/Inscription?redirect=' + redirectPath });
}
function RedirectToLoginTree(loginPath) {
    redirectPath = CreateUrl(false);
    redirectPath = redirectPath.substring(1, redirectPath.length);
    $('#closeRegisterMessage').click();
    //jQuery.facebox({ ajax: 'Inscription.mvc/Inscription?redirect=' + redirectPath });
}

//#region Fonctions Search
function ReloadSearch(value) {
    refreshAnalytics('/recherches/resultats/' + $("#selectedCategoryName").val() + '/filtre-date-ajout');
    $("#selectedObjectIdsString").val("");
    var values = new Array();
    $.each($("input[name='SelectedObjectIds']:checked:visible"), function () {
        values.push($(this).val());
    });
    var selectedObjects = "";
    for (var j = 0; j < values.length; j++) {
        //alert(values[j]);
        selectedObjects += values[j] + ",";
    }
    $("#selectedObjectIdsString").val(selectedObjects);
    $("#SelectedObjectIdsString").val(selectedObjects);
    SearchSubmit();
}
function ValidateSearchButton() {
    var x = $("#txtName").val(); if (x.length == 0) { ShowErrorMessage(1); }
    else {
        if (x.length < 2) { ShowErrorMessage(1); }
        else if (x.charAt(0) == '*') { ShowErrorMessage(5); }
        else if (x.indexOf("*") != -1 && x.length < 4) { ShowErrorMessage(6); }
        else {
            var numericExpression = /^[-]?[0-9]*$/; var period1 = $("#txtPeriod1").val(); var period2 = $("#txtPeriod2").val(); if (period1 || period2) {
                if (period1.match(numericExpression) && period2.match(numericExpression)) { ValidateYearsRedirect(period1, period2); }
                else { ShowErrorMessage(2); }
            }
            else { RedirectSearch(); }
        }
    }
}
function ValidateYearsRedirect(year1, year2) {
    var y1 = 0; var y2 = 0; if (year1) { y1 = parseInt(year1); }
    if (year2) { y2 = parseInt(year2); }
    if (y1) {
        if (y2) {
            if (y2 < 0) { ShowErrorMessage(2); }
            else {
                if (y2 < y1) { ShowErrorMessage(3); }
                else {
                    if (y1.toString().length == 2 && y2.toString().length == 2) { y1 = parseInt("19" + y1.toString()); y2 = parseInt("19" + y2.toString()); $("#txtPeriod1").val(y1); $("#txtPeriod2").val(y2); }
                    RedirectSearch();
                }
            }
        }
        else {
            if (y2 == 0) { RedirectSearch(); }
            else { ShowErrorMessage(2); }
        }
    }
    else {
        if ((y1 == 0 && (y2 && y2 < 0) || (!y2 && y2 != 0)) || (y1 != 0)) { ShowErrorMessage(2); }
        else { RedirectSearch(); }
    }
}
function ShowErrorMessage(errorType) {
    $.ajax({
        url: 'search.mvc/SearchErrorMessage',
        type: 'GET',
        data: { errorType: errorType },
        contentType: 'html',
        success: function (response) {
            $('#vide').empty();
            $('#vide').append(response);
            $('#showAlert').click();
        },
        error: function () {

        }
    });
    //jQuery(document).ready(function ($) { jQuery.facebox({ ajax: 'Search.mvc/SearchErrorMessage?errorType=' + errorType }) });
}
function RedirectSearch() {
    var name = $("#txtName").val(); var stringRedirect = "?name=" + name; var firstName = $("#txtFirstName").val(); if (firstName) { stringRedirect += "&firstName=" + firstName; }
    var period1 = $("#txtPeriod1").val(); if (period1) { stringRedirect += "&period1=" + period1; }
    var period2 = $("#txtPeriod2").val(); if (period2) { stringRedirect += "&period2=" + period2; }
    stringRedirect += "&countryId=" + document.getElementById("ddlCountry").value; stringRedirect += "&departmentId=" + document.getElementById("departement").value; var checked = $("#checkEnlarge").is(':checked'); stringRedirect += "&expended=" + checked; var nameFather = $("#nameFather").val(); if (nameFather) { stringRedirect += "&nameFather=" + nameFather; }
    var firstNameFather = $("#firstNameFather").val(); if (firstNameFather) { stringRedirect += "&firstNameFather=" + firstNameFather; }
    var nameMother = $("#nameMother").val(); if (nameMother) { stringRedirect += "&nameMother=" + nameMother; }
    var firstNameMother = $("#firstNameMother").val(); if (firstNameMother) { stringRedirect += "&firstNameMother=" + firstNameMother; }
    var nameUnion = $("#nameUnion").val(); if (nameUnion) { stringRedirect += "&nameUnion=" + nameUnion; }
    var firstNameUnion = $("#firstNameUnion").val(); if (firstNameUnion) { stringRedirect += "&firstNameUnion=" + firstNameUnion; }
    var alertchecked = $("#checkAlert").is(':checked'); stringRedirect += "&withAlert=" + alertchecked; var advancedSearch = "false"; if ($("#AdvancedSearch").css("display") == "block")
    { advancedSearch = "true"; }
    stringRedirect += "&page=1&firstPageInPagination=1&sortField=1&advanced=" + advancedSearch; stringRedirect += "&categoryId1=2"; window.location = appPath + "/Search.mvc/SearchResult" + stringRedirect;
}
function Change() {
    var code = document.getElementById("ddlCountry").value; if (code == "0") { code = "FR"; }
    if (code == "FR") {
        $.post(appPath + "/Search.mvc/GetDepartmentsByCountry", { countryCode: code }, function (msg) {
            var listItems = '<select name="departement" id="departement" class="form-control" onchange = "Enlarge();ChangeCountry(this.value);">';
            listItems += '<option value="0">Tous les dÃ©partements</option>';
            if (msg.length > 0) {
                for (var i in msg) { listItems += '<option value="' + msg[i].Admin2Code + '">' + msg[i].Name + '</option>'; }
            }
            listItems += '</select>'; $("#divDepartments").html(listItems);
        });
    }
    else {
        var listItems = '<select name="departement" id="departement" class="form-control" disabled="disabled"><option value="0">Tous les dÃ©partements</option></select>';
        $("#divDepartments").html(listItems);
    }
    Enlarge();
}
function ChangeCountry(idDepartment) { if (document.getElementById("ddlCountry").value == "0") { $("#ddlCountry").val("FR"); } }
function Enlarge() {
    var code = document.getElementById("departement").value; var ctry = document.getElementById("ddlCountry").value; var chk = document.getElementById("checkEnlarge"); if (code != "0" && ctry == "FR") { $("#divEnlarge").css("display", "block"); }
    else { chk.checked = false; $("#divEnlarge").css("display", "none"); }
}
function redirectToPath(path) { Delete_Cookie("SearchResultCookie"); Delete_Cookie("PageType"); window.location.href = path; }
function redirectToViewArchivedArchive(actionId) { window.location = appPath + "/SearchResults.mvc/ViewArchiveFromArchives?actionId=" + actionId + "&" + Math.random(); }
function ViewArchive_RedirectToArchived() { $('#okButton').click(); }
function changeIndivid1(individId) { $('#IndividId').val(individId); $('#changeIndivid').click(); }
function ViewArchive_BackToSearch() { var location = Get_Cookie("SearchResultCookie"); if ((location != null) && (location != '')) { Delete_Cookie("SearchResultCookie"); Delete_Cookie("PageType"); window.location = location; } else { Delete_Cookie("SearchResultCookie"); Delete_Cookie("PageType"); window.location = appPath + '/search.mvc/search'; } }
function ViewArchive_OpenExtraInformationPopup() { $.blockUI({ message: $('#extraInfo').html(), css: { width: '520px', top: '10%', overflow: 'scroll', height: '80%' } }); }
function ViewArchiveNoImage_BackToSearch() { var location = Get_Cookie("SearchResultCookie"); if ((location != null) && (location != '')) { Delete_Cookie("SearchResultCookie"); Delete_Cookie("PageType"); window.location.href = location; } else { Delete_Cookie("SearchResultCookie"); Delete_Cookie("PageType"); window.location.href = appPath + '/search.mvc/search'; } }
function ArchiveArchive(archiveId, individId) {
    $.post(appPath + "/Search.mvc/ArchiveArchive", { ActeId: archiveId, individId: individId }, function (msg) {
        if (msg.Message != null) {
            $("#MessageSuccess").empty();
            $("#MessageSuccess").html(msg.Message);
            $("#modalRattach").click()
            $('#okButton').click(function () { redirectToViewArchivedArchive(msg.RedirectValue); });
        } else {
            $("#MessageSuccess").empty();
            $("#MessageSuccess").html('Le document a Ã©tÃ© bien archive');
            $("#modalRattach").click()
            $('#okButton').click(function () {
                if ((msg.RouteValues != null) && (msg.RouteValues.length == 3)) { window.location = appPath + '/' + msg.RouteValues[1].Value + '.mvc/' + msg.RouteValues[0].Value + "/" + msg.RouteValues[2].Value; }
            });
        }
    });
}
function ViewArchiveNoImage_redirectToPath(path) { Delete_Cookie("SearchResultCookie"); Delete_Cookie("PageType"); window.location.href = path; }
function BackToSearch() { var location = Get_Cookie("SearchResultCookie"); if ((location != null) && (location != '')) { Delete_Cookie("SearchResultCookie"); Delete_Cookie("PageType"); window.location.href = location; } else { Delete_Cookie("SearchResultCookie"); Delete_Cookie("PageType"); window.location.href = appPath + '/search.mvc/search'; } }
function ArchiveActe(newIdActe) { $.post(appPath + "/Search.mvc/Archive", { newIdActe: newIdActe }, function (msg) { $("#textDisplayed").html(msg.Message); $.blockUI({ message: $('#acteArchived').html(), css: { width: '417px', height: '120px' } }); $('#okButton').click(function () { redirectToViewArchivedEtatCivil(msg.RedirectValue); }); $("#archiveId").css("display", "none"); }); }
function redirectToViewArchivedEtatCivil(idAction) { window.location = appPath + "/Search.mvc/ViewerCivilStateArchive?idArchive=" + idAction; }
function RedirectToArchived() { $('#okButton').click(); }
function displayCategory(categoryId) { window.location = appPath + '/Search.mvc/Search?idCategory=' + categoryId; }
//function AttachArchive_GetGedcomWithImage() { var gedcomId = document.getElementById("gedcoms").value; var individId = document.getElementById("individId").value; jQuery.facebox({ ajax: 'Search.mvc/AttachArchiveWithImage?letter=""&archiveId=' + $("#archiveId").val() + '&individId=' + individId + '&gedcomId=' + gedcomId }); }
function ChangeOrderByGeneral() {
    var sortValue = document.getElementById("orderByField").value; $("#searchSortField").val(sortValue); $("#searchFilterValue").val(""); if (sortValue == "3") { $("#OrderByGeneralCommune").show(); $("#searchFilterValue").val(document.getElementById("orderByTownField").value); }
    else { $("#OrderByGeneralCommune").hide(); }
    RedirectDisplay();
}
function ChangeOrderByTree() {
    var sortValue = document.getElementById("orderByTree").value; $("#searchSortField").val(sortValue); $("#searchFilterValue").val(""); if (sortValue == "3") { $("#OrderByTreeCommune").show(); $("#searchFilterValue").val(document.getElementById("orderByTownFieldTC").value); }
    else { $("#OrderByTreeCommune").hide(); }
    if (sortValue == "4") { $("#OrderByTreeLetter").show(); $("#searchFilterValue").val(document.getElementById("orderByFirstLetterTC").value); }
    else { $("#OrderByTreeLetter").hide(); }
    if (sortValue == "5") { $("#OrderByNewer").show(); $("#searchFilterValue").val("true"); }
    else { $("#OrderByNewer").hide(); }
    if (sortValue == "6") { $("#OrderByAscending").show(); $("#searchFilterValue").val("true"); }
    else { $("#OrderByAscending").hide(); }
    if (sortValue == "7") { $("#OrderByPhotos").show(); $("#searchFilterValue").val("true"); }
    else { $("#OrderByPhotos").hide(); }
    RedirectDisplay();
}
function ChangeOrderByCivilState() {
    var sortValue = document.getElementById("orderByCivilState").value; $("#searchSortField").val(sortValue); $("#searchFilterValue").val(""); if (sortValue == "3") { $("#OrderByCivilStateCommune").show(); $("#searchFilterValue").val(document.getElementById("orderByTownFieldCivilState").value); }
    else { $("#OrderByCivilStateCommune").hide(); }
    if (sortValue == "8") { $("#OrderByCivilStateType").show(); $("#searchFilterValue").val(document.getElementById("orderByTypeFieldCivilState").value); }
    else { $("#OrderByCivilStateType").hide(); }
    RedirectDisplay();
}
function ChangeOrderByArchive() {
    var sortValue = document.getElementById("orderByArchive").value; $("#searchSortField").val(sortValue); $("#searchFilterValue").val(""); if (document.getElementById("orderByArchive").value == "3") { $("#OrderByArchiveCommune").show(); $("#searchFilterValue").val(document.getElementById("orderByTownFieldAC").value); }
    else { $("#OrderByArchiveCommune").hide(); }
    if (document.getElementById("orderByArchive").value == "9") { $("#OrderByArchiveFonds").show(); }
    else { $("#OrderByArchiveFonds").hide(); }
    if (document.getElementById("orderByArchive").value == "4") { $("#OrderByArchiveLetter").show(); $("#searchFilterValue").val(document.getElementById("orderByFirstLetterAC").value); }
    else { $("#OrderByArchiveLetter").hide(); }
    if (document.getElementById("orderByArchive").value != "9") { RedirectDisplay(); }
}
function RedirectDisplay() {
    var name = $("#searchName").val(); var stringRedirect = "?name=" + name; var firstName = $("#searchFirstName").val(); if (firstName) { stringRedirect += "&firstName=" + firstName; }
    var period1 = $("#searchPeriod1").val(); if (period1) { stringRedirect += "&period1=" + period1; }
    var period2 = $("#searchPeriod2").val(); if (period2) { stringRedirect += "&period2=" + period2; }
    var country = $("#searchCountry").val(); if (country) { stringRedirect += "&countryId=" + country; }
    var department = $("#searchDepartement").val(); if (department) { stringRedirect += "&departmentId=" + department; }
    var checked = $("#searchExpended").val(); if (checked) { stringRedirect += "&expended=" + checked; }
    var nameFather = $("#searchNameFather").val(); if (nameFather) { stringRedirect += "&nameFather=" + nameFather; }
    var firstNameFather = $("#searchFirstNameFather").val(); if (firstNameFather) { stringRedirect += "&firstNameFather=" + firstNameFather; }
    var nameMother = $("#searchNameMother").val(); if (nameMother) { stringRedirect += "&nameMother=" + nameMother; }
    var firstNameMother = $("#searchFirstNameMother").val(); if (firstNameMother) { stringRedirect += "&firstNameMother=" + firstNameMother; }
    var nameUnion = $("#searchNameUnion").val(); if (nameUnion) { stringRedirect += "&nameUnion=" + nameUnion; }
    var firstNameUnion = $("#searchFirstNameUnion").val(); if (firstNameUnion) { stringRedirect += "&firstNameUnion=" + firstNameUnion; }
    stringRedirect += "&page=1&firstPageInPagination=1"; stringRedirect += "&sortField=" + $("#searchSortField").val(); var filter = $("#searchFilterValue").val(); if (filter) { stringRedirect += "&filterValue=" + filter; }
    var filter = $("#PageSize").val(); if (filter) { stringRedirect += "&pageSize=" + filter; }
    stringRedirect += "&onlyPublicTree=" + $("#checkOnlyPublicTree").is(':checked'); stringRedirect += "&excludeOrphans=" + $("#checkOrphans").is(':checked'); stringRedirect += "&excludeIndivids=" + $("#checkExcludeIndivids").is(':checked'); stringRedirect += "&withAlert=false&advanced=" + $("#searchAdvancedSearch").val(); stringRedirect += "&searchType=" + $("#searchSearchType").val(); window.location = appPath + "/Search.mvc/SearchResult" + stringRedirect;
}
function ChangeTownTree() { $("#searchFilterValue").val(document.getElementById("orderByTownFieldTC").value); RedirectDisplay(); }
function ChangeTownTreeCS() { $("#searchFilterValue").val(document.getElementById("orderByTownFieldCivilState").value); RedirectDisplay(); }
function ChangeTownTreeAll() { $("#searchFilterValue").val(document.getElementById("orderByTownField").value); RedirectDisplay(); }
function ChangeLetterTree() { $("#searchFilterValue").val(document.getElementById("orderByFirstLetterTC").value); RedirectDisplay(); }
function ChangeLetterArchive() { $("#searchFilterValue").val(document.getElementById("orderByFirstLetterAC").value); RedirectDisplay(); }
function ChangePageSize(number) { var valNumber = document.getElementById("itemsNumber" + number.toString()).value; $("#searchPageSize").val(valNumber); RedirectDisplay(); }
function SetSearchType(searchTypeValue) { $("#searchSearchType").val(searchTypeValue); $("#searchSortField").val("1"); RedirectDisplay(); }
function ChangeTypeActeCivilState() { $("#searchFilterValue").val(document.getElementById("orderByTypeFieldCivilState").value); RedirectDisplay(); }
function Search_ChangeHomePage() { var code = document.getElementById("inputCountry").value; if (code == "0") { code = "FR"; } if (code == "FR") { $.post(appPath + "/Search.mvc/GetDepartmentsByCountry", { countryCode: code }, function (msg) { var listItems = '<select name="departement" id="departement" class="form-control" onchange = "Search_Enlarge();Search_ChangeCountry(this.value);">'; listItems += '<option value="0">Tous les dÃ©partements</option>'; if (msg.length > 0) { for (var i in msg) { listItems += '<option value="' + msg[i].Admin2Code + '">' + msg[i].Name + '</option>'; } } listItems += '</select>'; $("#spanDepartments").html(listItems); }); } else { var listItems = '<select name="departement" id="departement"  class="form-control" disabled="disabled"><option value="0">Tous les dÃ©partements</option></select>'; $("#spanDepartments").html(listItems); } Search_EnlargeHomePage(); }
function Search_EnlargeHomePage() { var code = document.getElementById("departement").value; var ctry = document.getElementById("ddlCountry").value; if (code != "0" && ctry == "FR") { $("#divEnlarge").css("display", "block"); } else { $("#divEnlarge").css("display", "none"); } Search_ShowDisplayDepartmentsHomePage(); }
function Search_ShowDisplayDepartmentsHomePage() { var code = document.getElementById("ddlCountry").value; $("#divShowDepartments").css("display", "block"); }
function AddNewRows(content) { var jsonData = Sys.Serialization.JavaScriptSerializer.deserialize(content.get_data()); $("#lastWeek").append(jsonData.htmlSource); if (jsonData.statusCode == 2) { $("#viewMoreResults").hide(); } }
function SubmitMoreResults() { $("#moreMessagesSubmit").submit(); }
function ExcludeNoPrincipalIndivid() { $("#PageNumber").val(1); $("#searchPageNumber").val(1); $("#searchFirstPageInPagination").val(1); $("#FirstPageInPagination").val(1); $("#searchExcludeNoIndividPrincipal").val($("#checkExcludeNoIndividPrincipal").is(':checked')); $("#ExcludeNoIndividPrincipal").val($("#checkExcludeNoIndividPrincipal").is(':checked')); SearchSubmit(); }
function ValidateAssistanceEmail() {
    var i = 0;
    //  var emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}$/;
    var emailPattern = /^[a-zA-Z0-9._+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]+$/;
    var arrayErrors = new Array();
    if (($("#Email1").val().length == 0)) { arrayErrors[i++] = "email"; }
    else if ((!emailPattern.test($("#Email1").val().toString()))) { arrayErrors[i++] = "emailAt"; }
    if (($("#Name").val().length < 3) && ($("#Name").val().length > 0)) { arrayErrors[i++] = "nameTooShort"; }
    if (($("#Name").val().length == 0)) { arrayErrors[i++] = "name"; }
    if (($("#SubjectSelect").val() == 0)) { arrayErrors[i++] = "subject"; }
    if (arrayErrors.length > 0) {
        $.ajax({
            url: appPath + '/Assistance.mvc/DisplayMessage?error=' + arrayErrors,
            type: 'GET',
            contentType: 'html',
            success: function (response) {
                $("#vide").empty();
                $("#vide").html(response);
                $("#linkErrorMess").click();
            },
            error: function () {

            }
        }); return false;
    }
    //if (arrayErrors.length > 0) { jQuery.facebox({ ajax: 'Assistance.mvc/DisplayMessage?error=' + arrayErrors }); return false; }
}
function SetNumberVisible(subject) {
    var commandNumber = $("#SubjectSelect").val();
    $("#commandNumberDiv").attr("style", "visibility:hidden");
    $("#Partner").val("false");
    $("#Suggestion").val("false");
    $("#Type").val(commandNumber); $("#Subject").val(subject);
    if (commandNumber == 3) {
        $("#commandNumberDiv").attr("style", "visibility:visible");
    } else if (commandNumber == 1) {
        $("#Partner").val("true");
    } else {
        if (commandNumber == 10) {
            $("#Suggestion").val("true");
        }
    }
}
function AssistanceEmail_ParseResult(content) {
    var jsonData = Sys.Serialization.JavaScriptSerializer.deserialize(content.get_data());
    if (jsonData && jsonData.TypeError != null && jsonData.TypeError == 'error') {
        $.ajax({
            url: appPath + '/Assistance.mvc/DisplayMessage?error=' + jsonData.Message,
            type: 'GET',
            contentType: 'html',
            success: function (response) {
                $("#vide").empty();
                $("#vide").html(response);
                $("#linkErrorMess").click();
            },
            error: function () {

            }
        });
        //jQuery.facebox({ ajax: 'Assistance.mvc/DisplayMessage?error=' + jsonData.Message });
        var d = new Date().getTime(); $("#image").attr("src", 'Assistance.mvc/Image?' + d); return;
    } else {
        //$("#text").text("Votre message a bien Ã©tÃ© envoyÃ© au support de genealogie.com. ")

        //$("#linkErrorMess").click();
        $("#assistanceFormDiv").attr("style", "display:none"); $("#assistanceSuccessDiv").attr("style", "display:block");
    }
}
//#endregion Fonctions Search


//#region Orange.js
/*	SWFObject v2.2 <http://code.google.com/p/swfobject/> 
	is released under the MIT License <http://www.opensource.org/licenses/mit-license.php> 
*/
var swfobject = function () { var D = "undefined", r = "object", S = "Shockwave Flash", W = "ShockwaveFlash.ShockwaveFlash", q = "application/x-shockwave-flash", R = "SWFObjectExprInst", x = "onreadystatechange", O = window, j = document, t = navigator, T = false, U = [h], o = [], N = [], I = [], l, Q, E, B, J = false, a = false, n, G, m = true, M = function () { var aa = typeof j.getElementById != D && typeof j.getElementsByTagName != D && typeof j.createElement != D, ah = t.userAgent.toLowerCase(), Y = t.platform.toLowerCase(), ae = Y ? /win/.test(Y) : /win/.test(ah), ac = Y ? /mac/.test(Y) : /mac/.test(ah), af = /webkit/.test(ah) ? parseFloat(ah.replace(/^.*webkit\/(\d+(\.\d+)?).*$/, "$1")) : false, X = !+"\v1", ag = [0, 0, 0], ab = null; if (typeof t.plugins != D && typeof t.plugins[S] == r) { ab = t.plugins[S].description; if (ab && !(typeof t.mimeTypes != D && t.mimeTypes[q] && !t.mimeTypes[q].enabledPlugin)) { T = true; X = false; ab = ab.replace(/^.*\s+(\S+\s+\S+$)/, "$1"); ag[0] = parseInt(ab.replace(/^(.*)\..*$/, "$1"), 10); ag[1] = parseInt(ab.replace(/^.*\.(.*)\s.*$/, "$1"), 10); ag[2] = /[a-zA-Z]/.test(ab) ? parseInt(ab.replace(/^.*[a-zA-Z]+(.*)$/, "$1"), 10) : 0 } } else { if (typeof O.ActiveXObject != D) { try { var ad = new ActiveXObject(W); if (ad) { ab = ad.GetVariable("$version"); if (ab) { X = true; ab = ab.split(" ")[1].split(","); ag = [parseInt(ab[0], 10), parseInt(ab[1], 10), parseInt(ab[2], 10)] } } } catch (Z) { } } } return { w3: aa, pv: ag, wk: af, ie: X, win: ae, mac: ac } }(), k = function () { if (!M.w3) { return } if ((typeof j.readyState != D && j.readyState == "complete") || (typeof j.readyState == D && (j.getElementsByTagName("body")[0] || j.body))) { f() } if (!J) { if (typeof j.addEventListener != D) { j.addEventListener("DOMContentLoaded", f, false) } if (M.ie && M.win) { j.attachEvent(x, function () { if (j.readyState == "complete") { j.detachEvent(x, arguments.callee); f() } }); if (O == top) { (function () { if (J) { return } try { j.documentElement.doScroll("left") } catch (X) { setTimeout(arguments.callee, 0); return } f() })() } } if (M.wk) { (function () { if (J) { return } if (!/loaded|complete/.test(j.readyState)) { setTimeout(arguments.callee, 0); return } f() })() } s(f) } }(); function f() { if (J) { return } try { var Z = j.getElementsByTagName("body")[0].appendChild(C("span")); Z.parentNode.removeChild(Z) } catch (aa) { return } J = true; var X = U.length; for (var Y = 0; Y < X; Y++) { U[Y]() } } function K(X) { if (J) { X() } else { U[U.length] = X } } function s(Y) { if (typeof O.addEventListener != D) { O.addEventListener("load", Y, false) } else { if (typeof j.addEventListener != D) { j.addEventListener("load", Y, false) } else { if (typeof O.attachEvent != D) { i(O, "onload", Y) } else { if (typeof O.onload == "function") { var X = O.onload; O.onload = function () { X(); Y() } } else { O.onload = Y } } } } } function h() { if (T) { V() } else { H() } } function V() { var X = j.getElementsByTagName("body")[0]; var aa = C(r); aa.setAttribute("type", q); var Z = X.appendChild(aa); if (Z) { var Y = 0; (function () { if (typeof Z.GetVariable != D) { var ab = Z.GetVariable("$version"); if (ab) { ab = ab.split(" ")[1].split(","); M.pv = [parseInt(ab[0], 10), parseInt(ab[1], 10), parseInt(ab[2], 10)] } } else { if (Y < 10) { Y++; setTimeout(arguments.callee, 10); return } } X.removeChild(aa); Z = null; H() })() } else { H() } } function H() { var ag = o.length; if (ag > 0) { for (var af = 0; af < ag; af++) { var Y = o[af].id; var ab = o[af].callbackFn; var aa = { success: false, id: Y }; if (M.pv[0] > 0) { var ae = c(Y); if (ae) { if (F(o[af].swfVersion) && !(M.wk && M.wk < 312)) { w(Y, true); if (ab) { aa.success = true; aa.ref = z(Y); ab(aa) } } else { if (o[af].expressInstall && A()) { var ai = {}; ai.data = o[af].expressInstall; ai.width = ae.getAttribute("width") || "0"; ai.height = ae.getAttribute("height") || "0"; if (ae.getAttribute("class")) { ai.styleclass = ae.getAttribute("class") } if (ae.getAttribute("align")) { ai.align = ae.getAttribute("align") } var ah = {}; var X = ae.getElementsByTagName("param"); var ac = X.length; for (var ad = 0; ad < ac; ad++) { if (X[ad].getAttribute("name").toLowerCase() != "movie") { ah[X[ad].getAttribute("name")] = X[ad].getAttribute("value") } } P(ai, ah, Y, ab) } else { p(ae); if (ab) { ab(aa) } } } } } else { w(Y, true); if (ab) { var Z = z(Y); if (Z && typeof Z.SetVariable != D) { aa.success = true; aa.ref = Z } ab(aa) } } } } } function z(aa) { var X = null; var Y = c(aa); if (Y && Y.nodeName == "OBJECT") { if (typeof Y.SetVariable != D) { X = Y } else { var Z = Y.getElementsByTagName(r)[0]; if (Z) { X = Z } } } return X } function A() { return !a && F("6.0.65") && (M.win || M.mac) && !(M.wk && M.wk < 312) } function P(aa, ab, X, Z) { a = true; E = Z || null; B = { success: false, id: X }; var ae = c(X); if (ae) { if (ae.nodeName == "OBJECT") { l = g(ae); Q = null } else { l = ae; Q = X } aa.id = R; if (typeof aa.width == D || (!/%$/.test(aa.width) && parseInt(aa.width, 10) < 310)) { aa.width = "310" } if (typeof aa.height == D || (!/%$/.test(aa.height) && parseInt(aa.height, 10) < 137)) { aa.height = "137" } j.title = j.title.slice(0, 47) + " - Flash Player Installation"; var ad = M.ie && M.win ? "ActiveX" : "PlugIn", ac = "MMredirectURL=" + O.location.toString().replace(/&/g, "%26") + "&MMplayerType=" + ad + "&MMdoctitle=" + j.title; if (typeof ab.flashvars != D) { ab.flashvars += "&" + ac } else { ab.flashvars = ac } if (M.ie && M.win && ae.readyState != 4) { var Y = C("div"); X += "SWFObjectNew"; Y.setAttribute("id", X); ae.parentNode.insertBefore(Y, ae); ae.style.display = "none"; (function () { if (ae.readyState == 4) { ae.parentNode.removeChild(ae) } else { setTimeout(arguments.callee, 10) } })() } u(aa, ab, X) } } function p(Y) { if (M.ie && M.win && Y.readyState != 4) { var X = C("div"); Y.parentNode.insertBefore(X, Y); X.parentNode.replaceChild(g(Y), X); Y.style.display = "none"; (function () { if (Y.readyState == 4) { Y.parentNode.removeChild(Y) } else { setTimeout(arguments.callee, 10) } })() } else { Y.parentNode.replaceChild(g(Y), Y) } } function g(ab) { var aa = C("div"); if (M.win && M.ie) { aa.innerHTML = ab.innerHTML } else { var Y = ab.getElementsByTagName(r)[0]; if (Y) { var ad = Y.childNodes; if (ad) { var X = ad.length; for (var Z = 0; Z < X; Z++) { if (!(ad[Z].nodeType == 1 && ad[Z].nodeName == "PARAM") && !(ad[Z].nodeType == 8)) { aa.appendChild(ad[Z].cloneNode(true)) } } } } } return aa } function u(ai, ag, Y) { var X, aa = c(Y); if (M.wk && M.wk < 312) { return X } if (aa) { if (typeof ai.id == D) { ai.id = Y } if (M.ie && M.win) { var ah = ""; for (var ae in ai) { if (ai[ae] != Object.prototype[ae]) { if (ae.toLowerCase() == "data") { ag.movie = ai[ae] } else { if (ae.toLowerCase() == "styleclass") { ah += ' class="' + ai[ae] + '"' } else { if (ae.toLowerCase() != "classid") { ah += " " + ae + '="' + ai[ae] + '"' } } } } } var af = ""; for (var ad in ag) { if (ag[ad] != Object.prototype[ad]) { af += '<param name="' + ad + '" value="' + ag[ad] + '" />' } } aa.outerHTML = '<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"' + ah + ">" + af + "</object>"; N[N.length] = ai.id; X = c(ai.id) } else { var Z = C(r); Z.setAttribute("type", q); for (var ac in ai) { if (ai[ac] != Object.prototype[ac]) { if (ac.toLowerCase() == "styleclass") { Z.setAttribute("class", ai[ac]) } else { if (ac.toLowerCase() != "classid") { Z.setAttribute(ac, ai[ac]) } } } } for (var ab in ag) { if (ag[ab] != Object.prototype[ab] && ab.toLowerCase() != "movie") { e(Z, ab, ag[ab]) } } aa.parentNode.replaceChild(Z, aa); X = Z } } return X } function e(Z, X, Y) { var aa = C("param"); aa.setAttribute("name", X); aa.setAttribute("value", Y); Z.appendChild(aa) } function y(Y) { var X = c(Y); if (X && X.nodeName == "OBJECT") { if (M.ie && M.win) { X.style.display = "none"; (function () { if (X.readyState == 4) { b(Y) } else { setTimeout(arguments.callee, 10) } })() } else { X.parentNode.removeChild(X) } } } function b(Z) { var Y = c(Z); if (Y) { for (var X in Y) { if (typeof Y[X] == "function") { Y[X] = null } } Y.parentNode.removeChild(Y) } } function c(Z) { var X = null; try { X = j.getElementById(Z) } catch (Y) { } return X } function C(X) { return j.createElement(X) } function i(Z, X, Y) { Z.attachEvent(X, Y); I[I.length] = [Z, X, Y] } function F(Z) { var Y = M.pv, X = Z.split("."); X[0] = parseInt(X[0], 10); X[1] = parseInt(X[1], 10) || 0; X[2] = parseInt(X[2], 10) || 0; return (Y[0] > X[0] || (Y[0] == X[0] && Y[1] > X[1]) || (Y[0] == X[0] && Y[1] == X[1] && Y[2] >= X[2])) ? true : false } function v(ac, Y, ad, ab) { if (M.ie && M.mac) { return } var aa = j.getElementsByTagName("head")[0]; if (!aa) { return } var X = (ad && typeof ad == "string") ? ad : "screen"; if (ab) { n = null; G = null } if (!n || G != X) { var Z = C("style"); Z.setAttribute("type", "text/css"); Z.setAttribute("media", X); n = aa.appendChild(Z); if (M.ie && M.win && typeof j.styleSheets != D && j.styleSheets.length > 0) { n = j.styleSheets[j.styleSheets.length - 1] } G = X } if (M.ie && M.win) { if (n && typeof n.addRule == r) { n.addRule(ac, Y) } } else { if (n && typeof j.createTextNode != D) { n.appendChild(j.createTextNode(ac + " {" + Y + "}")) } } } function w(Z, X) { if (!m) { return } var Y = X ? "visible" : "hidden"; if (J && c(Z)) { c(Z).style.visibility = Y } else { v("#" + Z, "visibility:" + Y) } } function L(Y) { var Z = /[\\\"<>\.;]/; var X = Z.exec(Y) != null; return X && typeof encodeURIComponent != D ? encodeURIComponent(Y) : Y } var d = function () { if (M.ie && M.win) { window.attachEvent("onunload", function () { var ac = I.length; for (var ab = 0; ab < ac; ab++) { I[ab][0].detachEvent(I[ab][1], I[ab][2]) } var Z = N.length; for (var aa = 0; aa < Z; aa++) { y(N[aa]) } for (var Y in M) { M[Y] = null } M = null; for (var X in swfobject) { swfobject[X] = null } swfobject = null }) } }(); return { registerObject: function (ab, X, aa, Z) { if (M.w3 && ab && X) { var Y = {}; Y.id = ab; Y.swfVersion = X; Y.expressInstall = aa; Y.callbackFn = Z; o[o.length] = Y; w(ab, false) } else { if (Z) { Z({ success: false, id: ab }) } } }, getObjectById: function (X) { if (M.w3) { return z(X) } }, embedSWF: function (ab, ah, ae, ag, Y, aa, Z, ad, af, ac) { var X = { success: false, id: ah }; if (M.w3 && !(M.wk && M.wk < 312) && ab && ah && ae && ag && Y) { w(ah, false); K(function () { ae += ""; ag += ""; var aj = {}; if (af && typeof af === r) { for (var al in af) { aj[al] = af[al] } } aj.data = ab; aj.width = ae; aj.height = ag; var am = {}; if (ad && typeof ad === r) { for (var ak in ad) { am[ak] = ad[ak] } } if (Z && typeof Z === r) { for (var ai in Z) { if (typeof am.flashvars != D) { am.flashvars += "&" + ai + "=" + Z[ai] } else { am.flashvars = ai + "=" + Z[ai] } } } if (F(Y)) { var an = u(aj, am, ah); if (aj.id == ah) { w(ah, true) } X.success = true; X.ref = an } else { if (aa && A()) { aj.data = aa; P(aj, am, ah, ac); return } else { w(ah, true) } } if (ac) { ac(X) } }) } else { if (ac) { ac(X) } } }, switchOffAutoHideShow: function () { m = false }, ua: M, getFlashPlayerVersion: function () { return { major: M.pv[0], minor: M.pv[1], release: M.pv[2] } }, hasFlashPlayerVersion: F, createSWF: function (Z, Y, X) { if (M.w3) { return u(Z, Y, X) } else { return undefined } }, showExpressInstall: function (Z, aa, X, Y) { if (M.w3 && A()) { P(Z, aa, X, Y) } }, removeSWF: function (X) { if (M.w3) { y(X) } }, createCSS: function (aa, Z, Y, X) { if (M.w3) { v(aa, Z, Y, X) } }, addDomLoadEvent: K, addLoadEvent: s, getQueryParamValue: function (aa) { var Z = j.location.search || j.location.hash; if (Z) { if (/\?/.test(Z)) { Z = Z.split("?")[1] } if (aa == null) { return L(Z) } var Y = Z.split("&"); for (var X = 0; X < Y.length; X++) { if (Y[X].substring(0, Y[X].indexOf("=")) == aa) { return L(Y[X].substring((Y[X].indexOf("=") + 1))) } } } return "" }, expressInstallCallback: function () { if (a) { var X = c(R); if (X && l) { X.parentNode.replaceChild(l, X); if (Q) { w(Q, true); if (M.ie && M.win) { l.style.display = "block" } } if (E) { E(B) } } a = false } } } }();
/* Orange.js */
function FilterHomePage() { $("#fromDocuments").val($("#chkDocument").is(':checked')); $("#fromTree").val($("#chkTrees").is(':checked')); $("#fromCollections").val($("#chkCollections").is(':checked')); $("#fromAlerts").val($("#chkAlerts").is(':checked')); $("#fromForum").val($("#chkForum").is(':checked')); $("#fromShop").val($("#chkShop").is(':checked')); $("#PersonalEvents").val($("#chkPersonalEvents").is(':checked')); $("#filterSubmit").click(); }
function AddDate(typeEvent, updateId, idStringDate) {
    $.post(appPath + "/HomePage.mvc/AddDate", { typeEvent: typeEvent, updateId: updateId, stringDate: $("#" + idStringDate).val() }, function (msg) { });
    //CloseFacebox();
    $('#connaissez-vous').modal('toggle');
}
function SetShowPopup() { $.post(appPath + "/HomePage.mvc/SetShowPopup", { showPopup: $("#chkSkowPopup").is(':checked') }, function (msg) { }); }
function SearchSubmit() {
    ReloadRubicon();
    //$('#formName').submit();
    $("#reloadRearchButton").click();
}//RefreshSearchAdvertisement();
function ReloadRubicon() { if (document.getElementById('frame_rubicon')) { var f = document.getElementById('frame_rubicon'); f.src = f.src; } }
var flipCounter = function (d, options) {
    var defaults = { value: 0, inc: 1, pace: 1000, auto: true, tFH: 20, bFH: 20, fW: 26, bOffset: 199 };
    var o = options || {}, doc = window.document, divId = typeof d !== 'undefined' && d !== '' ? d : 'flip-counter', div = doc.getElementById(divId);
    for (var opt in defaults) o[opt] = (opt in o) ? o[opt] : defaults[opt];
    var digitsOld = [], digitsNew = [], subStart, subEnd, x, y, nextCount = null, newDigit, newComma, best = { q: null, pace: 0, inc: 0 };
    this.setValue = function (n) { if (isNumber(n)) { x = o.value; y = n; o.value = n; digitCheck(x, y); } return this; };
    this.setIncrement = function (n) { o.inc = isNumber(n) ? n : defaults.inc; return this; };
    this.setPace = function (n) { o.pace = isNumber(n) ? n : defaults.pace; return this; };
    this.getPace = function () { return o.pace; };
    this.setAuto = function (a) { if (a && !o.atuo) { o.auto = true; doCount(); } if (!a && o.auto) { if (nextCount) clearNext(); o.auto = false; } return this; };
    this.step = function () { if (!o.auto) doCount(); return this; };
    this.add = function (n) { if (isNumber(n)) { x = o.value; o.value += n; y = o.value; digitCheck(x, y); } return this; };
    this.subtract = function (n) { if (isNumber(n)) { x = o.value; o.value -= n; if (o.value >= 0) { y = o.value; } else { y = "0"; o.value = 0; } digitCheck(x, y); } return this; };
    this.incrementTo = function (n, t, p) {
        if (nextCount) clearNext();
        if (typeof t != 'undefined') {
            var time = isNumber(t) ? t * 1000 : 10000, pace = typeof p != 'undefined' && isNumber(p) ? p : o.pace, diff = typeof n != 'undefined' && isNumber(n) ? n - o.value : 0, cycles, inc, check, i = 0;
            best.q = null; pace = (time / diff > pace) ? Math.round((time / diff) / 10) * 10 : pace; cycles = Math.floor(time / pace); inc = Math.floor(diff / cycles); check = checkSmartValues(diff, cycles, inc, pace, time);
            if (diff > 0) { while (check.result === false && i < 100) { pace += 10; cycles = Math.floor(time / pace); inc = Math.floor(diff / cycles); check = checkSmartValues(diff, cycles, inc, pace, time); i++; } if (i == 100) { o.inc = best.inc; o.pace = best.pace; } else { o.inc = inc; o.pace = pace; } doIncrement(n, true, cycles); }
        } else { doIncrement(n); }
    }
    this.getValue = function () { return o.value; }
    this.stop = function () { if (nextCount) clearNext(); return this; }
    function doCount() { x = o.value; o.value += o.inc; y = o.value; digitCheck(x, y); if (o.auto === true) nextCount = setTimeout(doCount, o.pace); }
    function doIncrement(n, s, c) {
        var val = o.value, smart = (typeof s == 'undefined') ? false : s, cycles = (typeof c == 'undefined') ? 1 : c;
        if (smart === true) cycles--;
        if (val != n) { x = o.value, o.auto = true; if (val + o.inc <= n && cycles != 0) val += o.inc; else val = n; o.value = val; y = o.value; digitCheck(x, y); nextCount = setTimeout(function () { doIncrement(n, smart, cycles) }, o.pace); } else o.auto = false;
    }
    function digitCheck(x, y) {
        digitsOld = splitToArray(x); digitsNew = splitToArray(y); var diff, xlen = digitsOld.length, ylen = digitsNew.length;
        if (ylen > xlen) { diff = ylen - xlen; while (diff > 0) { addDigit(ylen - diff + 1, digitsNew[ylen - diff]); diff--; } }
        if (ylen < xlen) { diff = xlen - ylen; while (diff > 0) { removeDigit(xlen - diff); diff--; } }
        for (var i = 0; i < xlen; i++) { if (digitsNew[i] != digitsOld[i]) { animateDigit(i, digitsOld[i], digitsNew[i]); } }
    }
    function animateDigit(n, oldDigit, newDigit) {
        var speed, step = 0, w, a, bp = ['-' + o.fW + 'px -' + (oldDigit * o.tFH) + 'px', (o.fW * -2) + 'px -' + (oldDigit * o.tFH) + 'px', '0 -' + (newDigit * o.tFH) + 'px', '-' + o.fW + 'px -' + (oldDigit * o.bFH + o.bOffset) + 'px', (o.fW * -2) + 'px -' + (newDigit * o.bFH + o.bOffset) + 'px', (o.fW * -3) + 'px -' + (newDigit * o.bFH + o.bOffset) + 'px', '0 -' + (newDigit * o.bFH + o.bOffset) + 'px'];
        if (o.auto === true && o.pace <= 300) { switch (n) { case 0: speed = o.pace / 6; break; case 1: speed = o.pace / 5; break; case 2: speed = o.pace / 4; break; case 3: speed = o.pace / 3; break; default: speed = o.pace / 1.5; break; } } else { speed = 80; }
        speed = (speed > 80) ? 80 : speed;
        function animate() { if (step < 7) { w = step < 3 ? 't' : 'b'; a = doc.getElementById(divId + "_" + w + "_d" + n); if (a) a.style.backgroundPosition = bp[step]; step++; if (step != 3) setTimeout(animate, speed); else animate(); } } animate();
    }
    function splitToArray(input) { return input.toString().split("").reverse(); }
    function addDigit(len, digit) {
        var li = Number(len) - 1; newDigit = doc.createElement("ul"); newDigit.className = 'cd'; newDigit.id = divId + '_d' + li; newDigit.innerHTML = '<li class="t" id="' + divId + '_t_d' + li + '"></li><li class="b" id="' + divId + '_b_d' + li + '"></li>';
        if (li % 3 == 0) { newComma = doc.createElement("ul"); newComma.className = 'cd'; newComma.innerHTML = '<li class="s"></li>'; div.insertBefore(newComma, div.firstChild); }
        div.insertBefore(newDigit, div.firstChild); doc.getElementById(divId + "_t_d" + li).style.backgroundPosition = '0 -' + (digit * o.tFH) + 'px'; doc.getElementById(divId + "_b_d" + li).style.backgroundPosition = '0 -' + (digit * o.bFH + o.bOffset) + 'px';
    }
    function removeDigit(id) { var remove = doc.getElementById(divId + "_d" + id); div.removeChild(remove); var first = div.firstChild.firstChild; if ((" " + first.className + " ").indexOf(" s ") > -1) { remove = first.parentNode; div.removeChild(remove); } }
    function initialDigitCheck(init) {
        var initial = init.toString(), count = initial.length, bit = 1, i;
        for (i = 0; i < count; i++) {
            newDigit = doc.createElement("ul"); newDigit.className = 'cd'; newDigit.id = divId + '_d' + i; newDigit.innerHTML = newDigit.innerHTML = '<li class="t" id="' + divId + '_t_d' + i + '"></li><li class="b" id="' + divId + '_b_d' + i + '"></li>'; div.insertBefore(newDigit, div.firstChild);
            if (bit != (count) && bit % 3 == 0) { newComma = doc.createElement("ul"); newComma.className = 'cd'; newComma.innerHTML = '<li class="s"></li>'; div.insertBefore(newComma, div.firstChild); }
            bit++;
        }
        var digits = splitToArray(initial);
        for (i = 0; i < count; i++) { doc.getElementById(divId + "_t_d" + i).style.backgroundPosition = '0 -' + (digits[i] * o.tFH) + 'px'; doc.getElementById(divId + "_b_d" + i).style.backgroundPosition = '0 -' + (digits[i] * o.bFH + o.bOffset) + 'px'; }
        if (o.auto === true) nextCount = setTimeout(doCount, o.pace);
    }
    function checkSmartValues(diff, cycles, inc, pace, time) {
        var r = { result: true }, q; r.cond1 = (diff / cycles >= 1) ? true : false; r.cond2 = (cycles * inc <= diff) ? true : false; r.cond3 = (Math.abs(cycles * inc - diff) <= 10) ? true : false; r.cond4 = (Math.abs(cycles * pace - time) <= 100) ? true : false; r.cond5 = (cycles * pace <= time) ? true : false;
        if (r.cond1 && r.cond2 && r.cond4 && r.cond5) { q = Math.abs(diff - (cycles * inc)) + Math.abs(cycles * pace - time); if (best.q === null) best.q = q; if (q <= best.q) { best.pace = pace; best.inc = inc; } }
        for (var i = 1; i <= 5; i++) { if (r['cond' + i] === false) { r.result = false; } }
        return r;
    }
    function isNumber(n) { return !isNaN(parseFloat(n)) && isFinite(n); }
    function clearNext() { clearTimeout(nextCount); nextCount = null; }
    initialDigitCheck(o.value);
};
//#endregion Orange.js

function TreesTableUpdate(field, sortDir, id) { UpdateTreesHiddenFields(field, id); $.post(appPath + "/HomePage.mvc/GetOrderedTrees", { table: id, orderBy: field, ascending: sortDir }, function (msg) { $("#divTableRows" + id).html(msg.personHtml); }); }
function UpdateTreesHiddenFields(field, id) { var oldField = $("#sortField" + id).val(); var oldDirection = $("#sortDirection" + id).val(); if (oldField == field) { if (oldDirection == "0") { $("#sortDirection" + id).val("1"); } else { $("#sortDirection" + id).val("0"); } } else { $("#sortField" + id).val(field); $("#sortDirection" + id).val("1"); } }
function GetPageTree(page, id) { var field = $("#sortField" + id).val(); var sortDir = $("#sortDirection" + id).val(); TreesTableUpdate(field, sortDir, id); }
function DeleteTree() {
    var gedcomId = $("#idGedComForDeleting").val(); var tableId = $("#idTableForDeleting").val(); var privilegeId = $("#idPrivilegeForDeleting").val(); var field = $("#sortField" + tableId).val(); var sortDir = $("#sortDirection" + tableId).val();
    if (tableId == 1) { $.post(appPath + "/Menu.mvc/DeleteGedcom/" + Math.random(), { gedcomId: gedcomId }, function (msg) { if (msg == "Failed") { $("#errorMessages").html("OpÃ©ration de suppression a Ã©chouÃ©"); } else { $.facebox.close(); TreesTableUpdate(field, sortDir, tableId); } }); }
    else { $.post(appPath + "/Homepage.mvc/DeletePrivilege", { idPrivilege: privilegeId }, function (msg) { if (msg == "Failed") { $("#errorMessages").html("OpÃ©ration de suppression a Ã©chouÃ©"); } else { $.facebox.close(); TreesTableUpdate(field, sortDir, tableId); } }); }
}
function redirection() { location.href = "Homepage.mvc/Homepageconnected?theme=@theme"; }
function HomePageTreeList_GoToDetails(personId) { location.href = appPath + '/Tree/Tree/' + personId; }

function GetNotesListHomePage(idNote, type) {
    $.post(appPath + "/HomePage.mvc/GetNotesList", { idNote: idNote, typeOperation: type },
    function (msg) {
        $("#Order").val(msg.Order);
        var itemsReturned = msg.SelectType;
        if (itemsReturned.length > 0) {
            var listItems = [];
            for (var key in itemsReturned) {
                if (itemsReturned[key].Value == msg.SelectValues[0]) {
                    notesList.append('<li class=\"actif\" id=\"idNote-' + itemsReturned[key].Value + '\" onclick=TabNote_GetNoteData(' + itemsReturned[key].Value + ')>' + itemsReturned[key].Text + '</li>');
                } else {
                    notesList.append('<li id=\"idNote-' + itemsReturned[key].Value + '\" onclick=TabNote_GetNoteData(' + itemsReturned[key].Value + ')>' + itemsReturned[key].Text + '</li>');
                }
            }
            $("#SelecteValues").val(msg.SelectValues[0]);
            $("#DescriptionTitle").val(msg.Title);
            $("#DescriptionViewMode").html(msg.Description);
            $("#Description").html($("#DescriptionViewMode").html());
        }
        else {
            if (type != "Remove") {
                // alert("Il n'y a pas des resultats");
            }
            $("#noNote").css('display', '');
        }
    });
}
function UpdateNewsletter() {
    var email = $("#email").val();
    $.post(appPath + "/Search.mvc/UpdateNewsletter",
        { email: email },
        function (msg) {
            $("#email").val("");
            $.ajax({
                url: 'search.mvc/SearchErrorMessage',
                type: 'GET',
                data: { errorType: 7 },
                contentType: 'html',
                success: function (response) {
                    $('#vide').empty();
                    $('#vide').append(response);
                    $('#showAlert').click();
                },
                error: function () {

                }
            });
        });
}
function DeleteTrees(tableId) {
    var Ids = "";
    var field = $("#sortField" + tableId).val();
    var sortDir = $("#sortDirection" + tableId).val(); var checkboxType = "";
    if (tableId == 1) {
        checkboxType = "treeCheckbox";
        $('.' + checkboxType).each(function () {
            if (this.checked) {
                Ids = Ids + $(this).attr('id') + "_";
            }
        });
        $.post(appPath + "/HomePage.mvc/DeleteTrees/" + Math.random(), { idTrees: Ids }, function (msg) { refreshPage(); });
    } else {
        checkboxType = "privilegeCheckbox"; $('.' + checkboxType).each(function () { if (this.checked) { Ids = Ids + $(this).attr('id') + "_"; } });
        $.post(appPath + "/HomePage.mvc/DeletePrivileges/" + Math.random(), { idPrivileges: Ids }, function (msg) { refreshPage(); });
    } $("#closeModalButtTree").click();
    //TreesTableUpdate(field, sortDir, tableId);
}
function SubmitFormPersons(id, type, date) { var formId = "#Form" + id.toString() + type.toString() + date.toString(); $(formId).submit(); }
function ShowTreeEventPopup(e) {
    var json = e.get_response().get_object();
    $("#ajout-individus").empty();
    $("#ajout-individus").html(json);
    //$("#WeeksSectionFacebox").hide(); jQuery.facebox({ div: "#WeeksSectionFacebox" });
}
function OpenLoading() { $.blockUI({ message: $('#throbber'), css: { dispay: 'block', left: '40%' } }); }

function ChangePageArticle(page, isConnected, isSubscribed) { $("div[id^=article]").hide(); $("#article" + page).show(); $("div[class*=numberPagination]").removeClass("selectedPage"); $("#page" + page).addClass("selectedPage"); if (page == $("#totalNumber").val()) { $(".nextPageChronic").hide(); } else { $(".nextPageChronic").show(); } if (page == 1) { $(".previousPageChronic").hide(); } else { $(".previousPageChronic").show(); } $("#currentPage").val(page); ChangeChronicAdvertisement(isConnected, isSubscribed); }
sas_tmstp = Math.round(Math.random() * 10000000000); sas_masterflag = 1;
function EventsPageSelectGedcom() { $("#idGedcom").val($("#ddlTrees").val()); $("#eventsListForm").submit(); } function boxOffHover(box) { box.style.background = '#FFFFFF'; }

function MoveSlider(index) { var cnt = parseInt($("#TotalNumberResults").val()); if (index < cnt && index >= 0) { var sliderWidth = $("#instanz_2_scrollbar").width(); var ml = (sliderWidth / (cnt - 1)) * index; $("#instanz_2_slider").css("margin-left", ml + "px"); } }

/*jquery.imageareaselect.min.js*/
(function ($) { var abs = Math.abs, max = Math.max, min = Math.min, round = Math.round; function div() { return $('<div/>') } $.imgAreaSelect = function (img, options) { var $img = $(img), imgLoaded, $box = div(), $area = div(), $border = div().add(div()).add(div()).add(div()), $outer = div().add(div()).add(div()).add(div()), $handles = $([]), $areaOpera, left, top, imgOfs = { left: 0, top: 0 }, imgWidth, imgHeight, $parent, parOfs = { left: 0, top: 0 }, zIndex = 0, position = 'absolute', startX, startY, scaleX, scaleY, resize, minWidth, minHeight, maxWidth, maxHeight, aspectRatio, shown, x1, y1, x2, y2, selection = { x1: 0, y1: 0, x2: 0, y2: 0, width: 0, height: 0 }, docElem = document.documentElement, $p, d, i, o, w, h, adjusted; function viewX(x) { return x + imgOfs.left - parOfs.left } function viewY(y) { return y + imgOfs.top - parOfs.top } function selX(x) { return x - imgOfs.left + parOfs.left } function selY(y) { return y - imgOfs.top + parOfs.top } function evX(event) { return event.pageX - parOfs.left } function evY(event) { return event.pageY - parOfs.top } function getSelection(noScale) { var sx = noScale || scaleX, sy = noScale || scaleY; return { x1: round(selection.x1 * sx), y1: round(selection.y1 * sy), x2: round(selection.x2 * sx), y2: round(selection.y2 * sy), width: round(selection.x2 * sx) - round(selection.x1 * sx), height: round(selection.y2 * sy) - round(selection.y1 * sy) } } function setSelection(x1, y1, x2, y2, noScale) { var sx = noScale || scaleX, sy = noScale || scaleY; selection = { x1: round(x1 / sx || 0), y1: round(y1 / sy || 0), x2: round(x2 / sx || 0), y2: round(y2 / sy || 0) }; selection.width = selection.x2 - selection.x1; selection.height = selection.y2 - selection.y1 } function adjust() { if (!$img.width()) return; imgOfs = { left: round($img.offset().left), top: round($img.offset().top) }; imgWidth = $img.innerWidth(); imgHeight = $img.innerHeight(); imgOfs.top += ($img.outerHeight() - imgHeight) >> 1; imgOfs.left += ($img.outerWidth() - imgWidth) >> 1; minWidth = round(options.minWidth / scaleX) || 0; minHeight = round(options.minHeight / scaleY) || 0; maxWidth = round(min(options.maxWidth / scaleX || 1 << 24, imgWidth)); maxHeight = round(min(options.maxHeight / scaleY || 1 << 24, imgHeight)); if ($().jquery == '1.3.2' && position == 'fixed' && !docElem['getBoundingClientRect']) { imgOfs.top += max(document.body.scrollTop, docElem.scrollTop); imgOfs.left += max(document.body.scrollLeft, docElem.scrollLeft) } parOfs = /absolute|relative/.test($parent.css('position')) ? { left: round($parent.offset().left) - $parent.scrollLeft(), top: round($parent.offset().top) - $parent.scrollTop() } : position == 'fixed' ? { left: $(document).scrollLeft(), top: $(document).scrollTop() } : { left: 0, top: 0 }; left = viewX(0); top = viewY(0); if (selection.x2 > imgWidth || selection.y2 > imgHeight) doResize() } function update(resetKeyPress) { if (!shown) return; $box.css({ left: viewX(selection.x1), top: viewY(selection.y1) }).add($area).width(w = selection.width).height(h = selection.height); $area.add($border).add($handles).css({ left: 0, top: 0 }); $border.width(max(w - $border.outerWidth() + $border.innerWidth(), 0)).height(max(h - $border.outerHeight() + $border.innerHeight(), 0)); $($outer[0]).css({ left: left, top: top, width: selection.x1, height: imgHeight }); $($outer[1]).css({ left: left + selection.x1, top: top, width: w, height: selection.y1 }); $($outer[2]).css({ left: left + selection.x2, top: top, width: imgWidth - selection.x2, height: imgHeight }); $($outer[3]).css({ left: left + selection.x1, top: top + selection.y2, width: w, height: imgHeight - selection.y2 }); w -= $handles.outerWidth(); h -= $handles.outerHeight(); switch ($handles.length) { case 8: $($handles[4]).css({ left: w >> 1 }); $($handles[5]).css({ left: w, top: h >> 1 }); $($handles[6]).css({ left: w >> 1, top: h }); $($handles[7]).css({ top: h >> 1 }); case 4: $handles.slice(1, 3).css({ left: w }); $handles.slice(2, 4).css({ top: h }) } if (resetKeyPress !== false) { if ($.imgAreaSelect.keyPress != docKeyPress) $(document).unbind($.imgAreaSelect.keyPress, $.imgAreaSelect.onKeyPress); if (options.keys) $(document)[$.imgAreaSelect.keyPress]($.imgAreaSelect.onKeyPress = docKeyPress) } if ($.browser.msie && $border.outerWidth() - $border.innerWidth() == 2) { $border.css('margin', 0); setTimeout(function () { $border.css('margin', 'auto') }, 0) } } function doUpdate(resetKeyPress) { adjust(); update(resetKeyPress); x1 = viewX(selection.x1); y1 = viewY(selection.y1); x2 = viewX(selection.x2); y2 = viewY(selection.y2) } function hide($elem, fn) { options.fadeSpeed ? $elem.fadeOut(options.fadeSpeed, fn) : $elem.hide() } function areaMouseMove(event) { var x = selX(evX(event)) - selection.x1, y = selY(evY(event)) - selection.y1; if (!adjusted) { adjust(); adjusted = true; $box.one('mouseout', function () { adjusted = false }) } resize = ''; if (options.resizable) { if (y <= options.resizeMargin) resize = 'n'; else if (y >= selection.height - options.resizeMargin) resize = 's'; if (x <= options.resizeMargin) resize += 'w'; else if (x >= selection.width - options.resizeMargin) resize += 'e' } $box.css('cursor', resize ? resize + '-resize' : options.movable ? 'move' : ''); if ($areaOpera) $areaOpera.toggle() } function docMouseUp(event) { $('body').css('cursor', ''); if (options.autoHide || selection.width * selection.height == 0) hide($box.add($outer), function () { $(this).hide() }); $(document).unbind('mousemove', selectingMouseMove); $box.mousemove(areaMouseMove); options.onSelectEnd(img, getSelection()) } function areaMouseDown(event) { if (event.which != 1) return false; adjust(); if (resize) { $('body').css('cursor', resize + '-resize'); x1 = viewX(selection[/w/.test(resize) ? 'x2' : 'x1']); y1 = viewY(selection[/n/.test(resize) ? 'y2' : 'y1']); $(document).mousemove(selectingMouseMove).one('mouseup', docMouseUp); $box.unbind('mousemove', areaMouseMove) } else if (options.movable) { startX = left + selection.x1 - evX(event); startY = top + selection.y1 - evY(event); $box.unbind('mousemove', areaMouseMove); $(document).mousemove(movingMouseMove).one('mouseup', function () { options.onSelectEnd(img, getSelection()); $(document).unbind('mousemove', movingMouseMove); $box.mousemove(areaMouseMove) }) } else $img.mousedown(event); return false } function fixAspectRatio(xFirst) { if (aspectRatio) if (xFirst) { x2 = max(left, min(left + imgWidth, x1 + abs(y2 - y1) * aspectRatio * (x2 > x1 || -1))); y2 = round(max(top, min(top + imgHeight, y1 + abs(x2 - x1) / aspectRatio * (y2 > y1 || -1)))); x2 = round(x2) } else { y2 = max(top, min(top + imgHeight, y1 + abs(x2 - x1) / aspectRatio * (y2 > y1 || -1))); x2 = round(max(left, min(left + imgWidth, x1 + abs(y2 - y1) * aspectRatio * (x2 > x1 || -1)))); y2 = round(y2) } } function doResize() { x1 = min(x1, left + imgWidth); y1 = min(y1, top + imgHeight); if (abs(x2 - x1) < minWidth) { x2 = x1 - minWidth * (x2 < x1 || -1); if (x2 < left) x1 = left + minWidth; else if (x2 > left + imgWidth) x1 = left + imgWidth - minWidth } if (abs(y2 - y1) < minHeight) { y2 = y1 - minHeight * (y2 < y1 || -1); if (y2 < top) y1 = top + minHeight; else if (y2 > top + imgHeight) y1 = top + imgHeight - minHeight } x2 = max(left, min(x2, left + imgWidth)); y2 = max(top, min(y2, top + imgHeight)); fixAspectRatio(abs(x2 - x1) < abs(y2 - y1) * aspectRatio); if (abs(x2 - x1) > maxWidth) { x2 = x1 - maxWidth * (x2 < x1 || -1); fixAspectRatio() } if (abs(y2 - y1) > maxHeight) { y2 = y1 - maxHeight * (y2 < y1 || -1); fixAspectRatio(true) } selection = { x1: selX(min(x1, x2)), x2: selX(max(x1, x2)), y1: selY(min(y1, y2)), y2: selY(max(y1, y2)), width: abs(x2 - x1), height: abs(y2 - y1) }; update(); options.onSelectChange(img, getSelection()) } function selectingMouseMove(event) { x2 = /w|e|^$/.test(resize) || aspectRatio ? evX(event) : viewX(selection.x2); y2 = /n|s|^$/.test(resize) || aspectRatio ? evY(event) : viewY(selection.y2); doResize(); return false } function doMove(newX1, newY1) { x2 = (x1 = newX1) + selection.width; y2 = (y1 = newY1) + selection.height; $.extend(selection, { x1: selX(x1), y1: selY(y1), x2: selX(x2), y2: selY(y2) }); update(); options.onSelectChange(img, getSelection()) } function movingMouseMove(event) { x1 = max(left, min(startX + evX(event), left + imgWidth - selection.width)); y1 = max(top, min(startY + evY(event), top + imgHeight - selection.height)); doMove(x1, y1); event.preventDefault(); return false } function startSelection() { $(document).unbind('mousemove', startSelection); adjust(); x2 = x1; y2 = y1; doResize(); resize = ''; if (!$outer.is(':visible')) $box.add($outer).hide().fadeIn(options.fadeSpeed || 0); shown = true; $(document).unbind('mouseup', cancelSelection).mousemove(selectingMouseMove).one('mouseup', docMouseUp); $box.unbind('mousemove', areaMouseMove); options.onSelectStart(img, getSelection()) } function cancelSelection() { $(document).unbind('mousemove', startSelection).unbind('mouseup', cancelSelection); hide($box.add($outer)); setSelection(selX(x1), selY(y1), selX(x1), selY(y1)); if (!this instanceof $.imgAreaSelect) { options.onSelectChange(img, getSelection()); options.onSelectEnd(img, getSelection()) } } function imgMouseDown(event) { if (event.which != 1 || $outer.is(':animated')) return false; adjust(); startX = x1 = evX(event); startY = y1 = evY(event); $(document).mousemove(startSelection).mouseup(cancelSelection); return false } function windowResize() { doUpdate(false) } function imgLoad() { imgLoaded = true; setOptions(options = $.extend({ classPrefix: 'imgareaselect', movable: true, parent: 'body', resizable: true, resizeMargin: 10, onInit: function () { }, onSelectStart: function () { }, onSelectChange: function () { }, onSelectEnd: function () { } }, options)); $box.add($outer).css({ visibility: '' }); if (options.show) { shown = true; adjust(); update(); $box.add($outer).hide().fadeIn(options.fadeSpeed || 0) } setTimeout(function () { options.onInit(img, getSelection()) }, 0) } var docKeyPress = function (event) { var k = options.keys, d, t, key = event.keyCode; d = !isNaN(k.alt) && (event.altKey || event.originalEvent.altKey) ? k.alt : !isNaN(k.ctrl) && event.ctrlKey ? k.ctrl : !isNaN(k.shift) && event.shiftKey ? k.shift : !isNaN(k.arrows) ? k.arrows : 10; if (k.arrows == 'resize' || (k.shift == 'resize' && event.shiftKey) || (k.ctrl == 'resize' && event.ctrlKey) || (k.alt == 'resize' && (event.altKey || event.originalEvent.altKey))) { switch (key) { case 37: d = -d; case 39: t = max(x1, x2); x1 = min(x1, x2); x2 = max(t + d, x1); fixAspectRatio(); break; case 38: d = -d; case 40: t = max(y1, y2); y1 = min(y1, y2); y2 = max(t + d, y1); fixAspectRatio(true); break; default: return } doResize() } else { x1 = min(x1, x2); y1 = min(y1, y2); switch (key) { case 37: doMove(max(x1 - d, left), y1); break; case 38: doMove(x1, max(y1 - d, top)); break; case 39: doMove(x1 + min(d, imgWidth - selX(x2)), y1); break; case 40: doMove(x1, y1 + min(d, imgHeight - selY(y2))); break; default: return } } return false }; function styleOptions($elem, props) { for (option in props) if (options[option] !== undefined) $elem.css(props[option], options[option]) } function setOptions(newOptions) { if (newOptions.parent) ($parent = $(newOptions.parent)).append($box.add($outer)); $.extend(options, newOptions); adjust(); if (newOptions.handles != null) { $handles.remove(); $handles = $([]); i = newOptions.handles ? newOptions.handles == 'corners' ? 4 : 8 : 0; while (i--) $handles = $handles.add(div()); $handles.addClass(options.classPrefix + '-handle').css({ position: 'absolute', fontSize: 0, zIndex: zIndex + 1 || 1 }); if (!parseInt($handles.css('width')) >= 0) $handles.width(5).height(5); if (o = options.borderWidth) $handles.css({ borderWidth: o, borderStyle: 'solid' }); styleOptions($handles, { borderColor1: 'border-color', borderColor2: 'background-color', borderOpacity: 'opacity' }) } scaleX = options.imageWidth / imgWidth || 1; scaleY = options.imageHeight / imgHeight || 1; if (newOptions.x1 != null) { setSelection(newOptions.x1, newOptions.y1, newOptions.x2, newOptions.y2); newOptions.show = !newOptions.hide } if (newOptions.keys) options.keys = $.extend({ shift: 1, ctrl: 'resize' }, newOptions.keys); $outer.addClass(options.classPrefix + '-outer'); $area.addClass(options.classPrefix + '-selection'); for (i = 0; i++ < 4;) $($border[i - 1]).addClass(options.classPrefix + '-border' + i); styleOptions($area, { selectionColor: 'background-color', selectionOpacity: 'opacity' }); styleOptions($border, { borderOpacity: 'opacity', borderWidth: 'border-width' }); styleOptions($outer, { outerColor: 'background-color', outerOpacity: 'opacity' }); if (o = options.borderColor1) $($border[0]).css({ borderStyle: 'solid', borderColor: o }); if (o = options.borderColor2) $($border[1]).css({ borderStyle: 'dashed', borderColor: o }); $box.append($area.add($border).add($areaOpera).add($handles)); if ($.browser.msie) { if (o = $outer.css('filter').match(/opacity=(\d+)/)) $outer.css('opacity', o[1] / 100); if (o = $border.css('filter').match(/opacity=(\d+)/)) $border.css('opacity', o[1] / 100) } if (newOptions.hide) hide($box.add($outer)); else if (newOptions.show && imgLoaded) { shown = true; $box.add($outer).fadeIn(options.fadeSpeed || 0); doUpdate() } aspectRatio = (d = (options.aspectRatio || '').split(/:/))[0] / d[1]; $img.add($outer).unbind('mousedown', imgMouseDown); if (options.disable || options.enable === false) { $box.unbind('mousemove', areaMouseMove).unbind('mousedown', areaMouseDown); $(window).unbind('resize', windowResize) } else { if (options.enable || options.disable === false) { if (options.resizable || options.movable) $box.mousemove(areaMouseMove).mousedown(areaMouseDown); $(window).resize(windowResize) } if (!options.persistent) $img.add($outer).mousedown(imgMouseDown) } options.enable = options.disable = undefined } this.remove = function () { setOptions({ disable: true }); $box.add($outer).remove() }; this.getOptions = function () { return options }; this.setOptions = setOptions; this.getSelection = getSelection; this.setSelection = setSelection; this.cancelSelection = cancelSelection; this.update = doUpdate; $p = $img; while ($p.length) { zIndex = max(zIndex, !isNaN($p.css('z-index')) ? $p.css('z-index') : zIndex); if ($p.css('position') == 'fixed') position = 'fixed'; $p = $p.parent(':not(body)') } zIndex = options.zIndex || zIndex; if ($.browser.msie) $img.attr('unselectable', 'on'); $.imgAreaSelect.keyPress = $.browser.msie || $.browser.safari ? 'keydown' : 'keypress'; if ($.browser.opera) $areaOpera = div().css({ width: '100%', height: '100%', position: 'absolute', zIndex: zIndex + 2 || 2 }); $box.add($outer).css({ visibility: 'hidden', position: position, overflow: 'hidden', zIndex: zIndex || '0' }); $box.css({ zIndex: zIndex + 2 || 2, border: '1px solid Red' }); $area.add($border).css({ position: 'absolute', fontSize: 0 }); img.complete || img.readyState == 'complete' || !$img.is('img') ? imgLoad() : $img.one('load', imgLoad); if ($.browser.msie && $.browser.version >= 7) img.src = img.src }; $.fn.imgAreaSelect = function (options) { options = options || {}; this.each(function () { if ($(this).data('imgAreaSelect')) { if (options.remove) { $(this).data('imgAreaSelect').remove(); $(this).removeData('imgAreaSelect') } else $(this).data('imgAreaSelect').setOptions(options) } else if (!options.remove) { if (options.enable === undefined && options.disable === undefined) options.enable = true; $(this).data('imgAreaSelect', new $.imgAreaSelect(this, options)) } }); if (options.instance) return $(this).data('imgAreaSelect'); return this } })(jQuery);


//#region Function Document detail page
/*documentdetailspage*/
function Search_ChangeCountry(idDepartment) { if (document.getElementById("ddlCountry").value == "0") { $("#ddlCountry").val("FR"); } }
function getPrevDay() { $("#reload").val("true"); var $picker = $("#datepicker"); var date = new Date($picker.datepicker('getDate')); date.setDate(date.getDate() - 1); $picker.datepicker('setDate', date); $("#selectedDay").val($("#datepicker").datepicker('getDate').getDate()); $("#selectedMonth").val($("#datepicker").datepicker('getDate').getMonth() + 1); $("#selectedYear").val($("#datepicker").datepicker('getDate').getFullYear()); $("#eventsListForm").submit(); }
function getNextDay() { $("#reload").val("true"); var $picker = $("#datepicker"); var date = new Date($picker.datepicker('getDate')); date.setDate(date.getDate() + 1); $picker.datepicker('setDate', date); $("#selectedDay").val($("#datepicker").datepicker('getDate').getDate()); $("#selectedMonth").val($("#datepicker").datepicker('getDate').getMonth() + 1); $("#selectedYear").val($("#datepicker").datepicker('getDate').getFullYear()); $("#eventsListForm").submit(); }
function YearOrDaySearchFromEventsPage() { $("#reload").val("true"); if ($('input[id=yearRadio]:checked').length > 0) { window.location = "/chroniques/annee/" + $("#searchedYear").val().toString() + ".html"; } else { var day = $("#searchedDay").val(); var month = $("#searchedMonth").val(); if (day != 0 && month != 0) { var $picker = $("#datepicker"); var date = new Date($("#datepicker").datepicker('getDate').getFullYear(), month - 1, day); $picker.datepicker('setDate', date); $("#selectedDay").val(day); $("#selectedMonth").val(month); $("#selectedYear").val($("#datepicker").datepicker('getDate').getFullYear()); $("#eventsListForm").submit(); } } }
function nationalDays(date) { dmy = date.getDate() + "-" + (date.getMonth() + 1) + "-" + date.getFullYear(); if ($.inArray(dmy, disabledDays) < 0) { return [true]; } return [false]; } function SetNewDate() { initDatePicker(); $("#searchedMonth").val($("#selectedMonth").val()); $("#searchedDay").val($("#selectedDay").val()); $("#reload").val("false"); closeLoading(); }
function initDatePicker() { $("#datepicker").datepicker({ defaultDate: new Date($("#selectedYear").val(), $("#selectedMonth").val() - 1, $("#selectedDay").val()), inline: true, monthNames: ["Janvier", "FÃ©vrier", "Mars", "Avril", "Mai", "Juin", "Juillet", "AoÃ»t", "Septembre", "Octobre", "Novembre", "DÃ©cembre"], beforeShowDay: nationalDays, onSelect: function (dateText, inst) { var startDate = new Date(dateText); $("#selectedDay").val(startDate.getDate()); $("#selectedMonth").val(startDate.getMonth() + 1); $("#selectedYear").val(startDate.getFullYear()); $("#prevDay").val("false"); $("#nextDay").val("false"); $("#eventsListForm").submit(); }, onChangeMonthYear: function (year, month, inst) { $.ajax({ url: appPath + "/HomePage.mvc/GetDisabledDays", data: { gedcomId: $("#ddlTrees").val(), userId: $("#userId").val(), selectedYear: year, selectedMonth: month }, async: false, type: 'POST', success: function (msg) { disabledDays = msg; } }); } }); }
//#endregion Function Document detail page

/*movingboxes*/
; (function (d) { d.movingBoxes = function (h, i) { var c, a = this; a.$el = d(h).addClass("mb-slider"); a.el = h; a.$el.data("movingBoxes", a); a.init = function () { a.options = c = d.extend({}, d.movingBoxes.defaultOptions, i); a.$el.wrap('<div class="movingBoxes mb-wrapper"><div class="mb-scroll" /></div>'); a.$window = a.$el.parent(); a.$wrap = a.$window.parent().prepend('<a class="mb-scrollButtons mb-left"></a>').append('<a class="mb-scrollButtons mb-right"></a><div class="mb-left-shadow"></div><div class="mb-right-shadow"></div>'); a.$panels = a.$el.children().addClass("mb-panel"); a.runTime = d(".mb-slider").index(a.$el) + 1; a.regex = RegExp("slider" + a.runTime + "=(\\d+)", "i"); a.initialized = !1; a.currentlyMoving = !1; a.curPanel = c.initAnimation ? 1 : a.getHash() || c.startPanel; a.width = c.width ? parseInt(c.width, 10) : a.$el.width(); a.pWidth = c.panelWidth ? 2 >= c.panelWidth ? c.panelWidth * a.width : c.panelWidth : a.$panels.eq(0).width(); a.$left = a.$wrap.find(".mb-left").click(function () { a.goBack(); return !1 }); a.$right = a.$wrap.find(".mb-right").click(function () { a.goForward(); return !1 }); a.update(!1); d(window).load(function () { a.update() }); a.$el.delegate(".mb-panel", "click", function (b) { d(this).hasClass(c.currentPanel) || (b.preventDefault(), a.change(a.$panels.index(d(this)) + a.adj, {}, !0)) }); a.$wrap.click(function () { a.$wrap.hasClass("mb-active-slider") || a.active() }); a.$panels.delegate("a", "focus", function (b) { b.preventDefault(); b = a.$panels.index(d(this).closest(".mb-panel")) + a.adj; b !== a.curPanel && a.change(b, {}, !0) }); d(document).keyup(function (b) { if (!b.target.tagName.match("TEXTAREA|INPUT|SELECT")) switch (b.which) { case 39: case 32: a.$wrap.is(".mb-active-slider") && a.goForward(); break; case 37: a.$wrap.is(".mb-active-slider") && a.goBack() } }); d.each(["preinit", "initialized", "initChange", "beforeAnimation", "completed"], function (b, f) { d.isFunction(c[f]) && a.$el.bind(f + ".movingBoxes", c[f]) }); a.curPanel = a.getHash() || c.startPanel; a.$el.trigger("preinit.movingBoxes", [a, a.curPanel]); setTimeout(function () { a.change(a.curPanel, function () { a.initialized = !0; a.$el.trigger("initialized.movingBoxes", [a, a.curPanel]) }) }, 2 * c.speed) }; a.update = function (b, f) { a.$el.children(".cloned").remove(); a.$panels = a.$el.children(); a.adj = c.wrap && 1 < a.$panels.length ? 0 : 1; a.width = c.width ? parseInt(c.width, 10) : a.width; a.$wrap.css("width", a.width); c.wrap && 1 < a.$panels.length && (a.$el.prepend(a.$panels.filter(":last").clone().addClass("cloned")), a.$el.append(a.$panels.filter(":first").clone().addClass("cloned")), a.$el.find(".cloned").each(function () { d(this).find("a,input,textarea,select,button,area").removeAttr("name").attr("disabled", "disabled"); d(this).find("[id]").andSelf().removeAttr("id") })); a.$panels = a.$el.children().addClass("mb-panel").css("margin", 0).each(function () { d(this).find(".mb-inside").length === 0 && d(this).wrapInner('<div class="mb-inside" />') }); a.totalPanels = a.$panels.filter(":not(.cloned)").length; a.curWidth = c.panelWidth ? 2 >= c.panelWidth ? c.panelWidth * a.width : c.panelWidth : a.pWidth; a.regWidth = a.curWidth * c.reducedSize; a.$panels.css({ width: a.curWidth, fontSize: "1em" }); a.$panels.eq(a.curPanel - a.adj).addClass(c.currentPanel); a.heights = a.$panels.map(function (a, b) { return d(b).outerHeight(true) }).get(); a.returnToNormal(a.curPanel, 0); a.growBigger(a.curPanel, 0, b); a.updateArrows(a.curPanel); a.$el.css({ position: "absolute", width: (a.curWidth + 100) * a.$panels.length + (a.width - a.curWidth) / 2, height: Math.max.apply(this, a.heights) + 10 }); a.$window.css({ height: c.fixedHeight ? Math.max.apply(this, a.heights) : a.heights[a.curPanel - a.adj] }); a.$panels.eq(0).css({ "margin-left": (a.width - a.curWidth) / 2 }); a.buildNav(); a.change(a.curPanel, f, b) }; a.buildNav = function () { a.$nav ? a.$nav.find(".mb-links").empty() : a.$nav = d('<div class="mb-controls"><span class="mb-links"></span></div>').appendTo(a.$wrap); if (c.buildNav && 1 < a.totalPanels) { var b, f, e = "", g; a.$panels.filter(":not(.cloned)").each(function (h) { f = h + 1; e = '<a class="mb-link mb-panel' + f + '" href="#"></a>'; g = d(e); d.isFunction(c.navFormatter) ? (b = c.navFormatter(f, d(this)), "string" === typeof b ? g.html(b) : g = d("<a/>", b)) : g.html(f); g.appendTo(a.$nav.find(".mb-links")).addClass("mb-link mb-panel" + f).data("index", f) }); a.$nav.find("a.mb-link").bind("click", function () { a.change(d(this).data("index")); return !1 }) } }; a.returnToNormal = function (b, d) { var e = a.$panels.not(":eq(" + (b - a.adj) + ")").removeClass(c.currentPanel); 1 === c.reducedSize ? e.css({ width: a.regWidth }) : e.stop(!0, !1).animate({ width: a.regWidth, fontSize: c.reducedSize + "em" }, 0 === d ? 0 : c.speed) }; a.growBigger = function (b, d, e) { var g = a.$panels.eq(b - a.adj); 1 === c.reducedSize ? (g.css({ width: a.curWidth }), setTimeout(function () { a.completed(b, e) }, 0 === d ? 0 : c.speed)) : g.stop(!0, !1).animate({ width: a.curWidth, fontSize: "1em" }, 0 === d ? 0 : c.speed, function () { a.completed(b, e) }) }; a.completed = function (b, d) { var e = a.$panels.eq(b - a.adj); e.hasClass("cloned") || e.addClass(c.currentPanel); !1 !== d && a.$el.trigger("completed.movingBoxes", [a, b]) }; a.goForward = function (b) { a.initialized && a.change(a.curPanel + 1, b) }; a.goBack = function (b) { a.initialized && a.change(a.curPanel - 1, b) }; a.change = function (b, f, e) { if (1 > a.totalPanels) "function" === typeof f && f(a); else { var g, h, i = !1; h = (e = !1 !== e) ? c.speed : 0; b = /^[#|.]/.test(b) && d(b).length ? d(b).closest(".mb-panel").index() + a.adj : parseInt(b, 10); a.initialized && e && (a.$wrap.hasClass("mb-active-slider") || a.active(), a.$el.trigger("initChange.movingBoxes", [a, b])); c.wrap && (b > a.totalPanels ? (i = !0, b = 1, a.returnToNormal(0, 0), a.growBigger(0, 0, !1), g = a.$panels.eq(0).position().left - (a.width - a.curWidth) / 2, a.$window.scrollLeft(g)) : 0 === b && (i = !1, b = a.totalPanels, a.growBigger(b + 1, 0, !1), g = a.$panels.eq(b + 1).position().left - (a.width - a.curWidth) / 2, a.$window.scrollLeft(g))); b < a.adj && (b = c.wrap ? a.totalPanels : 1); b > a.totalPanels - a.adj && (b = c.wrap ? 1 : a.totalPanels); if (!a.currentlyMoving || !a.initialized) { a.currentlyMoving = !c.stopAnimation; a.$curPanel = a.$panels.eq(b - a.adj); g = a.$curPanel.position().left - (a.width - a.curWidth) / 2; if (b > a.curPanel || i) g -= a.curWidth - a.regWidth; g = c.fixedHeight ? { scrollLeft: g } : { scrollLeft: g, height: a.heights[b - a.adj] }; a.curPanel = b; a.initialized && e && a.$el.trigger("beforeAnimation.movingBoxes", [a, b]); a.$window.scrollTop(0).stop(!0, !1).animate(g, { queue: !1, duration: h, easing: c.easing, complete: function () { a.initialized && a.$window.scrollTop(0); a.currentlyMoving = false; typeof f === "function" && f(a) } }); a.returnToNormal(b, h); a.growBigger(b, h, e); a.updateArrows(b); c.hashTags && a.initialized && a.setHash(b) } c.buildNav && a.$nav.length && a.$nav.find("a.mb-link").removeClass(c.currentPanel).eq(b - 1).addClass(c.currentPanel) } }; a.updateArrows = function (b) { a.$left.toggleClass(c.disabled, !c.wrap && b === a.adj); a.$right.toggleClass(c.disabled, !c.wrap && (b === a.totalPanels || 0 === a.totalPanels)) }; a.getHash = function () { var b = window.location.hash, f = b.indexOf("&"), e = b.match(a.regex); null === e && !/^#&/.test(b) && !/#!?\//.test(b) ? (b = b.substring(0, 0 <= f ? f : b.length), e = d(b).length && d(b).closest(".mb-slider")[0] === a.el ? d(b).closest(".mb-panel").index() + a.adj : null) : null !== e && (e = c.hashTags ? parseInt(e[1], 10) : null); return e }; a.setHash = function (b) { var c = "slider" + a.runTime + "=", d = window.location.hash; "undefined" !== typeof d && (window.location.hash = 0 < d.indexOf(c) ? d.replace(a.regex, c + b) : d + "&" + c + b) }; a.active = function () { d(".mb-active-slider").removeClass("mb-active-slider"); a.$wrap.addClass("mb-active-slider") }; a.currentPanel = function (b, c) { "undefined" !== typeof b && a.change(b, c); return a.curPanel }; a.init() }; d.movingBoxes.defaultOptions = { startPanel: 1, reducedSize: 0.8, fixedHeight: !1, speed: 500, initAnimation: !0, stopAnimation: !1, hashTags: !0, wrap: !1, buildNav: !1, navFormatter: null, easing: "swing", currentPanel: "current", tooltipClass: "tooltip", disabled: "disabled", preinit: null, initialized: null, initChange: null, beforeAnimation: null, completed: null }; d.fn.movingBoxes = function (h, i, c) { var a, b; return this.each(function () { b = d(this).data("movingBoxes"); (typeof h).match("object|undefined") ? b ? b.update() : new d.movingBoxes(this, h) : /\d/.test(h) && !isNaN(h) && b && (a = "number" === typeof h ? h : parseInt(d.trim(h), 10), 1 <= a && a <= b.totalPanels && b.change(a, i, c)) }) }; d.fn.getMovingBoxes = function () { return this.data("movingBoxes") } })(jQuery);

/*jquery.editinplace.js*/
(function ($) {
    $.fn.editInPlace = function (options) { var settings = $.extend({}, $.fn.editInPlace.defaults, options); assertMandatorySettingsArePresent(settings); preloadImage(settings.saving_image); return this.each(function () { var dom = $(this); if (dom.data('editInPlace')) return; dom.data('editInPlace', true); new InlineEditor(settings, dom).init(); }); };
    $.fn.editInPlace.defaults = { url: "", bg_over: "#ffc", bg_out: "transparent", hover_class: "", show_buttons: false, save_button: '<button class="inplace_save btn">Soumettre</button>', cancel_button: '<button class="inplace_cancel btn">Annuler</button>', params: "", field_type: "text", default_text: "", use_html: false, textarea_rows: 10, textarea_cols: 25, select_text: "Choose new value", select_options: "", text_size: null, saving_text: undefined, saving_image: "", saving_animation_color: 'transparent', value_required: false, element_id: "element_id", update_value: "update_value", original_value: 'original_value', original_html: "original_html", save_if_nothing_changed: false, on_blur: "save", cancel: "", callback: null, callback_skip_dom_reset: false, success: null, error: null, error_sink: function (idOfEditor, errorString) { alert(errorString); }, preinit: null, postclose: null, delegate: null };
    var delegateExample = { shouldOpenEditInPlace: function (aDOMNode, aSettingsDict, triggeringEvent) { }, willOpenEditInPlace: function (aDOMNode, aSettingsDict) { }, didOpenEditInPlace: function (aDOMNode, aSettingsDict) { }, shouldCloseEditInPlace: function (aDOMNode, aSettingsDict, triggeringEvent) { }, willCloseEditInPlace: function (aDOMNode, aSettingsDict) { }, didCloseEditInPlace: function (aDOMNode, aSettingsDict) { }, missingCommaErrorPreventer: '' };
    function InlineEditor(settings, dom) { this.settings = settings; this.dom = dom; this.originalValue = null; this.didInsertDefaultText = false; this.shouldDelayReinit = false; };
    $.extend(InlineEditor.prototype, {
        init: function () { this.setDefaultTextIfNeccessary(); this.connectOpeningEvents(); },
        reinit: function () { if (this.shouldDelayReinit) return; this.triggerCallback(this.settings.postclose, /* DEPRECATED in 2.1.0 */this.dom); this.triggerDelegateCall('didCloseEditInPlace'); this.markEditorAsInactive(); this.connectOpeningEvents(); },
        setDefaultTextIfNeccessary: function () { if ('' !== this.dom.html()) return; this.dom.html(this.settings.default_text); this.didInsertDefaultText = true; },
        connectOpeningEvents: function () { var that = this; this.dom.bind('mouseenter.editInPlace', function () { that.addHoverEffect(); }).bind('mouseleave.editInPlace', function () { that.removeHoverEffect(); }).bind('click.editInPlace', function (anEvent) { that.openEditor(anEvent); }); },
        disconnectOpeningEvents: function () { this.dom.unbind('.editInPlace'); },
        addHoverEffect: function () { if (this.settings.hover_class) this.dom.addClass(this.settings.hover_class); else this.dom.css("background-color", this.settings.bg_over); },
        removeHoverEffect: function () { if (this.settings.hover_class) this.dom.removeClass(this.settings.hover_class); else this.dom.css("background-color", this.settings.bg_out); },
        openEditor: function (anEvent) { if (!this.shouldOpenEditor(anEvent)) return; this.disconnectOpeningEvents(); this.removeHoverEffect(); this.removeInsertedDefaultTextIfNeccessary(); this.saveOriginalValue(); this.markEditorAsActive(); this.replaceContentWithEditor(); this.setInitialValue(); this.workAroundMissingBlurBug(); this.connectClosingEventsToEditor(); this.triggerDelegateCall('didOpenEditInPlace'); },
        shouldOpenEditor: function (anEvent) { if (this.isClickedObjectCancelled(anEvent.target)) return false; if (false === this.triggerCallback(this.settings.preinit, /* DEPRECATED in 2.1.0 */this.dom)) return false; if (false === this.triggerDelegateCall('shouldOpenEditInPlace', true, anEvent)) return false; return true; },
        removeInsertedDefaultTextIfNeccessary: function () { if (!this.didInsertDefaultText || this.dom.html() !== this.settings.default_text) return; this.dom.html(''); this.didInsertDefaultText = false; },
        isClickedObjectCancelled: function (eventTarget) { if (!this.settings.cancel) return false; var eventTargetAndParents = $(eventTarget).parents().andSelf(); var elementsMatchingCancelSelector = eventTargetAndParents.filter(this.settings.cancel); return 0 !== elementsMatchingCancelSelector.length; },
        saveOriginalValue: function () { if (this.settings.use_html) this.originalValue = this.dom.html(); else this.originalValue = trim(this.dom.text()); },
        restoreOriginalValue: function () { this.setClosedEditorContent(this.originalValue); },
        setClosedEditorContent: function (aValue) { if (this.settings.use_html) this.dom.html(aValue); else this.dom.text(aValue); },
        workAroundMissingBlurBug: function () { var ourInput = this.dom.find(':input'); this.dom.parents(':last').find('.editInPlace-active :input').not(ourInput).blur(); },
        replaceContentWithEditor: function () { var buttons_html = (this.settings.show_buttons) ? this.settings.save_button + ' ' + this.settings.cancel_button : ''; var editorElement = this.createEditorElement(); this.dom.html('<form class="inplace_form" style="display: inline; margin: 0; padding: 0;"></form>').find('form').append(editorElement).append(buttons_html); },
        createEditorElement: function () { if (-1 === $.inArray(this.settings.field_type, ['text', 'textarea', 'select'])) throw "Unknown field_type <fnord>, supported are 'text', 'textarea' and 'select'"; var editor = null; if ("select" === this.settings.field_type) editor = this.createSelectEditor(); else if ("text" === this.settings.field_type) editor = $('<input type="text" ' + this.inputNameAndClass() + ' size="' + this.settings.text_size + '" />'); else if ("textarea" === this.settings.field_type) editor = $('<textarea ' + this.inputNameAndClass() + ' rows="' + this.settings.textarea_rows + '" ' + ' cols="' + this.settings.textarea_cols + '" />'); return editor; },
        setInitialValue: function () { var initialValue = this.triggerDelegateCall('willOpenEditInPlace', this.originalValue); var editor = this.dom.find(':input'); editor.val(initialValue); if (editor.val() !== initialValue) editor.val(''); },
        inputNameAndClass: function () { return ' name="inplace_value" class="inplace_field" '; },
        createSelectEditor: function () { var editor = $('<select' + this.inputNameAndClass() + '>' + '<option disabled="true" value="">' + this.settings.select_text + '</option>' + '</select>'); var optionsArray = this.settings.select_options; if (!$.isArray(optionsArray)) optionsArray = optionsArray.split(','); for (var i = 0; i < optionsArray.length; i++) { var currentTextAndValue = optionsArray[i]; if (!$.isArray(currentTextAndValue)) currentTextAndValue = currentTextAndValue.split(':'); var value = trim(currentTextAndValue[1] || currentTextAndValue[0]); var text = trim(currentTextAndValue[0]); var option = $('<option>').val(value).text(text); editor.append(option); } return editor; },
        connectClosingEventsToEditor: function () { var that = this; function cancelEditorAction(anEvent) { that.handleCancelEditor(anEvent); return false; } function saveEditorAction(anEvent) { that.handleSaveEditor(anEvent); return false; } var form = this.dom.find("form"); form.find(".inplace_field").focus().select(); form.find(".inplace_cancel").click(cancelEditorAction); form.find(".inplace_save").click(saveEditorAction); if (!this.settings.show_buttons) { form.find(".inplace_field").blur(cancelEditorAction); if ($.browser.mozilla || $.browser.msie) this.bindSubmitOnEnterInInput(); } form.keyup(function (anEvent) { var escape = 27; if (escape === anEvent.which) return cancelEditorAction(); }); if ($.browser.safari) this.bindSubmitOnEnterInInput(); form.submit(saveEditorAction); },
        bindSubmitOnEnterInInput: function () { if ('textarea' === this.settings.field_type) return; var that = this; this.dom.find(':input').keyup(function (event) { var enter = 13; if (enter === event.which) return that.dom.find('form').submit(); }); },
        handleCancelEditor: function (anEvent) { if (false === this.triggerDelegateCall('shouldCloseEditInPlace', true, anEvent)) return; var enteredText = this.dom.find(':input').val(); enteredText = this.triggerDelegateCall('willCloseEditInPlace', enteredText); this.restoreOriginalValue(); if (hasContent(enteredText) && !this.isDisabledDefaultSelectChoice()) this.setClosedEditorContent(enteredText); this.reinit(); },
        handleSaveEditor: function (anEvent) { if (false === this.triggerDelegateCall('shouldCloseEditInPlace', true, anEvent)) return; var enteredText = this.dom.find(':input').val(); enteredText = this.triggerDelegateCall('willCloseEditInPlace', enteredText); if (this.isDisabledDefaultSelectChoice() || this.isUnchangedInput(enteredText)) { this.handleCancelEditor(anEvent); return; } if (this.didForgetRequiredText(enteredText)) { this.handleCancelEditor(anEvent); this.reportError("Error: You must enter a value to save this field"); return; } this.showSaving(enteredText); if (this.settings.callback) this.handleSubmitToCallback(enteredText); else this.handleSubmitToServer(enteredText); },
        didForgetRequiredText: function (enteredText) { return this.settings.value_required && ("" === enteredText || undefined === enteredText || null === enteredText); },
        isDisabledDefaultSelectChoice: function () { return this.dom.find('option').eq(0).is(':selected:disabled'); },
        isUnchangedInput: function (enteredText) { return !this.settings.save_if_nothing_changed && this.originalValue === enteredText; },
        showSaving: function (enteredText) { if (this.settings.callback && this.settings.callback_skip_dom_reset) return; var savingMessage = enteredText; if (hasContent(this.settings.saving_text)) savingMessage = this.settings.saving_text; if (hasContent(this.settings.saving_image)) savingMessage = $('<img />').attr('src', this.settings.saving_image).attr('alt', savingMessage); this.dom.html(savingMessage); },
        handleSubmitToCallback: function (enteredText) { this.enableOrDisableAnimationCallbacks(true, false); var newHTML = this.triggerCallback(this.settings.callback, /* DEPRECATED in 2.1.0 */this.id(), enteredText, this.originalValue, this.settings.params, this.savingAnimationCallbacks()); if (this.settings.callback_skip_dom_reset); else if (undefined === newHTML) { this.reportError("Error: Failed to save value: " + enteredText); this.restoreOriginalValue(); } else this.dom.html(newHTML); if (this.didCallNoCallbacks()) { this.enableOrDisableAnimationCallbacks(false, false); this.reinit(); } },
        handleSubmitToServer: function (enteredText) {
            var data = this.settings.update_value + '=' + encodeURIComponent(enteredText) + '&' + this.settings.element_id + '=' + this.dom.attr("id") + ((this.settings.params) ? '&' + this.settings.params : '') + '&' + this.settings.original_html + '=' + encodeURIComponent(this.originalValue) + '&' + this.settings.original_value + '=' + encodeURIComponent(this.originalValue);
            this.enableOrDisableAnimationCallbacks(true, false); this.didStartSaving(); var that = this; $.ajax({ url: that.settings.url, type: "POST", data: data, dataType: "html", complete: function (request) { that.didEndSaving(); }, success: function (html) { var new_text = html || that.settings.default_text; that.dom.html(new_text); that.triggerCallback(that.settings.success, html); }, error: function (request) { that.dom.html(that.originalHTML); if (that.settings.error) that.triggerCallback(that.settings.error, request); else that.reportError("Failed to save value: " + request.responseText || 'Unspecified Error'); } });
        },
        triggerCallback: function (aCallback) { if (!aCallback) return; var callbackArguments = Array.prototype.slice.call(arguments, 1); return aCallback.apply(this.dom[0], callbackArguments); },
        triggerDelegateCall: function (aDelegateMethodName, defaultReturnValue, optionalEvent) { if (!this.settings.delegate || !$.isFunction(this.settings.delegate[aDelegateMethodName])) return defaultReturnValue; var delegateReturnValue = this.settings.delegate[aDelegateMethodName](this.dom, this.settings, optionalEvent); return (undefined === delegateReturnValue) ? defaultReturnValue : delegateReturnValue; },
        reportError: function (anErrorString) { this.triggerCallback(this.settings.error_sink, /* DEPRECATED in 2.1.0 */this.id(), anErrorString); },
        id: function () { return this.dom.attr('id'); },
        markEditorAsActive: function () { this.dom.addClass('editInPlace-active'); },
        markEditorAsInactive: function () { this.dom.removeClass('editInPlace-active'); },
        savingAnimationCallbacks: function () { var that = this; return { didStartSaving: function () { that.didStartSaving(); }, didEndSaving: function () { that.didEndSaving(); } }; },
        enableOrDisableAnimationCallbacks: function (shouldEnableStart, shouldEnableEnd) { this.didStartSaving.enabled = shouldEnableStart; this.didEndSaving.enabled = shouldEnableEnd; },
        didCallNoCallbacks: function () { return this.didStartSaving.enabled && !this.didEndSaving.enabled; },
        assertCanCall: function (methodName) { if (!this[methodName].enabled) throw new Error('Cannot call ' + methodName + ' now. See documentation for details.'); },
        didStartSaving: function () { this.assertCanCall('didStartSaving'); this.shouldDelayReinit = true; this.enableOrDisableAnimationCallbacks(false, true); this.startSavingAnimation(); },
        didEndSaving: function () { this.assertCanCall('didEndSaving'); this.shouldDelayReinit = false; this.enableOrDisableAnimationCallbacks(false, false); this.reinit(); this.stopSavingAnimation(); },
        startSavingAnimation: function () { var that = this; this.dom.animate({ backgroundColor: this.settings.saving_animation_color }, 400).animate({ backgroundColor: 'transparent' }, 400, 'swing', function () { setTimeout(function () { that.startSavingAnimation(); }, 10); }); },
        stopSavingAnimation: function () { this.dom.stop(true).css({ backgroundColor: '' }); }, missingCommaErrorPreventer: ''
    });
    function assertMandatorySettingsArePresent(options) { if (options.url || options.callback) return; throw new Error("Need to set either url: or callback: option for the inline editor to work."); }
    function preloadImage(anImageURL) { if ('' === anImageURL) return; var loading_image = new Image(); loading_image.src = anImageURL; }
    function trim(aString) { return aString.replace(/^\s+/, '').replace(/\s+$/, ''); }
    function hasContent(something) { if (undefined === something || null === something) return false; if (0 === something.length) return false; return true; }
})(jQuery);

function SelectAllTrees(type) { var allChecked = $("#checkbox" + type).is(':checked'); if (type == 1) { $('.' + "treeCheckbox").each(function () { this.checked = allChecked; }); } if (type == 2) { $('.' + "privilegeCheckbox").each(function () { this.checked = allChecked; }); } }
function OpenLoadingShowMore() { $("#loadingDiv").show(); }
function CloseLoadingShowMore() { $("#loadingDiv").hide(); }
function PaginateAlerts(page) {
    loadingInProgress();
    pageSizeAlerts = $("#pageSize").val();
    field = $("#sortField").val();
    sortDir = $("#sortDirection").val();
    $.post(appPath + "/Alerts.mvc/GetOrderedAlerts", { sortField: field, sortDirection: sortDir, days: $("#filtreDays").val(), page: page, pageSize: pageSizeAlerts },
        function (msg) {
            $("#divTableRows").html(msg.personHtml);
        }).complete(function () { $("#checkAlerts").attr('checked', false); closeLoading(); });
}
function ValidateDeleteAlerts() {
    var Ids = "";
    $(".alertCheckbox").each(function () { if (this.checked) { Ids = Ids + $(this).attr('id') + "_"; } });
    if (Ids == "") {
        $.ajax({
            url: appPath + "/Alerts.Mvc/DisplayMessage?message=" + "notSelected",
            type: 'GET',
            contentType: 'html',
            success: function (response) {
                $('#vide').empty();
                $('#vide').append(response);
                $('#linkError').click();
            },
            error: function () {

            }
        });
    } else {
        $.ajax({
            url: appPath + '/Alerts.Mvc/ConfirmDeleteAlerts',
            type: 'GET',
            contentType: 'html',
            success: function (response) {
                $('#supprimer').empty();
                $('#supprimer').append(response);
                $('#linkDeleteAlerts').click();
            },
            error: function () {

            }
        });
    }
}
function DeleteAlerts() {
    var Ids = ""; $(".alertCheckbox").each(function () {
        if (this.checked) { Ids = Ids + $(this).attr('id') + "_"; }
    });
    $.post(appPath + "/Alerts.mvc/DeleteAlerts", { idAlerts: Ids }, function (msg) {
        if (msg.RouteValues != null && msg.RouteValues.length == 2) {
            window.location = appPath + "/" + msg.RouteValues[1].Value + ".mvc/" + msg.RouteValues[0].Value;
        } else {
            $('#closeDeleteAlerts').click();
            window.location = appPath + "/Alerts.mvc/Alerts";
        }
    });
}
function SelectAllAlerts() {
    var allChecked = $("#checkAlerts").is(':checked');
    $(".alertCheckbox").each(function () { this.checked = allChecked; });
}
var sliderVar;
function PrevOrNext(counter) { PrevOrNextFunction(counter); sliderVar = setInterval(function () { PrevOrNextFunction(counter) }, 200); }

function PrevOrNextFunction(counter) { var startIndexValue = parseInt($("#carouselClicker").val()); if (counter == 1 && startIndexValue < parseInt($("#TotalNumberResults").val())) { startIndexValue++; $("#carouselClicker").val(startIndexValue); $("#StartIndex").val(startIndexValue); } if (counter == -1 && startIndexValue > 0) { startIndexValue--; $("#carouselClicker").val(startIndexValue); $("#StartIndex").val(startIndexValue); } $("#imageSlider").slider("option", "value", startIndexValue); }
var inscriptionSubmitted = false;

//#region Function Subscription / Login / Abonnement
function SubmitInscription() {
    if (firstRequestHasEnded) {
        $("#newUserSubmit").click();
    }
}
function ValidateNewInscription(containerClass) {
    if (!containerClass) {
        containerClass = '';
    } else {
        containerClass += ' ';
    }
    //var emailPattern = new RegExp(/^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))?\.?[a-zA-Z]{2,6}$/i); 
    var emailPattern = new RegExp(/^[-a-z0-9~!$%^&*_=+}{\'?]+(\.[-a-z0-9~!$%^&*_=+}{\'?]+)*@([a-z0-9_][-a-z0-9_]*(\.[-a-z0-9_]+)*\.(aero|arpa|biz|com|coop|edu|gov|info|int|mil|museum|name|net|org|pro|travel|mobi|[a-z][a-z])|([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}))(:[0-9]{1,5})?$/i);
    var emailPattern2 = new RegExp("[Ã€Ã‚Ã„ÃˆÃ‰ÃŠÃ‹ÃŽÃÃ”Å’Ã™Ã›ÃœÅ¸Ã Ã¢Ã¤Ã¨Ã©ÃªÃ«Ã®Ã¯Ã´Å“Ã¹Ã»Ã¼Ã¿Ã‡Ã§]");
    var error = false
    if ($(containerClass + "#InscriptionEmail").val().length == 0) {
        $(containerClass + "#InscriptionEmailValidationMessage").text("Merci de saisir votre adresse email");
        $(containerClass + "#InscriptionEmailValidationMessage").css("display", "block");
        error = true;
    } else if (!emailPattern.test($(containerClass + "#InscriptionEmail").val().toString()) || emailPattern2.test($(containerClass + "#InscriptionEmail").val().toString())) {
        $(containerClass + "#InscriptionEmailValidationMessage").text("Votre adresse email n'est pas valide");
        $(containerClass + "#InscriptionEmailValidationMessage").css("display", "block");
        error = true;
    } else { $(containerClass + "#InscriptionEmailValidationMessage").css("display", "none"); }
    if ($(containerClass + "#InscriptionPassword").val().length == 0) {
        $(containerClass + "#InscriptionPasswordValidationMessage").text("Merci de saisir votre mot de passe");
        $(containerClass + "#InscriptionPasswordValidationMessage").css("display", "block"); error = true;
    } else {
        if ($(containerClass + "#InscriptionPassword").val().indexOf(" ") > -1) {
            $(containerClass + "#InscriptionPasswordValidationMessage").text("Le caractÃ¨re espace est invalide");
            $(containerClass + "#InscriptionPasswordValidationMessage").css("display", "block"); error = true;
        } else
            if ($(containerClass + "#InscriptionPassword").val().indexOf("<") > -1) {
                $(containerClass + "#InscriptionPasswordValidationMessage").text("Le mot de passe ne doit pas contenir le caractÃ¨re ' < '.");
                $(containerClass + "#InscriptionPasswordValidationMessage").css("display", "block"); error = true;
            } else {
                if ($(containerClass + "#InscriptionPassword").val().length < 5) {
                    $(containerClass + "#InscriptionPasswordValidationMessage").text("Votre mot de passe doit faire plus de 5 caractÃ¨res");
                    $(containerClass + "#InscriptionPasswordValidationMessage").css("display", "block"); error = true;
                } else { $(containerClass + "#InscriptionPasswordValidationMessage").css("display", "none"); }
            }
    } if ($(containerClass + "#Country").val() == 0) {
        $(containerClass + "#InscriptionCountryValidationMessage").text("Merci de sÃ©lectionner un pays");
        $(containerClass + "#InscriptionCountryValidationMessage").css("display", "block"); error = true;
    } else { $(containerClass + "#InscriptionCountryValidationMessage").css("display", "none"); }
    if (error == true || !firstRequestHasEnded) {
        inscriptionSubmitted = false;
        return false;
    }
    // no errors and request will be made
    firstRequestHasEnded = false;
}
function ValidateEmailAndPassNew(containerClass) {
    if (!containerClass) {
        containerClass = '';
    } else {
        containerClass += ' ';
    }
    var error = false;
    var emailPattern = /^[a-zA-Z0-9._+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]+$/;
    if ($(containerClass + "#EmailFormPopup").val().length == 0) {
        $(containerClass + "#EmailValidationMessage").text("Merci de saisir votre adresse email");
        $(containerClass + "#EmailValidationMessage").css("display", "block"); error = true;
    }
        /*else if (!emailPattern.test($("#EmailFormPopup").val().toString())) {$("#EmailValidationMessage").text("Votre adresse email n'est pas valide"); $("#EmailValidationMessage").css("display","block"); error=true;} */
    else {
        $(containerClass + "#EmailValidationMessage").css("display", "none");
    }
    if ($(containerClass + "#PasswordFormPopup").val().length == 0) {
        $(containerClass + "#PasswordValidationMessage").text("Merci de saisir votre mot de passe");
        $(containerClass + "#PasswordValidationMessage").css("display", "block"); error = true;
    }
    else if ($(containerClass + "#PasswordFormPopup").val().indexOf("<") > -1) {
        $(containerClass + "#PasswordValidationMessage").text("Adresse email ou mot de passe incorrect.");
        $(containerClass + "#PasswordValidationMessage").css("display", "block"); error = true;
    }
    else {
        $(containerClass + "#PasswordValidationMessage").css("display", "none");
    }
    if (error == true || !firstRequestHasEnded) {
        return false;
    }
    // no errors and request will be made
    firstRequestHasEnded = false;
}
function ValidateEmailAndPass() { var emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}$/; var arrayErrors = new Array(); if ($("#EmailForm").val().length == 0) { arrayErrors[0] = "email"; } else if (!emailPattern.test($("#EmailForm").val().toString())) { arrayErrors[0] = "emailAt"; } if ($("#PasswordForm").val().length == 0) { arrayErrors[1] = "password"; } if (arrayErrors.length > 0) { jQuery.facebox({ ajax: 'Login.mvc/DisplayMessage?error=' + arrayErrors }); return false; } }

//#region Resources
var ErrorMessageResources = {
    emptyEmail: "Merci de saisir votre adresse email",
    emptyPassword: "Merci de saisir votre mot de passe",
    emptyRegistrationModel: "Merci de saisir votre adresse email et le mot de passe"
};
//#endregion Resources
function BasicInscription_ParseResult(content, container) {
    if (container && IsString(container)) {
        container += " ";
    } else {
        container = "";
    }
    var redirectUrl = window.location;
    if ($("#RedirectToImport").length && $("#RedirectToImport").val() != "") {
        redirectUrl = appPath + "/Menu.mvc/ImportGedcom";
    }

    var jsonData = Sys.Serialization.JavaScriptSerializer.deserialize(content.get_data());
    firstRequestHasEnded = true;
    switch (jsonData) {
        case "isFromFreeCollection":
            $("#closeOneConsultation").on("click", function () {
                $('#getConnectionBarButton').click();
            });
            document.getElementById('RedirectUrl1').click();
            break;
        case "refresh":
            CreateAnalytics("/genealogie/www.genealogie.com/inscription/validation", "/inscription/validation");
            if (redirectUrl != window.location) {
                $("#RedirectToImport").val("");
            }
            window.location = redirectUrl;
            break;
        case "validateSubscriptionReductionCode":
            CreateAnalytics("/genealogie/www.genealogie.com/inscription/validation", "/inscription/validation");
            pageOffersIsConnected = true;
            CloseFacebox();
            $("#getConnectionBarButton").click();
            break;
        case "validateSubscription":
            CreateAnalytics("/genealogie/www.genealogie.com/inscription/validation", "/inscription/validation");
            pageOffersIsConnected = true;
            submitContinuePayment();
            break;
        case "oneConsultation":
            $("#closeOneConsultation").on("click", function () { $('#getConnectionBarButton').click(); });
            SendEmailOneFreeConsultationFromLogin();
            DisplayNextStep('4', '6');
            $("#oneFreeConsultMailReSent").hide();
            break;
        case "15daysFreeAccesPage":
            ChooseTrialOption();
            break;
        case "SearchApi":
            if (redirectUrl != window.location) {
                $("#RedirectToImport").val("");
                window.location = redirectUrl;
            } else {
                RefreshConnexionBlock();
                pushInscriptionInDataLayer(1);
            }
            break;
        default:
            var email = $("#InscriptionEmail").val();
            if (jsonData && jsonData.TypeError != null) {
                if (jsonData.TypeError == 'error') {
                    inscriptionSubmitted = false;
                    var errorMessage = "";
                    switch (jsonData.Message) {
                        case "userExists":
                            errorMessage = "HÃ©, vous avez dÃ©jÃ  un compte chez nous ! Connectez-vous avec les identifiants de votre compte Filae.com";
                            break;
                        case "failToComplete":
                            errorMessage = "Page dâ€™erreur car câ€™est une problÃ¨me interne. Il faut connaitre lâ€™erreur dans le log des erreur";
                            break;
                        case "trashEmail":
                            var domain = email.replace(/.*@/, "");
                            if ($("#popup-1erdoc").is(":visible")) {
                                DisplayNextStep('2', '5');
                                $("#trashDomain").html(domain);
                            } else {
                                errorMessage = "Vous ne pouvez pas vous inscrire avec une adresse du type".concat(domain);
                            }
                            break;
                        case "nullModel":
                            errorMessage = ErrorMessageResources.emptyRegistrationModel;
                            break;
                        case "emptyEmail":
                            errorMessage = ErrorMessageResources.emptyEmail;
                            break;
                        case "emptyPassword":
                            errorMessage = ErrorMessageResources.emptyPassword;
                            break;
                        default:
                            errorMessage = "";
                    }
                    if (errorMessage) {
                        $(container + "#InscriptionEmailValidationMessage").text(errorMessage);
                        $(container + "#InscriptionEmailValidationMessage").css("display", "block");
                        return;
                    } else {
                        $(container + "#InscriptionEmailValidationMessage").text("");
                        $(container + "#InscriptionEmailValidationMessage").css("display", "none");
                    }
                } else {// set errors on 15 days free acces page, TypeError == "error-c"
                    if (jsonData.TypeError == 'error-15daysFreeAccesPage' && jsonData.Message == "userExists") {
                        $("#RegisterErrors").html("<p>HÃ©, vous avez dÃ©jÃ  un compte chez nous ! Connectez-vous avec les identifiants de votre compte Genealogie.com</p>");
                        $("#RegisterErrors").css("display", "block");
                        return;
                    }
                    if (jsonData.TypeError == 'error-15daysFreeAccesPage' && jsonData.Message == "failToComplete") {
                        $("#RegisterErrors").html("<p>Connexion avec la base de donnÃ©es a rencontrÃ© un problÃ¨me</p>");
                        $("#RegisterErrors").css("display", "block");
                        return;
                    }
                }
            }// else { $("#InscriptionEmailValidationMessage").css("display", "none"); }

            if (jsonData && jsonData.Url && jsonData.Url.length > 0) { window.location = jsonData.Url; return; } if ((jsonData.RouteValues != null) && (jsonData.RouteValues.length == 2)) { window.location = appPath + '/' + jsonData.RouteValues[1].Value + '.mvc/' + jsonData.RouteValues[0].Value; return; } if ((jsonData.RouteValues != null) && (jsonData.RouteValues.length == 3)) { window.location = appPath + '/' + jsonData.RouteValues[1].Value + '.mvc/' + jsonData.RouteValues[0].Value + "/" + jsonData.RouteValues[2].Value; return; } break;
    }
}
function SendEmailOneFreeConsultationFromLogin() {
    $.post(appPath + '/inscription.mvc/SendEmailOneFreeConsultation', {
        acteFirstName: $("#txtFirstName").val(),
        acteLastName: $("#txtName").val(),
        dateActe: $("#PeriodConsultationPopup").val(),
        placeActe: $("#PlaceConsultationPopup").val(),
        sourceActe: $("#Source").val(),
        imagePathActe: $("#ImagePath").val(),
        documentPath: $("#RedirectUrl").val()
    }, function (msg) {

    });
    $("#oneFreeConsultMailReSent").show();
}

function SendEmailOneFreeConsultationFromRegister() {
    $.post(appPath + '/inscription.mvc/SendEmailOneFreeConsultationRegistration', {
        acteFirstName: $("#txtFirstName").val(),
        acteLastName: $("#txtName").val(),
        dateActe: $("#PeriodConsultationPopup").val(),
        placeActe: $("#PlaceConsultationPopup").val(),
        sourceActe: $("#Source").val(),
        imagePathActe: $("#ImagePath").val()
    }, function (msg) {

    });
}
function validateFirstConsultation() { $.post(appPath + '/inscription.mvc/ValidateOneFreeConsultationToken', { token: $("#firstConsultationToken").val(), searchedLastName: $("#txtName").val(), searchedFirstName: $("#txtFirstName").val() }, function (msg) { if (msg == true) { document.getElementById('RedirectUrl1').click(); } else { $("#wrongCode").show(); } }); }
function resendActivationEmail() { $.post(appPath + '/homepage.mvc/ResendActivationEmail'); $("#emailVerificationMessage").text("Un email de validation a Ã©tÃ© envoyÃ©. S'il n'apparait pas dans votre boite de rÃ©ception, merci de vÃ©rifier dans votre dossier spam."); }
function SubmitChangePassword() {
    $("#Password").val($("#PasswordChange").val()); $("#PasswordRetype").val($("#PasswordRe").val()); $("#changePasswordSubmitButton").click();
}
function SubmitChangePasswordForgot() {
    if (isRequestFinished) {
        $("#PasswordForgot").val($("#PasswordChange").val()); $("#PasswordRetypeForgot").val($("#PasswordRe").val()); $("#changePasswordSubmitButton").click();
    }
}
function CheckRetypePassword() { if ($("#PasswordChange").val().length > 1 && $("#PasswordChange").val().indexOf(" ") > -1) { $("#changePasswordError").html("Mot de passe ne doit pas contenir le caractÃ¨re espace. "); $("#changePasswordError").css("display", "block"); return false; } if ($("#PasswordChange").val().length > 1 && $("#PasswordChange").val().indexOf("<") > -1) { $("#changePasswordError").html("Le mot de passe ne doit pas contenir le caractÃ¨re ' < '. "); $("#changePasswordError").css("display", "block"); return false; } if ($("#PasswordChange").val().length < 5 && $("#PasswordRe").val().length < 5) { $("#changePasswordError").html("Mot de passe doit comporter au moins 5 caractÃ¨res."); $("#changePasswordError").css("display", "block"); return false; } if ($("#PasswordChange").val() != $("#PasswordRe").val()) { $("#changePasswordError").html("Mot de passe diffÃ©rent."); $("#changePasswordError").css("display", "block"); return false; } $("#changePasswordError").css("display", "none"); $("#changePasswordBtn").prop('disabled', true); isRequestFinished = false; return true; }
function ChangePasswordActionResult(content) { isRequestFinished = true; var jsonData = Sys.Serialization.JavaScriptSerializer.deserialize(content.get_data()); if (jsonData && jsonData.TypeError != null && jsonData.TypeError == 'error') { $("#changePasswordBtn").prop('disabled', false); if (jsonData.Message == "differentPassword") { $("#changePasswordError").html("Mot de passe diffÃ©rent."); $("#changePasswordError").css("display", "block"); } else if (jsonData.Message == "sizeTooSmall") { $("#changePasswordError").html("Mot de passe doit comporter au moins 5 caractÃ¨res."); $("#changePasswordError").css("display", "block"); } else if (jsonData.Message == "userNotExist") { $("#changePasswordError").html("Utilisateur n'existe pas."); $("#changePasswordError").css("display", "block"); } else { $("#changePasswordError").html("Votre option pour changer mot de passe a expirÃ©."); $("#changePasswordError").css("display", "block"); } } else { $("#changePasswordError").css("display", "none"); if (jsonData && jsonData.Url && jsonData.Url.length > 0) { window.location = jsonData.Url; return; } if ((jsonData.RouteValues != null) && (jsonData.RouteValues.length == 2)) { window.location = appPath + '/' + jsonData.RouteValues[1].Value + '.mvc/' + jsonData.RouteValues[0].Value; return; } if ((jsonData.RouteValues != null) && (jsonData.RouteValues.length == 3)) { window.location = appPath + '/' + jsonData.RouteValues[1].Value + '.mvc/' + jsonData.RouteValues[0].Value + "/" + jsonData.RouteValues[2].Value; return; } } }
function SubmitOrderOffer() { $("#continuePaimentSecondFormSubmit").click(); }

function Login_ParseResultNew(content, container) {
    if (container && IsString(container)) {
        container += " ";
    } else {
        container = "";
    }
    var redirectUrl = window.location;
    if ($("#RedirectToImport").length && $("#RedirectToImport").val() != "") {
        redirectUrl = appPath + "/Menu.mvc/ImportGedcom";
    }
    var jsonData = Sys.Serialization.JavaScriptSerializer.deserialize(content.get_data());
    firstRequestHasEnded = true;
    switch (jsonData) {
        case "isFromFreeCollection":
            $("#closeOneConsultation").on("click", function () {
                $('#getConnectionBarButton').click();
            });
            //$('#closeOneConsultation').click();
            document.getElementById('RedirectUrl1').click();
            break;
        case "refresh":
            if (redirectUrl != window.location) {
                $("#RedirectToImport").val("");
            }
            window.location = redirectUrl;
            break;
        case "validateSubscriptionCheck":
            pageOffersIsConnected = true;
            $("#getConnectionBarButton").click();
            // makePostGetReductionFromCode();
            checkPayment();
            break;
        case "validateSubscriptionReductionCode":
            pageOffersIsConnected = true;
            CloseFacebox();
            $("#getConnectionBarButton").click();
            contiunueReduction();
            break;
        case "validateSubscription":
            pageOffersIsConnected = true;
            submitNewPayment(0, 0);
            break;
        case "viewSubscriptionInfo":
            window.location = appPath + '/Profil.mvc/SubscriptionInfo';
            break;
        case "oneConsultation":
            $("#closeOneConsultation").on("click", function () {

                $('#getConnectionBarButton').click();
            });
            SendEmailOneFreeConsultationFromLogin();
            DisplayNextStep('3', '6');
            break;
        case "oneFreeConsultationRedirect":

            $("#closeOneConsultation").on("click", function () {
                $('#getConnectionBarButton').click();
            });
            // $('#closeOneConsultation').click();
            //var is_chrome = navigator.userAgent.toLowerCase().indexOf('chrome') > -1;
            //if (is_chrome) {
            //    (function (a) {
            //        document.body.appendChild(a);
            //        a.setAttribute('href', decodeURIComponent($("#RedirectUrl").val()));
            //        a.dispatchEvent((function (e) {
            //            e.initMouseEvent("click", true, true, window, 0, 0, 0, 0, 0, true, false, true, false, 0, null);
            //            return e
            //        }(document.createEvent('MouseEvents'))))
            //    }(document.createElement('a')));
            //    window.blur();
            //} else {
            document.getElementById('RedirectUrl1').click();
            // }


            // window.open(decodeURIComponent($("#RedirectUrl").val()), '_blank');

            break;
        case "validateSubscriptionOneConsultation":
            $("#closeOneConsultation").on("click", function () {
                $('#getConnectionBarButton').click();
            });
            $('#closeOneConsultation').click();
            $('#payingPopup').click();
            break;
        case "errorOneFreeConsultation":
            $("#PasswordValidationMessageFreeC").text("Adresse email ou mot de passe incorrect");
            $("#PasswordValidationMessageFreeC").css("display", "block");
            break;
        case "offersFreeAccess":
            ChooseTrialOption();
            break;
        case "SearchApi":
            if (redirectUrl != window.location) {
                $("#RedirectToImport").val("");
                window.location = redirectUrl;
            } else {
                RefreshConnexionBlock();
            }
            break;
        default:
            if (jsonData && jsonData.TypeError != null) {
                if (jsonData.TypeError == 'error') {
                    $(container + "#PasswordValidationMessage").text("Adresse email ou mot de passe incorrect");
                    $(container + "#PasswordValidationMessage").css("display", "block");
                    return;
                }
                else {// erorr on free trial page login
                    $(container + "#LoginPasswordMessage").html("<p>Mot de passe incorrect</p>");
                    $(container + "#LoginPasswordMessage").css("display", "block");
                    return;
                }
            }
            else {
                if (jsonData && jsonData.Url && jsonData.Url.length > 0) {
                    window.location = appPath + jsonData.Url;
                    return;
                }
                if ((jsonData.RouteValues != null) && (jsonData.RouteValues.length == 2)) {
                    window.location = appPath + '/' + jsonData.RouteValues[1].Value + '.mvc/' + jsonData.RouteValues[0].Value;
                    return;
                }
                if ((jsonData.RouteValues != null) && (jsonData.RouteValues.length == 3)) {
                    window.location = appPath + '/' + jsonData.RouteValues[1].Value + '.mvc/' + jsonData.RouteValues[0].Value + "/" + jsonData.RouteValues[2].Value;
                    return;
                }
            }
            break;
    }
}
function reInitFacebox() { $('a[rel*=facebox]').facebox(); closeLoading(); }
function confirmDeleteEvent(eventId, eventType) {
    $.ajax({
        url: appPath + '/Homepage.mvc/ConfirmDeleteHomepageMessage?id=' + eventId + '&type=' + eventType,
        type: "GET",
        dataType: "html",
        success: function (data) {
            $("#supprimer").empty();
            $("#supprimer").html(data);

        },
    });
    //jQuery.facebox({ ajax: 'Homepage.mvc/ConfirmDeleteHomepageMessage?id=' + eventId + '&type=' + eventType });
}

function confirmDeleteEventHomePage(eventId, eventType) {
    $.post(appPath + '/Homepage.mvc/ConfirmDeleteHomepageEventMessage', {
        id: eventId,
        type: eventType
    }, function (msg) {
        $("#supprimerMessageHomePage").html(msg);
    });
}
function NewTree_ParseResult(content) { var jsonData = Sys.Serialization.JavaScriptSerializer.deserialize(content.get_data()); if (jsonData && jsonData.TypeError != null && jsonData.TypeError == 'error') { $('#submitNewTree').removeClass('disabled'); jQuery.facebox({ ajax: 'Login.mvc/DisplayMessage?error=' + jsonData.Message }); return; } if (jsonData && jsonData.Url && jsonData.Url.length > 0) { window.location = appPath + '/' + jsonData.Url; return; } if ((jsonData.RouteValues != null) && (jsonData.RouteValues.length == 2)) { window.location = appPath + '/' + jsonData.RouteValues[1].Value + '.mvc/' + jsonData.RouteValues[0].Value; return; } if ((jsonData.RouteValues != null) && (jsonData.RouteValues.length == 3)) { window.location = appPath + '/' + jsonData.RouteValues[1].Value + '.mvc/' + jsonData.RouteValues[0].Value + "/" + jsonData.RouteValues[2].Value; return; } }
function validateImportNewGedcom() { if ($("#fileUpload").val() != '') { $("#importGedcomForm").submit(); } }
function ReloadTree() { var tableId = 1; var field = $("#sortField" + tableId).val(); var sortDir = $("#sortDirection" + tableId).val(); var needReloading = $("#reloadList").val(); if (needReloading == "True") { TreesTableUpdateReloadTree(field, sortDir, tableId); } }
function TreesTableUpdateReloadTree(field, sortDir, id) { $.post(appPath + "/HomePage.mvc/GetOrderedTrees", { table: id, orderBy: field, ascending: sortDir }, function (msg) { $("#divTableRows" + id).html(msg.personHtml); }).complete(function () { $('a[id^=addAlert][rel*=facebox]').facebox(); $('a[id^=deleteAlert][rel*=facebox]').facebox(); $('a[id^=deleteTrees][rel*=facebox]').facebox(); }); }

function DisconnectUser() {
    sessionStorage.setItem('ShowTour', 'true');
    var currentTheme = $("#theme").val();
    $.post(appPath + "/Login.mvc/DisconnectUser/", { theme: currentTheme },
        function (msg) {
            ClearSessionStorage();
            if (currentTheme == "orangefg" && window.location.toString().indexOf("theme=orangefg") == -1) {
                var prmstr = window.location.search.substr(1); var prmarr = prmstr.split("&");
                if (prmarr.length > 1) { window.location = window.location + "&theme=orangefg"; } else { window.location = window.location + "?theme=orangefg"; }
            } else { window.location = window.location; }
        });
}
function DisconnectUserFromV2() {
    var currentTheme = $("#theme").val();
    $.ajax({
        type: 'POST',
        url: domainPath + "/Login.mvc/DisconnectUser/",
        contentType: "application/json",
        dataType: 'jsonp',
        crossDomain: true,
        data: data,
        success: fnSuccess,
        error: fnError
    });

    $.post(domainPath + "/Login.mvc/DisconnectUser/", { theme: currentTheme },
        function (msg) {
            ClearSessionStorage();
            window.location = window.location;
        });
}
function SubmitChangePasswordByUser() { $("#OldPassword").val($("#PasswordOld").val()); $("#Password").val($("#PasswordChange").val()); $("#PasswordRetype").val($("#PasswordRe").val()); $("#changePassSubmitButton").click(); }
function showProfileUpdateBlock() { if (document.getElementById("profileBlock").style.display == "none") { $("#profileBlock").show(100); } else { $("#profileBlock").hide(100); } };
function ChangePasswordByUserActionResult(content) {
    var jsonData = Sys.Serialization.JavaScriptSerializer.deserialize(content.get_data());
    if (jsonData && jsonData.TypeError != null && jsonData.TypeError == 'error') {
        if (jsonData.Message == "differentPassword") {
            $("#changePasswordError").html("Mot de passe diffÃ©rent.");
            $("#changePasswordError").css("display", "block");
        }
        else if (jsonData.Message == "sizeTooSmall") {
            $("#changePasswordError").html("Mot de passe doit comporter au moins 5 caractÃ¨res.");
            $("#changePasswordError").css("display", "block");
        }
        else if (jsonData.Message == "userNotExist") {
            $("#changePasswordError").html("Utilisateur n'existe pas.");
            $("#changePasswordError").css("display", "block");
        }
        else if (jsonData.Message == "oldPasswordWrong") {
            $("#changePasswordError").html("Mot de passe incorrect");
            $("#changePasswordError").css("display", "block");
        }
        else if (jsonData.Message == "errorinDb") {
            $("#changePasswordError").html("Quelque chose s'est mal veuillez rÃ©essayer plus");
            $("#changePasswordError").css("display", "block");
        }
        else {
            $("#changePasswordError").html("Votre option pour changer mot de passe a expirÃ©.");
            $("#changePasswordError").css("display", "block");
        }
    }
    else {
        $("#changePasswordError").css("display", "none");
        if (jsonData && jsonData.Url && jsonData.Url.length > 0) {
            window.location = jsonData.Url;
            return;
        }
        if ((jsonData.RouteValues != null) && (jsonData.RouteValues.length == 2)) {
            window.location = appPath + '/' + jsonData.RouteValues[1].Value + '.mvc/' + jsonData.RouteValues[0].Value;
            return;
        }
        if ((jsonData.RouteValues != null) && (jsonData.RouteValues.length == 3)) {
            window.location = appPath + '/' + jsonData.RouteValues[1].Value + '.mvc/' + jsonData.RouteValues[0].Value + "/" + jsonData.RouteValues[2].Value;
            return;
        }
    }
}
function SubmitChangeEmailByUser() { $("#PasswordForEmail").val($("#PasswordForEmail1").val()); $("#EmailNew").val($("#EmailNew1").val()); $("#changeEmailSubmitButton").click(); }

function CheckEmail() {
    //var emailPattern = new RegExp(/^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))?\.?[a-zA-Z]{2,6}$/i); 
    var emailPattern = new RegExp(/^[-a-z0-9~!$%^&*_=+}{\'?]+(\.[-a-z0-9~!$%^&*_=+}{\'?]+)*@([a-z0-9_][-a-z0-9_]*(\.[-a-z0-9_]+)*\.(aero|arpa|biz|com|coop|edu|gov|info|int|mil|museum|name|net|org|pro|travel|mobi|[a-z][a-z])|([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}))(:[0-9]{1,5})?$/i);
    var emailPattern2 = new RegExp("[Ã€Ã‚Ã„ÃˆÃ‰ÃŠÃ‹ÃŽÃÃ”Å’Ã™Ã›ÃœÅ¸Ã Ã¢Ã¤Ã¨Ã©ÃªÃ«Ã®Ã¯Ã´Å“Ã¹Ã»Ã¼Ã¿Ã‡Ã§]");
    if (($("#EmailNew").val().length == 0) && ($("#EmailNew1").val().length == 0)) { $("#changeEmailError").html("Vous devez entrer une adresse email valide."); $("#changeEmailError").css("display", "block"); return false; }
    else if (!emailPattern.test($("#EmailNew").val().toString()) && !emailPattern.test($("#EmailNew1").val().toString()) && !emailPattern2.test($("#EmailNew").val().toString()) && !emailPattern2.test($("#EmailNew1").val().toString())) { $("#changeEmailError").html("Adresse email invalide. Vous doit entrez une adresse comme: nom@exemple.com"); $("#changeEmailError").css("display", "block"); return false; }
    if ($("#PasswordForEmail1").val().length < 5 && $("#PasswordForEmail1").val().length < 5) { $("#changeEmailError").html("Mot de passe doit comporter au moins 5 caractÃ¨res."); $("#changeEmailError").css("display", "block"); return false; } $("#changePasswordError").css("display", "none"); return true;
}
function ChangeEmailByUserActionResult(content) {
    var jsonData = Sys.Serialization.JavaScriptSerializer.deserialize(content.get_data()); if (jsonData && jsonData.TypeError != null && jsonData.TypeError == 'error') {
        if (jsonData.Message == "sameEmail") { $("#changeEmailError").html("Votre adresse email est la mÃªme qu'actuellement. Saisissez une autre adresse email pour la modifier"); $("#changeEmailError").css("display", "block"); } else if (jsonData.Message == "invalidEmail") { $("#changeEmailError").html("Adresse email invalide."); $("#changeEmailError").css("display", "block"); } else if (jsonData.Message == "passwordWrong") { $("#changeEmailError").html("Mot de passe incorrect"); $("#changeEmailError").css("display", "block"); }
        else if (jsonData.Message == "errorinDb") { $("#changeEmailError").html("Quelque chose s'est mal veuillez rÃ©essayer plus"); $("#changeEmailError").css("display", "block"); }
        else if (jsonData.Message == "emailExists") { $("#changeEmailError").html("Cet email est deja utilisÃ©"); $("#changeEmailError").css("display", "block"); }
        else { $("#changeEmailError").html("Votre option pour changer email a expirÃ©."); $("#changeEmailError").css("display", "block"); }
    }
    else { $("#changeEmailError").css("display", "none"); if (jsonData && jsonData.Url && jsonData.Url.length > 0) { window.location = jsonData.Url; return; } if ((jsonData.RouteValues != null) && (jsonData.RouteValues.length == 2)) { window.location = appPath + '/' + jsonData.RouteValues[1].Value + '.mvc/' + jsonData.RouteValues[0].Value; return; } if ((jsonData.RouteValues != null) && (jsonData.RouteValues.length == 3)) { window.location = appPath + '/' + jsonData.RouteValues[1].Value + '.mvc/' + jsonData.RouteValues[0].Value + "/" + jsonData.RouteValues[2].Value; return; } }
}
function CheckEmailFieldsInvite() {

    //var emailPattern = new RegExp(/^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?$/i);
    var emailPattern = new RegExp(/^[-a-z0-9~!$%^&*_=+}{\'?]+(\.[-a-z0-9~!$%^&*_=+}{\'?]+)*@([a-z0-9_][-a-z0-9_]*(\.[-a-z0-9_]+)*\.(aero|arpa|biz|com|coop|edu|gov|info|int|mil|museum|name|net|org|pro|travel|mobi|[a-z][a-z])|([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}))(:[0-9]{1,5})?$/i);
    var emailPattern2 = new RegExp("[Ã€Ã‚Ã„ÃˆÃ‰ÃŠÃ‹ÃŽÃÃ”Å’Ã™Ã›ÃœÅ¸Ã Ã¢Ã¤Ã¨Ã©ÃªÃ«Ã®Ã¯Ã´Å“Ã¹Ã»Ã¼Ã¿Ã‡Ã§]");
    var error = false;
    var countEmpty = 0;
    for (i = 0 ; i < 3 ; i++) {
        var emailAddress = $("#People_" + i + "__Email").val();
        var nameInvite = $("#People_" + i + "__Name").val();
        if (nameInvite.length != 0 && emailAddress.length == 0) {
            $("#errorMsg").text("Merci de saisir l'email pour " + nameInvite);
            $("#errorBlockInvite").css('display', 'block');
            return false;
        }
        else if (emailAddress.length > 0 && (!emailPattern.test(emailAddress.toString()) || emailPattern2.test(emailAddress.toString()))) {
            $("#errorMsg").text("Adresse email invalide: " + $("#People_" + i + "__Email").val());
            $("#errorBlockInvite").css('display', 'block');
            return false;
        }
        else if (emailAddress.length == 0) {
            countEmpty++;
        }
    }
    if (countEmpty == 3) {
        $("#errorMsg").text("Merci de saisir a moins une adresse email");
        $("#errorBlockInvite").css('display', 'block');
        return false;
    }
    return true;
}
function UnsubscribeEvent(content) { $(document).ajaxStop($.unblockUI); var jsonData = Sys.Serialization.JavaScriptSerializer.deserialize(content.get_data()); if (jsonData == "closeFacebox") { closeFacebox(); window.location = window.location; } if (jsonData == "errorDelete") { $("#errorMessages").html("OpÃ©ration de suppression a Ã©chouÃ©"); $("#deleteEvent").attr("enabled", "enabled"); $("#deleteEvent").removeAttr("disabled", "disabled"); return false; } }
function SubmitUnsubscribeForm() { $("#unsubscribeSubmit").click(); }

//#region Function Print Assistant
function PrintAssistant_ChangeIndividListByLetter(idGedcom, letter) {
    PrintAssistant_GetPersonsList(idGedcom, letter);
    var tabId = "ltab" + letter;
    $("li[class='active']").toggleClass('').removeClass('active');
    $("li[id='" + tabId + "']").addClass('active');
    // $("a[class='ongletOff'][id='" + tabId + "']").toggleClass('').removeClass('active');

}
function PrintAssistant_GetPersonsList(idGedcom, letter, familyName, otherThenLetter) { document.body.style.cursor = 'wait'; $.post(appPath + "/MainLayout.mvc/GetPersonsByLetter", { idGedcom: idGedcom, letter: letter, familyName: familyName, otherThenLetter: otherThenLetter, page: 2 }, function (msg) { if (msg.htmlSource != null) { $("#prochesContenu_a").html(msg.htmlSource); $("div[class^='apanel']").hide(); $("p[class^='titlePerson_a aflip']").click(function () { var currentOrder = $(this).attr("class").substring(19); $(this).toggleClass("active_a").next().slideToggle("slow"); $("div[class^='apanel'][class!='apanel" + currentOrder + "']").hide(); $("p[class^='titlePerson_a aflip'][class!='titlePerson_a aflip" + currentOrder + " active_a']").removeClass('active_a'); }); document.body.style.cursor = 'default'; } else { alert("No records found"); document.body.style.cursor = 'default'; } }); }
//#endregion Function Print Assistant

//#region Function Facebook
function SubmitLogin(credentials) {
    $.ajax({
        url: appPath + "/login.mvc/facebooklogin?redirect=" + $("#Redirect").val(),
        type: "POST",
        data: credentials,
        error: function () {
            alert("error logging in to your facebook account.");
        },
        success: function (data) {
            switch (data) {
                case "validateSubscriptionReductionCode":
                    CreateAnalytics("/genealogie/www.genealogie.com/inscription/validation", "/inscription/validation");
                    pageOffersIsConnected = true;
                    $("#getConnectionBarButton").click();
                    break;
                case "validateSubscription":
                    CreateAnalytics("/genealogie/www.genealogie.com/inscription/validation", "/inscription/validation");
                    pageOffersIsConnected = true;
                    submitContinuePayment();
                    break;
                case "error":
                    // $('a[rel*=facebox]').facebox();
                    // $("#A1").show();
                    //  $("#A1").facebox();
                    //  jQuery.facebox({ ajax: 'Login.mvc/DisplayMessage?error=failToComplete' });
                    alert("error logging in to your facebook account.");
                    break;
                case "errorEmailNull":
                    alert("Connexion facebook impossible. Votre compte Facebook n'a pas d'adresse email associÃ©e.");
                    break;
                default:
                    CreateAnalytics("/genealogie/www.genealogie.com/inscription/validation", "/inscription/validation");
                    window.location = window.location;
            }
        }
    });
}
function facebookLogin() {
    FB.login(function (response) {
        if (response.status !== undefined) {
            if (response.status === 'connected') {
                var credentials = {
                    uid: response.authResponse.userID, accessToken: response.authResponse.accessToken
                };
                SubmitLogin(credentials);
            } else if (response.status === 'not_authorized') { // third option is status == 'unknown'
                // $("#A1").show();
                //$("#A1").facebox();
                alert("Login was not successful!");
            }
        }
    },
{
    scope: 'email,user_birthday,user_location,user_hometown'
});
}
//#endregion Function Facebook

function SubmitPayment() {
    // closeFacebox();
    // $("#popup-connexion").hide();
    if ($("#paymentServiceResponseContainer").html().toLowerCase().indexOf("<") > 0) {
        $("#paymentServiceResponseContainer > form").submit();
    } else {
        window.location = appPath + "/HomePage.mvc/HomePageConnected?viewSubscriptionInfo=True"
    }

}

function SubmitSubscriptionAnullmentNew() {
    var reason = "";
    for (var i = 1; i <= 6; i++) {
        if ($("#reason" + i).is(':checked')) {
            reason = reason + $("#reason" + i).val() + ",";
        }
    }
    if ($("#reason7").is(':checked')) {
        reason = reason + $("#reason7").val() + ":" + $("#otherSite").val() + ",";
    }
    if ($("#reason8").is(':checked')) {
        reason = reason + $("#reason8").val();
    }
    $("#Reason").val(reason);
    if ($("#WhaSubscriptionId").val() != '') {
        unsubscribeFromWha();
    }
    else {
        $("#SubmitSubscriptionAnullmentNew").submit();
    }
}
function unsubscribeResult() {
    // var jsonData = Sys.Serialization.JavaScriptSerializer.deserialize(content.get_data());
    // if (jsonData) { }
    window.location = window.location;
}
function unsubscribeFromWha() {
    //alert(userComment + $("#Comment").val());
    $.ajax({
        url: appPath + "/Inscription.mvc/UnsubscribeFromWha",
        type: "POST",
        dataType: "json",
        data: {
            UserId: $("#UserId").val(),
            SubscriptionId: $("#SubscriptionId").val(),
            Reason: $("#Reason").val() + $("#Comment").val(),
            WhaSubscriptionId: $("#WhaSubscriptionId").val()
        },
        error: function (response) {
            alert("Erreur");

        },
        success: function (response) {
            if (response == "success") {
                $("#SubmitSubscriptionAnullmentNew").submit();
            }
            else {
                alert("Erreur sur platforme internet+");
            }

        }
    });

}

function getReduction(i) {
    //if (pageOffersIsConnected == false) {
    //    jQuery.facebox({ ajax: 'Inscription.mvc/Inscription?redirect=validateSubscriptionReductionCode' });
    //} else {
        if (i == 1) {
            if ($("#reductionCode").val() != "") {
                $("#redMsgErrorShow").html("Ce code n'est pas correct. Veuillez saisir un nouveau code.");
                $(".alert-warning").hide();
                makePostGetReductionFromCode();
            }
            else {
                $("#redMsgErrorShow").html("Vous devez introduire un code de rÃ©duction.");
                $(".alert-warning").show();
            }
        }
        else {
            if (i == 2) {
                if ($("#votreAdherents").val() != "" && $("#votreAssociation").val() != "") {
                    // $("#redMsgErrorShowAdh").html("Ce code n'est pas correct. Veuillez saisir un nouveau code.");
                    $("#reductionCode").val("");
                    $(".alert-warning").css('display', 'none');
                    makePostGetReductionFromCode();

                }
                else {
                    $("#redMsgErrorShowAdh").html("Vous devez introduire une association et un code");
                    $(".alert-warning").css('display', 'block');
                }
            }
        }
    //}
}
function ModifyPaymentType() {
    $("#changeAtosSubscriptionInfoSubmit").click();
}
function refreshPage() {
    window.location = window.location;
}

function openPrintModal(cartid) {
    $("#CartId").val(cartid);
    $("#coordonnees").modal('show');
}
function PageSubmitAbonement() {
    var pathname = window.location.pathname;
    if (pathname.toLowerCase().indexOf("subscriptioninfo") >= 0) {
        refreshPage();
    }
    else {
        $("#subscriptionInfoFormPagesubmit").click();
    }
}
function PageSubmitAbonementFromOldViewer() {
    var pathname = window.location.pathname;
    if (pathname.toLowerCase().indexOf("subscriptioninfo") >= 0) {
        refreshPage();
    }
    else {
        $("#subscriptionInfoFormPagesubmit1").click();
    }
}
function SearchRight_EnableFirstConsultationPopup(idPerson, acteId, name, source, acteType, period, place, imagePathActe, redirectUrl) {
    if (firstRequestHasEnded) {
        firstRequestHasEnded = false;
        $.post(appPath + "/Inscription.mvc/FirstConsultation",
            { idPerson: idPerson, acteId: acteId, name: name, source: source, acteType: acteType, period: period, place: place, imagePathActe: imagePathActe, redirectUrl: redirectUrl },
            function (data) {
                //jQuery('#styleSearch').remove();
                $("#modalSubscription").html(data);
            }).always(function () {
                firstRequestHasEnded = true;
            });
    }
}
function SearchRight_EnableFreeCollectionConsultationPopup(idPerson, acteId, name, source, acteType, period, place, imagePathActe, redirectUrl) {
    $.post(appPath + "/Inscription.mvc/FreeCollectionConsultation",
        { idPerson: idPerson, acteId: acteId, name: name, source: source, acteType: acteType, period: period, place: place, imagePathActe: imagePathActe, redirectUrl: redirectUrl },
        function (data) {
            //jQuery('#styleSearch').remove();
            $("#modalSubscription").html(data);

        });
}
function DisplayNextStep(currentStep, nextStep) {
    var current = "#popup" + currentStep;
    var next = "#popup" + nextStep;
    var isConnected = $('#UserIsConnected').val();
    var sendCode = $("#SendCode").val();
    if (currentStep != '6' && sendCode != 0 && isConnected != 'true') {
        $(current).addClass('cache');
    }
    $(next).removeClass('cache');

    if (nextStep == 4) {
        $("#popup5").addClass('cache');
    }
    if (currentStep == 1 && nextStep == 6) {
        SendEmailOneFreeConsultationFromLogin();
    }
    if (nextStep == '2') {

        CreateAnalytics("/genealogie/www.genealogie.com/recherches/accueil", "Inscription/1ereConsultation/connexion");
        $("#EmailFreeC").focus();
    }
    if (nextStep == '6') {
        if (sendCode == '0') {
            $.post(appPath + '/inscription.mvc/InserSearchConsultation',
                { searchedLastName: $("#txtName").val(), searchedFirstName: $("#txtFirstName").val() },
                function () {
                    document.getElementById('RedirectUrl1').click();
                });

            CreateAnalytics("/genealogie/www.genealogie.com/recherches/accueil", "Inscription/1ereConsultation/code");
        }
    }
}
function pushInscriptionInDataLayer(data) {
    if (data === 1) {
        dataLayer.push({ 'event': 'inscription', });
        data = 0;
    }
}

//#endregion Function Subscription / Login / Abonnement

function ValidateEmailOneFreeConsultation() {
    var emailToTest = "";
    if ($("#EmailFreeC").val() != "") {
        emailToTest = $("#EmailFreeC").val();
    }
    else {
        emailToTest = $("#EmailTrash").val();
    }

    //var emailPattern = new RegExp(/^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))?\.?[a-zA-Z]{2,6}$/i);
    var emailPattern = new RegExp(/^[-a-z0-9~!$%^&*_=+}{\'?]+(\.[-a-z0-9~!$%^&*_=+}{\'?]+)*@([a-z0-9_][-a-z0-9_]*(\.[-a-z0-9_]+)*\.(aero|arpa|biz|com|coop|edu|gov|info|int|mil|museum|name|net|org|pro|travel|mobi|[a-z][a-z])|([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}))(:[0-9]{1,5})?$/i);
    var emailPattern2 = new RegExp("[Ã€Ã‚Ã„ÃˆÃ‰ÃŠÃ‹ÃŽÃÃ”Å’Ã™Ã›ÃœÅ¸Ã Ã¢Ã¤Ã¨Ã©ÃªÃ«Ã®Ã¯Ã´Å“Ã¹Ã»Ã¼Ã¿Ã‡Ã§]");
    var error = false;
    if (emailToTest.length == 0) {
        $("#InscriptionEmailValidationMessageFreeC").text("Merci de saisir votre adresse email");
        $("#InscriptionEmailValidationMessageFreeC").css("display", "block");
        error = true;
    } else if (!emailPattern.test(emailToTest.toString()) || emailPattern2.test(emailToTest.toString())) {
        $("#InscriptionEmailValidationMessageFreeC").text("Votre adresse email n'est pas valide");
        $("#InscriptionEmailValidationMessageFreeC").css("display", "block");
        DisplayNextStep('5', '2');
        error = true;
    } else {
        $("#InscriptionEmailValidationMessageFreeC").css("display", "none");
    }
    if (error != true) {
        $.ajax({
            url: appPath + "/Inscription.mvc/VerifyEmail",
            type: "GET",
            dataType: "json",
            data: {
                email: emailToTest
            },
            error: function (response) {
                alert(response.responseText);
            },
            success: function (response) {
                var email = emailToTest;
                if (response == "userExists") {
                    CreateAnalytics("/genealogie/www.genealogie.com/recherches/accueil", "Inscription/1ereConsultation/compte");
                    DisplayNextStep('2', '3');
                    DisplayNextStep('5', '3');
                    $("#EmailFormPopupFreeC").val(email);

                } else
                    if (response == "trashEmail") {
                        $("#EmailFreeC").val("");
                        var domain = email.replace(/.*@/, "");
                        DisplayNextStep('2', '5');
                        $("#trashDomain").html(domain);
                        CreateAnalytics("/genealogie/www.genealogie.com/recherches/accueil", "Inscription/1ereConsultation/trashmail");

                    } else {
                        CreateAnalytics("/genealogie/www.genealogie.com/recherches/accueil", "Inscription/1ereConsultation/inscription");
                        DisplayNextStep('2', '4');
                        $("#InscriptionEmailFreeC").val(email);
                    }
            }
        });
    }
}
function ValidateEmailFreeCollection() {

    var emailToTest = "";
    if ($("#EmailFreeC").val() != "") {
        emailToTest = $("#EmailFreeC").val();
    }
    else {
        emailToTest = $("#EmailTrash").val();
    }

    //var emailPattern = new RegExp(/^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?$/i);
    var emailPattern = new RegExp(/^[-a-z0-9~!$%^&*_=+}{\'?]+(\.[-a-z0-9~!$%^&*_=+}{\'?]+)*@([a-z0-9_][-a-z0-9_]*(\.[-a-z0-9_]+)*\.(aero|arpa|biz|com|coop|edu|gov|info|int|mil|museum|name|net|org|pro|travel|mobi|[a-z][a-z])|([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}))(:[0-9]{1,5})?$/i);
    var emailPattern2 = new RegExp("[Ã€Ã‚Ã„ÃˆÃ‰ÃŠÃ‹ÃŽÃÃ”Å’Ã™Ã›ÃœÅ¸Ã Ã¢Ã¤Ã¨Ã©ÃªÃ«Ã®Ã¯Ã´Å“Ã¹Ã»Ã¼Ã¿Ã‡Ã§]");
    var error = false;
    if (emailToTest.length == 0) {
        $("#InscriptionEmailValidationMessageFreeC").text("Merci de saisir votre adresse email");
        $("#InscriptionEmailValidationMessageFreeC").css("display", "block");
        error = true;
    } else if (!emailPattern.test(emailToTest.toString()) || emailPattern2.test(emailToTest.toString())) {
        $("#InscriptionEmailValidationMessageFreeC").text("Votre adresse email n'est pas valide");
        $("#InscriptionEmailValidationMessageFreeC").css("display", "block");
        DisplayNextStep('5', '2');
        error = true;
    } else {
        $("#InscriptionEmailValidationMessageFreeC").css("display", "none");
    }
    if (error != true) {
        $.ajax({
            url: appPath + "/Inscription.mvc/VerifyEmail",
            type: "GET",
            dataType: "json",
            data: {
                email: emailToTest
            },
            error: function (response) {
                alert(response.responseText);
            },
            success: function (response) {
                var email = emailToTest;
                if (response == "userExists") {
                    DisplayNextStepFreeCollection('2', '3');
                    DisplayNextStepFreeCollection('5', '3');
                    $("#EmailFormPopupFreeC").val(email);

                } else
                    if (response == "trashEmail") {
                        $("#EmailFreeC").val("");
                        var domain = email.replace(/.*@/, "");
                        DisplayNextStepFreeCollection('2', '5');
                        $("#trashDomain").html(domain);

                    } else {
                        DisplayNextStepFreeCollection('2', '4');
                        $("#InscriptionEmailFreeC").val(email);
                    }
            }
        });
    }
}
function DisplayNextStepFreeCollection(currentStep, nextStep) {
    var current = "#popup" + currentStep;
    var next = "#popup" + nextStep;
    $(current).addClass('cache');
    $(next).removeClass('cache');
    if (nextStep == 4) {
        $("#popup5").addClass('cache');
    }
    if (currentStep == 1 && nextStep == 6) {
        SendEmailOneFreeConsultationFromLogin();
    }
    if (nextStep == '2') {
        CreateAnalytics("/genealogie/www.genealogie.com/Inscription/accÃ¨s 14-18/pop-up", "Inscription/accÃ¨s 14-18/pop-up");
        $("#EmailFreeC").focus();
    }
    if (nextStep == '3' || nextStep == '4') {
        CreateAnalytics("/genealogie/www.genealogie.com /Inscription/accÃ¨s 14-18/inscription", "Inscription/accÃ¨s 14-18/inscriptione");
    }
}
function ValidatePasswordOneConsultation() {
    ValidateNewInscription();
    var password = $("#InscriptionPasswordFreeC").val();
    var cpassword = $("#CInscriptionPassword").val();
    err = false;
    if (password.length < 5) {
        $("#InscriptionPasswordValidationMessageFreeC").text("Votre mot de passe doit faire plus de 5 caractÃ¨res");
        $("#InscriptionPasswordValidationMessageFreeC").css("display", "block");
        return false;
    }
    $("#InscriptionPasswordValidationMessageFreeC").text('');
    $("#InscriptionPasswordValidationMessageFreeC").css("display", "none");
    if (password != cpassword) {
        $("#CInscriptionPasswordValidationMessage").text("Les deux mots de passe saisis ne sont pas identiques");
        $("#CInscriptionPasswordValidationMessage").css('display', 'block');
        return false;
    } else {
        $("#CInscriptionPasswordValidationMessage").css('display', 'none');
    }
    inscriptionSubmitted = true;
}
function ConfirmArchivageDocument(idActe, personId, newIdActe) {
    $.ajax({
        url: 'search.mvc/ConfirmArchivageDocument',
        type: 'GET',
        data: { idActe: idActe, idIndivid: personId, newIdActe: newIdActe },
        contentType: 'html',
        success: function (response) {
            $('#archiver').empty();
            $('#archiver').append(response);
        },
        error: function () {

        }
    });
}
function AttachArchive(archiveId, personId) {
    $.ajax({
        url: 'search.mvc/AttachArchive',
        type: 'GET',
        data: { archiveId: archiveId, individId: personId },
        contentType: 'html',
        success: function (response) {
            $('#liste-individus').empty();
            $('#liste-individus').append(response);
        },
        error: function () {

        }
    });
}
function SearchLeft_GetCategoryName(categId, categName) {
    var itemsInCategory = $('#fontCateg' + categId).html();
    SetCategoryName(categName + " " + itemsInCategory);
}
function AttachDocument(archiveId, personId, newIdActe) {
    $.ajax({
        url: 'search.mvc/AttachDocument',
        type: 'GET',
        data: { archiveId: archiveId, individId: personId, newIdActe: newIdActe },
        contentType: 'html',
        success: function (response) {
            $('#liste-individus').empty();
            $('#liste-individus').append(response);
        },
        error: function () {

        }
    });
}
function ValidateEmailAndPassNewFreeC() {
    var error = false;
    var emailPattern = /^[a-zA-Z0-9._+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]+$/;
    if ($("#EmailFormPopupFreeC").val().length == 0) {
        $("#EmailValidationMessageFreeC").text("Merci de saisir votre adresse email");
        $("#EmailValidationMessageFreeC").css("display", "block"); error = true;
    }
        /*else if (!emailPattern.test($("#EmailFormPopup").val().toString())) {$("#EmailValidationMessage").text("Votre adresse email n'est pas valide"); $("#EmailValidationMessage").css("display","block"); error=true;} */
    else {
        $("#EmailValidationMessageFreeC").css("display", "none");
    } if ($("#PasswordFormPopupFreeC").val().length == 0) {
        $("#PasswordValidationMessageFreeC").text("Merci de saisir votre mot de passe");
        $("#PasswordValidationMessageFreeC").css("display", "block"); error = true;
    } else {
        $("#PasswordValidationMessageFreeC").css("display", "none");
    } if (error == true) {
        return false;
    }
}
function GetArchivesInventoryPeriods(city, code) {
    $.ajax({
        url: 'search.mvc/ArchivesInventoryPeriodes',
        type: 'GET',
        data: { commune: city, departmentCode: code },
        contentType: 'html',
        success: function (response) {
            closeLoading();
            $('#archive').empty();
            $('#archive').append(response);
            $('#showArchive').click();
        },
        error: function () {

        }
    });
}

function ShowPrintModal(idPerson, randomNumber) {
    $.ajax({
        url: appPath + '/Print.mvc/PrintAction',
        type: 'GET',
        data: { idPerson: idPerson, randomNumber: randomNumber },
        contentType: 'html',
        success: function (response) {
            $('#imprimer-membre').empty();
            $('#imprimer-membre').append(response);
            $('#linkPrint').click();
        },
        error: function () {

        }
    });
}
function SubmitPrint(personId) {
    $.ajax({
        url: appPath + '/Print.mvc/Print/' + personId,
        type: 'GET',
    });
}
function ShowDeletePersonModal(person, randomNumber, pageRedirect, blocRedirect) {
    $.ajax({
        url: appPath + '/Person.mvc/ConfirmDeletePerson',
        type: 'GET',
        data: { personId: person, randomNumber: randomNumber, pageRedirect: pageRedirect, blocRedirect: blocRedirect },
        contentType: 'html',
        success: function (response) {
            $('#suppression').empty();
            $('#suppression').append(response);
            $('#linkDeletePerson').click();
        },
        error: function () {

        }
    });
}
function UploadPersonImageFromTree(personId, titleUpload, randomNumber, editMode, page, bloc) {
    $.ajax({
        url: appPath + '/Person.mvc/UploadImageView',
        type: 'GET',
        data: { idPerson: personId, editMode: editMode, page: page, title: titleUpload, randomNumber: randomNumber, bloc: bloc },
        contentType: 'html',
        success: function (response) {
            $('#ajout-media').empty();
            $('#ajout-media').append(response);
            $('#linkUploadPhoto').click();
        },
        error: function () {

        }
    });
}
function AddEvent(personId, randomNumber, page, bloc) {
    $.ajax({
        url: appPath + '/Event.mvc/AddEvent',
        type: 'GET',
        data: { idPerson: personId, page: page, randomNumber: randomNumber, bloc: bloc },
        contentType: 'html',
        success: function (response) {
            $('#ajout-evenement').empty();
            $('#ajout-evenement').append(response);
            $('#linkAddEvent').click();
        },
        error: function () {

        }
    });
}
function EditBirtday(personId, eventId, randomNumber, page, bloc) {
    $.ajax({
        url: appPath + '/Event.mvc/EditBirthDeath',
        type: 'GET',
        data: { idPerson: personId, idEvent: eventId, page: page, randomNumber: randomNumber, bloc: bloc },
        contentType: 'html',
        success: function (response) {
            $('#modif-naissance').empty();
            $('#modif-naissance').append(response);
            $('#linkEditBirthday').click();
        },
        error: function () {

        }
    });
}
function ConfirmDeleteEvents(personId, eventId, randomNumber, pageRedirect, bloc) {
    $.ajax({
        url: appPath + '/Event.mvc/ConfirmDeleteEvents',
        type: 'GET',
        data: { personId: personId, eventId: eventId, randomNumber: randomNumber, pageRedirect: pageRedirect, bloc: bloc },
        contentType: 'html',
        success: function (response) {
            $('#supprimer').empty();
            $('#supprimer').append(response);
            $('#linkDeleteEvent').click();
        },
        error: function () {

        }
    });
}
function EditEvent(personId, eventId, randomNumber, page, bloc) {
    $.ajax({
        url: appPath + '/Event.mvc/EditEvent',
        type: 'GET',
        data: { personId: personId, eventId: eventId, page: page, randomNumber: randomNumber, bloc: bloc },
        contentType: 'html',
        success: function (response) {
            $('#ajout-evenement').empty();
            $('#ajout-evenement').append(response);
            $('#linkAddEvent').click();
        },
        error: function () {

        }
    });
}
function EditMarriage(personId, eventId, randomNumber, page, bloc) {
    $.ajax({
        url: appPath + '/Event.mvc/EditMarriage',
        type: 'GET',
        data: { personId: personId, eventId: eventId, page: page, randomNumber: randomNumber, bloc: bloc },
        contentType: 'html',
        success: function (response) {
            $('#modif-naissance').empty();
            $('#modif-naissance').append(response);
            $('#linkEditBirthday').click();
        },
        error: function () {

        }
    });
}
function CreatePerson(type, idPerson, familyToUpdate, page, bloc, declareForInconnu) {
    $.ajax({
        url: appPath + '/PersonCreate.mvc/PersonCreate',
        type: 'GET',
        data: { type: type, idPerson: idPerson, page: page, familyToUpdate: familyToUpdate, bloc: bloc, declareForInconnu: declareForInconnu },
        contentType: 'html',
        success: function (response) {
            $('#ajout-union').empty();
            $('#ajout-union').append(response);
            $('#linkAddUnion').click();
        },
        error: function () {

        }
    });
}
function UpdateUnion(id, randomNumber, bloc) {
    $.ajax({
        url: appPath + '/Union.mvc/UpdateUnion',
        type: 'GET',
        data: { id: id, randomNumber: randomNumber, bloc: bloc },
        contentType: 'html',
        success: function (response) {

            if (response.responseText == "Removed Union") {
                location.reload();
            }
            else {
                $('#modif-union').empty();
                $('#modif-union').append(response);
                $('#linkUpdateUnion').click();
            }
        },
        error: function (xhr, status, error) {
        }
    });
}

//#region Function DocumentNote / DocumentMedia
function AddDocumentNote(idPerson, randomNumber, page, bloc) {
    $.ajax({
        url: appPath + '/Document.mvc/AddDocumentNote',
        type: 'GET',
        data: { idPerson: idPerson, page: page, randomNumber: randomNumber, bloc: bloc },
        contentType: 'html',
        success: function (response) {
            $('#ajout-note').empty();
            $('#ajout-note').append(response);
            $('#linkAddNote').click();
        },
        error: function () {

        }
    });
}
function ViewDocumentNote(documentId, randomNumber) {
    $.ajax({
        url: appPath + '/Document.mvc/ViewDocumentNote',
        type: 'GET',
        data: { documentId: documentId, randomNumber: randomNumber },
        contentType: 'html',
        success: function (response) {
            $('#ajout-note').empty();
            $('#ajout-note').append(response);
            $('#linkAddNote').click();
        },
        error: function () {

        }
    });
}
function EditDocumentNote(personId, documentId, randomNumber, pageRedirect, bloc) {
    $.ajax({
        url: appPath + '/Document.mvc/EditDocumentNote',
        type: 'GET',
        data: { personId: personId, documentId: documentId, pageRedirect: pageRedirect, bloc: bloc, randomNumber: randomNumber },
        contentType: 'html',
        success: function (response) {
            $('#ajout-note').empty();
            $('#ajout-note').append(response);
            $('#linkAddNote').click();
        },
        error: function () {

        }
    });
}
function ConfirmDeleteDocumentNote(personId, documentId, randomNumber, page, bloc) {
    $.ajax({
        url: appPath + '/Document.mvc/ConfirmDeleteDocumentNote',
        type: 'GET',
        data: { personId: personId, documentId: documentId, page: page, bloc: bloc, randomNumber: randomNumber },
        contentType: 'html',
        success: function (response) {
            $('#supprimer2').empty();
            $('#supprimer2').append(response);
            $('#linkDeleteDocument').click();
        },
        error: function () {

        }
    });
}
function ConfirmDeleteDocumentOficial(documentId) {
    $.ajax({
        url: appPath + '/Document.mvc/ConfirmDeleteDocumentOficial',
        type: 'GET',
        data: { documentId: documentId },
        contentType: 'html',
        success: function (response) {
            $('#supprimer2').empty();
            $('#supprimer2').append(response);
            $('#linkDeleteDocument').click();
        },
        error: function () {

        }
    });
}
function ConfirmDeleteDocumentMedia(personId, documentId, randomNumber, page, bloc) {
    $.ajax({
        url: appPath + '/Document.mvc/ConfirmDeleteDocumentMedia',
        type: 'GET',
        data: { personId: personId, documentId: documentId, page: page, bloc: bloc, randomNumber: randomNumber },
        contentType: 'html',
        success: function (response) {
            $('#supprimer2').empty();
            $('#supprimer2').append(response);
            $('#linkDeleteDocument').click();
        },
        error: function () {

        }
    });
}
function AddDocumentOficial() {
    $.ajax({
        url: appPath + '/Document.mvc/AddDocumentOficial',
        type: 'GET',
        contentType: 'html',
        success: function (response) {
            $('#ajout-doc').empty();
            $('#ajout-doc').append(response);
            $('#linkAddDoc').click();
        },
        error: function () {

        }
    });
}
function ViewDocumentMedia(documentId, randomNumber) {
    $.ajax({
        url: appPath + '/Document.mvc/ViewDocumentMedia',
        type: 'GET',
        data: { documentId: documentId, randomNumber: randomNumber },
        contentType: 'html',
        success: function (response) {
            $('#voir-photo').empty();
            $('#voir-photo').append(response);
            $('#linkViewPhoto').click();
        },
        error: function () {

        }
    });
}
//#endregion Function DocumentNote / DocumentMedia

function AlignModal(contentId) {
    //1 hide menu
    document.getElementById("responsiveMenu").className = "nav-arbre navbar-offcanvas offcanvas";

    //2 align body
    document.body.style.cursor = "auto";
}
function Confidentialite(idGedcom, randomNumber) {
    $.ajax({
        url: appPath + "/Menu.mvc/Confidentialite?idGedcom=" + idGedcom + "&" + randomNumber,
        type: 'GET',
        contentType: 'html',
        success: function (response) {
            $('#confidentialite').empty();
            $('#confidentialite').append(response);
            AlignModal("confidentialite");
            //$('#linkConfidentialite').click();
        },
        error: function () {

        }
    });
}
var updateGedcomNameIndividualSheet = function () { };
function PropertiesGedcom(idGedcom, randomNumber) {
    $.ajax({
        url: appPath + "/Menu.mvc/PropertiesGedcom?idGedcom=" + idGedcom + "&" + randomNumber,
        type: 'GET',
        contentType: 'html',
        success: function (response) {
            $('#propriete').empty();
            $('#propriete').append(response);
            AlignModal("propriete");
            $('#propriete #saveNameButton').on('click', function () {
                if ($('a#gedcomName').length > 0) {// individualSheet
                    updateGedcomNameIndividualSheet = function () { $('a#gedcomName').html($('#propriete #Name').val()); };
                }
                else if ($('span#gedcomName').length > 0) { // mainLayout 
                    updateGedcomNameIndividualSheet = function () { $('span#gedcomName').html($('#propriete #Name').val()); }
                }
            });
            //$('#linkPropriete').click();
        },
        error: function () {
        }
    });
}
function ImportExport(idGedcom, randomNumber) {
    $.ajax({
        url: appPath + "/Menu.mvc/ImportExport?idGedcom=" + idGedcom + "&" + randomNumber,
        type: 'GET',
        contentType: 'html',
        success: function (response) {
            $('#import-export').empty();
            $('#import-export').append(response);
            AlignModal("import-export");
            //$('#linkImportExport').click();
        },

        error: function () {
        }
    });
}
function TreeSharing(idGedcom, randomNumber) {
    $.ajax({
        url: appPath + "/Menu.mvc/TreeSharing?idGedcom=" + idGedcom + "&" + Math.random(),
        type: 'GET',
        contentType: 'html',
        success: function (response) {
            $('#partage').empty();
            $('#partage').append(response);
            AlignModal("partage");
            //$('#linkTreeSharing').click();
        },
        error: function () {
        }
    });
}
function FavoritePlace(idGedcom, randomNumber) {
    $.ajax({
        url: appPath + "/Menu.mvc/FavoritePlace?idGedcom=" + idGedcom + "&" + Math.random(),
        type: 'GET',
        contentType: 'html',
        success: function (response) {
            $('#lieu-favoris').empty();
            $('#lieu-favoris').append(response);
            AlignModal("lieu-favoris");
            //$('#linkFavoritePlace').click();
        },
        error: function () {
        }
    });
}
function TreeList(idGedcom, randomNumber) {
    $.ajax({
        url: appPath + "/Menu.mvc/TreeList?idGedcom=" + idGedcom + "&" + Math.random(),
        type: 'GET',
        contentType: 'html',
        success: function (response) {
            $('#liste-arbre').empty();
            $('#liste-arbre').append(response);
            AlignModal("liste-arbre");
        },
        error: function () {
        }
    });
}
function LiensParente(idPerson) {
    $.ajax({
        url: appPath + "/Person.mvc/LiensParente?idPerson=" + idPerson,
        type: 'GET',
        contentType: 'html',
        success: function (response) {
            $('#lien-parente').empty();
            $('#lien-parente').append(response);
            AlignModal("liste-arbre");
        },
        error: function () {
        }
    });
}
function DateConversionMobileModal() {
    AlignModal("convertisseur");
}
function AideMobileModal() {
    AlignModal("aide");
}
function ConfirmDeleteUnion(unioId, randomNumber, pageRedirect, blocRedirect) {
    $.ajax({
        url: appPath + "/Person.mvc/ConfirmDeleteUnion",
        type: 'GET',
        data: { unioId: unioId, randomNumber: randomNumber, pageRedirect: pageRedirect, blocRedirect: blocRedirect },
        contentType: 'html',
        success: function (response) {
            $('#supprimer').empty();
            $('#supprimer').append(response);
        },
        error: function () {
        }
    });
}
function AddEditAlert(alertId, day, random) {
    var url = appPath + "/Alerts.mvc/AddEditAlert/" + alertId;
    if (day != null) {
        url = url + "/" + day + "/alerts?random" + random;
    }
    $.ajax({
        url: url,
        type: 'GET',
        contentType: 'html',
        success: function (response) {
            if (response.RouteValues != null && response.RouteValues.length == 2) {
                window.location = appPath + "/" + response.RouteValues[1].Value + ".mvc/" + response.RouteValues[0].Value;
            } else {
                $('#ajout-alerte').empty();
                $('#ajout-alerte').append(response);
            }
        },
        error: function () {
        }
    });
}
function Individus(letter, idGedcom) {
    $.ajax({
        url: appPath + "/Menu.mvc/Individus/",
        type: 'GET',
        data: { letter: letter, idGedcom: idGedcom },
        contentType: 'html',
        success: function (response) {
            $('#liste-individus').empty();
            $('#liste-individus').append(response);
            AlignModal("liste-individus");
        },
        error: function () {
        }
    });
}
function Todo() {
    $.ajax({
        url: appPath + "/Todo.mvc/Todo/",
        type: 'GET',
        contentType: 'html',
        success: function (response) {
            $('#tache').empty();
            $('#tache').append(response);
            AlignModal("tache");
        },
        error: function () {
        }
    });
}
function ShowDeleteChildModal(person, randomNumber, pageRedirect, blocRedirect) {
    $.ajax({
        url: appPath + '/Person.mvc/ConfirmDeleteChild',
        type: 'GET',
        data: { personId: person, pageRedirect: pageRedirect, blocRedirect: blocRedirect },
        contentType: 'html',
        success: function (response) {
            $('#suppression').empty();
            $('#suppression').append(response);
            $('#linkDeletePerson').click();
        },
        error: function () {

        }
    });
}
function AddPopoverFromTree(element, personId, personImage, personLink, birthDate, birthPlace, deathDate, deathPlace, gender) { var content = "<div class='fiche-perso'><div class='fiche-photo'><img src='" + personImage + "'></div><div class='fiche-texte'><a href='" + personLink + "'><i class='icon-arbre-voir-orange'></i> Voir la fiche complÃ¨te</a>"; element.setAttribute("data-trigger", "hover"); element.setAttribute("data-popover", "true"); element.setAttribute("data-html", "true"); if ((birthDate != null && birthDate != "") || (birthPlace != null && birthPlace != "")) { if (gender == 'F') { content = content + "<p>NÃ©e "; } else { content = content + "<p>NÃ© "; } if (birthDate != null && birthDate != "") { content = content + birthDate + " "; } if (birthPlace != null && birthPlace != "") { content = content + "Ã  " + birthPlace; } content = content + "</p>"; } if ((deathDate != null && deathDate != "") || (deathPlace != null && deathPlace != "")) { if (gender == 'F') { content = content + "<p>DÃ©cÃ©dÃ©e "; } else { content = content + "<p>DÃ©cÃ©dÃ© "; } if (deathDate != null && deathDate != "") { content = content + deathDate + " "; } if (deathPlace != null && deathPlace != "") { content = content + "Ã  " + deathPlace; } content = content + "</p>"; } content = content + "</div><div class='clear'></div></div>"; element.setAttribute("data-content", content); }
function RedirectToSlimPlatform(result) {
    var jsonData = Sys.Serialization.JavaScriptSerializer.deserialize(result.get_data());
    if (jsonData.blob) {
        $('#blob').val(jsonData.blob);
        $("#SlimPost").submit();
    }
    else {
        $("#structure-n2").html(jsonData.error);
    }
}

function ValidateNewInscriptionFromOffers() {
    var errorLine1 = false;
    var message1 = "";

    //title
    var title = $("#Title").val();

    if (title.length == 0 || title == "O") {
        message1 = message1 + " Votre civilitÃ© n'est pas valide.";
        errorLine1 = true;
    }

    //first name
    var firstName = $('#FirstName').val();
    var checkFirstName = firstName.replace(/\d+/g, '');

    if (checkFirstName.length == 0) {
        message1 = message1 + " Votre prÃ©nom n'est pas valide.";
        errorLine1 = true;
    }

    //last name
    var lastName = $("#LastName").val();
    var checkLastName = lastName.replace(/\d+/g, '');

    if (checkLastName.length == 0) {
        message1 = message1 + " Votre nom n'est pas valide.";
        errorLine1 = true;
    }

    if (errorLine1 == true) {
        $("#InscriptionFirstLineValidationMessage").text(message1);
        $("#InscriptionFirstLineValidationMessage").css("display", "block");
    }
    else {
        $("#InscriptionFirstLineValidationMessage").css("display", "none");
    }

    //email
    var errorLine2 = false;
    var message2 = "";

    var emailAddress = $('#InscriptionEmail').val();
    //var emailPattern = new RegExp(/^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?$/i);
    var emailPattern = new RegExp(/^[-a-z0-9~!$%^&*_=+}{\'?]+(\.[-a-z0-9~!$%^&*_=+}{\'?]+)*@([a-z0-9_][-a-z0-9_]*(\.[-a-z0-9_]+)*\.(aero|arpa|biz|com|coop|edu|gov|info|int|mil|museum|name|net|org|pro|travel|mobi|[a-z][a-z])|([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}))(:[0-9]{1,5})?$/i);
    var emailPattern2 = new RegExp("[Ã€Ã‚Ã„ÃˆÃ‰ÃŠÃ‹ÃŽÃÃ”Å’Ã™Ã›ÃœÅ¸Ã Ã¢Ã¤Ã¨Ã©ÃªÃ«Ã®Ã¯Ã´Å“Ã¹Ã»Ã¼Ã¿Ã‡Ã§]");

    if (!emailPattern.test(emailAddress.toString()) || emailPattern2.test(emailAddress.toString())) {
        message2 = message2 + " Votre email n'est pas valide.";
        errorLine2 = true;
    }

    if (errorLine2 == true) {
        $("#InscriptionSecondLineValidationMessage").text(message2);
        $("#InscriptionSecondLineValidationMessage").css("display", "block");
    }
    else {
        $("#InscriptionSecondLineValidationMessage").css("display", "none");
    }

    //password
    var errorLine3 = false;
    var message3 = "";

    var password = $('#InscriptionPassword').val();
    var confirmationPassword = $('#InscriptionConfirmationPassword').val();
    if (password.length > 0 && password.indexOf(" ") > -1) {
        message3 = "Votre mot de passe ne doit pas contenir le caractÃ¨re espace.";
        errorLine3 = true;
    } else
        if (password.length > 0 && password.indexOf("<") > -1) {
            message3 = "Le mot de passe ne doit pas contenir le caractÃ¨re ' < '.";
            errorLine3 = true;
        }
        else {
            if (password.length < 5) {
                message3 = message3 + " Votre mot de passe doit faire plus de 5 caractÃ¨res.";
                errorLine3 = true;
            } else if (password != confirmationPassword) {
                message3 = message3 + " Confirmation de mot de passe est incorrect";
                errorLine3 = true;
            }

        }

    if (errorLine3 == true) {
        $("#InscriptionThirdLineValidationMessage").text(message3);
        $("#InscriptionThirdLineValidationMessage").css("display", "block");
    }
    else {
        $("#InscriptionThirdLineValidationMessage").css("display", "none");
    }

    //country
    var errorLine4 = false;
    var message4 = "";

    var country = $('#Country').val();
    var countryCheck = country.replace(/\d+/g, '');

    if (countryCheck.length == 0) {
        message4 = message4 + " Votre ville n'est pas valide.";
        errorLine4 = true;
    }

    if (errorLine4 == true) {
        $("#InscriptionFourthLineValidationMessage").text(message4);
        $("#InscriptionFourthLineValidationMessage").css("display", "block");
    }
    else {
        $("#InscriptionFourthLineValidationMessage").css("display", "none");
    }

    if (errorLine1 == true || errorLine2 == true || errorLine3 == true || errorLine4 == true) {
        return false;
    }
}
function ValidateNewInscriptionFromSlimpay() {

    //title
    var errorLine1 = false;
    var message1 = "";

    var title = $("#Title").val();

    if (title.length == 0 || title == "O") {
        message1 = message1 + " Votre civilitÃ© n'est pas valide.";
        errorLine1 = true;
    }

    //first name
    var firstName = $('#FirstName').val();
    var checkFirstName = firstName.replace(/\d+/g, '');

    if (checkFirstName.length == 0) {
        message1 = message1 + " Votre prÃ©nom n'est pas valide.";
        errorLine1 = true;
    }

    //last name
    var lastName = $("#LastName").val();
    var checkLastName = lastName.replace(/\d+/g, '');

    if (checkLastName.length == 0) {
        message1 = message1 + " Votre nom n'est pas valide.";
        errorLine1 = true;
    }

    if (errorLine1 == true) {
        $("#InscriptionFirstLineValidationMessage").text(message1);
        $("#InscriptionFirstLineValidationMessage").css("display", "block");
    }
    else {
        $("#InscriptionFirstLineValidationMessage").css("display", "none");
    }



    //email
    var errorLine2 = false;
    var message2 = "";

    var emailAddress = $('#InscriptionEmail').val();
    //var emailPattern = new RegExp(/^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?$/i);
    var emailPattern = new RegExp(/^[-a-z0-9~!$%^&*_=+}{\'?]+(\.[-a-z0-9~!$%^&*_=+}{\'?]+)*@([a-z0-9_][-a-z0-9_]*(\.[-a-z0-9_]+)*\.(aero|arpa|biz|com|coop|edu|gov|info|int|mil|museum|name|net|org|pro|travel|mobi|[a-z][a-z])|([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}))(:[0-9]{1,5})?$/i);
    var emailPattern2 = new RegExp("[Ã€Ã‚Ã„ÃˆÃ‰ÃŠÃ‹ÃŽÃÃ”Å’Ã™Ã›ÃœÅ¸Ã Ã¢Ã¤Ã¨Ã©ÃªÃ«Ã®Ã¯Ã´Å“Ã¹Ã»Ã¼Ã¿Ã‡Ã§]");

    if (!emailPattern.test(emailAddress.toString()) || emailPattern2.test(emailAddress.toString())) {
        message2 = message2 + " Votre email n'est pas valide.";
        errorLine2 = true;
    }

    if (errorLine2 == true) {
        $("#InscriptionSecondLineValidationMessage").text(message2);
        $("#InscriptionSecondLineValidationMessage").css("display", "block");
    }
    else {
        $("#InscriptionSecondLineValidationMessage").css("display", "none");
    }

    //password
    var errorLine3 = false;
    var message3 = "";

    var password = $('#InscriptionPassword').val();
    var confirmationPassword = $('#InscriptionConfirmationPassword').val();
    if (password.length > 0 && password.indexOf(" ") > -1) {
        message3 = message3 + " Votre mot de passe ne doit pas contenir le caractÃ¨re espace.";
        errorLine3 = true;
    } else
        if (password.length > 0 && password.indexOf("<") > -1) {
            message3 = message3 + " Le mot de passe ne doit pas contenir le caractÃ¨re ' < '.";
            errorLine3 = true;
        } else {
            if (password.length < 5) {
                message3 = message3 + " Votre mot de passe doit faire plus de 5 caractÃ¨res.";
                errorLine3 = true;
            } else if (password != confirmationPassword) {
                message3 = message3 + " Confirmation de mot de passe est incorrect";
                errorLine3 = true;
            }
        }

    if (errorLine3 == true) {
        $("#InscriptionThirdLineValidationMessage").text(message3);
        $("#InscriptionThirdLineValidationMessage").css("display", "block");
    }
    else {
        $("#InscriptionThirdLineValidationMessage").css("display", "none");
    }

    //address
    var errorLine4 = false;
    var message4 = "";

    var address = $('#Address1').val();
    var addressCheck = address.replace(/\d+/g, '');

    if (addressCheck.length == 0) {
        message4 = message4 + " Votre adresse n'est pas valide.";
        errorLine4 = true;
    }

    if (errorLine4 == true) {
        $("#InscriptionFourthLineValidationMessage").text(message4);
        $("#InscriptionFourthLineValidationMessage").css("display", "block");
    }
    else {
        $("#InscriptionFourthLineValidationMessage").css("display", "none");
    }

    //postal code
    var errorLine5 = false;
    var message5 = "";

    var postalCode = $('#PostalCode').val();

    if (postalCode.length < 5 || (!postalCode.match(/^\d+$/))) {
        message5 = message5 + " Votre postal code n'est pas valide.";
        errorLine5 = true;
    }

    //city
    var city = $('#City').val();
    var cityCheck = city.replace(/\d+/g, '');

    if (cityCheck.length == 0) {
        message5 = message5 + " Votre ville n'est pas valide.";
        errorLine5 = true;
    }

    if (errorLine5 == true) {
        $("#InscriptionFifthLineValidationMessage").text(message5);
        $("#InscriptionFifthLineValidationMessage").css("display", "block");
    }
    else {
        $("#InscriptionFifthLineValidationMessage").css("display", "none");
    }

    //country
    var errorLine6 = false;
    var message6 = "";

    var country = $('#Country').val();
    var countryCheck = country.replace(/\d+/g, '');

    if (countryCheck.length == 0) {
        message6 = message6 + " Votre ville n'est pas valide.";
        errorLine6 = true;
    }

    if (errorLine6 == true) {
        $("#InscriptionSixthLineValidationMessage").text(message6);
        $("#InscriptionSixthLineValidationMessage").css("display", "block");
    }
    else {
        $("#InscriptionSixthLineValidationMessage").css("display", "none");
    }

    if (errorLine1 == true || errorLine2 == true || errorLine3 == true ||
        errorLine4 == true || errorLine5 == true || errorLine6 == true) {
        return false;
    }
}
function ValidateUserProfileDataFromSlim() {
    //title
    var errorLine1 = false;
    var message1 = "";

    var title = $("#Title").val();

    if (title.length == 0 || title == "O") {
        message1 = message1 + " Votre civilitÃ© n'est pas valide.";
        errorLine1 = true;
    }

    //first name
    var firstName = $('#FirstName').val();
    var checkFirstName = firstName.replace(/\d+/g, '');

    if (checkFirstName.length == 0) {
        message1 = message1 + " Votre prÃ©nom n'est pas valide.";
        errorLine1 = true;
    }

    //last name
    var lastName = $("#LastName").val();
    var checkLastName = lastName.replace(/\d+/g, '');

    if (checkLastName.length == 0) {
        message1 = message1 + " Votre nom n'est pas valide.";
        errorLine1 = true;
    }



    if (errorLine1 == true) {
        $("#InscriptionFirstLineValidationMessage").text(message1);
        $("#InscriptionFirstLineValidationMessage").css("display", "block");
    }
    else {
        $("#InscriptionFirstLineValidationMessage").css("display", "none");
    }

    //address---------------------------------------------------------------
    var errorLine2 = false;
    var message2 = "";

    var address = $("#Adress1").val();
    var checkAddress = address.replace(/\d+/g, '');

    if (checkAddress.length == 0) {
        message2 = message2 + " Votre adresse n'est pas valide.";
        errorLine2 = true;
    }

    if (errorLine2 == true) {
        $("#InscriptionSecondLineValidationMessage").text(message2);
        $("#InscriptionSecondLineValidationMessage").css("display", "block");
    }
    else {
        $("#InscriptionSecondLineValidationMessage").css("display", "none");
    }

    //postal code------------------------------------------------------------
    var errorLine3 = false;
    var message3 = "";

    var postalCode = $("#PostalCode").val();

    if (postalCode.length < 5 || (!postalCode.match(/^\d+$/))) {
        message3 = message3 + " Votre postal code n'est pas valide.";
        errorLine3 = true;
    }

    //city
    var city = $("#City").val();
    var checkCity = city.replace(/\d+/g, '');

    if (checkCity.length == 0) {
        message3 = message3 + " Votre ville n'est pas valide.";
        errorLine3 = true;
    }

    if (errorLine3 == true) {
        $("#InscriptionThirdLineValidationMessage").text(message3);
        $("#InscriptionThirdLineValidationMessage").css("display", "block");
    }
    else {
        $("#InscriptionThirdLineValidationMessage").css("display", "none");
    }

    //country --------------------------------------------------------------------------
    var errorLine4 = false;

    var country = $("#Country").val();

    if (country.length == 0) {
        $("#InscriptionSecondLineValidationMessage").text("Votre pays n'est pas valide.");
        $("#InscriptionFourthLineValidationMessage").css("display", "block");
        errorLine4 = true;
    }
    else {
        $("#InscriptionFourthLineValidationMessage").css("display", "none");
    }

    if (errorLine1 == true || errorLine2 == true || errorLine3 == true || errorLine4 == true) {
        return false;
    }
}
function RemoveNonResponsivePortableCSS() {
    var css = $("#non-responsive-portable");
    css.remove();
}
function RemoveStyleAndPrintCSS() {
    var css = document.getElementById("styleCssFile");
    css.parentNode.removeChild(css);
    css = document.getElementById("printCssFile");
    css.parentNode.removeChild(css);
}
function InsertTreeContextAndRedirect(individId, gedcomId, gedconIdIndivid, redirect) {
    $.ajax({
        url: appPath + '/Inscription.mvc/InsertTreeContext',
        type: 'GET',
        data: { individId: individId, gedcomId: gedcomId, gedcomIdIndividu: gedconIdIndivid }
    });

    window.location.href = redirect;
}
function GenericSearch_RedirectSearch() {
    var name = $("#txtName").val();
    var stringRedirect = "?name=" + name;
    var firstName = $("#txtFirstName").val();
    if (firstName) {
        stringRedirect += "&firstName=" + firstName;
    }
    var period1 = $("#txtPeriod1").val();
    if (period1) {
        stringRedirect += "&period1=" + period1;
    }
    var period2 = $("#txtPeriod2").val();
    if (period2) {
        stringRedirect += "&period2=" + period2;
    }
    var countryId = document.getElementById("ddlCountry");
    if (countryId != null)
        stringRedirect += "&countryId=" + document.getElementById("ddlCountry").value;
    else
        stringRedirect += "&countryId=0";
    var departmentId = document.getElementById("departement");
    if (departmentId != null)
        stringRedirect += "&departmentId=" + document.getElementById("departement").value;
    else
        stringRedirect += "&departmentId=0";
    var nameFather = $("#nameFather").val();
    if (nameFather) {
        stringRedirect += "&nameFather=" + nameFather;
    }
    var firstNameFather = $("#firstNameFather").val();
    if (firstNameFather) {
        stringRedirect += "&firstNameFather=" + firstNameFather;
    }
    var nameMother = $("#nameMother").val();
    if (nameMother) {
        stringRedirect += "&nameMother=" + nameMother;
    }
    var firstNameMother = $("#firstNameMother").val();
    if (firstNameMother) {
        stringRedirect += "&firstNameMother=" + firstNameMother;
    }
    var nameUnion = $("#nameUnion").val();
    if (nameUnion) {
        stringRedirect += "&nameUnion=" + nameUnion;
    }
    var firstNameUnion = $("#firstNameUnion").val();
    if (firstNameUnion) {
        stringRedirect += "&firstNameUnion=" + firstNameUnion;
    }
    var alertchecked = $("#checkAlert").is(':checked');
    stringRedirect += "&withAlert=" + alertchecked;
    var advancedSearch = "false";
    if ($("#AdvancedSearch").css("display") == "block") {
        advancedSearch = "true";
    }
    stringRedirect += "&page=1&firstPageInPagination=1&sortField=1&advanced=" + advancedSearch;
    if ($("#CategoryId1").val() != 0)
        stringRedirect += "&categoryId1=" + $("#CategoryId1").val();
    if ($("#CategoryId2").val() != 0)
        stringRedirect += "&categoryId2=" + $("#CategoryId2").val();
    if ($("#CategoryId3").val() != 0)
        stringRedirect += "&categoryId3=" + $("#CategoryId3").val();
    window.location = appPath + "/Search.mvc/SearchResult" + stringRedirect;
}
function ResetTextboxValues(divClass) {
    $('.' + divClass + ' input:text').val('');
    $('.' + divClass + ' input:password').val('');
}
function CreateUrl(withUrl) {
    var name = $("#searchName").val();
    var stringRedirect = "?name=" + name;

    var firstName = $("#searchFirstName").val();
    if (firstName) {
        stringRedirect += "&firstName=" + firstName;
    }

    var period1 = $("#searchPeriod1").val();
    if (period1) {
        stringRedirect += "&period1=" + period1;
    }

    var period2 = $("#searchPeriod2").val();
    if (period2) {
        stringRedirect += "&period2=" + period2;
    }

    var country = $("#searchCountry").val();
    if (country) {
        stringRedirect += "&countryId=" + country;
    }

    var department = $("#searchDepartement").val();
    if (department) {
        stringRedirect += "&departmentId=" + department;
    }

    var checked = $("#searchExpended").val();
    if (checked) {
        stringRedirect += "&expended=" + checked;
    }

    var nameFather = $("#searchNameFather").val();
    if (nameFather) {
        stringRedirect += "&nameFather=" + nameFather;
    }

    var firstNameFather = $("#searchFirstNameFather").val();
    if (firstNameFather) {
        stringRedirect += "&firstNameFather=" + firstNameFather;
    }

    var nameMother = $("#searchNameMother").val();
    if (nameMother) {
        stringRedirect += "&nameMother=" + nameMother;
    }

    var firstNameMother = $("#searchFirstNameMother").val();
    if (firstNameMother) {
        stringRedirect += "&firstNameMother=" + firstNameMother;
    }

    var nameUnion = $("#searchNameUnion").val();
    if (nameUnion) {
        stringRedirect += "&nameUnion=" + nameUnion;
    }

    var firstNameUnion = $("#searchFirstNameUnion").val();
    if (firstNameUnion) {
        stringRedirect += "&firstNameUnion=" + firstNameUnion;
    }

    var page = $("#searchPageNumber").val();
    if (page) {
        stringRedirect += "&page=" + page;
    }

    var pagePagination = $("#searchFirstPageInPagination").val();
    if (pagePagination) {
        stringRedirect += "&firstPageInPagination=" + pagePagination;
    }

    stringRedirect += "&sortField=" + $("#searchSortField").val();

    var filter = $("#PageSize").val();
    if (filter) {
        stringRedirect += "&pageSize=" + filter;
    }

    stringRedirect += "&onlyPublicTree=" + $("#searchOnlyPublicTree").val();
    stringRedirect += "&excludeOrphans=" + $("#searchExcludeOrphans").val();
    stringRedirect += "&excludeIndivids=" + $("#searchExcludeIndivids").val();
    stringRedirect += "&excludeWithoutPhoto=" + $("#searchExcludeWithoutPhoto").val();
    stringRedirect += "&excludeWithoutParent=" + $("#searchExcludeWithoutParent").val();
    stringRedirect += "&withAlert=false&advanced=" + $("#searchAdvancedSearch").val();
    stringRedirect += "&searchType=" + $("#searchSearchType").val();

    if ($("#categoryId1").val()) {
        stringRedirect += "&categoryId1=" + $("#categoryId1").val();
    }
    if ($("#categoryId2").val()) {
        stringRedirect += "&categoryId2=" + $("#categoryId2").val();
    }
    if ($("#categoryId3").val()) {
        stringRedirect += "&categoryId3=" + $("#categoryId3").val();
    }
    if ($("#searchTownId").val()) {
        stringRedirect += "&townId=" + $("#searchTownId").val();
    }
    if ($("#searchFirstNameInitial").val()) {
        stringRedirect += "&nameInitial=" + $("#searchFirstNameInitial").val();
    }
    if ($("#searchActeType").val()) {
        stringRedirect += "&acteType=" + $("#searchActeType").val();
    }
    if ($("#excludeFromTree").val()) {
        stringRedirect += "&excludeFromTree=" + $("#excludeFromTree").val();
    }
    if (withUrl) {
        return appPath + "/Search.mvc/SearchResult" + stringRedirect;
    } else {
        return "/Search.mvc/SearchResult" + stringRedirect;
    }
}
function ValidateConnectionEmailFreeOffers() {
    $("#TrashEmailMessage").css("display", "none");
    var emailToTest = "";
    if ($("#EmailOffers").val() != "") {
        emailToTest = $("#EmailOffers").val();
    }

    //var emailPattern = new RegExp(/^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))?\.?[a-zA-Z]{2,6}$/i);
    var emailPattern = new RegExp(/^[-a-z0-9~!$%^&*_=+}{\'?]+(\.[-a-z0-9~!$%^&*_=+}{\'?]+)*@([a-z0-9_][-a-z0-9_]*(\.[-a-z0-9_]+)*\.(aero|arpa|biz|com|coop|edu|gov|info|int|mil|museum|name|net|org|pro|travel|mobi|[a-z][a-z])|([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}))(:[0-9]{1,5})?$/i);
    var emailPattern2 = new RegExp("[Ã€Ã‚Ã„ÃˆÃ‰ÃŠÃ‹ÃŽÃÃ”Å’Ã™Ã›ÃœÅ¸Ã Ã¢Ã¤Ã¨Ã©ÃªÃ«Ã®Ã¯Ã´Å“Ã¹Ã»Ã¼Ã¿Ã‡Ã§]");
    var error = false;
    if (emailToTest.length == 0) {
        $("#InscriptionEmailValidationMessageOffers").html("<p>Merci de saisir votre adresse email</p>");
        $("#InscriptionEmailValidationMessageOffers").css("display", "block");
        error = true;
    } else if (!emailPattern.test(emailToTest.toString()) || emailPattern2.test(emailToTest.toString())) {
        $("#InscriptionEmailValidationMessageOffers").html("<p>Votre adresse email n'est pas valide</p>");
        $("#InscriptionEmailValidationMessageOffers").css("display", "block");
        error = true;
    } else {
        $("#InscriptionEmailValidationMessageOffers").css("display", "none");
    }
    if (error != true) {
        $.ajax({
            url: appPath + "/Inscription.mvc/VerifyEmail",
            type: "GET",
            dataType: "json",
            data: {
                email: emailToTest
            },
            error: function (response) {
                console.log(response.responseText);
            },
            success: function (response) {
                // var email = emailToTest;
                if (response == "userExists") {
                    $("#EmailFormPopupFreeC").val(emailToTest);
                    $("#EmailSection").css("display", "none");
                    $("#LoginPasswordSection").css("display", "block");
                } else
                    if (response == "trashEmail") {
                        $("#EmailOffers").val("");
                        var domain = emailToTest.replace(/.*@/, "");
                        $("#trashDomain").html(domain);
                        $("#TrashEmailMessage").css("display", "block");
                    } else {
                        $("#InscriptionEmailFormPage15").val(emailToTest);
                        $("#EmailSection").css("display", "none");
                        $("#RegisterPasswordSection").css("display", "block");
                    }
            }
        });
    }
}
function keyeventEmailValidationPage15(e) {
    if (e.keyCode == 13) {
        ValidateConnectionEmailFreeOffers();
    }
}
function ValidatePasswordPage15() {
    if ($("#PasswordValidationMessageFreeC").val().length == 0) {
        $("#LoginPasswordMessage").html("<p>Merci de saisir votre mot de passe</p>");
        $("#LoginPasswordMessage").css("display", "block");

        return false;
    }
    if ($("#PasswordValidationMessageFreeC").val().indexOf("<") > -1) {
        $("#LoginPasswordMessage").text("Adresse email ou mot de passe incorrect.");
        $("#LoginPasswordMessage").css("display", "block");
        return false;
    }
    $("#LoginPasswordMessage").css("display", "none");
}
function keyeventPasswordLoginValidationPage15(e) {
    if (e.keyCode == 13) {
        ValidatePasswordPage15();
    }
}
function ValidateNewInscriptionPage15() {
    var password = $('#InscriptionPasswordFormPage15').val();
    if (password.length > 0 && password.indexOf(" ") > -1) {
        $("#RegisterErrors").html("<p> Votre mot de passe ne doit pas contenir le caractÃ¨re espace. </p>");
        $("#RegisterErrors").css("display", "block");

        return false;
    }
    if (password.length < 5) {
        $("#RegisterErrors").html("<p> Votre mot de passe doit faire plus de 5 caractÃ¨res. </p>");
        $("#RegisterErrors").css("display", "block");

        return false;
    }
    if (password.length > 0 && password.indexOf("<") > -1) {
        $("#RegisterErrors").html("<p> Le mot de passe ne doit pas contenir le caractÃ¨re ' < '. </p>");
        $("#RegisterErrors").css("display", "block");

        return false;
    }
    $("#RegisterErrors").css("display", "none");
}
function keyeventPasswordRegisterValidationPage15(e) {
    if (e.keyCode == 13) {
        ValidateNewInscriptionPage15();
    }
}

function ScrolToForm(divId) {
    $('html, body').animate({
        scrollTop: $("#".concat(divId)).offset().top
    }, 1000);
}
function UpdateNewsletter(element) {
    $('#NewsletterGenealogiePage15').val(element.is(":checked"));
}
function NewRedirectToSearch(link, filters) {
    link = link || '';
    if (link.toLowerCase() !== "searchapi") {
        BackToSearch();
    } else {
        if (filters) {
            // if passed as a parameter to a call-back functin it will be an object
            var jasonFilters = (IsString(filters)) ? JSON.parse(filters) : filters;
            var requestData = {};
            var value;
            for (var key in jasonFilters) {
                value = jasonFilters[key];
                if (value && value != 'null') {
                    requestData[key] = jasonFilters[key];
                }
            }
            requestData['IsForSearchReturn'] = true;
            MyPostAction('/SearchApi.mvc/RedirectToNormalSearch', requestData, 'post', '_self');
        } else {
            window.location.href = appPath + '/SearchApi.mvc/RedirectToNormalSearch';
        }
    }
}
function EnableFreeOffersPopup(idPerson, acteId, name, source, acteType, period, place, imagePathActe, redirectUrl, collection, isPublic, typeResult, isFree) {
    if (firstRequestHasEnded) {
        firstRequestHasEnded = false;
        $.post(appPath + "/Inscription.mvc/FreeOffersConsultation",
            {
                idPerson: idPerson, acteId: acteId, name: name, source: source, acteType: acteType, period: period, place: place, imagePathActe: imagePathActe, redirectUrl: redirectUrl,
                collection: collection, isPublic: isPublic, resultType: typeResult, isFree: isFree
            },
            function (data) {
                //jQuery('#styleSearch').remove();
                $("#modalSubscription").html(data);
                $("#oneConsultationModalTrigger").click();
            }).always(function () {
                firstRequestHasEnded = true;
            });
    }
}
function redirectFromOldSearch() {
    var lastname = $("#txtName").val();
    var firstname = $("#txtFirstName").val();
    var fatherLastname = $("#txtNameFather").val();
    var fatherFirstname = $("#txtFirstNameFather").val();
    var partnerLastname = $("#txtNameUnion").val();
    var partnerFirstname = $("#txtFirstNameUnion").val();
    var motherLastname = $("#txtNameMother").val();
    var motherFirstname = $("#txtFirstNameMother").val();
    var year = $("#txtPeriod1").val();
    var department = "";
    if ($("#departement").val() != "0") {
        department = $("#departement option:selected").text();;
    }
    var plusOptions = new Array();
    if (fatherLastname.trim() != "" || fatherFirstname.trim() != "") {
        plusOptions.push("Father");
    }
    if (partnerLastname.trim() != "" || partnerFirstname.trim() != "") {
        plusOptions.push("Partner");
    }
    if ((motherLastname.trim() != "" || motherFirstname.trim() != "") && plusOptions.length < 2) {
        plusOptions.push("Mother");
    }

    MyPostAction('/SearchApi.mvc/RedirectToNormalSearch',
            {
                Lastname: lastname,
                Firstname: firstname,
                Year: year,
                Longitude: '0',
                Latitude: '0',
                MotherFirstname: motherFirstname,
                MotherLastname: motherLastname,
                FatherFirstname: fatherFirstname,
                FatherLastname: fatherLastname,
                PartnerFirstname: partnerFirstname,
                PartnerLastname: partnerLastname,
                Place: department,
                PlusOptions: plusOptions,
                fromOldSearch: 'true'
            }, 'post', '_self');
}

function redirectFromHomepageToSearch() {
    if (ValidateHomepageSearchForm()) {
        var lastname = $("#inputLastname").val();
        var firstname = $("#inputFirstname").val();
        var year = $("#inputYear").val();

        var department = "";
        if ($("#departement").val() != "0") {
            department = $("#departement option:selected").text();
        }

        MyPostAction(
                '/SearchApi.mvc/RedirectToNormalSearch',
                {
                    Lastname: lastname,
                    Firstname: firstname,
                    Year: year,
                    Longitude: '0',
                    Latitude: '0',
                    Place: department,
                    fromOldSearch: 'true'
                },
                'post',
                '_self'
                );
    }
}

function ValidateHomepageSearchForm() {
    $('#commencerrecherche input:text').each(function () {
        var value = $(this).val();
        if (value) {
            value = value.trim();
            //replace multiple spaces with one
            value = value.replace(/\s\s+/g, ' ');
            // value = value.TrimScriptTags();
            $(this).val(value);
        }

    });

    var lastName = $("#inputLastname").val();
    if (lastName.length == 0) {
        Search_ShowErrorMessage(1);
    }
    else {
        if (lastName.length < 2) {
            Search_ShowErrorMessage(1);
        }
        else if (lastName.charAt(0) == '*') {
            Search_ShowErrorMessage(5);
        }
        else {
            var firstName = $("#inputFirstname").val();
            if (firstName && firstName.charAt(0) == '*') {
                Search_ShowErrorMessage(11);
            }
            else {
                return true;
            }
        }
    }
}

String.prototype.escapeDoubleQuotes = function () {
    return this.replace(/"/g, '\\\"');
}
String.prototype.escapeBackslash = function () {
    return this.replace(/\\/g, '\\\\');
}
function IsString(variable) {
    if (typeof variable === 'string' || variable instanceof String) {
        return true;
    }
    return false;
}

function MyPostAction(path, params, method, target) {
    method = method || "post"; // Set method to post by default if not specified.
    path = appPath + path;
    // The rest of this code assumes you are not using a library.
    // It can be made less wordy if you use one.
    var form = document.createElement("form");
    form.setAttribute("method", method);
    form.setAttribute("action", path);
    form.setAttribute("target", target);
    var value;
    for (var key in params) {
        if (params.hasOwnProperty(key)) {
            var value = params[key];
            var hiddenField;
            if ($.isArray(value)) {
                hiddenField = document.createElement("select");
                hiddenField.multiple = true;
                hiddenField.setAttribute("id", key);
                hiddenField.setAttribute("name", key);
                hiddenField.style.display = "none";

                value.forEach(function (element, index, value) {
                    var option = document.createElement("option");
                    option.setAttribute("value", element);
                    option.text = element;
                    option.selected = true;
                    hiddenField.appendChild(option);
                });
            } else {
                hiddenField = document.createElement("input");
                hiddenField.setAttribute("type", "hidden");
                hiddenField.setAttribute("name", key);

                value = (value && IsString(value)) ? params[key].escapeBackslash().escapeDoubleQuotes() : params[key];
                hiddenField.setAttribute("value", value);
            }
            form.appendChild(hiddenField);
        }
    }

    document.body.appendChild(form);
    form.submit();
}
function redirectFromArchives(lastname, firstname, place) {
    MyPostAction('/SearchApi.mvc/RedirectToNormalSearch',
           {
               Lastname: lastname,
               Firstname: firstname,
               Longitude: '0',
               Latitude: '0',
               Place: place,
               fromOldSearch: 'true'
           }, 'post', '_blank');
}
function ShowTreePopup(title, description, textButton) {
    $('#popup-title').text(title);
    $('#popup-description').html(description);
    $('#popup-button').text(textButton);
}

function RedirectToImportGedcom() {
    $('#RedirectToImport').val('True');
}

//#region Function AutoComplete
function CreateAutocompleteForSearchPerson(inputId) {
    var inputIdFormat = "#" + inputId;
    var personList = new Bloodhound({
        datumTokenizer: Bloodhound.tokenizers.whitespace('persons'),
        queryTokenizer: Bloodhound.tokenizers.whitespace,
        limit: 1000,
        remote: {
            url: appPath + '/Menu.mvc/ListIndivids?q=%QUERY&gedcomId=' + $("#GedcomId").val(),
            filter: function (response) {
                return response.Persons;
            }
        }
    });

    personList.initialize();
    $(inputIdFormat).typeahead(null, {
        limit: 1000,
        delay: 200,
        highlight: true,
        name: 'persons',
        displayKey: "Name",
        source: personList.ttAdapter(),
        templates: {
            suggestion: function (data) {
                return data.Name.replace(new RegExp("(?![^&;]+;)(?!<[^<>]*)(" + $(inputIdFormat).val().replace(/([\^\$\(\)\[\]\{\}\*\.\+\?\|\\])/gi, "\\$1") + ")(?![^<>]*>)(?![^&;]+;)", "gi"), "<strong>$1</strong>");
            }
        }
    }).on('typeahead:selected', function ($e, data) {
        if (data.Id != -1) {
            window.location = appPath + "/Tree/Tree/" + data.Id;
        }
    });
}
function CreateAutocompleteForGeonames(inputId) {
    var inputIdFormat = "#" + inputId;
    var hiddenIdInput = "#" + inputId + "Id";

    var list = new Bloodhound({
        datumTokenizer: Bloodhound.tokenizers.whitespace('Geonames'),
        queryTokenizer: Bloodhound.tokenizers.whitespace,
        limit: 1000,
        remote: {
            url: appPath + '/Autocomplete.mvc/List?q=%QUERY',
            filter: function (response) {
                return response.Geonames;
            }
        }
    });
    list.initialize();
    $(inputIdFormat).typeahead(null, {
        limit: 1000,
        delay: 200,
        highlight: true,
        name: 'Geonames',
        displayKey: "PlaceName",
        source: list.ttAdapter(),
        templates: {
            suggestion: function (data) {
                return data.PlaceName.replace(new RegExp("(?![^&;]+;)(?!<[^<>]*)(" + $(inputIdFormat).val().replace(/([\^\$\(\)\[\]\{\}\*\.\+\?\|\\])/gi, "\\$1") + ")(?![^<>]*>)(?![^&;]+;)", "gi"), "<strong>$1</strong>");
            }
        }
    }).on('typeahead:selected', function ($e, data) {
        if (data.Id != -1) {
            hidden = $(hiddenIdInput).val(data.Id);
        } else {
            hidden = $(hiddenIdInput).val(0);
        }
    });
}
function CreateAutocompleteForTowns(inputId) {
    var inputIdFormat = "#" + inputId;
    var hiddenIdInput = "#" + inputId + "Id";

    var list = new Bloodhound({
        datumTokenizer: Bloodhound.tokenizers.whitespace('communes'),
        queryTokenizer: Bloodhound.tokenizers.whitespace,
        limit: 1000,
        remote: {
            url: appPath + '/Autocomplete.mvc/ListCommunes?q=%QUERY&departmentId=' + $("#searchDepartement").val() + '&countryId=' + $("#ddlCountry").val(),
            filter: function (response) {
                return response;
            }
        }
    });
    list.initialize();
    $(inputIdFormat).typeahead(null, {
        limit: 1000,
        delay: 200,
        highlight: true,
        name: 'communes',
        displayKey: "Name",
        source: list.ttAdapter(),
        templates: {
            suggestion: function (data) {
                return data.Name.replace(new RegExp("(?![^&;]+;)(?!<[^<>]*)(" + $(inputIdFormat).val().replace(/([\^\$\(\)\[\]\{\}\*\.\+\?\|\\])/gi, "\\$1") + ")(?![^<>]*>)(?![^&;]+;)", "gi"), "<strong>$1</strong>");
            }
        }
    }).on('typeahead:selected', function ($e, data) {
        console.log(data);
        if (data.GeonameID != -1) {
            hidden = $(hiddenIdInput).val(data.GeonameID);
        } else {
            hidden = $(hiddenIdInput).val(0);
        }
    });
}
function CreateAutocompleteForArchives() {
    var personList = new Bloodhound({
        datumTokenizer: Bloodhound.tokenizers.whitespace('persons'),
        queryTokenizer: Bloodhound.tokenizers.whitespace,
        limit: 1000,
        remote: {
            url: appPath + '/Autocomplete.mvc/PersonList?searchName=%QUERY&newIdActe=' + $("#newIdActe").val() + "&idGedcom=" + $("#gedcoms").val(),
            filter: function (response) {
                return response.Persons;
            }
        }
    });
    personList.initialize();
    $(inputIdFormat).typeahead(null, {
        limit: 1000,
        delay: 200,
        highlight: true,
        name: 'persons',
        displayKey: "Name",
        source: personList.ttAdapter(),
        templates: {
            suggestion: function (data) {
                return data.Name.replace(new RegExp("(?![^&;]+;)(?!<[^<>]*)(" + $(inputIdFormat).val().replace(/([\^\$\(\)\[\]\{\}\*\.\+\?\|\\])/gi, "\\$1") + ")(?![^<>]*>)(?![^&;]+;)", "gi"), "<strong>$1</strong>");
            }
        }
    }).on('typeahead:selected', function ($e, data) {
        if (data.PersonId != -1) {
            AttachArchiveToIndivid(data.PersonId, $("#individIdModal").val(), $("#archiveId").val(), data.item.data.LastName, data.item.data.FirstName);
            loadingOperation();
        }
    });
}
var substringMatcher = function (strs) {
    return function findMatches(q, cb) {
        var matches, substringRegex;

        // an array that will be populated with substring matches
        matches = [];

        // regex used to determine if a string contains the substring `q`
        substrRegex = new RegExp(q, 'i');

        // iterate through the pool of strings and for any string that
        // contains the substring `q`, add it to the `matches` array
        $.each(strs, function (i, str) {
            if (substrRegex.test(str)) {
                matches.push(str);
            }
        });

        cb(matches);
    };
};
var inventorySelectedEvent;
function CreateAutocompleteForInventory(departmentId) {
    var personList = new Bloodhound({
        datumTokenizer: Bloodhound.tokenizers.whitespace('persons'),
        queryTokenizer: Bloodhound.tokenizers.whitespace,
        limit: 1000,
        remote: {
            url: appPath + '/Autocomplete.mvc/ListCommunesContaining?q=%QUERY&departmentId=' + departmentId + "&countryId=FR",
            wildcard: '%QUERY',
            filter: function (response) {
                inventorySelectedEvent = false;
                return response;
            }
        }
    });
    personList.initialize();
    $('#communesInventaire').typeahead(null, {
        limit: 1000,
        delay: 200,
        highlight: true,
        name: 'communes',
        displayKey: "Name",
        source: personList.ttAdapter(),

    }).on('typeahead:selected', function ($e, data) {
        if (inventorySelectedEvent == false) {
            inventorySelectedEvent = true;
            if (data.length == 0) {
                $.ajax({
                    url: 'search.mvc/DisplayMessage',
                    type: 'GET',
                    data: { message: "Cette commune n'existe pas" },
                    contentType: 'html',
                    success: function (response) {
                        $('#vide').empty();
                        $('#vide').append(response);
                        $('#showAlert').click();
                    },
                    error: function () {

                    }
                });
            } else {
                if (data.PersonId != -1) {
                    GetArchivesInventoryPeriods(data.Format2, $("#DepartmentCode").val());
                    //AttachArchiveToIndivid(data.PersonId, $("#individIdModal").val(), $("#archiveId").val(), data.item.data.LastName, data.item.data.FirstName);
                    //loadingOperation();
                }
            }
        }

    });
}
//#endregion Function AutoComplete
//#region Functions for redirecting to searchApi from inscription pages

function InscriptionFreeOffer_ShowErrorMessage(errorType, searchCallback) {
    searchCallback = typeof searchCallback == "function" ? searchCallback : function () { };
    $.ajax({
        url: appPath + "/Inscription.mvc/SearchErrorMessage",
        type: "GET", data: { errorType: errorType },
        success: function (errorMessage) {
            $("#textErrorMess").empty();
            $("#textErrorMess").text(errorMessage);
            $("#errorMessageName").css('display', 'block');
        }, error: function () { }
    }).always(searchCallback);
}

function validateSearchForms(page, formId) {
    $(formId.concat('input:text')).each(function () {
        var value = $(this).val();
        if (value) {
            value = value.trim();
            //replace multiple spaces with one
            value = value.replace(/\s\s+/g, ' ');
            $(this).val(value);
        }
    });

    var lastName = formId.concat('#inputLastname');
    lastName = $(lastName).val();
    if (lastName.length == 0) {
        SearchFormsErrorMessage(page, 1);
        return false;
    }
    else {
        if (lastName.trim().length < 2) {
            SearchFormsErrorMessage(page, 1);
            return false;
        }
        else if (lastName.charAt(0) == '*') {
            SearchFormsErrorMessage(page, 15);
            return false;
        }
        else {
            var firstname = "";
            if (page == 'offer' && $(window).width() <= 767) { // on offer page we have a different input for firstname for tablet view (when width < 767 the inputs for tablet are seen by the user)
                firstname = $(formId.concat('#inputFirstnameTablet')).val();
            }
            else {
                firstname = $(formId.concat('#inputFirstname')).val();
            }
            if (firstname && (firstname.charAt(0) == '*')) {
                SearchFormsErrorMessage(page, 16);
                return false;
            }
            else {
                return validateInputYears(page, formId);
            }
        }
    }
}

function validateInputYears(page) {
    var period1 = "";
    var period2 = "";

    if (page == 'offer' && $(window).width() <= 767) { // on offer page we have different inputs for startYear and endYear, for tablet view (when width < 767 the inputs for tablet are seen by the user)
        period1 = $("#txtPeriod1EcranNo").val();
        period2 = $("#txtPeriod2EcranNo").val();
    }
    else {
        period1 = $("#txtPeriod1").val();
        period2 = $("#txtPeriod2").val();
    }

    var y1 = 0; var y2 = 0;
    if (period1) { y1 = parseInt(period1); }
    if (period2) { y2 = parseInt(period2); }

    if (y1) {
        if (y2) {
            if (y2 < 0) {
                SearchFormsErrorMessage(page, 2);
                return false;
            }
            else {
                if (y2 < y1) {
                    SearchFormsErrorMessage(page, 3);
                    return false;
                }
            }
        }
        else {
            if (y2 != 0) {
                SearchFormsErrorMessage(page, 2);
                return false;
            }
        }
    }
    return true;
}

function SearchFormsErrorMessage(fromPage, errorType) {
    if (fromPage == 'freeOffer')
        InscriptionFreeOffer_ShowErrorMessage(errorType, searchCallback); //searchCallback is declared in a parrent scope in redirectToSearchFrom function scope
    else
        Search_ShowErrorMessage(errorType, searchCallback);
}

function redirectToSearchFrom(page, trigger) { // redirect to search from pages: inscriptionComplet, inscriptioncompletfreeoffer, homepageconnected
    var formId;
    if (trigger) {
        $(trigger).addClass('disabled');
        var onclick = $(trigger).attr("onclick");
        $(trigger).removeAttr("onclick");
        $("#searchGoToSearchApi :input").unbind("keydown", startSearchKeydownEvent);
        searchCallback = function () {  // function added on global scope
            $(trigger).removeClass('disabled');
            $(trigger).attr('onclick', onclick);
            $("#searchGoToSearchApi :input").keydown(startSearchKeydownEvent);
        }
    }
    formId = '#'.concat('searchGoToSearchApi').concat(' ');

    if (validateSearchForms(page, formId)) {        
        var lastname = $(formId.concat('#inputLastname')).val();
        var firstname = '';
        var userStartYear = '';
        var userEndYear = '';
        var yearPrecision = 0;
        var eventType = '';
        if (page == 'offer' && $(window).width() <= 767) {  // on offer page we have a different input for firstname, startYear and endYear for tablet view (when width < 767 the inputs for tablet are seen by the user)
            firstname = $(formId.concat('#inputFirstnameTablet')).val();
            userStartYear = $(formId.concat('#txtPeriod1EcranNo')).val();
            userEndYear = $(formId.concat('#txtPeriod1EcranNo')).val();
        }
        else {
            firstname = $(formId.concat('#inputFirstname')).val();
            userStartYear = $(formId.concat('#txtPeriod1')).val();
            userEndYear = $(formId.concat('#txtPeriod2')).val();
        }
        if (userStartYear || userEndYear) {
            userStartYear = userStartYear ? userStartYear : 0;
            var date = new Date();
            userEndYear = userEndYear ? userEndYear : date.getFullYear();
            yearPrecision = 3;
            eventType = 'entre';
        }

        validateAndResetPlace();
        var longitude = $(formId.concat('#longitude')).val();
        var latitude = $(formId.concat('#latitude')).val();
        var geonameid = $(formId.concat('#geonameid')).val();
        var featureCode = $(formId.concat('#featureCode')).val();
        var departementId = $(formId.concat('#departementId')).val();
        var regionId = $(formId.concat('#regionId')).val();
        var place = $(formId.concat('#inputPlace')).val();
        $(formId.concat('#Place')).val(place);

        var sourcesPathEncoded = '';
        var sourceLevel = '';
        var searchMod = '';
        var activeTab = '';
        var withImage = '';
        var selectedEventTypes = [];
        var ignoreDefaultEventTypesFilters = false;

        MyPostAction(
                '/SearchApi.mvc/RedirectToNormalSearch',
                {
                    Lastname: lastname,
                    Firstname: firstname,
                    Longitude: longitude,
                    Latitude: latitude,
                    Geonameid: geonameid,
                    FeatureCode: featureCode,
                    DepartementId: departementId,
                    RegionId: regionId,
                    Place: place,
                    fromOldSearch: 'true',
                    UserStartYear: userStartYear,
                    UserEndYear: userEndYear,
                    YearPrecision: yearPrecision,
                    EventType: eventType,
                    SourcesPathEncoded: sourcesPathEncoded,
                    SourceLevel: sourceLevel,
                    SearchMod: searchMod,
                    ActiveTab: activeTab,
                    WithImage: withImage,
                    SelectedEventTypes: selectedEventTypes,
                    IgnoreDefaultEventTypesFilters: ignoreDefaultEventTypesFilters
                },
                'post',
                '_self'
                );
    }
}

function validateAndResetPlace() {
    var fulName = $('#PlaceFullName').val();
    var featureCode = $('#featureCode').val();
    var place = $('#inputPlace').val();
    if (!featureCode || fulName !== place) {
        $('#inputPlace').val('');
        $('#longitude').val('0');
        $('#latitude').val('0');
        $('#geonameid').val('');
        $('#featureCode').val('');
        $('#departementId').val('');
        $('#regionId').val('');
        $('#PlacePrecision').val('0');
        $('.typeahead').typeahead('val', '');
    }
}

function onPlaceAutocompleted($e, datum) {
    $('#latitude').val(datum.Latitude);
    $('#longitude').val(datum.Longitude);
    $('#geonameid').val(datum.Id);
    $('#featureCode').val(datum.FeatureCode);
    $('#departementId').val(datum.DepartementId);
    $('#regionId').val(datum.RegionId);
    $('#PlaceFullName').val(datum.FullName);
}

function docReadySearchGoToSearchApi() {
    initializePlaceTypeahead();
    setEventsForValidYears();
    $("#searchGoToSearchApi :input").keydown(startSearchKeydownEvent);
}

function initializePlaceTypeahead(departmentId) {
    if (!departmentId) {
        departmentId = '';
    }
    autocompletePlace = new Bloodhound({
        datumTokenizer: Bloodhound.tokenizers.obj.whitespace('value'),
        queryTokenizer: Bloodhound.tokenizers.whitespace,
        limit: 10,
        remote: appPath + '/SearchApi.mvc/GetPlaces?word=%QUERY&departmentId=' + departmentId
    });
    autocompletePlace.initialize();
    $('.typeahead').typeahead({
        autoselect: true
    }, {
        limit: 10,
        highlight: true,
        name: 'lieu',
        displayKey: 'FullName',
        source: autocompletePlace.ttAdapter()
    }).on('typeahead:selected', onPlaceAutocompleted);
}

function setEventsForValidYears() {
    $('.isYear').each(function () {
        $(this).on('paste', function () {
            var element = this;
            setTimeout(function () {
                var text = $(element).val();
                if (text.match(/[^0-9\s]/g)) {
                    $(element).val('');
                }
                else if (text.length > 4) {
                    $(element).val(text.substring(0, 4));
                }
            }, 10);
        });

        $(this).on('keypress', function (event) {
            var key = event.keyCode || event.charCode;
            var number = $(this).val();
            if (key >= 48 && key <= 57 && number.length < 4)
                return true;
            if (event.charCode != 0 && event.ctrlKey === false) {
                event.preventDefault();
            }
        });
    });
}
//#endregion Functions for redirecting to searchApi from inscription pages

function ClearSessionStorage() {
    if (sessionStorage["TunnelStorage"] !== undefined) {
        var tunnelDataKey = sessionStorage["TunnelStorage"];
        sessionStorage.removeItem(tunnelDataKey);
        sessionStorage.removeItem("TunnelStorage");
    }
}
//#region Functions for subscribe to newsletters from Guide
function SearchEtatCivilByDep() {
    $("#guideSearch").click();
}
function SearchWithDefaultDepartment(geonameId) {
    $('#geonameid').val(geonameId);
    $('#lastname').val('');
    $("#guideSearch").click();
}
//#endregion Functions for subscribe to newsletters from Guide
//#region Functions for inscription Validation
function onlyNumeric(inputId) {
    $('#' + inputId).on('keypress', function (event) {
        if (event.keyCode < 48 || event.keyCode > 57)
            return false;
    });
}
//#endregion Functions for inscription Validation

//****Show hide processing
function showProcessing() {
    $('#alert-processing-registration').show();
}

function hideProcessing() {
    $('#alert-processing-registration').hide();
}
//*****