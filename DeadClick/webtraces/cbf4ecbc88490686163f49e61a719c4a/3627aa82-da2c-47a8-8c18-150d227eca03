// Navigation 
// Nests UL elements generated by nested-nav.xsl into their corresponding parent LI elements
// Words with production_root, root-relative, and absolute links
// Requires jQuery

// Last Updated 2/18/2014

$(function(){
	
	// if not using param-expose.xsl, replace with hardcoded values
	var $domain = OUC.globalProps['domain']
	var $currentPage = $domain + OUC.globalProps['path'] /* window.location */
	var $extension = OUC.globalProps['extension'] /* .html, .aspx, .php, etc */
	var $indexFile = OUC.globalProps['index-file'] /* default, index etc */
	
	// if the http root is not the same as domain
	var $trueHTTP = $domain
	
	// NEST NAVIGATION
	
	$('ul[data-nav-path]').each(function(){
		
		var $ul_parent_url = $(this).attr("data-nav-path")
		
		var $ul_node = $(this)
		
		$('ul[data-nav-path] li a').each(function(index, anchorTag){
			
			$link = $(this).attr('href')
			
			// if the link goes to the default page of the navigation we're looking at
			if( $link  == $ul_parent_url || $trueHTTP+$ul_parent_url == $link )
			{
				
				//append the navigation under that link and mark the index page as bold (.currentPage)			
				try{
					
					
					$(this).parent().append($ul_node)
					
					//$(this).parent().addClass('selected')
					$(this).parent().addClass('has-sub')
					
				} catch(e) {
					//do nothing
				}
				
				// break out of the loop
				return false
				
			}				
			
		}); // end each link
		
	}); // end each list
	
	
	// FIND ACTIVE LINK 
	
	$('ul[data-nav-path] li a').each(function(index, anchorTag){
		
		$link =  $(this).attr('href')
		
		if ( $currentPage.indexOf($extension) == -1)
		{
			$currentPage = $currentPage + $indexFile + index
			
		}
		// check if link matches current page
		if ($currentPage == $link || $trueHTTP+$link == $currentPage)
		{
			$(this).addClass('active')
			var element = $(this).parents('#cssmenu li').parents('#cssmenu li');
			element.addClass('has-sub open')
			element.children('ul').slideDown();
			
			// break out of the loop
			return false
			
		}
		
	});
	
	
	
}); // end function


( function( $ ) {
	$( document ).ready(function() {
		$('#cssmenu li.has-sub>a').on('click', function(){
			$(this).removeAttr('href');
			var element = $(this).parent('li');
			if (element.hasClass('open')) {
				element.removeClass('open');
				element.find('li').removeClass('open');
				element.find('ul').slideUp();
			}
			else {
				element.addClass('open');
				element.children('ul').slideDown();
				element.siblings('li').children('ul').slideUp();
				element.siblings('li').removeClass('open');
				element.siblings('li').find('li').removeClass('open');
				element.siblings('li').find('ul').slideUp();
			}
		});
		
		$('#cssmenu>ul>li.has-sub>a').append('<span class="holder"></span>');
		
		(function getColor() {
			var r, g, b;
			var textColor = $('#cssmenu').css('color');
			textColor = textColor.slice(4);
			r = textColor.slice(0, textColor.indexOf(','));
			textColor = textColor.slice(textColor.indexOf(' ') + 1);
			g = textColor.slice(0, textColor.indexOf(','));
			textColor = textColor.slice(textColor.indexOf(' ') + 1);
			b = textColor.slice(0, textColor.indexOf(')'));
			var l = rgbToHsl(r, g, b);
			if (l > 0.7) {
				$('#cssmenu>ul>li>a').css('text-shadow', '0 1px 1px rgba(0, 0, 0, .35)');
				$('#cssmenu>ul>li>a>span').css('border-color', 'rgba(0, 0, 0, .35)');
			}
			else
			{
				$('#cssmenu>ul>li>a').css('text-shadow', '0 1px 0 rgba(180, 180, 180, .35)');
				$('#cssmenu>ul>li>a>span').css('border-color', 'rgba(180, 180, 180, .35)');
			}
		})();
		
		function rgbToHsl(r, g, b) {
			r /= 255, g /= 255, b /= 255;
			var max = Math.max(r, g, b), min = Math.min(r, g, b);
			var h, s, l = (max + min) / 2;
			
			if(max == min){
				h = s = 0;
			}
			else {
				var d = max - min;
				s = l > 0.5 ? d / (2 - max - min) : d / (max + min);
				switch(max){
					case r: h = (g - b) / d + (g < b ? 6 : 0); break;
					case g: h = (b - r) / d + 2; break;
					case b: h = (r - g) / d + 4; break;
				}
				h /= 6;
			}
			return l;
		}
	});
} )( jQuery );
