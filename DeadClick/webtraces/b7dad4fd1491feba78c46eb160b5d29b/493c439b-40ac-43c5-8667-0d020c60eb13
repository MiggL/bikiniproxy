<!doctype html><html><head><meta charset="utf-8"><meta content="width=300, height=250" name="ad.size"><script src="scripts/WebFont.js" type="text/javascript"></script><script src="https://s0.2mdn.net/ads/studio/cached_libs/tweenmax_1.18.0_499ba64a23378545748ff12d372e59e9_min.js" type="text/javascript"></script><script src="/pagead/gadgets/html5/api/exitapi-impl.js" type="text/javascript"></script><script src="/pagead/gadgets/html5/addata.js" type="text/javascript"></script><script src="https://s0.2mdn.net/ads/studio/cached_libs/easeljs_0.8.1_58add2e69ca7fbe25e8f82a2b5f6a510_min.js" type="text/javascript"></script><script src="https://s0.2mdn.net/ads/studio/cached_libs/tweenjs_0.6.1_40840f08e9fb382ae9e4a337da542ed5_min.js" type="text/javascript"></script><script src="https://s0.2mdn.net/ads/studio/cached_libs/createjs_2015.11.26_54e1c3722102182bb133912ad4442e19_min.js" type="text/javascript"></script><link href="css/Main.css" rel=stylesheet type="text/css"><title>WoT_RealTank</title></head><body>



	
		

		
		

		
		
		
		

		
	    
	    
	    

	    
		
		
			

		

		

	

		
		<canvas height=250 id=Interactive style="z-index: 100;" width=300></canvas>	
		<canvas height=250 id=Darker style="z-index: 80; " width=300></canvas>	
		
		<canvas height=250 id=Button style="z-index: 3; " width=300></canvas>			
		<canvas height=250 id=WebGL style="z-index: 1; " width=300></canvas>	
		<canvas height=250 id=Main style="z-index: 0; " width=300></canvas>
		
		
		
		
		
		
		
		<script src="scripts/Button_134x36.js" type="text/javascript">//         BUTTON               </script>
		<script src="scripts/Logo_M.js" type="text/javascript">//                LOGO                 </script>
		<script src="scripts/Texts1.js" type="text/javascript">//                TEXTS 1              </script>	
		<script src="scripts/textPlate.js" type="text/javascript">//             textPlate            </script>			
		<script src="scripts/Darker.js" type="text/javascript">//                DARKER               </script>	
		<script src="scripts/Pattern.js" type="text/javascript">//               Pattern              </script>			
		<script src="scripts/twgl-full.min.js" type="text/javascript">//         WEBGL HELPER         </script>		
		<script src="scripts/tankJSON.js" type="text/javascript">//        		 tankJSON       	  </script>		
		<script src="scripts/360Plate.js" type="text/javascript">//        		 360Plate       	  </script>	
		<script src="scripts/WebGL.js" type="text/javascript">//        		 WebGL       		  </script>	
		<script src="scripts/ZoomBar.js" type="text/javascript">//        		 ZoomBar       		  </script>			
		<script src="scripts/Engine.js" type="text/javascript">//                ENGINE               </script>
		
		<script id="one-point-fs" type="x-shader/x-fragment">
    precision mediump float;

    varying vec2 vTextureCoord;
    varying vec3 vTransformedNormal;
    varying vec4 vPosition;	

    uniform float uMaterialShininess;

    uniform bool uShowSpecularHighlights;
    uniform bool uUseLighting;
    uniform bool uUseTextures;
	uniform bool uUseBump;
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	
    uniform vec3 uAmbientColor;

    uniform vec3 uPointLightingLocation;
    uniform vec3 uPointLightingSpecularColor;
    uniform vec3 uPointLightingDiffuseColor;
	
    uniform sampler2D uSampler;


	
	

    void main(void) {
        vec3 lightWeighting;
		vec4 fragmentColor;
		 if (uUseTextures) {
            fragmentColor = texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t));
        } else {
            fragmentColor = vec4(1.0, 1.0, 1.0, 1.0);
        }
        if (!uUseLighting) {
            lightWeighting = vec3(1.0, 1.0, 1.0);
        } else {
            vec3 lightDirection = normalize(uPointLightingLocation - vPosition.xyz);
            vec3 normal = normalize(vTransformedNormal);

            float specularLightWeighting = 0.0;
            if (uShowSpecularHighlights) {
                vec3 eyeDirection = normalize(-vPosition.xyz);
                vec3 reflectionDirection = reflect(-lightDirection, normal);

                specularLightWeighting = pow(max(dot(reflectionDirection, eyeDirection), 0.0), uMaterialShininess);
if (uUseBump) 
		{
			specularLightWeighting *= texture2D(bumpMap, vec2(vTextureCoord.s, vTextureCoord.t)).r*2.4+0.1;
		}				
				//specularLightWeighting *= 1.0+(fragmentColor.r-0.2)*3.0;
				
            }

            float diffuseLightWeighting = max(dot(normal, lightDirection), 0.0);
            lightWeighting = uAmbientColor
                + uPointLightingSpecularColor * specularLightWeighting
                + uPointLightingDiffuseColor * diffuseLightWeighting;
        }
		vec2 vUv = vec2(vTextureCoord.s, vTextureCoord.t);
		
        gl_FragColor = vec4(fragmentColor.rgb * lightWeighting, fragmentColor.a);
		if(fragmentColor.a < 0.05)
		discard;
    }
</script>

<script id="one-point-vs" type="x-shader/x-vertex">
    attribute vec3 aVertexPosition;
    attribute vec3 aVertexNormal;
    attribute vec2 aTextureCoord;

    uniform mat4 uMVMatrix;
    uniform mat4 uPMatrix;
    uniform mat3 uNMatrix;

    varying vec2 vTextureCoord;
    varying vec3 vTransformedNormal;
    varying vec4 vPosition;


    void main(void) {
	
	
	
        vPosition = uMVMatrix * vec4(aVertexPosition, 1.0);
        gl_Position = uPMatrix * vPosition;
        vTextureCoord = aTextureCoord;
        vTransformedNormal = uNMatrix * aVertexNormal;
    }
</script>	
		
	
</body></html>